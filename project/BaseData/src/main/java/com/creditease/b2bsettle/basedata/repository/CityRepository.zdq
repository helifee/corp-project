package com.creditease.b2bsettle.basedata.repository;

import java.util.Date;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.creditease.b2bsettle.basedata.model.City;
import com.creditease.b2bsettle.basedata.model.PayType;
import com.creditease.b2bsettle.basedata.model.User;

/**
 * 市级地区管理持久层
 * 
 * @author shihl
 *
 */
@Repository
public interface CityRepository extends JpaRepository<City, Long> {

	@Transactional
	@Modifying
	@Query(" update City city set " 
			+ "city.provinceName = :provinceName, "
			+ "city.provinceCode = :provinceCode, "
			+ "city.cityName = :cityName, "
			+ "city.cityCode = :cityCode, "
			+ "city.modifier = :modifier, " + "city.modifyTime  = :modifyTime  "
			+ "where city.id = :id")
	public void modifyCity(@Param("id") long id,
			@Param("provinceName") String provinceName,
			@Param("provinceCode") String provinceCode,
			@Param("cityName") String cityName,
			@Param("cityCode") String cityCode,
			@Param("modifier") String modifier,
			@Param("modifyTime") Date modifyTime);

	@Transactional
	@Modifying
	@Query(" update City city set  city.deleted = :deleted, city.modifier = :modifier, city.modifyTime  = :modifyTime  "
			+ "where city.id = :id")
	public void deleteCity(@Param("id") long id,
			@Param("deleted") boolean deleted,
			@Param("modifier") String modifier,
			@Param("modifyTime") Date modifyTime);
	
	
	public City findByProvinceCodeAndDeleted(String code, boolean deleted);
	public City  findByCityCode(String code);
	
	@Query("select c from City c where  c.deleted = 0 and c.canOperate = 1")
	Page<City> findAll(Pageable pageable);
}
