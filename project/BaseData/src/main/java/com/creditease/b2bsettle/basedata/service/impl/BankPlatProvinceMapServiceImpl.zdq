package com.creditease.b2bsettle.basedata.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.creditease.b2bsettle.basedata.constant.AuditStatus;
import com.creditease.b2bsettle.basedata.constant.CommonConstants;
import com.creditease.b2bsettle.basedata.constant.OperateType;
import com.creditease.b2bsettle.basedata.model.AccountType;
import com.creditease.b2bsettle.basedata.model.BankPlatProvinceMap;
import com.creditease.b2bsettle.basedata.model.BankPlatProvinceMapAudit;
import com.creditease.b2bsettle.basedata.repository.BankPlatProvinceMapAuditRepository;
import com.creditease.b2bsettle.basedata.repository.BankPlatProvinceMapRepository;
import com.creditease.b2bsettle.basedata.service.BankPlatProvinceMapService;
@Service
public class BankPlatProvinceMapServiceImpl implements BankPlatProvinceMapService {
	
	@Autowired
	private BankPlatProvinceMapAuditRepository bankPlatProvinceMapAuditRepository;
	
	@Autowired
	private BankPlatProvinceMapRepository bankPlatProvinceMapRepository;
	

	/**
	 * 新增支付类型（存审核表）
	 * */ 
	@Override
	public long newBankPlatProvinceMap(BankPlatProvinceMapAudit bankPlatProvinceMapAudit) {
		BankPlatProvinceMapAudit save = bankPlatProvinceMapAuditRepository.save(bankPlatProvinceMapAudit);
		return save.getCid();
	}

	/**
	 * 修改
	 * 适用范围：
	 * 已启用、未启用页面的新增、修改操作
	 * 当如参cid 为0时方法认为是已用页面传来的请求
	 * */
	@Override
	public void updateBankPlatProvinceMap(long cid, long id, BankPlatProvinceMapAudit updateInfo, String modifier) {
		//标识已启用页面不能修改
		BankPlatProvinceMap bankPlatProvinceMapmd = bankPlatProvinceMapRepository.findOne(id);
		bankPlatProvinceMapmd.setCanOperate(false);
		bankPlatProvinceMapRepository.save(bankPlatProvinceMapmd);
		
		//在审核表新建或更新信息
		BankPlatProvinceMapAudit bankPlatProvinceMapAudit = null;
		String operateSummary = "";
		if(cid == 0){//cid为0时认为时已用页面发来的请求，需要在审核表里新增
			bankPlatProvinceMapAudit = new BankPlatProvinceMapAudit();
			bankPlatProvinceMapAudit.setId(id);
			operateSummary = CommonConstants.updateUsed;
		}else{
			bankPlatProvinceMapAudit = bankPlatProvinceMapAuditRepository.findOne(cid);
			operateSummary = CommonConstants.updateNotUsed;
			bankPlatProvinceMapAudit.setAuditText("");//清空上次的审核信息
		}
		bankPlatProvinceMapAudit.setBankName(updateInfo.getBankName());
		bankPlatProvinceMapAudit.setBankCode(updateInfo.getBankCode());
		bankPlatProvinceMapAudit.setProvinceCodeP(updateInfo.getProvinceCodeP());//平台省级编码
		bankPlatProvinceMapAudit.setProvinceNameP(updateInfo.getProvinceNameP());
		bankPlatProvinceMapAudit.setProvinceCodeC(updateInfo.getProvinceCodeC());//通道省级名称
		bankPlatProvinceMapAudit.setProvinceNameC(updateInfo.getProvinceCodeP());
		
		bankPlatProvinceMapAudit.setAuditStatus(AuditStatus.Audit);
		bankPlatProvinceMapAudit.setOperateSummary(operateSummary);
		bankPlatProvinceMapAudit.setOperateType(OperateType.UPDATE);
		bankPlatProvinceMapAudit.setCreator(bankPlatProvinceMapmd.getCreator());
		bankPlatProvinceMapAudit.setCreatedTime(bankPlatProvinceMapmd.getCreatedTime());
		bankPlatProvinceMapAudit.setModifier(modifier);
		bankPlatProvinceMapAudit.setModifyTime(new Date());
		bankPlatProvinceMapAuditRepository.save(bankPlatProvinceMapAudit);
	}

	
	/**
	 * 删除
	 * 适用范围：
	 * 已启用、未启用页面的删除操作
	 * 当如参cid 为null时方法认为是已用页面传来的请求
	 * */
	public void deleteBankPlatProvinceMap(long cid, long id, boolean isDelte, String modifier) {
		//标识已启用页面不能修改
		BankPlatProvinceMap bankPlatProvinceMapmd = bankPlatProvinceMapRepository.findOne(id);
		bankPlatProvinceMapmd.setCanOperate(false);
		bankPlatProvinceMapRepository.save(bankPlatProvinceMapmd);
		
		//在审核表新建或更新信息
		BankPlatProvinceMapAudit bankPlatProvinceMapAudit = null;
		String operateSummary = "";
		if(cid == 0){//cid为0时认为时已用页面发来的请求，需要在审核表里新增
			bankPlatProvinceMapAudit = new BankPlatProvinceMapAudit();
			bankPlatProvinceMapAudit.setId(id);
			operateSummary = CommonConstants.deleteUsed;
		}else{
			bankPlatProvinceMapAudit = bankPlatProvinceMapAuditRepository.findOne(cid);
			operateSummary = CommonConstants.deleteNotUsed;
			bankPlatProvinceMapAudit.setAuditText("");//清空上次的审核信息
		}
		bankPlatProvinceMapAudit.setBankName(bankPlatProvinceMapmd.getBankName());
		bankPlatProvinceMapAudit.setBankCode(bankPlatProvinceMapmd.getBankCode());
		bankPlatProvinceMapAudit.setProvinceCodeP(bankPlatProvinceMapmd.getProvinceCodeP());//平台省级编码
		bankPlatProvinceMapAudit.setProvinceNameP(bankPlatProvinceMapmd.getProvinceNameP());
		bankPlatProvinceMapAudit.setProvinceCodeC(bankPlatProvinceMapmd.getProvinceCodeC());//通道省级名称
		bankPlatProvinceMapAudit.setProvinceNameC(bankPlatProvinceMapmd.getProvinceCodeP());
		
		bankPlatProvinceMapAudit.setDeleted(isDelte);
		bankPlatProvinceMapAudit.setAuditStatus(AuditStatus.Audit);
		bankPlatProvinceMapAudit.setOperateSummary(operateSummary);
		bankPlatProvinceMapAudit.setOperateType(OperateType.DELETE);
		bankPlatProvinceMapAudit.setCreator(bankPlatProvinceMapmd.getCreator());
		bankPlatProvinceMapAudit.setCreatedTime(bankPlatProvinceMapmd.getCreatedTime());
		bankPlatProvinceMapAudit.setModifier(modifier);
		bankPlatProvinceMapAudit.setModifyTime(new Date());
		bankPlatProvinceMapAuditRepository.save(bankPlatProvinceMapAudit);
	}
	
	
	
	/**
	 * 
	 * 审核操作 
	 * 适用范围：
	 * 适用来自 已启用、未启用页面的新增、修改和删除操作的审核
	 * */
	@Override
	public String auditBankPlatProvinceMap(long cid, String auditText,AuditStatus auditStatus, String auditor ) {
		BankPlatProvinceMapAudit bankPlatProvinceMapAudit =  bankPlatProvinceMapAuditRepository.findOne(cid);
		BankPlatProvinceMap bankPlatProvinceMap = bankPlatProvinceMapRepository.findOne(bankPlatProvinceMapAudit.getId());
		//审核通过
		if(auditStatus.equals(AuditStatus.Through)){
			//更改审核表状态
			bankPlatProvinceMapAudit.setAuditStatus(AuditStatus.Through);
			bankPlatProvinceMapAudit.setAuditText(auditText);//审核操作不是修改，所以不更新modifer字段
			
			//复制审核表信息更新主表
			if(bankPlatProvinceMap == null){//审核新增、因为查不出数据、此时需要新建主表
				bankPlatProvinceMap = new BankPlatProvinceMap ();
				bankPlatProvinceMap.setBankName(bankPlatProvinceMapAudit.getBankName());
				bankPlatProvinceMap.setBankCode(bankPlatProvinceMapAudit.getBankCode());
				bankPlatProvinceMap.setProvinceCodeP(bankPlatProvinceMapAudit.getProvinceCodeP());//平台省级编码
				bankPlatProvinceMap.setProvinceNameP(bankPlatProvinceMapAudit.getProvinceNameP());
				bankPlatProvinceMap.setProvinceCodeC(bankPlatProvinceMapAudit.getProvinceCodeC());//通道省级名称
				bankPlatProvinceMap.setProvinceNameC(bankPlatProvinceMapAudit.getProvinceCodeP());
				
				bankPlatProvinceMap.setCreator(bankPlatProvinceMapAudit.getCreator());
				bankPlatProvinceMap.setCreatedTime(bankPlatProvinceMapAudit.getCreatedTime());
				bankPlatProvinceMap.setModifier(bankPlatProvinceMapAudit.getModifier());
				bankPlatProvinceMap.setModifyTime(bankPlatProvinceMapAudit.getModifyTime());
				bankPlatProvinceMap.setAuditor(auditor);
				bankPlatProvinceMap.setAuditTime(new Date());
				bankPlatProvinceMap.setDeleted(false);
				bankPlatProvinceMap.setCanOperate(true);
			}else{//审核修改或删除、此时需要更新主表
				bankPlatProvinceMap.setBankName(bankPlatProvinceMapAudit.getBankName());
				bankPlatProvinceMap.setBankCode(bankPlatProvinceMapAudit.getBankCode());
				bankPlatProvinceMap.setProvinceCodeP(bankPlatProvinceMapAudit.getProvinceCodeP());//平台省级编码
				bankPlatProvinceMap.setProvinceNameP(bankPlatProvinceMapAudit.getProvinceNameP());
				bankPlatProvinceMap.setProvinceCodeC(bankPlatProvinceMapAudit.getProvinceCodeC());//通道省级名称
				bankPlatProvinceMap.setProvinceNameC(bankPlatProvinceMapAudit.getProvinceCodeP());
				
				
				bankPlatProvinceMap.setAuditor(auditor);
				bankPlatProvinceMap.setAuditTime(new Date());
				bankPlatProvinceMap.setModifier(bankPlatProvinceMapAudit.getModifier());
				bankPlatProvinceMap.setModifyTime(bankPlatProvinceMapAudit.getModifyTime());
				bankPlatProvinceMap.setDeleted(bankPlatProvinceMapAudit.getOperateType().equals(OperateType.DELETE));//如果当前审核通过的市删除操作，那么删除标识为true
				bankPlatProvinceMap.setCanOperate(true);
			}
		}else{//审核未通过
			bankPlatProvinceMapAudit.setAuditStatus(AuditStatus.Refuse);
			bankPlatProvinceMapAudit.setAuditText(auditText);
			bankPlatProvinceMap.setCanOperate(true);
		}
		bankPlatProvinceMap = bankPlatProvinceMapRepository.save(bankPlatProvinceMap);//审核新增时insert，审核修改和删除时update
		bankPlatProvinceMapAudit.setId(bankPlatProvinceMap.getId());//新增情况需要关联ID   无论任何时候主表和审核表都是有关系的所以此方法没问题
		bankPlatProvinceMapAuditRepository.save(bankPlatProvinceMapAudit);//更新操作
		return "1";
	}
	
	
	@Override
	public List<BankPlatProvinceMap> findAll() {
		return bankPlatProvinceMapRepository.findByCanOperateAndDeleted(true,false);
	}

}
