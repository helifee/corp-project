package com.creditease.b2bsettle.basedata.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.creditease.b2bsettle.basedata.controller.param.IdNameBean;
import com.creditease.b2bsettle.basedata.controller.param.PageVo;
import com.creditease.b2bsettle.basedata.controller.param.QuerySettleMemberParam;
import com.creditease.b2bsettle.basedata.controller.param.ReturnVo;
import com.creditease.b2bsettle.basedata.controller.param.SettleCenterParam;
import com.creditease.b2bsettle.basedata.controller.param.SettleMemberBean;
import com.creditease.b2bsettle.basedata.controller.param.SettleTree;
import com.creditease.b2bsettle.basedata.model.EsEnterpriseInfo;
import com.creditease.b2bsettle.basedata.model.SettleCenter;
import com.creditease.b2bsettle.basedata.model.SettleCenterAudit;
import com.creditease.b2bsettle.basedata.model.SettleCorp;
import com.creditease.b2bsettle.basedata.service.SettleCenterService;

@Controller
@RequestMapping(value = "/settle")
public class SettleCenterController {

	@Autowired
	private MessageSource messageSource;

	@Autowired
	private SettleCenterService settleCenterService;

	/**
	 * 结算中心树初始化
	 * 
	 * @param session
	 * @return
	 */
	@RequestMapping(value = "/tree", method = RequestMethod.POST)
	@ResponseBody
	public List<SettleTree> tree(HttpSession session) {
		List<SettleTree> list = settleCenterService.findSettleTree();
		return list;
	}

	/**
	 * 获取成员企业
	 * 
	 * @return
	 */
	@RequestMapping(value = "/getmembercorp", method = RequestMethod.GET)
	@ResponseBody
	public PageVo geMemberCorp(
			@ModelAttribute("param") QuerySettleMemberParam param) {
		int pageIndex = param.getPage() - 1;
		Pageable pageable = new PageRequest(pageIndex, param.getRows());
		long settleId = param.getId();

		// 临时处理，前台不选中时的处理
		if (settleId == 0) {
			settleId = 1;// DB根ID为1
		}
		Page<EsEnterpriseInfo> corpPage = settleCenterService.findCorpOfSettle(
				settleId, pageable);
		PageVo page = new PageVo();
		page.setTotal(corpPage.getTotalElements());
		page.setRows(convert(corpPage.getContent()));
		return page;
	}

	@RequestMapping(value = "/save", method = RequestMethod.POST)
	@ResponseBody
	public ReturnVo save(@ModelAttribute("sc") SettleCenter sc,
			HttpSession session) {
		ReturnVo retVo = new ReturnVo();
		String ceterName = sc.getName();
		String corpNo = sc.getCenterCorpNo();
		boolean duplicate = settleCenterService.checkDuplicate(ceterName,
				corpNo);
		if (duplicate) {
			retVo.setCode(ReturnVo.FAIL);
			retVo.setDesc("中心名称或中心企业已存在！");
		} else {
			settleCenterService.save(sc);
			retVo.setCode(ReturnVo.SUCCESS);
		}
		return retVo;

	}

	@RequestMapping(value = "/query", method = RequestMethod.GET)
	@ResponseBody
	public SettleCenter querySettleBy(@ModelAttribute("id") Long settleId) {
		return settleCenterService.findById(settleId);
	}

	@RequestMapping(value = "/delete", method = RequestMethod.GET)
	@ResponseBody
	public ReturnVo delete(@ModelAttribute("id") Long settleId) {
		ReturnVo retVo = new ReturnVo();
		boolean success = settleCenterService.deleteSettle(settleId);
		if (success) {
			retVo.setCode(ReturnVo.SUCCESS);
		} else {
			retVo.setCode(ReturnVo.FAIL);
			retVo.setContent("删除结算中心失败！");
		}
		return retVo;
	}

	/**
	 * 启用、停用结算中心
	 * 
	 * @param settleId
	 * @param status
	 *            1：停用；0：启用
	 * @return
	 */
	@RequestMapping(value = "/setStatus", method = RequestMethod.GET)
	@ResponseBody
	public ReturnVo setStatus(@ModelAttribute("id") Long settleId,
			@ModelAttribute("status") int status) {
		ReturnVo retVo = new ReturnVo();
		boolean success = settleCenterService.setStatus(settleId, status);
		if (success) {
			retVo.setCode(ReturnVo.SUCCESS);
		} else {
			retVo.setCode(ReturnVo.FAIL);
			retVo.setContent("操作失败！");
		}
		return retVo;
	}

	@RequestMapping(value = "/editMember", method = RequestMethod.GET)
	@ResponseBody
	public SettleMemberBean findCorpOf(@ModelAttribute("id") Long settleId) {
		SettleMemberBean retVo = new SettleMemberBean();

		// 最好不要再访问DB，由前端取得 TODO
		List<EsEnterpriseInfo> corpOfSettle = settleCenterService
				.findCorpOfSettle(settleId);
		SettleCenter settleCenter = settleCenterService.findById(settleId);
		retVo.setCode(settleId);
		retVo.setText(settleCenter.getName());
		retVo.setCenterCorpName(settleCenter.getCenterCorpName());
		retVo.setMember(convert(corpOfSettle));
		return retVo;
	}

	@RequestMapping(value = "/saveMember", method = RequestMethod.POST)
	@ResponseBody
	public ReturnVo saveMember(@ModelAttribute("id") Long settleId,
			@ModelAttribute("memberIds") String memberIds) {
		ReturnVo retVo = new ReturnVo();
		if (!StringUtils.isEmpty(memberIds)) {
			List<SettleCorp> members = new ArrayList<SettleCorp>();
			String[] idArray = memberIds.split(",");
			for (String id : idArray) {
				SettleCorp sc = new SettleCorp();
				sc.setSettleId(settleId);
				sc.setCorpNo(id);
				members.add(sc);
			}
			settleCenterService.saveMembers(members);
		}

		retVo.setCode(ReturnVo.SUCCESS);
		return retVo;
	}

	@RequestMapping(value = "/unEnableList", method = RequestMethod.GET)
	@ResponseBody
	public PageVo unEnableList(@ModelAttribute("param") SettleCenterParam param) {
		int pageIndex = param.getPage() - 1;
		Pageable pageable = new PageRequest(pageIndex, param.getRows());
		PageVo page = new PageVo();
		Page<SettleCenterAudit> disablePage = settleCenterService
				.findAllDisableSettle(param, pageable);
		
		page.setTotal(disablePage.getTotalElements());
		page.setRows(convertSettleCenter(disablePage.getContent()));
		return page;
	}
	
	private List<Object> convertSettleCenter(List<SettleCenterAudit> list) {
		List<Object> rows = new ArrayList<Object>();
		if (list == null) {
			return null;
		}
		for (SettleCenterAudit sca : list) {
			SettleCenterParam bean = new SettleCenterParam();
			bean.setId(sca.getId());
			bean.setText(sca.getName());
			bean.setCenterCorpName(sca.getCenterCorpName());
			bean.setStatus(sca.getStatus());
			rows.add(bean);
		}
		return rows;
	}

	private List<Object> convert(List<EsEnterpriseInfo> list) {
		List<Object> rows = new ArrayList<Object>();
		if (list == null) {
			return null;
		}
		for (EsEnterpriseInfo es : list) {
			IdNameBean bean = new IdNameBean();
			bean.setId(es.getEId());
			bean.setName(es.getEName());
			rows.add(bean);
		}
		return rows;
	}
}
