package com.creditease.b2bsettle.basedata.controller;

import java.util.Locale;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.creditease.b2bsettle.basedata.constant.ResultStatus;
import com.creditease.b2bsettle.basedata.controller.param.ReturnVo;
import com.creditease.b2bsettle.basedata.exception.DuplicateKeyException;
import com.creditease.b2bsettle.basedata.model.UserAudit;
import com.creditease.b2bsettle.basedata.service.AuthorizationService;
import com.creditease.b2bsettle.basedata.service.UserService;

/**
 * 用户接口
 * 
 * @author daoqiangzhang
 *
 */
@Controller
@RequestMapping(value = "/user")
public class UserController {

	@Autowired
	private UserService userService;

	@Autowired
	private AuthorizationService authorizationService;

	@Autowired
	private MessageSource messageSource;

	/**
	 * 新增用户，需要审核
	 * 
	 * @param userAudit
	 * @return
	 */
	@RequestMapping(value = "/addUser", method = RequestMethod.POST)
	@ResponseBody
	public ReturnVo addUser(@RequestBody UserAudit userAudit) {
		ReturnVo retVo = new ReturnVo();
		try {
			this.userService.newUser(userAudit);
			retVo.setCode(ResultStatus.SUCCESS.value());
		} catch (DuplicateKeyException e) {
			retVo.setCode(ResultStatus.FAIL.value());
			retVo.setDesc(messageSource.getMessage("user.duplicate.info",
					new String[] { userAudit.getName() }, Locale.CHINA));
		}
		return retVo;
	}
	
	/**
	 * 用户审核通过
	 * 
	 * @return
	 */
	@RequestMapping(value = "/audit/pass", method = RequestMethod.POST)
	@ResponseBody
	public ReturnVo pass(@RequestBody UserAudit userAudit) {
		ReturnVo retVo = new ReturnVo();
		boolean result = this.userService.pass(userAudit);
		if(result) {
			retVo.setCode(ResultStatus.SUCCESS.value());
		} else {
			retVo.setCode(ResultStatus.FAIL.value());
			retVo.setDesc(messageSource.getMessage("user.audit.error", null, Locale.CHINA));
		}
		return retVo;
	}
	
	/**
	 * 用户审核不通过
	 * 
	 * @return
	 */
	@RequestMapping(value = "/audit/nopass", method = RequestMethod.POST)
	@ResponseBody
	public ReturnVo noPass(@RequestBody UserAudit userAudit) {
		ReturnVo retVo = new ReturnVo();
		boolean result = this.userService.noPass(userAudit);
		if(result) {
			retVo.setCode(ResultStatus.SUCCESS.value());
		} else {
			retVo.setCode(ResultStatus.FAIL.value());
			retVo.setDesc(messageSource.getMessage("user.audit.error", null, Locale.CHINA));
		}
		return retVo;
	}

}
