package com.creditease.b2bsettle.basedata.service.impl;

import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.creditease.b2bsettle.basedata.constant.AuditStatus;
import com.creditease.b2bsettle.basedata.constant.CommonConstants;
import com.creditease.b2bsettle.basedata.constant.OperateType;
import com.creditease.b2bsettle.basedata.model.BusinessType;
import com.creditease.b2bsettle.basedata.model.BusinessTypeAudit;
import com.creditease.b2bsettle.basedata.model.PayType;
import com.creditease.b2bsettle.basedata.repository.BusinessTypeAuditRepository;
import com.creditease.b2bsettle.basedata.repository.BusinessTypeRepository;
import com.creditease.b2bsettle.basedata.service.BusinessTypeService;

/**
 * 业务类型管理
 * 
 * @author shihl
 *
 */
@Service
public class BusinessTypeServiceImpl implements BusinessTypeService {
	 
	@Autowired
	private BusinessTypeAuditRepository businessTypeAuditRepository;
	@Autowired
	private BusinessTypeRepository businessTypeRepository;

	
	/**
	 * 
	 * 前台查询
	 * 
	 * */
	
	@Override
	public Page<BusinessType> findAll(Pageable pageable) {
		Page<BusinessType> page = businessTypeRepository.findAll(pageable);
		return page;
	}
	
	
	
	/**
	 * 新增支付类型（存审核表）
	 * */ 
	@Override
	public long newBusinessTypeService(BusinessTypeAudit businessTypeAudit) {
		BusinessTypeAudit save = businessTypeAuditRepository.save(businessTypeAudit);
		return save.getCid();
	}

	/**
	 * 修改
	 * 适用范围：
	 * 已启用、未启用页面的新增、修改操作
	 * 当如参cid 为0时方法认为是已用页面传来的请求
	 * */
	@Override
	public void updateBusinessType(long cid, long id, String businessType, String modifier) {
		//标识已启用页面不能修改
		BusinessType businessTypemd = businessTypeRepository.findOne(id);
		businessTypemd.setCanOperate(false);
		businessTypeRepository.save(businessTypemd);
		
		//在审核表新建或更新信息
		BusinessTypeAudit businessTypeAudit = null;
		String OperateSummary = "";
		if(cid == 0){//cid为0时认为时已用页面发来的请求，需要在审核表里新增
			businessTypeAudit = new BusinessTypeAudit();
			businessTypeAudit.setId(id);
			OperateSummary = CommonConstants.updateUsed;
		}else{
			businessTypeAudit = businessTypeAuditRepository.findOne(cid);
			OperateSummary = CommonConstants.updateNotUsed;
			businessTypeAudit.setAuditText("");//清空上次的审核信息
		}
		businessTypeAudit.setBusinessType(businessType);
		businessTypeAudit.setAuditStatus(AuditStatus.Audit);
		businessTypeAudit.setOperateSummary(OperateSummary);
		businessTypeAudit.setOperateType(OperateType.UPDATE);
		businessTypeAudit.setCreator(businessTypemd.getCreator());
		businessTypeAudit.setCreatedTime(businessTypemd.getCreatedTime());
		businessTypeAudit.setModifier(modifier);
		businessTypeAudit.setModifyTime(new Date());
		businessTypeAuditRepository.save(businessTypeAudit);
	}

	
	/**
	 * 删除
	 * 适用范围：
	 * 已启用、未启用页面的删除操作
	 * 当如参cid 为null时方法认为是已用页面传来的请求
	 * */
	public void deleteBusinessType(long cid, long id, boolean isDelte, String modifier) {
		//标识已启用页面不能修改
		BusinessType businessTypemd = businessTypeRepository.findOne(id);
		businessTypemd.setCanOperate(false);
		businessTypeRepository.save(businessTypemd);
		
		//在审核表新建或更新信息
		BusinessTypeAudit businessTypeAudit = null;
		String OperateSummary = "";
		if(cid == 0){//cid为0时认为时已用页面发来的请求，需要在审核表里新增
			businessTypeAudit = new BusinessTypeAudit();
			businessTypeAudit.setId(id);
			OperateSummary = CommonConstants.deleteUsed;
		}else{
			businessTypeAudit = businessTypeAuditRepository.findOne(cid);
			OperateSummary = CommonConstants.deleteNotUsed;
			businessTypeAudit.setAuditText("");//清空上次的审核信息
		}
		businessTypeAudit.setBusinessType(businessTypemd.getBusinessType());
		businessTypeAudit.setDeleted(isDelte);
		businessTypeAudit.setAuditStatus(AuditStatus.Audit);
		businessTypeAudit.setOperateSummary(OperateSummary);
		businessTypeAudit.setOperateType(OperateType.DELETE);
		businessTypeAudit.setCreator(businessTypemd.getCreator());
		businessTypeAudit.setCreatedTime(businessTypemd.getCreatedTime());
		businessTypeAudit.setModifier(modifier);
		businessTypeAudit.setModifyTime(new Date());
		businessTypeAuditRepository.save(businessTypeAudit);
	}
	
	
	
	/**
	 * 
	 * 审核操作 
	 * 适用范围：
	 * 适用来自 已启用、未启用页面的新增、修改和删除操作的审核
	 * */
	@Override
	public String auditBusinessType(long cid, String auditText,AuditStatus auditStatus, String auditor ) {
		BusinessTypeAudit businessTypeAudit =  businessTypeAuditRepository.findOne(cid);
		BusinessType businessType = businessTypeRepository.findOne(businessTypeAudit.getId());
		//审核通过
		if(auditStatus.equals(AuditStatus.Through)){
			//更改审核表状态
			businessTypeAudit.setAuditStatus(AuditStatus.Through);
			businessTypeAudit.setAuditText(auditText);//审核操作不是修改，所以不更新modifer字段
			
			//复制审核表信息更新主表
			if(businessType == null){//审核新增、因为查不出数据、此时需要新建主表
				businessType = new BusinessType();
				businessType.setBusinessType(businessTypeAudit.getBusinessType());
				businessType.setCreator(businessTypeAudit.getCreator());
				businessType.setCreatedTime(businessTypeAudit.getCreatedTime());
				businessType.setModifier(businessTypeAudit.getModifier());
				businessType.setModifyTime(businessTypeAudit.getModifyTime());
				businessType.setAuditor(auditor);
				businessType.setAuditTime(new Date());
				businessType.setDeleted(false);
				businessType.setCanOperate(true);
			}else{//审核修改或删除、此时需要更新主表
				businessType.setBusinessType(businessTypeAudit.getBusinessType());
				businessType.setAuditor(auditor);
				businessType.setAuditTime(new Date());
				businessType.setModifier(businessTypeAudit.getModifier());
				businessType.setModifyTime(businessTypeAudit.getModifyTime());
				businessType.setDeleted(businessTypeAudit.getOperateType().equals(OperateType.DELETE.name()));//如果当前审核通过的市删除操作，那么删除标识为true
				businessType.setCanOperate(true);
			}
		}else{//审核未通过
			businessTypeAudit.setAuditStatus(AuditStatus.Refuse);
			businessTypeAudit.setAuditText(auditText);
			businessType.setCanOperate(true);
		}
		businessType = businessTypeRepository.save(businessType);//审核新增时insert，审核修改和删除时update
		businessTypeAudit.setId(businessType.getId());//新增情况需要关联ID   无论任何时候主表和审核表都是有关系的所以此方法没问题
		businessTypeAuditRepository.save(businessTypeAudit);//更新操作
		return "1";
	}

}
