package com.creditease.b2bsettle.basedata.external.controller;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import net.sf.json.JSONObject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.creditease.b2bsettle.basedata.external.model.FinancialInstitutionResDetail;
import com.creditease.b2bsettle.basedata.model.BankDataByMercIdRes;
import com.creditease.b2bsettle.basedata.model.FinancialInstitution;
import com.creditease.b2bsettle.basedata.service.FinancialInstitutionService;

/**
 * 金融机构对外接口
 * @author shihl
 *
 */
@Controller
@RequestMapping("/external/financial")
public class ExternalFinancialInstitutionController {
	
	private static final Logger logger = LoggerFactory.getLogger(ExternalFinancialInstitutionController.class);

	@Autowired
	private FinancialInstitutionService financialInstitutionService;
	
	/**
	 * 获取银行基础数据列表
	 * @param reqParam
	 * @return
	 */
	@RequestMapping(value = "/queryall" ,method = RequestMethod.POST)
	@ResponseBody
	public JSONObject queryAll(@RequestBody JSONObject reqParam) {
		System.out.println( "xxx  服务器端接收");
		SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd HH:MM:ss");
		Date date = new Date();
		String strDate=df.format(date);
		
		String sendTime =(String) reqParam.get("sendTime");
		String userId = (String) reqParam.get("userId");
		
		List<FinancialInstitutionResDetail> sendlist = new ArrayList<FinancialInstitutionResDetail>();
		List<FinancialInstitution> list = financialInstitutionService.queryFinancialInstitutionAll();
		if(sendlist != null){
			for(int i=0; i<list.size(); i++){
				FinancialInstitutionResDetail bankDataByMercIdResDetail = new FinancialInstitutionResDetail();
				bankDataByMercIdResDetail.setBankCode(list.get(i).getBankCode());
				bankDataByMercIdResDetail.setBankName(list.get(i).getBankName());
				sendlist.add(bankDataByMercIdResDetail);
			}
		}
		
		
		BankDataByMercIdRes res = new BankDataByMercIdRes();
		res.setBankList(sendlist);
		res.setSendTime(strDate);
		res.setRetCode("1");//1成功 2失败
		res.setRetMessage("发送成功");
		JSONObject obj = JSONObject.fromObject(res);
		System.out.println( "xxx  服务器端发送");
		return obj;
	}
	
	
	/**
	 * 根据金融机构名称查询金融机构编码
	 * @param reqParam
	 * @return
	 */
	@RequestMapping(value = "/querybybankname" ,method = RequestMethod.POST)
	@ResponseBody
	public JSONObject queryByBankName(@RequestBody JSONObject reqParam) {
		System.out.println( "xxx  服务器端接收");
		SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd HH:MM:ss");
		Date date = new Date();
		String strDate=df.format(date);
		
		String bankName =(String) reqParam.get("bankName");
		List<FinancialInstitutionResDetail> sendlist = new ArrayList<FinancialInstitutionResDetail>();
		FinancialInstitution financialInstitution = financialInstitutionService.queryByBankName(bankName);
		JSONObject res = new JSONObject();
		res.put("sendTime", strDate);
		res.put("retCode", "1");
		res.put("retMessage", "发送成功");
		res.put("bankCode", financialInstitution.getBankCode());
		JSONObject obj = JSONObject.fromObject(res);
		System.out.println( "xxx  服务器端发送");
		return obj;
	}
}
