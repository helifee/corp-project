package com.creditease.b2bsettle.basedata.external.controller;


import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import net.sf.json.JSONObject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.creditease.b2bsettle.basedata.external.model.FinancialInstitutionResDetail;
import com.creditease.b2bsettle.basedata.external.model.BankRelateNumberOneRes;
import com.creditease.b2bsettle.basedata.external.model.BankRelateNumberResDetail;
import com.creditease.b2bsettle.basedata.model.BankRelateNumber;
import com.creditease.b2bsettle.basedata.model.BranchDataByBankCodeRes;
import com.creditease.b2bsettle.basedata.model.FinancialInstitution;
import com.creditease.b2bsettle.basedata.service.BankRelateNumberService;

/**
 * 联行号外接口
 * @author shihl
 *
 */
@Controller		 
@RequestMapping("/external/bankrelate")
public class ExternalBankRelateNumberController {
	
	private static final Logger logger = LoggerFactory.getLogger(ExternalBankRelateNumberController.class);
	@Autowired
	private BankRelateNumberService bankRelateNumberService;
	
	/**
	 * 根据银行编码(bankCode)，省编码，城市编码查询联行号(支行编码relate_code) 联行名称（支行地址branch_name）
	 * @param reqParam
	 * @return
	 */
	@RequestMapping(value = "/querybyinfo" ,method = RequestMethod.POST)
	@ResponseBody
	public JSONObject queryByInfo(@RequestBody JSONObject reqParam) {
		String bankCode = reqParam.getString("bankCode");
		String province = reqParam.getString("province") ;
		String city = reqParam.getString("city");
		
		List<BankRelateNumber>  list = bankRelateNumberService.queryRelateCodesByBankCodeAndProvinceAndCity(bankCode,province,city);
		List<BankRelateNumberResDetail> sendlist = new ArrayList<BankRelateNumberResDetail>();
		for(int i=0; i<list.size(); i++){
			BankRelateNumberResDetail bankRelateNumberResDetail = new BankRelateNumberResDetail();
			bankRelateNumberResDetail.setBranchCode(list.get(i).getRelateCode());
			bankRelateNumberResDetail.setBranchName(list.get(i).getBranchName());
			sendlist.add(bankRelateNumberResDetail);
		}

		SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd HH:MM:ss");
		Date date = new Date();
		String strDate=df.format(date);
		BranchDataByBankCodeRes res = new BranchDataByBankCodeRes();
		res.setBranchList(sendlist);//此处不可用表对应的实体类，因结构复杂无法传出
		res.setSendTime(strDate);
		res.setRetCode("1");//成功
		res.setRetMessage("相应信息：成功");
		JSONObject obj = JSONObject.fromObject(res);
		return obj;
	}
	/**
	 * 根据开户行编号查询开户行地址、省市、联行号
	 * @param reqParam
	 * @return
	 */
	@RequestMapping(value = "/querybyrelatecode" ,method = RequestMethod.POST)
	@ResponseBody
	public BankRelateNumberOneRes queryByRelateCode(@RequestBody JSONObject reqParam) {
		System.out.println("openBankCode:" +reqParam.get("openBankCode"));//联行号，对应relate_code
		BankRelateNumberOneRes bankRelateNumberRes =  bankRelateNumberService.queryByRelateCode(reqParam.get("openBankCode")+"");
		return bankRelateNumberRes;
	}
}
