/**  
* @Title: IncreaseSerialNo.java
* @Package com.creditease.b2bsettle.basedata.service.impl
* @Description: TODO
* @author zhanghaiyang6 
* @date 2015年6月15日 下午5:58:20
* @version V1.0  
*/ 
package com.creditease.b2bsettle.basedata.service.impl;

/**
 * @ClassName: IncreaseSerialNo
 * @Description:序列号维护类
 * @author zhanghaiyang6
 * @date 2015年6月15日 下午5:58:20
 *
 */
public abstract class IncreaseSerialNo {
    /** 区间最大值 */  
    protected int intervalMax = 0;  
      
    /** 每次增加量 */  
    protected int increaseBy = 1;  
      
    /** 预定的最大值 */  
    protected int maxNum = 69999999;  
      
    /** 序列号 */  
    protected int serialNum = -1; 
    
    public IncreaseSerialNo() {}  
    
    /**
     * 
     * @param increaseBy
     * @param maxNum
     */
    public IncreaseSerialNo(int increaseBy, int maxNum) {  
        this.increaseBy = increaseBy;  
        this.maxNum = maxNum;  
    }  
      
    /**
     * 
    * @Title: cal
    * @Description: 加值操作
    * @param @return
    * @param @throws Exception    
    * @return int   
    * @throws
     */
    public synchronized int cal() throws Exception {  
        if (serialNum == -1) {  //   第一次，初始化值
            serialNum = initStartNum(); 
            intervalMax = serialNum + increaseBy;  //序列号加1并写入数据库
            updateStartNum(intervalMax);  
            return serialNum;  
        }  
        if (isMax(serialNum)) { // 达到预定的最大值  
            resetSerialNum();  
            return serialNum;  
        }  
        serialNum++;  
        if (serialNum >= (intervalMax - 1)) { // 到达区间最大值  
            intervalMax += increaseBy;  
            updateStartNum(intervalMax);  
        }  
        return serialNum;  
    }  
      
    /** 
     * 初始化序列号，从缓存系统中来，比如数据库、文件等 
     * @return 初始序列号 
     * @throws Exception 
     */  
    public abstract int initStartNum() throws Exception;  
      
    /** 
     * 更新区间最大值到缓存系统，比如数据库、文件中。 
     * @param intervalMax 区间最大值 
     * @throws Exception 
     */  
    public abstract void updateStartNum(int intervalMax) throws Exception;
      
    /** 
     * 重置序列号，从1开始 
     */  
    protected void resetSerialNum() throws Exception {  
        this.serialNum = 1;  
        intervalMax = serialNum + increaseBy;  
        updateStartNum(intervalMax);  
    }  
      
    /** 
     * 是否是最大值 
     * @param num 
     * @return 
     */  
    private boolean isMax(int num) {  
        return num >= maxNum;  
    }  
      
    public int getInterval() {  
        return this.increaseBy;  
    }  
      
    public int getMaxNum() {  
        return this.maxNum;  
    }  
}
