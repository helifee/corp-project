package com.creditease.b2bsettle.basedata.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.creditease.b2bsettle.basedata.constant.AuditStatus;
import com.creditease.b2bsettle.basedata.constant.CommonConstants;
import com.creditease.b2bsettle.basedata.constant.OperateType;
import com.creditease.b2bsettle.basedata.model.AccountType;
import com.creditease.b2bsettle.basedata.model.BankPlatCityMap;
import com.creditease.b2bsettle.basedata.model.BankPlatCityMapAudit;
import com.creditease.b2bsettle.basedata.repository.BankPlatCityMapAuditRepository;
import com.creditease.b2bsettle.basedata.repository.BankPlatCityMapRepository;
import com.creditease.b2bsettle.basedata.service.BankPlatCityMapService;
@Service
public class BankPlatCityMapServiceImpl implements BankPlatCityMapService {
	
	@Autowired
	private BankPlatCityMapAuditRepository bankPlatCityMapAuditRepository;
	
	@Autowired
	private BankPlatCityMapRepository bankPlatCityMapRepository;
	

	/**
	 * 新增支付类型（存审核表）
	 * */ 
	@Override
	public long newBankPlatCityMap(BankPlatCityMapAudit bankPlatCityMapAudit) {
		BankPlatCityMapAudit save = bankPlatCityMapAuditRepository.save(bankPlatCityMapAudit);
		return save.getCid();
	}

	/**
	 * 修改
	 * 适用范围：
	 * 已启用、未启用页面的新增、修改操作
	 * 当如参cid 为0时方法认为是已用页面传来的请求
	 * */
	@Override
	public void updateBankPlatCityMap(long cid, long id,  BankPlatCityMapAudit updateInfo , String modifier) {
		//标识已启用页面不能修改
		BankPlatCityMap bankPlatCityMapmd = bankPlatCityMapRepository.findOne(id);
		bankPlatCityMapmd.setCanOperate(false);
		bankPlatCityMapRepository.save(bankPlatCityMapmd);
		
		//在审核表新建或更新信息
		BankPlatCityMapAudit bankPlatCityMapAudit = null;
		String operateSummary = "";
		if(cid == 0){//cid为0时认为时已用页面发来的请求，需要在审核表里新增
			bankPlatCityMapAudit = new BankPlatCityMapAudit();
			bankPlatCityMapAudit.setId(id);
			operateSummary = CommonConstants.updateUsed;
		}else{
			bankPlatCityMapAudit = bankPlatCityMapAuditRepository.findOne(cid);
			operateSummary = CommonConstants.updateNotUsed;
			bankPlatCityMapAudit.setAuditText("");//清空上次的审核信息
		}
		bankPlatCityMapAudit.setBankName(updateInfo.getBankName());
		bankPlatCityMapAudit.setBankCode(updateInfo.getBankCode());
		bankPlatCityMapAudit.setCityCodeP(updateInfo.getCityCodeP());//平台省级编码
		bankPlatCityMapAudit.setCityNameP(updateInfo.getCityNameP());
		bankPlatCityMapAudit.setCityCodeC(updateInfo.getCityCodeC());//通道省级名称
		bankPlatCityMapAudit.setCityNameC(updateInfo.getCityCodeP());
		
		bankPlatCityMapAudit.setAuditStatus(AuditStatus.Audit);
		bankPlatCityMapAudit.setOperateSummary(operateSummary);
		bankPlatCityMapAudit.setOperateType(OperateType.UPDATE);
		bankPlatCityMapAudit.setCreator(bankPlatCityMapmd.getCreator());
		bankPlatCityMapAudit.setCreatedTime(bankPlatCityMapmd.getCreatedTime());
		bankPlatCityMapAudit.setModifier(modifier);
		bankPlatCityMapAudit.setModifyTime(new Date());
		bankPlatCityMapAuditRepository.save(bankPlatCityMapAudit);
	}

	
	/**
	 * 删除
	 * 适用范围：
	 * 已启用、未启用页面的删除操作
	 * 当如参cid 为null时方法认为是已用页面传来的请求
	 * */
	public void deleteBankPlatCityMap(long cid, long id, boolean isDelte, String modifier) {
		//标识已启用页面不能修改
		BankPlatCityMap bankPlatCityMapmd = bankPlatCityMapRepository.findOne(id);
		bankPlatCityMapmd.setCanOperate(false);
		bankPlatCityMapRepository.save(bankPlatCityMapmd);
		
		//在审核表新建或更新信息
		BankPlatCityMapAudit bankPlatCityMapAudit = null;
		String operateSummary = "";
		if(cid == 0){//cid为0时认为时已用页面发来的请求，需要在审核表里新增
			bankPlatCityMapAudit = new BankPlatCityMapAudit();
			bankPlatCityMapAudit.setId(id);
			operateSummary = CommonConstants.deleteUsed;
		}else{
			bankPlatCityMapAudit = bankPlatCityMapAuditRepository.findOne(cid);
			operateSummary = CommonConstants.deleteNotUsed;
			bankPlatCityMapAudit.setAuditText("");//清空上次的审核信息
		}
		bankPlatCityMapAudit.setBankName(bankPlatCityMapmd.getBankName());
		bankPlatCityMapAudit.setBankCode(bankPlatCityMapmd.getBankCode());
		bankPlatCityMapAudit.setCityCodeP(bankPlatCityMapmd.getCityCodeP());//平台省级编码
		bankPlatCityMapAudit.setCityNameP(bankPlatCityMapmd.getCityNameP());
		bankPlatCityMapAudit.setCityCodeC(bankPlatCityMapmd.getCityCodeC());//通道省级名称
		bankPlatCityMapAudit.setCityNameC(bankPlatCityMapmd.getCityCodeP());
		
		bankPlatCityMapAudit.setDeleted(isDelte);
		bankPlatCityMapAudit.setAuditStatus(AuditStatus.Audit);
		bankPlatCityMapAudit.setOperateSummary(operateSummary);
		bankPlatCityMapAudit.setOperateType(OperateType.DELETE);
		bankPlatCityMapAudit.setCreator(bankPlatCityMapmd.getCreator());
		bankPlatCityMapAudit.setCreatedTime(bankPlatCityMapmd.getCreatedTime());
		bankPlatCityMapAudit.setModifier(modifier);
		bankPlatCityMapAudit.setModifyTime(new Date());
		bankPlatCityMapAuditRepository.save(bankPlatCityMapAudit);
	}
	
	
	
	/**
	 * 
	 * 审核操作 
	 * 适用范围：
	 * 适用来自 已启用、未启用页面的新增、修改和删除操作的审核
	 * */
	@Override
	public String auditBankPlatCityMap(long cid, String auditText,AuditStatus auditStatus, String auditor ) {
		BankPlatCityMapAudit bankPlatCityMapAudit =  bankPlatCityMapAuditRepository.findOne(cid);
		BankPlatCityMap bankPlatCityMap = bankPlatCityMapRepository.findOne(bankPlatCityMapAudit.getId());
		//审核通过
		if(auditStatus.equals(AuditStatus.Through)){
			//更改审核表状态
			bankPlatCityMapAudit.setAuditStatus(AuditStatus.Through);
			bankPlatCityMapAudit.setAuditText(auditText);//审核操作不是修改，所以不更新modifer字段
			
			//复制审核表信息更新主表
			if(bankPlatCityMap == null){//审核新增、因为查不出数据、此时需要新建主表
				bankPlatCityMap = new BankPlatCityMap ();
				bankPlatCityMap.setBankName(bankPlatCityMapAudit.getBankName());
				bankPlatCityMap.setBankCode(bankPlatCityMapAudit.getBankCode());
				bankPlatCityMap.setCityCodeP(bankPlatCityMapAudit.getCityCodeP());//平台省级编码
				bankPlatCityMap.setCityNameP(bankPlatCityMapAudit.getCityNameP());
				bankPlatCityMap.setCityCodeC(bankPlatCityMapAudit.getCityCodeC());//通道省级名称
				bankPlatCityMap.setCityNameC(bankPlatCityMapAudit.getCityCodeP());
				
				bankPlatCityMap.setCreator(bankPlatCityMapAudit.getCreator());
				bankPlatCityMap.setCreatedTime(bankPlatCityMapAudit.getCreatedTime());
				bankPlatCityMap.setModifier(bankPlatCityMapAudit.getModifier());
				bankPlatCityMap.setModifyTime(bankPlatCityMapAudit.getModifyTime());
				bankPlatCityMap.setAuditor(auditor);
				bankPlatCityMap.setAuditTime(new Date());
				bankPlatCityMap.setDeleted(false);
				bankPlatCityMap.setCanOperate(true);
			}else{//审核修改或删除、此时需要更新主表
				bankPlatCityMap.setBankName(bankPlatCityMapAudit.getBankName());
				bankPlatCityMap.setBankCode(bankPlatCityMapAudit.getBankCode());
				bankPlatCityMap.setCityCodeP(bankPlatCityMapAudit.getCityCodeP());//平台省级编码
				bankPlatCityMap.setCityNameP(bankPlatCityMapAudit.getCityNameP());
				bankPlatCityMap.setCityCodeC(bankPlatCityMapAudit.getCityCodeC());//通道省级名称
				bankPlatCityMap.setCityNameC(bankPlatCityMapAudit.getCityCodeP());
				
				bankPlatCityMap.setAuditor(auditor);
				bankPlatCityMap.setAuditTime(new Date());
				bankPlatCityMap.setModifier(bankPlatCityMapAudit.getModifier());
				bankPlatCityMap.setModifyTime(bankPlatCityMapAudit.getModifyTime());
				bankPlatCityMap.setDeleted(bankPlatCityMapAudit.getOperateType().equals(OperateType.DELETE));//如果当前审核通过的市删除操作，那么删除标识为true
				bankPlatCityMap.setCanOperate(true);
			}
		}else{//审核未通过
			bankPlatCityMapAudit.setAuditStatus(AuditStatus.Refuse);
			bankPlatCityMapAudit.setAuditText(auditText);
			bankPlatCityMap.setCanOperate(true);
		}
		bankPlatCityMap = bankPlatCityMapRepository.save(bankPlatCityMap);//审核新增时insert，审核修改和删除时update
		bankPlatCityMapAudit.setId(bankPlatCityMap.getId());//新增情况需要关联ID   无论任何时候主表和审核表都是有关系的所以此方法没问题
		bankPlatCityMapAuditRepository.save(bankPlatCityMapAudit);//更新操作
		return "1";
	}
	
	
	@Override
	public List<BankPlatCityMap> findAll() {
		return bankPlatCityMapRepository.findByCanOperateAndDeleted(true,false);
	}

}
