package com.creditease.b2bsettle.basedata.service;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.util.Date;
import java.util.List;

import org.apache.commons.codec.digest.DigestUtils;
import org.springframework.beans.factory.annotation.Autowired;

import com.creditease.b2bsettle.basedata.base.BaseTest;
import com.creditease.b2bsettle.basedata.constant.LockOperator;
import com.creditease.b2bsettle.basedata.constant.OperateType;
import com.creditease.b2bsettle.basedata.exception.DuplicateKeyException;
import com.creditease.b2bsettle.basedata.model.User;
import com.creditease.b2bsettle.basedata.model.UserAudit;

public class UserServiceTest extends BaseTest {

	@Autowired
	private UserService userService;
	
	//@Test
	public void newUser() throws DuplicateKeyException {
		UserAudit user = new UserAudit();
		user.setName("zhangsan");
		user.setPassword(DigestUtils.md5Hex("123456"));
		user.setRealName("张三");
		user.setSource("p");
		user.setTel("13512345678");
		user.setEmail("zhangsan@gmail.com");
		user.setCardType("1");
		user.setCardNumber("420683198611080318");
		user.setU(false);
		user.setCreatedTime(new Date());
		user.setOperateType(OperateType.ADD);
		userService.newUser(user);
	}
	
	//@Test
	public void isUserExists() {
		boolean userExists = userService.isUserExists("zhangsan");
		assertFalse(userExists);
	}
	
	//@Test
	public void isValidUser() {
		String userName = "zhangsan";
		String password = "123456";
		User user = userService.login(userName , DigestUtils.md5Hex(password));
		assertTrue(user!=null);
	}
	
	//@Test
	public void delUserById() {
		boolean deleteUser = userService.deleteUserById(1);
		assertTrue(deleteUser);
	}
	
	//@Test
	public void lockUser() {
		long userId = 1;
		User user = userService.findById(userId);
		userService.lockUser(userId, LockOperator.User);
	}
	
	//@Test
	public void unlockUser() {
		userService.unlockUser(1);
	}
	
	//@Test
	public void isLocked() {
		boolean locked = userService.isLocked(1);
		assertFalse(locked);
	}
	
	//@Test
	public void updateDN() {
		String dn = "r343feffafdfdsfsdfsdffsdfdsaff";
		boolean updateDN = userService.updateDN("zhangsan", dn);
		assertTrue(updateDN);
	}
	
	//@Test
	public void pass() {
		List<UserAudit> invalidUser = userService.findAllInvalidUser();
		userService.pass(invalidUser.get(0));
	}
	
	//@Test
	public void changPwd() {
		String oldPwd = DigestUtils.md5Hex("123456");
		String newPwd = DigestUtils.md5Hex("123456");
		userService.changePwd("zhangsan", oldPwd, newPwd);
		User user = userService.login("zhangsan", newPwd);
		assertTrue(user!=null);
	}

	public UserService getUserService() {
		return userService;
	}

	public void setUserService(UserService userService) {
		this.userService = userService;
	}
}
