<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mail="http://www.springframework.org/schema/integration/mail"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
		http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail-2.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- Gateway that Publishes AppointmentMessages to the global message channel -->
	<gateway id="appointmentMessageGateway" service-interface="org.springframework.samples.petcare.appointments.integration.AppointmentMessageGateway" default-request-channel="globalChannel" />
		 		
	<!-- Routes AppointmentMessages to the appointmentChannel -->
	<payload-type-router input-channel="globalChannel">
		<mapping type="org.springframework.samples.petcare.appointments.AppointmentMessage" channel="appointmentChannel" />
	</payload-type-router>	

	<!-- Clients subscribe to this channel to receive appointment notifications (APPOINTMENT_ADDED, APPOINTMENT_DELETED, etc) -->
	<publish-subscribe-channel id="appointmentChannel" />

	<!-- Forks AppointmentMessages to an asynchronous mailer -->
	<bridge input-channel="appointmentChannel" output-channel="appointmentMailerChannel" />
	
	<!-- Asynchronously dispatches appointment notifications for mailing -->
	<channel id="appointmentMailerChannel">
		<dispatcher task-executor="appointmentMailerExecutor" />
	</channel>

	<!-- Mailer thread pool -->
	<task:executor id="appointmentMailerExecutor" />
	
	<!-- Transforms an AppointmentMessage to a Doctor MailMessage -->
	<transformer input-channel="appointmentMailerChannel" output-channel="doctorMail">
		<beans:bean class="org.springframework.samples.petcare.appointments.mail.DoctorMailTransformer" />
	</transformer>

	<!-- Sends the Doctor MailMessage -->
	<mail:outbound-channel-adapter id="doctorMail" mail-sender="mailSender" />

</beans:beans>