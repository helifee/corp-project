<project name="standalone-gorm" default="all" xmlns:ivy="antlib:org.apache.ivy.ant">

  	<property name="ivy.install.version" value="2.0.0" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
      <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${user.home}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy-${ivy.install.version}.jar" />

    <target name="download-ivy" unless="offline">
		<available file="${ivy.jar.file}" property="ivy.available"/>
		<antcall target="-download-ivy" />
    </target>

	<target name="-download-ivy" unless="ivy.available">
        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="http://www.apache.org/dist/ant/ivy/${ivy.install.version}/apache-ivy-${ivy.install.version}-bin.zip"
            dest="${ivy.home}/ivy.zip" usetimestamp="true" verbose="true"/>
	    <unzip src="${ivy.home}/ivy.zip" dest="${ivy.jar.dir}">
		   <patternset>
		        <include name="**/*.jar"/>
		    </patternset>
			<mapper type="flatten"/>
		</unzip>
	</target>

    <target name="init-ivy" depends="download-ivy" unless="ivy.lib.path">
      <!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <!-- =================================
          target: resolve
         ================================= -->
    <target name="-resolve" description="--> Retrieve dependencies with ivy" depends="init-ivy">
		<mkdir dir="lib" />
        <ivy:retrieve pattern="lib/[artifact]-[revision].[ext]"/>
    </target>

	<target name="all" depends="clean, war" />

	<target name="clean">
		<delete dir="lib" />
		<delete dir="target" />		
	</target>
	
    <target name="war" depends="-resolve">
	
	    <taskdef name="groovyc"  classname="org.codehaus.groovy.ant.Groovyc">
	        <classpath>
	            <fileset dir="lib" />
	        </classpath>        
	     </taskdef>
		
        <delete dir="target" />
        <mkdir dir="target/staging" />
        <copy todir="target/staging">
            <fileset dir="web" />
        </copy>
        <mkdir dir="target/staging/WEB-INF/lib" />
        <copy todir="target/staging/WEB-INF/lib">
		    <fileset dir="lib" />
        </copy>
        <mkdir dir="target/staging/WEB-INF/classes" />

       <copy todir="target/staging/WEB-INF/classes">
            <fileset dir="web/WEB-INF/classes" />
        </copy>

        <groovyc srcdir="src" destdir="target/staging/WEB-INF/classes">
        </groovyc>

        <war  basedir="target/staging" destfile="target/petclinic.war" />
    </target>
</project>
