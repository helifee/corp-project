package com.celartem.datashow;

import java.text.ParseException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.celartem.common.SystemConstant;
import com.celartem.datashow.bean.EnergyCurveInfo;

/**
 * 用能曲线Service
 * 
 * @author zhangdaoqiang
 *
 */
@Service
public class EnergyUseCurveService {
	
	@Autowired
	private EnergyUseCurveDAO energyUseCurveDAO;

	/**
	 * 取得用能曲线点的数据
	 * 
	 * @param did : 部门ID
	 * @param sdate ： 开始日期
	 * @param edate ： 结束日期
	 * @param precision ： 统计维度
	 * @return
	 * @throws ParseException 
	 */
	public Map<String, List<EnergyCurveInfo>> getLinechartData(String did, 
			String sdate, String edate, String precision) throws ParseException {
		
		Map<String, List<EnergyCurveInfo>> retMap = new HashMap<String, List<EnergyCurveInfo>>();
		
		List<EnergyCurveInfo> eleAmountList;	//用电量
//		List<EnergyCurveInfo> heatAmountList;	//用热量
//		List<EnergyCurveInfo> coolAmountList;	//用冷量
		List<EnergyCurveInfo> hotAmountList;	//热水量
		List<EnergyCurveInfo> coldAmountList;	//冷水量
		
		//总用量
		if("0".equals(did)) {
			eleAmountList = this.energyUseCurveDAO.getCurTotalAmount(sdate, edate, SystemConstant.EnergyUseType.ELE.getValue(), precision);
//			heatAmountList = this.energyUseCurveDAO.getCurTotalAmount(sdate, edate, SystemConstant.EnergyUseType.HEAT.getValue(), precision);
//			coolAmountList = this.energyUseCurveDAO.getCurTotalAmount(sdate, edate, SystemConstant.EnergyUseType.COOL.getValue(), precision);
			hotAmountList = this.energyUseCurveDAO.getCurTotalAmount(sdate, edate, SystemConstant.EnergyUseType.HOT.getValue(), precision);
			coldAmountList = this.energyUseCurveDAO.getCurTotalAmount(sdate, edate, SystemConstant.EnergyUseType.COLD.getValue(), precision);
		
		//部门用量
		} else {
			int deptId = Integer.parseInt(did);
			eleAmountList = this.energyUseCurveDAO.getCurDeptAmount(sdate, edate, SystemConstant.EnergyUseType.ELE.getValue(), precision, deptId);
//			heatAmountList = this.energyUseCurveDAO.getCurDeptAmount(sdate, edate, SystemConstant.EnergyUseType.HEAT.getValue(), precision, deptId); TODO
//			coolAmountList = this.energyUseCurveDAO.getCurDeptAmount(sdate, edate, SystemConstant.EnergyUseType.COOL.getValue(), precision, deptId); TODO
			hotAmountList = this.energyUseCurveDAO.getCurDeptAmount(sdate, edate, SystemConstant.EnergyUseType.HOT.getValue(), precision, deptId);
			coldAmountList = this.energyUseCurveDAO.getCurDeptAmount(sdate, edate, SystemConstant.EnergyUseType.COLD.getValue(), precision, deptId);
		}
		
		//入住率
		List<EnergyCurveInfo> rateList = this.energyUseCurveDAO.getLodgingRate(sdate, edate, precision);
		
		retMap.put("ele", eleAmountList);
//		retMap.put("heat", heatAmountList);
//		retMap.put("cool", coolAmountList);
		retMap.put("hotwater", hotAmountList);
		retMap.put("coldwater", coldAmountList);
		retMap.put("rate", rateList);
		
		return retMap;
	}
	

	
	/**
	 * 取得占比分析数据
	 * 
	 * @param sdate : 开始日期
	 * @param edate ： 结束日期
	 * @param did ： 部门ID
	 * @return
	 */
	public Map<String, List<EnergyCurveInfo>> getPiechartData(String did,
			String sdate, String edate) {
		
		Map<String, List<EnergyCurveInfo>> retMap = new HashMap<String, List<EnergyCurveInfo>>();
		
		List<EnergyCurveInfo> eleAmountList;	//用电量
//		List<EnergyCurveInfo> heatAmountList;	//用热量
//		List<EnergyCurveInfo> coolAmountList;	//用冷量
		List<EnergyCurveInfo> hotAmountList;	//热水量
		List<EnergyCurveInfo> coldAmountList;	//冷水量
		
		int deptId = Integer.parseInt(did);

		//部门用量占
		if("0".equals(did)) {
			eleAmountList = this.energyUseCurveDAO.getPieDeptAmount(sdate, edate, SystemConstant.EnergyUseType.ELE.getValue(), deptId);
//			heatAmountList = this.energyUseCurveDAO.getPieDeptAmount(sdate, edate, SystemConstant.EnergyUseType.HEAT.getValue(), deptId);
//			coolAmountList = this.energyUseCurveDAO.getPieDeptAmount(sdate, edate, SystemConstant.EnergyUseType.COOL.getValue(), deptId);
			hotAmountList = this.energyUseCurveDAO.getPieDeptAmount(sdate, edate, SystemConstant.EnergyUseType.HOT.getValue(), deptId);
			coldAmountList = this.energyUseCurveDAO.getPieDeptAmount(sdate, edate, SystemConstant.EnergyUseType.COLD.getValue(), deptId);
			
		//表计用量占比
		} else {
			
			eleAmountList = this.energyUseCurveDAO.getPieMeterAmount(sdate, edate, SystemConstant.EnergyUseType.ELE.getValue(), deptId);
//			heatAmountList = this.energyUseCurveDAO.getPieMeterAmount(sdate, edate, SystemConstant.EnergyUseType.HEAT.getValue(), deptId);
//			coolAmountList = this.energyUseCurveDAO.getPieMeterAmount(sdate, edate, SystemConstant.EnergyUseType.COOL.getValue(), deptId);
			hotAmountList = this.energyUseCurveDAO.getPieMeterAmount(sdate, edate, SystemConstant.EnergyUseType.HOT.getValue(), deptId);
			coldAmountList = this.energyUseCurveDAO.getPieMeterAmount(sdate, edate, SystemConstant.EnergyUseType.COLD.getValue(), deptId);
		}
		
		retMap.put("ele", eleAmountList);
//		retMap.put("heat", heatAmountList);
//		retMap.put("cool", coolAmountList);
		retMap.put("hotwater", hotAmountList);
		retMap.put("coldwater", coldAmountList);
		
		return retMap;
	}
	


	/**
	 * @param energyUseCurveDAO the energyUseCurveDAO to set
	 */
	public void setEnergyUseCurveDAO(EnergyUseCurveDAO energyUseCurveDAO) {
		this.energyUseCurveDAO = energyUseCurveDAO;
	}
}
