package com.celartem.common;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

public class OracleConnection {
	private static Connection con = null;
	private static Context context = null;
	private static DataSource dataSource = null; 

	public static Connection getConnectionFromServer() {
		try {
			if(con == null || con.isClosed()){
			   //通过数据源
			   try {
				   if(dataSource == null)
					{
						context =  new InitialContext();
						dataSource = (DataSource) context.lookup("java:comp/env/oracle/cj");
					}
				    con = dataSource.getConnection();
			   } catch (NamingException e) {
			    e.printStackTrace();
			   } catch (SQLException e) {
			    e.printStackTrace();
			   }
			  
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return con;  
		
	}
	//此函数仅限测试使用
	public static Connection getConnectionFromLocal() {
		try {
			   Class.forName( "oracle.jdbc.driver.OracleDriver" );
			   con = DriverManager.getConnection( "jdbc:oracle:thin:@10.1.4.24:1521:cj", "cj", "cj" ); 
		   }
		   catch (ClassNotFoundException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			} 
		   catch (SQLException e) {
		    e.printStackTrace();
		   }
		   return con;
	}
	
	
	public static void freeConnection() {
		  if(con!=null){
				try {
					if(con.isClosed() == false)
						con.close();
					
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				finally{
					con = null;
				}
			}
	 }


}
