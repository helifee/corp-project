package com.celartem.ueplan;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

/**
 * 总量调整Action
 * 
 * @author zhangdaoqiang
 *
 */
@Controller
public class TotalAdjustmentController {

	@Autowired
	private TotalAdjustmentService totalAdjustmentService;  //总量调整service

	/**
	 * 总量调整页面初始化
	 * 
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/ueplan/totalAdjustmentInit.do")
	public ModelAndView init(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		
		response.setCharacterEncoding("text/html;charset=utf-8");
		
		//获得查询类别(ele: 用电; water: 用水)
		String type = request.getParameter("type");
		
		List<Object> result = this.totalAdjustmentService.init(type);
		
		String rsUrl = "ueplan/totalAdjustmentByEle";
		if (type != null && type.equals("water")){
			rsUrl = "ueplan/totalAdjustmentByWater";
		}
		
		ModelAndView model = new ModelAndView(rsUrl);
		
		if(null != result && result.size() == 4) {
			
			//取得总用量
			model.addObject("totalAmount", result.get(0));
			
			//取得单价
			model.addObject("price", result.get(1));

			//取得部门用量
			model.addObject("dptAmount", result.get(2));
			
			//取得总用量调整日志
			model.addObject("adjustLog", result.get(3));	
		}
		
		return model;
	}
	
	/**
	 * 总量调整
	 * 
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/totalAdjustment.do")
	public ModelAndView totalAdjustment(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		
		// 获得调整类别(ele: 用电; water: 用水)
		String type = request.getParameter("type");
		
		//取得新设定的总用量
		String newTotalAmount = request.getParameter("newTotalAmount"); 
		
		// 总量调整
		totalAdjustmentService.editPlanTotalAmount(type, Double.parseDouble(newTotalAmount));
		
		return null;
	}
}
