package com.celartem.ueplan;

import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.CallableStatementCallback;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.celartem.ueplan.bean.AssessUsageInfo;
import com.celartem.ueplan.bean.UsagePrompt;

@Repository
public class AssessManagerDAO {

	@Resource
	private JdbcTemplate jdbcTemplate;

	/**
	 * 获得用电量用能提示
	 * @param param 参数，查询年份
	 * @return
	 */
	@SuppressWarnings(value = { "unchecked" })
	// 去掉黄色警告
	public List<UsagePrompt> getUsagePromptByEle(final String param) {

		String sql = "call sp_getuseelefasterdbtbyyear(?,?)";

		List<UsagePrompt> promptList = (List<UsagePrompt>) jdbcTemplate.execute(sql,
				new CallableStatementCallback() {
					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException, DataAccessException {
						cs.setString(1, param);
						cs.registerOutParameter(2,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(2);
						List<UsagePrompt> result = null;
						if (rs != null) {
							result = new ArrayList<UsagePrompt>();
							while (rs.next()) {
								UsagePrompt up = new UsagePrompt();
								up.setDepartName(rs.getString("name"));
								up.setMonth(rs.getInt("month"));
								result.add(up);
							}
						}
						rs.close();
						return result; // 返回类型决定execute返回类型
					}
				});
		return promptList;
	}

	/**
	 * 获得用水量用能提示
	 * @param param 参数，查询年份
	 * @return
	 */
	@SuppressWarnings(value = { "unchecked" })
	// 去掉黄色警告
	public List<UsagePrompt> getUsagePromptByWater(final String param) {

		String sql = "call sp_getusewaterfasterdbtbyyear(?,?)";

		List<UsagePrompt> promptList = (List<UsagePrompt>) jdbcTemplate.execute(sql,
				new CallableStatementCallback() {
					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException, DataAccessException {
						cs.setString(1, param);
						cs.registerOutParameter(2,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(2);
						List<UsagePrompt> result = null;
						if (rs != null) {
							result = new ArrayList<UsagePrompt>();
							while (rs.next()) {
								UsagePrompt up = new UsagePrompt();
								up.setDepartName(rs.getString("name"));
								up.setMonth(rs.getInt("month"));
								result.add(up);
							}
						}
						rs.close();
						return result; // 返回类型决定execute返回类型
					}
				});
		return promptList;
	}
	
	/**
	 * 获得部门用电的用能信息
	 * @param param 参数，查询年份
	 * @return
	 */
	@SuppressWarnings(value = { "unchecked" })
	// 去掉黄色警告
	public List<AssessUsageInfo> getDepartmentUseInfoByEle(final String[] param) {
		String sql = "call sp_getdpteleusagebymonth(?,?,?)";

		List<AssessUsageInfo> infoList = (List<AssessUsageInfo>) jdbcTemplate.execute(sql,
				new CallableStatementCallback() {
					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException, DataAccessException {
						cs.setString(1, param[0]);
						cs.setString(2, param[1]);
						cs.registerOutParameter(3,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(3);
						List<AssessUsageInfo> result = new ArrayList<AssessUsageInfo>();
						while (rs != null && rs.next()) {
							AssessUsageInfo aui = new AssessUsageInfo();
							aui.setName(rs.getString("name"));
							aui.setPlanUsage(rs.getDouble("u1"));
							aui.setActualUsage(rs.getDouble("u2"));
							aui.setDeviationAmount(rs.getDouble("piancha"));
							aui.setDeviationRate(rs.getString("bili"));
							result.add(aui);
						}
						rs.close();
						return result; // 返回类型决定execute返回类型
					}
				});
		return infoList;
	}

	/**
	 * 获得部门用水的用能信息
	 * @param param 参数，查询年份
	 * @return
	 */
	@SuppressWarnings(value = { "unchecked" })
	// 去掉黄色警告
	public List<AssessUsageInfo> getDepartmentUseInfoByWater(final String[] param) {
		String sql = "call sp_getdptwaterusgebymonth(?,?,?)";

		List<AssessUsageInfo> infoList = (List<AssessUsageInfo>) jdbcTemplate.execute(sql,
				new CallableStatementCallback() {
					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException, DataAccessException {
						cs.setString(1, param[0]);
						cs.setString(2, param[1]);
						cs.registerOutParameter(3,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(3);
						List<AssessUsageInfo> result = new ArrayList<AssessUsageInfo>();
						while (rs != null && rs.next()) {
							AssessUsageInfo aui = new AssessUsageInfo();
							aui.setName(rs.getString("name"));
							aui.setPlanUsage(rs.getDouble("u1"));
							aui.setActualUsage(rs.getDouble("u2"));
							aui.setDeviationAmount(rs.getDouble("piancha"));
							aui.setDeviationRate(rs.getString("bili"));
							result.add(aui);
						}
						rs.close();
						return result; // 返回类型决定execute返回类型
					}
				});
		return infoList;
	}

	/**
	 * 获得表计用电的用能信息
	 * @param param 参数，查询年份
	 * @return
	 */
	@SuppressWarnings(value = { "unchecked" })
	// 去掉黄色警告
	public List<AssessUsageInfo> getMeterUseInfoByEle(final String[] param) {
		String sql = "call sp_getelematerusagebydptandmth(?,?,?,?)";
		List<AssessUsageInfo> infoList = (List<AssessUsageInfo>) jdbcTemplate.execute(sql,
				new CallableStatementCallback() {
					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException, DataAccessException {
						cs.setString(1, param[0]);
						cs.setString(2, param[1]);
						cs.setInt(3, Integer.parseInt(param[2]));
						cs.registerOutParameter(4,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(4);
						List<AssessUsageInfo> result = new ArrayList<AssessUsageInfo>();
						while (rs != null && rs.next()) {
							AssessUsageInfo aui = new AssessUsageInfo();
							aui.setName(rs.getString("name"));
							aui.setPlanUsage(rs.getDouble("u1"));
							aui.setActualUsage(rs.getDouble("u2"));
							aui.setDeviationAmount(rs.getDouble("piancha"));
							aui.setDeviationRate(rs.getString("bili"));
							result.add(aui);
						}
						rs.close();
						return result; // 返回类型决定execute返回类型
					}
				});
		return infoList;
	}
	
	/**
	 * 获得表计用水的用能信息
	 * @param param 参数，查询年份
	 * @return
	 */
	@SuppressWarnings(value = { "unchecked" })
	// 去掉黄色警告
	public List<AssessUsageInfo> getMeterUseInfoByWater(final String[] param) {
		String sql = "call sp_getwatermaterusebydptandmth(?,?,?,?)";
		List<AssessUsageInfo> infoList = (List<AssessUsageInfo>) jdbcTemplate.execute(sql,
				new CallableStatementCallback() {
					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException, DataAccessException {
						cs.setString(1, param[0]);
						cs.setString(2, param[1]);
						cs.setInt(3, Integer.parseInt(param[2]));
						cs.registerOutParameter(4,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(4);
						List<AssessUsageInfo> result = new ArrayList<AssessUsageInfo>();
						while (rs != null && rs.next()) {
							AssessUsageInfo aui = new AssessUsageInfo();
							aui.setName(rs.getString("name"));
							aui.setPlanUsage(rs.getDouble("u1"));
							aui.setActualUsage(rs.getDouble("u2"));
							aui.setDeviationAmount(rs.getDouble("piancha"));
							aui.setDeviationRate(rs.getString("bili"));
							result.add(aui);
						}
						rs.close();
						return result; // 返回类型决定execute返回类型
					}
				});
		return infoList;
	}
}