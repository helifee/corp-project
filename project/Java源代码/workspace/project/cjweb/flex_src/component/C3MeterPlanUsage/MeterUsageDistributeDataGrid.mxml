<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<fx:Component id="rdrUsageInput">  
			<mx:HBox>
				<s:Label text=""/>
				<mx:TextInput  width="90%"  id="txtValue"/>
			</mx:HBox>
		</fx:Component> 
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.controls.TextInput;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.controls.dataGridClasses.DataGridItemRenderer;
			import mx.controls.listClasses.ListBaseContentHolder;
			import mx.events.FlexEvent;
			
			import spark.components.Button;
			import spark.components.Label; 
			
			[Bindable]       
			private var data:ArrayCollection=new ArrayCollection([
				{department:"表a1", month1:"123",month2:"20",month3:"20",month4:"20",month5:"20"},
				{department:"表a2", month1:"213", month2:"21",month3:"20",month4:"20",month5:"20"},
				{department:"表a3", month1:"333", month2:"23",month3:"20",month4:"20",month5:"20"},
				{department:"表a4", month1:"987", month2:"23",month3:"20",month4:"20",month5:"20"},
				{department:"表a5", month1:"146",month2:"22",month3:"20",month4:"20",month5:"20"},
				{department:"表a6", month1:"345",month2:"11",month3:"20",month4:"20",month5:"20"}
				
				
			]);  
			
			private var dgDynamic:DataGrid;
			private var btnSubmit:Button;
			private var btnClear:Button;
			private var lblUnit:Label;
			
			private var lblUnit4Sum:Label;
			private var lblUnit4Distributed:Label;
			private var lblUnit4Left:Label;
			
			private var lblSum:Label;
			private var lblDistributed:Label;
			private var lblLeft:Label;
			
			private var txtSumValue:TextInput;
			private var txtDistributedValue:TextInput;
			private var txtLeftValue:TextInput;
			
			private const TEXTINPUT_WIDTH:int=60;
			private const COMP_GAP:int=20;
			private const LABEL_TOP_PADDING:int=5;
			
			//单位
			private var _unit:String;
			//group宽度
			private var _myWidth:int;
			//group高度
			private var _myHeight:int;
			//要手动分配的月份和取得itemrenderer的控件所在数组的位置
			private var monthTag:int=1;
			//部门当月总量
			private var _intSumValue4CurMonth:int;
			//已分配量
			private var _intDistributedValue:int;
			//剩余量
			private var _intLeftValue:int;
			
			
			public function set unit(value:String):void
			{
				if(_unit!=value)
				{
					_unit=value;
					this.invalidateProperties();
				}
			}
			public function get unit():String
			{
				return _unit;
			}
			
			public function set myWidth(value:int):void
			{
				if(_myWidth!=value)
				{
					_myWidth=value;
					this.invalidateProperties();
				}
			}
			public function get myWidth():int
			{
				return _myWidth;
			}
			
			public function set myHeight(value:int):void
			{
				if(_myHeight!=value)
				{
					_myHeight=value;
					this.invalidateProperties();
				}
			}
			public function get myHeight():int
			{
				return _myHeight;
			}
			
			public function set intSumValue4CurMonth(value:int):void
			{
				if(_intSumValue4CurMonth!=value)
				{
					_intSumValue4CurMonth=value;
					this.invalidateProperties();
				}
			}
			public function get intSumValue4CurMonth():int
			{
				return _intSumValue4CurMonth;
			}
			
			public function set intDistributedValue(value:int):void
			{
				if(_intDistributedValue!=value)
				{
					_intDistributedValue=value;
					this.invalidateProperties();
				}
			}
			public function get intDistributedValue():int
			{
				return _intDistributedValue;
			}
			
			public function set intLeftValue(value:int):void
			{
				if(_intLeftValue!=value)
				{
					_intLeftValue=value;
					this.invalidateProperties();
				}
			}
			public function get intLeftValue():int
			{
				return _intLeftValue;
			}
			
			override protected function createChildren():void
			{
				super.createChildren();
				lblUnit=new Label();
				this.addElement(lblUnit);
				dgDynamic=new DataGrid();
				dgDynamic.addEventListener(FlexEvent.CREATION_COMPLETE,dgCreationComplete);
				this.addElement(dgDynamic);
				
				btnSubmit=new Button();
				btnSubmit.addEventListener(MouseEvent.CLICK,submitValue);
				this.addElement(btnSubmit);
				
				btnClear=new Button();
				btnClear.addEventListener(MouseEvent.CLICK,clearValue);
				this.addElement(btnClear);
				
				lblUnit4Sum=new Label();
				this.addElement(lblUnit4Sum);
				lblUnit4Distributed=new Label();
				this.addElement(lblUnit4Distributed);
				lblUnit4Left=new Label();
				this.addElement(lblUnit4Left);
				
				lblSum=new Label();
				this.addElement(lblSum);
				lblDistributed=new Label();
				this.addElement(lblDistributed);
				lblLeft=new Label();
				this.addElement(lblLeft);
				  
				txtSumValue=new TextInput();
				this.addElement(txtSumValue);
				txtDistributedValue=new TextInput();
				this.addElement(txtDistributedValue);
				txtLeftValue=new TextInput();
				this.addElement(txtLeftValue);
				
			}
			
			override protected function commitProperties():void
			{
				super.commitProperties(); 	
				dgDynamic.dataProvider=data;
				btnSubmit.label="提交";
				lblUnit.text="单位："+_unit;
				btnClear.label="清空";
				
				lblUnit4Sum.text=_unit;
				lblUnit4Distributed.text=_unit;
				lblUnit4Left.text=_unit;
				
				lblSum.text="部门当月总量：";
				lblDistributed.text="分配量：";
				lblLeft.text="剩余量：";
				
				txtSumValue.text=_intSumValue4CurMonth.toString();
				txtSumValue.editable=false;
				txtSumValue.width=TEXTINPUT_WIDTH;
				txtDistributedValue.text=this._intDistributedValue.toString();
				txtDistributedValue.editable=false;
				txtDistributedValue.width=TEXTINPUT_WIDTH;
				txtLeftValue.text=(_intSumValue4CurMonth-_intDistributedValue).toString();
				txtLeftValue.editable=false;
				txtLeftValue.width=TEXTINPUT_WIDTH;
				
				dgDynamic.rowCount=data.length;
				this.width=_myWidth;
				
				dgDynamic.width=this.width*0.99;
				
				
				var cols:Array=new Array();  
				
				var dgcDepartment:DataGridColumn = new DataGridColumn();
				dgcDepartment.dataField="department";
				dgcDepartment.width=100;
				dgcDepartment.headerText="表计名称 \\ 月份";
				cols.push(dgcDepartment);   
				
				var obj:Object;
				obj =data.getItemAt(0);
				
				var dgcMonth:DataGridColumn;
				
				
				if(obj.month1!=null)
				{ 
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month1";
					dgcMonth.headerText="1月";
					cols.push(dgcMonth);  
					monthTag+=1;
				}
				if(obj.month2!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month2";
					dgcMonth.headerText="2月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month3!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month3";
					dgcMonth.headerText="3月";
					cols.push(dgcMonth); 
					monthTag+=1;
				}
				if(obj.month4!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month4";
					dgcMonth.headerText="4月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month5!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month5";
					dgcMonth.headerText="5月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month6!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month6";
					dgcMonth.headerText="6月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month7!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month7";
					dgcMonth.headerText="7月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month8!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month8";
					dgcMonth.headerText="8月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month9!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month9";
					dgcMonth.headerText="9月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month10!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month10";
					dgcMonth.headerText="10月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month11!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month11";
					dgcMonth.headerText="11月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month12!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month12";
					dgcMonth.headerText="12月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				
				
				var dgcDistributeInput:DataGridColumn=new DataGridColumn();  
				dgcDistributeInput.headerText=monthTag.toString()+"月";  
				dgcDistributeInput.itemRenderer = rdrUsageInput;  
				cols.push(dgcDistributeInput);
				
				dgDynamic.columns=cols;  
				
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				lblUnit.x=dgDynamic.width-lblUnit.width;
				lblUnit.y=LABEL_TOP_PADDING;
				dgDynamic.x=0;
				dgDynamic.y=txtSumValue.height+5;
				btnSubmit.x=dgDynamic.width-btnSubmit.width;
				btnSubmit.y=dgDynamic.y+dgDynamic.height+10;
				btnClear.x=dgDynamic.width-btnSubmit.width-btnClear.width-20;
				btnClear.y=dgDynamic.y+dgDynamic.height+10;
				
				lblSum.x=0;
				lblSum.y=LABEL_TOP_PADDING;
				txtSumValue.x=lblSum.x+lblSum.width;
				txtSumValue.y=0;
				lblUnit4Sum.x=txtSumValue.x+txtSumValue.width;
				lblUnit4Sum.y=LABEL_TOP_PADDING;
				
				lblDistributed.x=lblUnit4Sum.x+lblUnit4Sum.width+COMP_GAP; 
				lblDistributed.y=LABEL_TOP_PADDING;
				txtDistributedValue.x=lblDistributed.x+lblDistributed.width;
				txtDistributedValue.y=0;
				lblUnit4Distributed.x=txtDistributedValue.x+txtDistributedValue.width;
				lblUnit4Distributed.y=LABEL_TOP_PADDING;
				
				lblLeft.x=lblUnit4Distributed.x+lblUnit4Distributed.width+COMP_GAP;
				lblLeft.y=LABEL_TOP_PADDING;
				txtLeftValue.x=lblLeft.x+lblLeft.width;
				txtLeftValue.y=0;
				lblUnit4Left.x=txtLeftValue.x+txtLeftValue.width;
				lblUnit4Left.y=LABEL_TOP_PADDING;
				
//				this.height=btnSubmit.y+btnSubmit.height;   
			}
			
			public function submitValue(event:Event):void{
				var iLen:int = this.dgDynamic.numChildren;
				
				var myHList:ListBaseContentHolder = this.dgDynamic.getChildAt(2) as ListBaseContentHolder; 
				var strValue:String="";
				for (var i:int=0;i<myHList.listItems.length;i++) { 
					var arrValue:Array = myHList.listItems[i] as Array;
					//是否对应部门id待定
					strValue=strValue+arrValue[monthTag].txtValue.text+",";
					
				} 
				Alert.show(strValue); 
			}
			
			public function clearValue(event:Event):void{
				
				var iLen:int = this.dgDynamic.numChildren;
				
				var myHList:ListBaseContentHolder = this.dgDynamic.getChildAt(2) as ListBaseContentHolder; 
				var strValue:String="";
				for (var i:int=0;i<myHList.listItems.length;i++) { 
					ListBaseContentHolder(this.dgDynamic.getChildAt(2)).listItems[i][monthTag].txtValue.text="";
				}
				this.txtDistributedValue.text="0";
				this.txtLeftValue.text=this._intSumValue4CurMonth.toString();
			}
			
			//datagrid绘制完成后为输入框增加监听事件
			public function dgCreationComplete(event:Event):void{
				var iLen:int = this.dgDynamic.numChildren;
				
				var myHList:ListBaseContentHolder = this.dgDynamic.getChildAt(2) as ListBaseContentHolder; 
				for (var i:int=0;i<myHList.listItems.length;i++) { 
					//为输入框增加键盘监听事件
					TextInput(ListBaseContentHolder(this.dgDynamic.getChildAt(2)).listItems[i][monthTag].txtValue).addEventListener(KeyboardEvent.KEY_UP,calculateLeftUsed);
				} 
			}
			
			public function calculateLeftUsed(event:Event):void{
				var iLen:int = this.dgDynamic.numChildren;
				var myHList:ListBaseContentHolder = this.dgDynamic.getChildAt(2) as ListBaseContentHolder; 
				var intInputValue:int;
				var intUsedValue:int;
				var intLeftValue:int;
				for (var i:int=0;i<myHList.listItems.length;i++) { 
					intInputValue+=Number(ListBaseContentHolder(this.dgDynamic.getChildAt(2)).listItems[i][monthTag].txtValue.text);
				} 
				this.txtDistributedValue.text=intInputValue.toString();
				this.txtLeftValue.text=(Number(this.intSumValue4CurMonth)-intInputValue).toString();
				
			}
			
		]]>
	</fx:Script>
</s:Group>

