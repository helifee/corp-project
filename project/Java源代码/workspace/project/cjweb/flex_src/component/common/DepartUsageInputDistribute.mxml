<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" borderColor="0xE5E5E5">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			
			import spark.components.Button;
			import spark.components.Group;
			import spark.components.Label;
			import spark.components.TextInput;
			
			private var _dataProvider:ArrayCollection;
			
			private const COMP_WIDTH : Number = 60;
			private const LEFT_PADDING : Number = 20;
			private const TOP_PADDING : Number = 25;
			
			private var gUsage:Group;
			
			private var txtTitle2:TextInput;
			
			[Bindable]public var _bdlSum:String;
			[Bindable]private var _unit4Title:String;
			[Bindable]private var _SumValue:String;
			private var btnClear:Button;
			private var btnSubmit:Button;
			private var lblDristributedValue:Label;
			private var lblLeftValue:Label;
			public function get bdlSum():String
			{
				return _bdlSum;
			}
			
			public function get dataProvider():ArrayCollection
			{
				return _dataProvider;
			}
			public function set dataProvider(value:ArrayCollection):void
			{
				if (_dataProvider != value)
				{
					_dataProvider = value;
					invalidateProperties();
				}
			}
			
			public function get unit4Title():String
			{
				return _unit4Title;
			}
			public function set unit4Title(value:String):void
			{
				if (_unit4Title != value)
				{
					_unit4Title = value;
				}
			}
			
			public function get SumValue():String
			{
				return _SumValue;
			}
			public function set SumValue(value:String):void
			{
				if (_SumValue != value)
				{
					_SumValue = value;
				}
			}
			override protected function createChildren():void
			{
				super.createChildren();
				
				
			}
			
			override protected function commitProperties():void
			{
				super.commitProperties(); 		
				var i:int;
				
				var lblSum:Label=new Label();
				lblSum.x=10;
				lblSum.y=TOP_PADDING;
				lblSum.text="总量值：";
				var lblSumValue:Label=new Label();
				lblSumValue.x=57;
				lblSumValue.y=TOP_PADDING;
				lblSumValue.text=SumValue;
				var lblSumUnit:Label=new Label();
				lblSumUnit.x=94;
				lblSumUnit.y=TOP_PADDING;
				lblSumUnit.text=_unit4Title;
				
				var lblDristributed:Label=new Label();
				lblDristributed.x=158;
				lblDristributed.y=TOP_PADDING;
				lblDristributed.text="分配值：";
				lblDristributedValue=new Label();
				lblDristributedValue.x=205;
				lblDristributedValue.y=TOP_PADDING;
				//lblDristributedValue.text="0";
				var lblDristributedUnit:Label=new Label();
				lblDristributedUnit.x=244;
				lblDristributedUnit.y=TOP_PADDING;
				lblDristributedUnit.text=_unit4Title;
				
				var lblLeft:Label=new Label();
				lblLeft.x=305;
				lblLeft.y=TOP_PADDING;
				lblLeft.text="剩余值：";
				lblLeftValue=new Label();
				lblLeftValue.x=350;
				lblLeftValue.y=TOP_PADDING;
				//lblLeftValue.text=SumValue;
				var lblLeftUnit:Label=new Label();
				lblLeftUnit.x=385;
				lblLeftUnit.y=TOP_PADDING;
				lblLeftUnit.text=_unit4Title;
				
				this.addElement(lblSum);
				this.addElement(lblSumValue);
				this.addElement(lblSumUnit);
				this.addElement(lblDristributed);
				this.addElement(lblDristributedValue);
				this.addElement(lblDristributedUnit);
				this.addElement(lblLeft);
				this.addElement(lblLeftValue);
				this.addElement(lblLeftUnit);
				
				gUsage=new Group();
				gUsage.x=0;
				gUsage.y=59;
				gUsage.height=40;
				
				for (i=0;i<_dataProvider.length;i++){
					var txtDepart:TextInput=new TextInput();
					txtDepart.x=LEFT_PADDING+COMP_WIDTH*(i+1)-(i+1);
					txtDepart.y=40;
					txtDepart.height=20;
					txtDepart.width=COMP_WIDTH;
					txtDepart.editable=false;
					txtDepart.text=_dataProvider.getItemAt(i).label;
					
					var txtUsage:TextInput=new TextInput();
					txtUsage.width=COMP_WIDTH;
					txtUsage.x=LEFT_PADDING+COMP_WIDTH*(i+1)-(i+1);
					txtUsage.y=0;
					txtUsage.id="txtUsage"+i.toString();
					txtUsage.addEventListener(KeyboardEvent.KEY_UP,DistributedAndLeftValue);
					try{
						this.addElement(txtDepart);
						//this.addElement(txtUsage);
						gUsage.addElement(txtUsage);
					}
					catch(err:Error){
						Alert.show(err.message.toString());
					}
					
				}
				this.addElement(gUsage);
				
				var txtTitle1:TextInput=new TextInput();
				txtTitle1.x=0;
				txtTitle1.y=40;
				txtTitle1.height=20;
				txtTitle1.width=COMP_WIDTH+LEFT_PADDING;
				txtTitle1.editable=false;
				txtTitle1.text="部门名称";
				
				txtTitle2=new TextInput();
				txtTitle2.id="txtDepartSum";
				txtTitle2.width=COMP_WIDTH+LEFT_PADDING;
				txtTitle2.x=0;
				txtTitle2.y=gUsage.y;
				txtTitle2.editable=false;
				txtTitle2.text="用量值·"+_unit4Title;
				
				btnClear=new Button();
				btnClear.x=LEFT_PADDING+COMP_WIDTH*(i+1);
				btnClear.y=gUsage.y;
				btnClear.label="重置";
				btnClear.width=COMP_WIDTH;
				btnClear.addEventListener(MouseEvent.CLICK,clearValue);
				
				btnSubmit=new Button();
				btnSubmit.x=LEFT_PADDING+COMP_WIDTH*(i+2)+5;
				btnSubmit.y=gUsage.y;
				btnSubmit.label="确定";
				btnSubmit.width=COMP_WIDTH;
				//btnSubmit.addEventListener(MouseEvent.CLICK,clearValue);
				
				try{
					this.addElement(txtTitle1);
					this.addElement(txtTitle2);
					this.addElement(btnClear);
					this.addElement(btnSubmit);
				}
				catch(err:Error){
					Alert.show(err.message.toString());
				}
				
			}
			override protected function measure(): void {
				super.measure();
				//组件的宽度
				this.width=btnSubmit.x+btnSubmit.width+2;
				this.height=90;
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number): void {
				super.updateDisplayList(unscaledWidth,unscaledHeight);
			}
			
			public function DistributedAndLeftValue(event:Event):void{
				var iSum:int=0;
				var iLen:int = this.gUsage.numElements;
				var strValue:String="";
				for(var i:int=0;i<iLen;i++)
				{
					strValue = TextInput(this.gUsage.getElementAt(i)).text;
					iSum+=Number(strValue);
				}
				_bdlSum=iSum.toString();
				lblDristributedValue.text="";
				lblDristributedValue.text=_bdlSum;
				lblLeftValue.text=(Number(SumValue)-Number(_bdlSum)).toString();
			}
			
			public function clearValue(event:Event):void{
				var iLen:int = this.gUsage.numElements;
				for(var i:int=0;i<iLen;i++)
				{
					TextInput(this.gUsage.getElementAt(i)).text="";
				}
				lblDristributedValue.text="0";
				lblLeftValue.text=SumValue;
			}
			
		]]>
	</fx:Script>

</s:BorderContainer>
