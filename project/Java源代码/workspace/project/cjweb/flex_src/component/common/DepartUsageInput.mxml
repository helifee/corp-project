<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" borderColor="0xE5E5E5">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			
			import spark.components.Button;
			import spark.components.Group;
			import spark.components.Label;
			import spark.components.TextInput;
			private var _dataProvider:ArrayCollection;
			private const COMP_WIDTH : Number = 60;
			private var gUsage:Group;
			private var txtSum:TextInput;
			[Bindable]
			public var _bdlSum:String;
			private var btnClear:Button;
			public function get bdlSum():String
			{
				return _bdlSum;
			}
			
			public function get dataProvider():ArrayCollection
			{
				return _dataProvider;
			}
			public function set dataProvider(value:ArrayCollection):void
			{
				if (_dataProvider != value)
				{
					_dataProvider = value;
					invalidateProperties();
				}
			}
			override protected function createChildren():void
			{
				super.createChildren();
				
				
			}
			
			override protected function commitProperties():void
			{
				super.commitProperties(); 		
				var i:int;
				
				gUsage=new Group();
				gUsage.x=0;
				gUsage.y=30;
				gUsage.height=40;
				
				for (i=0;i<_dataProvider.length;i++){
					var lblDepart:Label=new Label();
					lblDepart.x=COMP_WIDTH*i-i;
					lblDepart.y=15;
					lblDepart.height=20;
					lblDepart.width=COMP_WIDTH;
					lblDepart.text=_dataProvider.getItemAt(i).label;
					
					var txtUsage:TextInput=new TextInput();
					txtUsage.width=COMP_WIDTH;
					txtUsage.x=COMP_WIDTH*i-i;
					txtUsage.y=0;
					txtUsage.id="txtUsage"+i.toString();
					txtUsage.addEventListener(KeyboardEvent.KEY_UP,SumValue);
					try{
						this.addElement(lblDepart);
						gUsage.addElement(txtUsage);
					}
					catch(err:Error){
						Alert.show(err.message.toString());
					}
					
				}
				this.addElement(gUsage);
				
				var lblSum:Label=new Label();
				lblSum.x=COMP_WIDTH*i;
				lblSum.y=15;
				lblSum.height=20;
				lblSum.width=COMP_WIDTH;
				lblSum.text="合计";
				
				txtSum=new TextInput();
				txtSum.id="txtDepartSum";
				txtSum.width=COMP_WIDTH;
				txtSum.x=COMP_WIDTH*i;
				txtSum.y=gUsage.y;
				txtSum.editable=false;
				txtSum.text="0";
				
				btnClear=new Button();
				btnClear.x=COMP_WIDTH*(i+1)+5;
				btnClear.y=gUsage.y;
				btnClear.label="清除";
				btnClear.width=COMP_WIDTH;
				btnClear.addEventListener(MouseEvent.CLICK,clearValue);
				

				
				try{
					this.addElement(lblSum);
					this.addElement(txtSum);
					this.addElement(btnClear);
				}
				catch(err:Error){
					Alert.show(err.message.toString());
				}
				
			}
			override protected function measure(): void {
				super.measure();
				//组件的宽度
				this.width=btnClear.x+btnClear.width+2;
				this.height=60;
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number): void {
				super.updateDisplayList(unscaledWidth,unscaledHeight);
			}
			
			public function SumValue(event:Event):void{
				var iSum:int=0;
				var iLen:int = this.gUsage.numElements;
				var strValue:String="";
				for(var i:int=0;i<iLen;i++)
				{
					strValue = TextInput(this.gUsage.getElementAt(i)).text;
					iSum+=Number(strValue);
				}
				this.txtSum.text=iSum.toString();
				_bdlSum=this.txtSum.text;
			}
			
			public function clearValue(event:Event):void{
				var iLen:int = this.gUsage.numElements;
				for(var i:int=0;i<iLen;i++)
				{
					TextInput(this.gUsage.getElementAt(i)).text="";
				}
				this.txtSum.text="";
				_bdlSum="";
			}
			
		]]>
	</fx:Script>
</s:BorderContainer>
