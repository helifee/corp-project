/*
 * 预编译处理，读取头文件，获取声明的函数。
 */
package com.sitech.oa.pars;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import com.sitech.oa.pars.node.ParseDown;

public class PreReadHead {
	private String headName;
	public String pathFile;
	private Scanner scaner;
	private String path;
	private StringBuffer buffer;
	private String filterType;
	private Scanner mainScanner;
	
	private static List pathList=new ArrayList();

	public PreReadHead(String headName,String filterType,Scanner mainScanner){
		this.filterType=filterType;
		//如果当前头文件被否定，不做读取。
		if(Config.unreadHeadFileMap.containsKey(headName)) return;
		this.headName=headName;
		buffer=new StringBuffer();
		String[] temps=((String)Config.headFileMap.get(filterType+"HeadFilePath")).split(";");
		for(int i=0;i<temps.length;i+=1){
			pathList.add(temps[i]);
			this.mainScanner=mainScanner;
		}
	}
	public List readFunDec(){
		for(int i=0;i<pathList.size();i+=1){
			path=(String)pathList.get(i);
			if(new File(path+headName).isFile()){
				pathFile=path+headName;
				break;
			}
		}
		List l=null;
		if(pathFile!=null){
			l=innerRead();
		}
		return l;
	}
	public List innerRead(){
		FileInputStream fis=null;
		List l=null;
		BufferedReader br=null;
		try{
			fis=new FileInputStream(pathFile);
			br=new BufferedReader(new InputStreamReader(fis));
			String line=null;
			while((line=br.readLine())!=null){
				buffer.append(line+'\r');
			}
			scaner=new Scanner(buffer.toString());
			ParseDown down=new ParseDown(scaner,filterType,mainScanner,pathFile);
			l=down.getFunDec();
			
		}catch(Exception e){
			//e.printStackTrace();
		}finally{
			try{fis.close();fis=null;}catch(Exception e){}
			scaner=null;
		}
		return l;
	}
	
}
