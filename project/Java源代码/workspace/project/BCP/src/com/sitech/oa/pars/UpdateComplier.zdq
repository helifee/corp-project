package com.sitech.oa.pars;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Iterator;
import java.util.Set;

import com.sitech.oa.pars.node.FunctionDec;
import com.sitech.oa.pars.node.ParseDown;


public class UpdateComplier extends Complier{
	
	public UpdateComplier(String fileName,String filterType){
		this.filterType=filterType;
		FileInputStream fis=null;

		StringBuffer buffer=new StringBuffer();
		try{
			fis=new FileInputStream(fileName);
			BufferedReader br=new BufferedReader(new InputStreamReader(fis));

			String line=null;
			while((line=br.readLine())!=null){
				buffer.append(line+'\r');
			}
			scaner=new Scanner(buffer.toString());
			readDefaultHeadFile(scaner);
			parseResult=new ParseDown(scaner,filterType,scaner,"aa").getFunDec();
			scaner=null;
			buffer=null;
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			try {fis.close();fis=null;
			} catch (IOException e){}
		}
	}
	
	public void getFunDec(){
		FunCallTree tree=new FunCallTree();
		for(int i=0;i<parseResult.size();i+=1){
			FunctionDec f=(FunctionDec)parseResult.get(i);
			tree.visitFunctionDec(f);
		}

		Set set=tree.getFunMap().keySet();
		Iterator it=set.iterator();
		while(it.hasNext()){
			String funName=(String)it.next();
			FUNC fun=(FUNC)tree.getFunMap().get(funName);
			System.out.println(fun.functionName+"   "+fun.callList);
		}
		
	}
	
	public static void main(String[] args) {
		System.out.println("Input fileName");
		java.util.Scanner s=new java.util.Scanner(System.in);
		String fileName=s.next();
		System.out.println("Input type(as bcp,busi,serv)");
		String type=s.next();
//		String fileName="D:/temp/test.cpp";
//		String type="busi";
		UpdateComplier c=new UpdateComplier(fileName,type);
		c.getFunDec();

	}

}
