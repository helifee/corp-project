package com.sitech.oa.pars;

import java.io.File;
import java.io.FileFilter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class IteratorIndex {

	public void iterator(int opt,String type,String filterType){
		List path=new ArrayList();
		String[] temp=((String)(Config.mainPathMap.get(filterType+"MainPath"))).split(";");
		for(int j=0;j<temp.length;j+=1){
			File f=new File(temp[j]);
			
			path.add(f);
			File currentFile=null;
			while(path.size()>0){
				currentFile=(File) path.remove(0);
				File[] fs=getChilds(currentFile,filterType);
				for(int i=0;i<fs.length;i+=1){
					if(fs[i].isFile()){
						System.out.println("file:"+fs[i].getPath());
						BCPConn.getIntance().start();
						Complier c=new Complier(fs[i].getParent()+"/",fs[i].getName(),filterType);
						c.filterType=filterType;
						c.iteratorCall(opt,type);
						BCPConn.getIntance().commit();
						System.gc();
					}else{
						path.add(fs[i]);
					}
					
				}	
				
			}
		}
		
	}
	private File[]  getChilds(File f,final String filterType){
		return f.listFiles(new FileFilter(){
			public boolean accept(File arg0) {
				if(arg0.isDirectory()){
					return true;
				}else if(arg0.getName().endsWith((String)Config.fileTypeMap.get(filterType+"FileType"))){
					return true;
				}
				return false;
			}
		});
	}

	public static void main(String[] args) {
		IteratorIndex it=new IteratorIndex();
		int inputInt=-1;
		showTip();
		Scanner s=new Scanner(System.in);
		try{
			inputInt=Integer.parseInt(s.next());
			if(inputInt==0){
				return;
			}else if(inputInt==1){
				System.out.println("Filting function defind!");
				it.iterator(1,"O","bcp");
			}else if(inputInt==2){
				System.out.println("Filting function call!");
				it.iterator(2,"O","bcp");
			}else if(inputInt==3){
				System.out.println("Filting function defind!");
				it.iterator(3,"B","busi");
			}else if(inputInt==4){
				System.out.println("Filting function call!");
				it.iterator(6,"B","busi");
			}else if(inputInt==5){
				System.out.println("Filting function defind!");
				it.iterator(5,"S","serv");
			}else if(inputInt==6){
				System.out.println("Filting function call!");
				it.iterator(4,"S","serv");
			}
		}catch(ClassCastException e){
			System.out.println("Error input!");
		}finally{
			BCPConn.getIntance().close();
		}
		
	}
	private static void showTip(){
		System.out.println("1. Filting BCP");
		System.out.println("2. Filting BCP relation");
		System.out.println("3. Filting business");
		System.out.println("4. Filting business relation");
		System.out.println("5. Filting server");
		System.out.println("6. Filting server relation");
		System.out.println("0. exit");
	}

}
