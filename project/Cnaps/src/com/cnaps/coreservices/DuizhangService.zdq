package com.cnaps.coreservices;

import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

import com.bancstone.common.dao.impl.GenericHibernateDaoSupportImpl;
import com.cnaps.hvps.dao.DuizhangDao;
import com.cnaps.hvps.persistence.duizhang.CoreAcctProcess;
import com.cnaps.hvps.persistence.duizhang.DuizhangEntity;
import com.cnaps.hvps.persistence.duizhang.Hostfinancialinforegs;
import com.cnaps.hvps.persistence.duizhang.TotalAcctEntity;

public class DuizhangService {

	private GenericHibernateDaoSupportImpl commondao = new GenericHibernateDaoSupportImpl();
	
	private DuizhangDao duizhangDao = new DuizhangDao();
	
	private List procStateList = new ArrayList();//对账状态列表
	private List pmtTpList= new ArrayList();//业务类型列表
	
	public List getPmtTpList() {
		return pmtTpList;
	}

	public void setPmtTpList(List pmtTpList) {
		this.pmtTpList = pmtTpList;
	}

	public List getProcStateList() {
		return procStateList;
	}

	public void setProcStateList(List procStateList) {
		this.procStateList = procStateList;
	}

	public GenericHibernateDaoSupportImpl getCommondao() {
		return commondao;
	}

	public void setCommondao(GenericHibernateDaoSupportImpl commondao) {
		this.commondao = commondao;
	}
	public DuizhangDao getDuizhangDao() {
		return duizhangDao;
	}

	public void setDuizhangDao(DuizhangDao duizhangDao) {
		this.duizhangDao = duizhangDao;
	}

	public  DuizhangEntity queryHVPSTotalAcct(String chckDt){
		DuizhangEntity entity = new DuizhangEntity();
		String sql = "";
		List list =  getCommondao().queryBySql(sql);
		if(list.size()>0){
			entity = (DuizhangEntity)list.get(0);
		}
		return entity;
	}
	
	/**
	 * 汇总核对通知查询
	 * @param chckDt
	 * @return
	 */
	public List queryChkNotify(String systemcd,String chckDt){
		String sql ="";
		if("HVPS".equals(systemcd)){
			sql = "From Hvpscollectedchckntfy o where o.chckdt='"+chckDt+"'";
		}else{
			sql = "From Bepscollectedchckntfy o where o.chckdt='"+chckDt+"'";
		}
		return getCommondao().queryByHql(sql);
		
	}
	
	/**
	 * 汇总核对通知明细查询
	 * @param chckDt
	 * @return
	 */
	public List queryChkNotifyByMsgId(String systemcd,String msgId){
		String sql ="";
		if("HVPS".equals(systemcd)){
			sql = "From Hvpscollectedchckntfy o where o.msgid='"+msgId+"'";
		}else{
			sql = "From Bepscollectedchckntfy o where o.msgid='"+msgId+"'";
		}
		return getCommondao().queryByHql(sql);
	}
	

	/**
	 * 汇总核对登记明细查询
	 * @param chckDt
	 * @return
	 */
	public List queryChkNotifyByChckDt(String systemcd,String chckDt){
		String sql ="";
		if("HVPS".equals(systemcd)){
			sql = "From Hvpscollectedchckinf o where o.chckdt='"+chckDt+"'";
		}else{
			sql = "From Bepscollectedchckinf o where o.chckdt='"+chckDt+"'";
		}
		return getCommondao().queryByHql(sql);
	}
	
	/**
	 * 明细核对申请查询
	 * @param chckDt
	 * @return
	 */
	public List queryDetailsChkApp(String systemcd,String chckDt){
		String sql ="";
		if("HVPS".equals(systemcd)){
			sql = "From Hvpsdetailchckreq o where o.chckdt='"+chckDt+"'";
		}else{
			sql = "From Bepsdetailchckreq o where o.chckdt='"+chckDt+"'";
		}
		return getCommondao().queryByHql(sql);
		
	}
	
	/**
	 * 明细核对申请查询
	 * @param chckDt
	 * @return
	 */
	public List queryDetailsDownloadApp(String systemcd,String chckDt){
		String sql ="";
		if("HVPS".equals(systemcd)){
			sql = "From Hvpsdetaildwnldreq o where o.chckdt='"+chckDt+"'";
		}else{
			sql = "From Bepsdetaildwnldreq o where o.chckdt='"+chckDt+"'";
		}
		return getCommondao().queryByHql(sql);
		
	}
	
	
	/**
	 * 明细核对申请查询
	 * @param chckDt
	 * @return
	 */
	public List queryDetailsDownloadDetl(String systemcd,String msgid){
		String sql ="";
		if("HVPS".equals(systemcd)){
			sql = "From Hvpsdetaildwnldinf o where o.reqmsgid='"+msgid+"'";
		}else{
			sql = "From Bepsdetaildwnldinf o where o.reqmsgid='"+msgid+"'";
		}
		return getCommondao().queryByHql(sql);
		
	}
	
	/**
	 * 明细核对申请明细查询
	 * @param chckDt
	 * @return
	 */
	public List queryDetailsChkAppByMsgId(String systemcd,String msgId){
		String sql ="";
		if("HVPS".equals(systemcd)){
			sql = "From Hvpsdetailchckreq o where o.msgid='"+msgId+"'";
		}else{
			sql = "From Bepsdetailchckreq o where o.msgid='"+msgId+"'";
		}
		return getCommondao().queryByHql(sql);
		
	}
	

	
	
	/**
	 * 明细核对对账记录查询
	 * @param chckDt
	 * @return
	 */
	public List queryDetailsChkRecordByMsgId(String systemcd,String msgId){
		String sql ="";
		if("HVPS".equals(systemcd)){
			sql = "From Hvpsdetailchckreqinf o where o.msgid='"+msgId+"'";
		}else{
			sql = "From Bepsdetailchckreqinf o where o.msgid='"+msgId+"'";
		}
		return getCommondao().queryByHql(sql);
		
	}

	/**
	 * 大额对账
	 * 按对账日期查询汇总对账
	 * @param chckDt 对账日期
	 * @return
	 */
	public List checkTotalAcctHVPS(String chckDt){
		List list = new ArrayList();
		List msgTpCdList=queryMsgTpCdList("HVPS");//报文编号
		List procStateList = queryProcStateList("HVPS");//状态列表
		//List pmtTpList = queryPmtTpList(chckDt);//类型列表
		for(int j=0;j<msgTpCdList.size();j++){
			List pmtTpList=queryPmtTpList((String)msgTpCdList.get(j));
			for(int i=0;i<pmtTpList.size();i++){
				TotalAcctEntity entity = this.getDuizhangDao().checkTotalAcctByPmtTp((String)msgTpCdList.get(j),pmtTpList.get(i).toString(), procStateList, chckDt);
				list.add(entity);
			}
		}

		
		return list;
	}
	
	/**
	 * 异常处理
	 * @param chckDt
	 * @return
	 */
	public TotalAcctEntity queryExceptionPrco(String chckDt,String systemcd){
		TotalAcctEntity entity = new TotalAcctEntity();
		if("HVPS".equals(systemcd)){
			List pmtTpList = queryPmtTpList();//业务类型编码列表
			entity = this.getDuizhangDao().checkExceptionAcct(pmtTpList, chckDt, systemcd);
		}else{
			List pmtTpList = queryMsgTpCdList();//报文类型编码列表
			entity = this.getDuizhangDao().checkExceptionAcct(pmtTpList, chckDt, systemcd);
		}
		return entity;
	}
	
	private List queryMsgTpCdList() {
		List msgTpCdList=new ArrayList();
		             
		msgTpCdList.add("beps.122.001.01"); //金融机构发起普通贷记业务报文         
		msgTpCdList.add("beps.123.001.01"); //实时贷记业务报文                     
		msgTpCdList.add("beps.125.001.01"); //定期贷记业务报文                     
		msgTpCdList.add("beps.127.001.01"); //普通借记业务报文                     
		msgTpCdList.add("beps.131.001.01"); //实时借记业务报文                     
		msgTpCdList.add("beps.380.001.01"); //批量代收业务报文                     
		msgTpCdList.add("beps.382.001.01"); //批量代付业务报文                     
		msgTpCdList.add("beps.384.001.01"); //实时代收业务报文                     
		msgTpCdList.add("beps.385.001.01"); //实时代付业务报文
		
		msgTpCdList.add("beps.121.001.01"); //客户发起普通贷记业务报文
		msgTpCdList.add("beps.133.001.01"); //定期借记业务报文
		msgTpCdList.add("ccms.314.001.01");//查询书
		msgTpCdList.add("ccms.315.001.01");//查复书
		return msgTpCdList;
	}

	private List queryPmtTpList() {
		List pmtTpList=new ArrayList();
		pmtTpList.add("A100");//普通汇兑
		pmtTpList.add("A108");//现金汇款
		pmtTpList.add("A109");//委托收款（划回）
		pmtTpList.add("A110");//托收承付（划回）
		pmtTpList.add("A201");//支票
		pmtTpList.add("A202");//银行汇票
		pmtTpList.add("A111");//商业汇票
		pmtTpList.add("A112");//外汇清算
		pmtTpList.add("A113");//跨境支付
		pmtTpList.add("A101");//公益性资金汇划
		pmtTpList.add("A114");//人行跨区域票据交换轧差净额
		pmtTpList.add("A102");//国库汇款
		pmtTpList.add("A307");//国库资金国债兑付贷记划拨
		pmtTpList.add("A105");//退汇
		//机构发起汇兑
		pmtTpList.add("A104");//国库资金贷记划拨
		pmtTpList.add("A103");//国库同城交换净额清算
		pmtTpList.add("A106");//支取发行基金
		pmtTpList.add("A113");//跨境支付
		pmtTpList.add("A115");//再贷款
		pmtTpList.add("A114");//人行跨区域票据交换轧差净额
		pmtTpList.add("A200");//行间资金汇划
		pmtTpList.add("A307");//国库资金国债兑付贷记划拨
		//即时转账
		pmtTpList.add("G101");//公开市场交易结算
		pmtTpList.add("G102");//债券市场交易结算
		pmtTpList.add("G103");//债券发行、兑付及收益划拨
		pmtTpList.add("G104");//银行卡轧差净额
		pmtTpList.add("G105");//电子商业汇票资金清算
		pmtTpList.add("G106");//外汇交易市场结算
		pmtTpList.add("G107");//资金池结算
		pmtTpList.add("G108");//日终自动拆借
		pmtTpList.add("G109");//质押融资		
		//多边轧差结算金额
		pmtTpList.add("H010");//外汇交易轧差净额
		pmtTpList.add("H011");//证券交易轧差净额
		pmtTpList.add("H012");//其他系统轧差净额
		pmtTpList.add("K100");// 查询书
		pmtTpList.add("K101");// 查复书
		return pmtTpList;
	}

	/**
	 * 异常处理
	 * @param chckDt
	 * @return
	 */
	public List queryExceptionPrcoDetl(String chckDt,String pmttp,String systemcd){
		
		return this.getDuizhangDao().checkTotalAcctExceptionDetl(pmttp, chckDt, systemcd);
	}
	
	
	/**
	 * 大额对账
	 * 按业务类型，对账日期进行汇总对账明细查询
	 * @param pmtTp 业务类型
	 * @param chckDt 对账日期
	 * @return
	 */
	public TotalAcctEntity checkTotalAcctDetailsHVPS(String msgTpCd,String pmtTp,String chckDt){
		
		List procStateList = queryProcStateList("HVPS");//状态列表
		return this.getDuizhangDao().checkTotalAcctByPmtTp(msgTpCd,pmtTp, procStateList, chckDt);
	}
	
	
	/**
	 * 小额对账
	 * 按对账日期查询汇总对账
	 * @param chckDt 对账日期
	 * @return
	 */
	public List checkTotalAcctBEPS(String chckDt){
		List list = new ArrayList();
		List procStateList = queryProcStateList("BEPS");//状态列表
		List msgTpCdList = queryMsgTpCdList("BEPS");//报文类型类型列表
		for(int i=0;i<msgTpCdList.size();i++){
			TotalAcctEntity entity = this.getDuizhangDao().checkTotalAcctByMsgTp(msgTpCdList.get(i).toString(), procStateList, chckDt);
			list.add(entity);
		}
		return list;
	}
	
	

	/**
	 * 小额对账
	 * 按业务类型，对账日期进行汇总对账明细查询
	 * @param pmtTp 业务类型
	 * @param chckDt 对账日期
	 * @return
	 */
	public TotalAcctEntity checkTotalAcctDetailsBEPS(String pmtTp,String chckDt){
		List procStateList = queryProcStateList("BEPS");//状态列表
		return this.getDuizhangDao().checkTotalAcctByMsgTp(pmtTp, procStateList, chckDt);
	}
	
	
	/**
	 * 比对明细核对业务
	 * @param id 业务类型
	 * @return
	 */
	public List checkDetailsAcctById(String systemcd,String id){
		List list = new ArrayList();
		if("HVPS".equals(systemcd)){
			list =  this.getDuizhangDao().listHvpsDetais(id);
		}else{
			list =  this.getDuizhangDao().listBepsDetais(id);
		}
		return list;
	}
	
	/**
	 * 查询报文编号列表
	 * @return
	 */
	public List queryMsgTpCdList(String systemcd){
		List<String> msgTpCdList = new ArrayList<String>();
		if("HVPS".equals(systemcd)){
			//大额报文编号
			msgTpCdList.add("hvps.111.001.01"); //客户发起汇兑业务报文                 
			msgTpCdList.add("hvps.112.001.01"); //金融机构发起汇兑业务报文             
			msgTpCdList.add("hvps.141.001.01"); //即时转账业务报文                     
			msgTpCdList.add("hvps.631.001.01"); //多边轧差净额结算报文    
			msgTpCdList.add("ccms.314.001.01");//查询书
			msgTpCdList.add("ccms.315.001.01");//查复书
		}else{
			msgTpCdList.add("beps.121.001.01"); //客户发起普通贷记业务报文             
			msgTpCdList.add("beps.122.001.01"); //金融机构发起普通贷记业务报文         
			msgTpCdList.add("beps.123.001.01"); //实时贷记业务报文                     
			msgTpCdList.add("beps.125.001.01"); //定期贷记业务报文                     
			msgTpCdList.add("beps.127.001.01"); //普通借记业务报文                     
			msgTpCdList.add("beps.131.001.01"); //实时借记业务报文                     
			msgTpCdList.add("beps.133.001.01"); //定期借记业务报文                     
			msgTpCdList.add("beps.380.001.01"); //批量代收业务报文                     
			msgTpCdList.add("beps.382.001.01"); //批量代付业务报文                     
			msgTpCdList.add("beps.384.001.01"); //实时代收业务报文                     
			msgTpCdList.add("beps.385.001.01"); //实时代付业务报文 
			msgTpCdList.add("ccms.314.001.01");//查询书
			msgTpCdList.add("ccms.315.001.01");//查复书
		}
		return msgTpCdList;
	}	
	
	
	
	/**
	 * 查询业务类型列表
	 * @return
	 */
	public List queryPmtTpList(String msgTpCd){
		List pmtTpList = new ArrayList();
		//客户发起汇兑
		if("hvps.111.001.01".equals(msgTpCd)){
			pmtTpList.add("A100");//普通汇兑
			pmtTpList.add("A108");//现金汇款
			pmtTpList.add("A109");//委托收款（划回）
			pmtTpList.add("A110");//托收承付（划回）
			pmtTpList.add("A201");//支票
			pmtTpList.add("A202");//银行汇票
			pmtTpList.add("A111");//商业汇票
			pmtTpList.add("A112");//外汇清算
			pmtTpList.add("A113");//跨境支付
			pmtTpList.add("A101");//公益性资金汇划
			pmtTpList.add("A114");//人行跨区域票据交换轧差净额
			pmtTpList.add("A102");//国库汇款
			pmtTpList.add("A307");//国库资金国债兑付贷记划拨
			pmtTpList.add("A105");//退汇
			return pmtTpList;
		}
		else if("hvps.112.001.01".equals(msgTpCd)){
			//机构发起汇兑
			pmtTpList.add("A104");//国库资金贷记划拨
			pmtTpList.add("A103");//国库同城交换净额清算
			pmtTpList.add("A106");//支取发行基金
			pmtTpList.add("A113");//跨境支付
			pmtTpList.add("A115");//再贷款
			pmtTpList.add("A114");//人行跨区域票据交换轧差净额
			pmtTpList.add("A200");//行间资金汇划
			pmtTpList.add("A307");//国库资金国债兑付贷记划拨
			return pmtTpList;
		}
		else if("hvps.141.001.01".equals(msgTpCd)){
			//即时转账
			pmtTpList.add("G101");//公开市场交易结算
			pmtTpList.add("G102");//债券市场交易结算
			pmtTpList.add("G103");//债券发行、兑付及收益划拨
			pmtTpList.add("G104");//银行卡轧差净额
			pmtTpList.add("G105");//电子商业汇票资金清算
			pmtTpList.add("G106");//外汇交易市场结算
			pmtTpList.add("G107");//资金池结算
			pmtTpList.add("G108");//日终自动拆借
			pmtTpList.add("G109");//质押融资	
			return pmtTpList;
		}
		else if("hvps.631.001.01".equals(msgTpCd)){
			//多边轧差结算金额
			pmtTpList.add("H010");//外汇交易轧差净额
			pmtTpList.add("H011");//证券交易轧差净额
			pmtTpList.add("H012");//其他系统轧差净额
			return pmtTpList;
		}
		else if("ccms.314.001.01".equals(msgTpCd)){
			pmtTpList.add("K100");// 查询书
			return pmtTpList;
		}
		else if("ccms.315.001.01".equals(msgTpCd)){
			pmtTpList.add("K101");// 查复书
			return pmtTpList;
		}
		return pmtTpList;
	}
	
	/**
	 * 查询状态列表
	 * @return
	 */
	public List queryProcStateList(String systemcd){
		List procStateList = new ArrayList();
		if("HVPS".equals(systemcd)){
			//业务类报文对账状态
			procStateList.add("PR04");// 已清算
			procStateList.add("PR09");// 已拒绝
			procStateList.add("PR08");// 已撤销
			procStateList.add("PR05");// 已成功-信息类报文对账状态
			
		}else{
			procStateList.add("PR04");// 已清算
			procStateList.add("PR09");// 已拒绝
			procStateList.add("PR08");// 已撤销
			procStateList.add("PR21");// 已止付-信息类报文对账状态
			procStateList.add("PR22");// 已冲正
			procStateList.add("PR32");// 已超期-信息类报文对账状态
			procStateList.add("PR05");// 已成功-信息类报文对账状态
		}
		return procStateList;
	}
	
	/**
	 * 核心明细对账
	 * @param chckDt
	 * @return
	 */
	public List checkCoreAcct(String chckDt){
		return this.getDuizhangDao().checkCoreTotalAcct(chckDt);
	}
	/**
	 * 下载核心对账文件
	 * @param remotefilepath
	 * @return
	 */
	public boolean downloadCoreFile(String remotefilepath){
		ResourceBundle rb = ResourceBundle.getBundle("Syspara");//读取配置文件
		String filepath = rb.getString("duizhangfilepath")+remotefilepath;
		List list = this.getDuizhangDao().readToBuffer(filepath);
		return this.getDuizhangDao().insertData(list);
	}
	
	/**
	 * 根据前台流水号查询账务登记薄
	 * @param frontno
	 * @return
	 */
	public CoreAcctProcess queryCoreAcctByFrontno(String frontno){
		CoreAcctProcess entity = new CoreAcctProcess();
		String hql = "From Hostfinancialinforegs o where o.mbfefinancialsrlnmb='"+frontno+"'";
		List list = this.getCommondao().queryByHql(hql);
		if(list.size()>0){
			Hostfinancialinforegs hostEntity = (Hostfinancialinforegs)list.get(0);
			entity.setTxId(hostEntity.getTxid());//前台流水号
			entity.setProcessType(hostEntity.getFinancialprctp());//账户处理类型
			entity.setDbtrAcct(hostEntity.getChargeacct());//账户
			entity.setDbtrNm("");//名称
			entity.setCurrency("RMB");//币种
			entity.setAmt(String.valueOf(hostEntity.getAmount()));//金额
			entity.setCharge(String.valueOf(hostEntity.getServicecharge()));//手续费
			entity.setPostage(String.valueOf(hostEntity.getPostage()));//邮电费
			entity.setOutstationCharge(String.valueOf(hostEntity.getOutstationcharge()));//异地加收费
			entity.setTotalAmt(String.valueOf(hostEntity.getTotalamt()));//总金额
			entity.setUstrd("");//附言
			entity.setConsignDate(hostEntity.getCnsgndt());//委托日期
			entity.setSystemCode("");//系统编码
		}
		return entity;
	}
	
	/**
	 * 根据后台流水号查询账务登记薄
	 * @param frontno
	 * @return
	 */
	public CoreAcctProcess queryCoreAcctByBackno(String backno){
		CoreAcctProcess entity = new CoreAcctProcess();
		String hql = "From Hostfinancialinforegs o where o.hostfinancialsrlnmb='"+backno+"'";
		List list = this.getCommondao().queryByHql(hql);
		if(list.size()>0){
			Hostfinancialinforegs hostEntity = (Hostfinancialinforegs)list.get(0);
			entity.setTxId(hostEntity.getTxid());//前台流水号
			entity.setProcessType(hostEntity.getFinancialprctp());//账户处理类型
			entity.setDbtrAcct(hostEntity.getChargeacct());//账户
			entity.setDbtrNm("");//名称
			entity.setCurrency("RMB");//币种
			entity.setAmt(String.valueOf(hostEntity.getAmount()));//金额
			entity.setCharge(String.valueOf(hostEntity.getServicecharge()));//手续费
			entity.setPostage(String.valueOf(hostEntity.getPostage()));//邮电费
			entity.setOutstationCharge(String.valueOf(hostEntity.getOutstationcharge()));//异地加收费
			entity.setTotalAmt(String.valueOf(hostEntity.getTotalamt()));//总金额
			entity.setUstrd("");//附言
			entity.setConsignDate(hostEntity.getCnsgndt());//委托日期
			entity.setSystemCode("");//系统编码
		}
		return entity;
	}
	
}
