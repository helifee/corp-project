package com.cnaps.coreservices;

import java.net.URL;
import java.util.ArrayList;
import java.util.ResourceBundle;

import javax.xml.namespace.QName;

import org.apache.axis.client.Call;
import org.apache.axis.client.Service;
import org.apache.axis.encoding.ser.BeanDeserializerFactory;
import org.apache.axis.encoding.ser.BeanSerializerFactory;

import antlr.collections.List;

import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.hvps.persistence.pub.ChargeInfo;
import com.cnaps.hvps.persistence.pub.OthersBankAccountMsg;

public class DealWEBServics {
	private static String webservicesurl = "";
	static{
		ResourceBundle rb = ResourceBundle.getBundle("Syspara");//读取配置文件
		webservicesurl = rb.getString("webservicesurl").trim();
	}
	
	/**
	 * 
	 * @param operationMethodname 远程方法名
	 * @param clazz 远程调用类名
	 * @param clzurl 远程发布类名存放路径
	 * @param clzname 远程发布方法名
	 * @param objpara 输入参数对象
	 * @return 返回对象
	 * @throws PicpMessageException
	 */
	public static Object processWebService(String operationMethodname,
			Class clazz,String clzurl,String clzname,Object objpara ) throws PicpMessageException 
				 {
		Object obj = null;
		try {
			Service service = new Service();
			Call call = (Call) service.createCall();
			//设置调用的目标终端地址
			call.setTargetEndpointAddress(new URL(webservicesurl));
			//设置调用的操作名称
			call.setOperationName(operationMethodname);
			call.setMaintainSession(true);
			//qname限定名,必须和服务器端的限定名保持一致,严格区分大小写
			QName qname = new QName(clzurl,clzname);
			//注册类型映射(客户端注册)
			call.registerTypeMapping(clazz, qname,new BeanSerializerFactory(clazz,qname), 
									 new BeanDeserializerFactory(clazz,qname));
			 obj =  call.invoke(new Object[]{objpara});
			 
		} catch (Exception e) {
			e.printStackTrace();
			throw new PicpMessageException("连接webservice异常："+e.getMessage());
		} 
		return obj ;
	}
	/**
	 * 
	 * @param operationMethodname 远程方法名
	 * @param clazz 远程调用类名
	 * @param clzurl 远程发布类名存放路径
	 * @param clzname 远程发布方法名
	 * @param objpara 输入参数对象
	 * @return 返回数组
	 * @throws PicpMessageException
	 */
	public static Object[] processWebServiceArra(String operationMethodname,
			Class clazz,String clzurl,String clzname,Object objpara) throws PicpMessageException 
				 {
		Object obj[] = null;
		try {
			Service service = new Service();
			Call call = (Call) service.createCall();
		 	//设置调用的目标终端地址
			call.setTargetEndpointAddress(new URL(webservicesurl));
			//设置调用的操作名称
			call.setOperationName(operationMethodname);
			call.setMaintainSession(true);
			//qname限定名,必须和服务器端的限定名保持一致,严格区分大小写
			QName qname = new QName(clzurl,clzname);
			//注册类型映射(客户端注册)
			call.registerTypeMapping(clazz, qname,new BeanSerializerFactory(clazz,qname), 
									 new BeanDeserializerFactory(clazz,qname));
			 obj =  (Object[]) call.invoke(new Object[]{objpara});
			 
		} catch (Exception e) {
			e.printStackTrace();
			throw new PicpMessageException("连接webservice异常："+e.getMessage());
		} 
		return obj ;
	}
	/**
	 * 
	 * @param operationMethodname 远程方法名
	 * @param clazz 远程调用类名
	 * @param clzurl 远程发布类名存放路径
	 * @param clzname 远程发布方法名
	 * @param objpara 输入参数对象
	 * @return
	 * @throws PicpMessageException
	 */
	@SuppressWarnings("unchecked")
	public static java.util.List processlist(String operationMethodname,
			Class clazz,String clzurl,String clzname,java.util.List  list) throws PicpMessageException 
				 {
		Object obj[] = null;
		java.util.List<ChargeInfo> ci=new ArrayList();
		 try {
			Service service = new Service();
			Call call = (Call) service.createCall();
			//设置调用的目标终端地址
			call.setTargetEndpointAddress(new URL(webservicesurl));
			//设置调用的操作名称
			call.setOperationName(operationMethodname);
			call.setMaintainSession(true);
			//qname限定名,必须和服务器端的限定名保持一致,严格区分大小写
			QName qname = new QName(clzurl,clzname);
			//注册类型映射(客户端注册)
			call.registerTypeMapping(clazz, qname,new BeanSerializerFactory(clazz,qname), 
									 new BeanDeserializerFactory(clazz,qname));
			 obj =  (Object[]) call.invoke(new Object[]{list});
			 for(Object o:obj){
				 ChargeInfo df=  (ChargeInfo)o ;
				 ci.add(df);
			 }
			 
		} catch (Exception e) {
			e.printStackTrace();
			throw new PicpMessageException("连接webservice异常："+e.getMessage());
		}  
		return ci ;
	}

	public static void main(String[] args) {
		
		Object obj[] = null;
		 try { 
	             
	            String endPoint = "http://192.168.0.188:8080/CCMSManage/services/QueryNameService"; 
	            Service service = new Service(); 
	            Call call = (Call)service.createCall(); 
	            QName qname = new QName("urn:webservice:bancstone:com","chargeinfo");
	          //注册类型映射(客户端注册)
				call.registerTypeMapping(ChargeInfo.class, qname,new BeanSerializerFactory(ChargeInfo.class,qname), 
										 new BeanDeserializerFactory(ChargeInfo.class,qname));
	            call.setOperationName(new QName(endPoint,"queryChargeMsg")); 
	            call.setTargetEndpointAddress(new URL(endPoint)); 
	           java.util.List ci=new ArrayList();
	           ChargeInfo c=new ChargeInfo();
	               c.setMsgtpcd("beps.133.001.01");
	               c.setMoney("123");
	               c.setPmttp("E102");
	               ChargeInfo c2=new ChargeInfo();
	               c2.setMsgtpcd("beps.133.001.01");
	               c2.setMoney("1233");
	               c2.setPmttp("E102");
	               
	               ci.add(c);ci.add(c2); 
	               
	               obj =  (Object[]) call.invoke(new Object[]{ci});
	               System.out.println("===");
	               ChargeInfo df=  (ChargeInfo)obj[0];
	           System.out.println(df.getCharge());
	           // ChargeInfo obj = (ChargeInfo)call.invoke(new Object[]{"beps.133.001.01","123"}); 
	            	          
	            
	           /* //方法2
	             obj = (ChargeInfo)processWebService2("queryChargeMsg", ChargeInfo.class, 
						"urn:webservice:bancstone:com", "chargeinfo", "beps.133.001.01" , "123","objpara2");*/
	        } catch (Exception e) { 
	            e.printStackTrace(); 
	        }      
	    
		/*try {
			//saveOthersBankAccountMsg  //保存收款人信息
			ChargeInfo obj = (ChargeInfo)processWebService2("queryChargeMsg", ChargeInfo.class, 
					"urn:webservice:bancstone:com", "othersbankaccountmsg", "3136580000141111","othersbankaccountmsg", "3136580000141111");
			System.out.println(obj.getCharge());
		} catch (Exception e) {
			e.printStackTrace();
		} */
	}
}
