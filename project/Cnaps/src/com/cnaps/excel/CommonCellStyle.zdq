package com.cnaps.excel;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;


public class CommonCellStyle {
	
	/**
	 * 
	 * @param workbook  一个workbook对象
	 * @param row   行
	 * @param high 高度
	 * @param cellnum  本行中的第num个单元格
	 * @param fontsize  字体的大小
	 * @param fontBold 是否要粗体 0粗体
	 * @param value 单元格属性值
	 * @return
	 */
	
	
	public static HSSFCell getCell(HSSFWorkbook workbook,HSSFRow row,int high,int cellnum,int fontsize,int fontBold,String value){
		
		if(high!=0){
		row.setHeight((short) high);
		}
		HSSFCell cell = row.createCell((short) cellnum);
		cell.setEncoding(HSSFWorkbook.ENCODING_UTF_16);
		cell.setCellValue((value));
       
		cell.setCellStyle(CommonCellStyle.getCellStyle(workbook, fontsize, fontBold));
		return cell;
	}
	
	
	
	
	/**
	 * 
	 * @param workbook  一个workbook对象
	 * @param row   行
	 * @param high 高度
	 * @param cellnum  本行中的第num个单元格
	 * @param fontsize  字体的大小
	 * @param fontBold 是否要粗体 0粗体
	 * @param value 单元格属性值
	 * @return
	 */
	
	public static HSSFCell getCell_bottom(HSSFWorkbook workbook,HSSFRow row,int high,int cellnum,int fontsize,int fontBold,String value){
		
		if(high!=0){
		row.setHeight((short) high);
		}
		HSSFCell cell = row.createCell((short) cellnum);
		cell.setEncoding(HSSFWorkbook.ENCODING_UTF_16);
		cell.setCellValue((value));
        
		cell.setCellStyle(CommonCellStyle.getCellStyle_bottom(workbook, fontsize, fontBold));
		return cell;
	}
	
	/**
	 * 
	 * @param workbook  一个workbook对象
	 * @param row   行
	 * @param high 高度
	 * @param cellnum  本行中的第num个单元格
	 * @param fontsize  字体的大小
	 * @param fontBold 是否要粗体 0粗体
	 * @param value 单元格属性值
	 * @return
	 */
	
	public static HSSFCell getCell_date(HSSFWorkbook workbook,HSSFRow row,int high,int cellnum,int fontsize,int fontBold,String value){
		
		if(high!=0){
		row.setHeight((short) high);
		}
		HSSFCell cell = row.createCell((short) cellnum);
		cell.setEncoding(HSSFWorkbook.ENCODING_UTF_16);
		cell.setCellValue((value));
        
		cell.setCellStyle(CommonCellStyle.getCellStyle_date(workbook, fontsize, fontBold));
		
		return cell;
	}

	public static HSSFCellStyle getCellStyle(HSSFWorkbook workbook,int size,int flag){
		HSSFCellStyle cellStyle = workbook.createCellStyle();
		
		if(flag==8){
			//cellStyle.setAlignment(HSSFCellStyle.);
			/*HSSFFont font = workbook.createFont();
			
			font.setFontHeightInPoints((short) 15);
			cellStyle.setFont(font);*/
		}else{
			
			//cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_LEFT);
			cellStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);
			cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
		}
		
		
		if(flag==0){
			HSSFFont font = workbook.createFont();
			font.setFontHeight(HSSFFont.BOLDWEIGHT_BOLD);
			font.setFontHeightInPoints((short) size);
		    font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
		    
		    cellStyle.setFont(font);
		}else if(flag==1){
			//HSSFFont font = workbook.f;
			//font.setFontHeight(HSSFFont.BOLDWEIGHT_BOLD);
			//font.setFontHeightInPoints((short) size);
		    //font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
		    
		    //cellStyle.setFont(font);
		}else if(flag==2){
			cellStyle.setAlignment(HSSFCellStyle.ALIGN_RIGHT);
			cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
		}else if(flag==9){
			HSSFFont font = workbook.createFont();
			font.setFontHeight(HSSFFont.BOLDWEIGHT_BOLD);
			font.setFontHeightInPoints((short) size);
		    font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
		    font.setUnderline((byte)1);
		    cellStyle.setFont(font);
		}

//		 将字体对象赋值给单元格样式对象
		cellStyle.setBorderLeft(HSSFCellStyle.BORDER_THIN);

		cellStyle.setBorderTop(HSSFCellStyle.BORDER_THIN);

		cellStyle.setBorderRight(HSSFCellStyle.BORDER_THIN);

		cellStyle.setBorderBottom(HSSFCellStyle.BORDER_THIN);

		//cellStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);
		//cellStyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);
		cellStyle.setWrapText(true);// 自动换行 
		
        return cellStyle;
	}
	
	
	public static HSSFCellStyle getCellStyle_bottom(HSSFWorkbook workbook,int size,int flag){
		HSSFCellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);
		cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
		//HSSFFont font = workbook.createFont();
		//font.setFontHeight(HSSFFont.BOLDWEIGHT_BOLD);
		//font.setFontName("宋体");
		//font.setItalic(true);
		//font.setColor(HSSFColor.BLUE.index);
		//font.setFontHeightInPoints((short) size);

		cellStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);
		cellStyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);
		//cellStyle.setFont(font);
		cellStyle.setWrapText(true);// 自动换行 
        return cellStyle;
	}
	
	
	public static HSSFCellStyle getCellStyle_date(HSSFWorkbook workbook,int size,int flag){
		HSSFCellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setAlignment(HSSFCellStyle.ALIGN_RIGHT);
		cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
		
			if(flag==0){
				cellStyle.setAlignment(HSSFCellStyle.ALIGN_LEFT);
				cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
			}

//		 将字体对象赋值给单元格样式对象
		cellStyle.setBorderLeft(HSSFCellStyle.BORDER_THIN);

		cellStyle.setBorderTop(HSSFCellStyle.BORDER_THIN);

		cellStyle.setBorderRight(HSSFCellStyle.BORDER_THIN);

		cellStyle.setBorderBottom(HSSFCellStyle.BORDER_THIN);

		
		cellStyle.setWrapText(true);// 自动换行 
        return cellStyle;
	}
	
	public static HSSFCellStyle getCellStyle_normalStyle(HSSFWorkbook workbook){
		HSSFCellStyle normalStyle = workbook.createCellStyle();

		  normalStyle.setBorderLeft(HSSFCellStyle.BORDER_THIN);

		  normalStyle.setBorderTop(HSSFCellStyle.BORDER_THIN);

		  normalStyle.setBorderRight(HSSFCellStyle.BORDER_THIN);

		  normalStyle.setBorderBottom(HSSFCellStyle.BORDER_THIN);

		  normalStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);

		  normalStyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);

		  normalStyle.setWrapText(true);
        return normalStyle;
	}
	
	
	public static HSSFCellStyle getBlackStyle(HSSFWorkbook workbook,int size,int flag){
		HSSFCellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);
		cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
		//HSSFFont font = workbook.createFont();
		//font.setFontHeight(HSSFFont.BOLDWEIGHT_BOLD);
		//font.setFontName("宋体");
		//font.setItalic(true);
		//font.setColor(HSSFColor.BLUE.index);
		//font.setFontHeightInPoints((short) size);
		if(flag==0){
		//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
		}
		
//		 将字体对象赋值给单元格样式对象

		//cellStyle.setFont(font);
		cellStyle.setWrapText(true);// 自动换行 
        return cellStyle;
	}
	
	
	
	
	
	public static HSSFCellStyle getCellStyle_Noboder(HSSFWorkbook workbook,int size,int flag){
		HSSFCellStyle cellStyle = workbook.createCellStyle();
		
		cellStyle.setWrapText(true);// 自动换行 
		if(flag==0){
			
			cellStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);
			cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
			HSSFFont font = workbook.createFont();
			font.setFontHeight(HSSFFont.BOLDWEIGHT_BOLD);
			font.setFontHeightInPoints((short) size);
		    font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
		    
		    cellStyle.setFont(font);
		}else if(flag==100){
			cellStyle.setAlignment(HSSFCellStyle.ALIGN_LEFT);
			cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
			HSSFFont font = workbook.createFont();
			font.setFontHeight(HSSFFont.BOLDWEIGHT_BOLD);
			font.setFontHeightInPoints((short) size);
		    font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
		}else if(flag==101){
			cellStyle.setAlignment(HSSFCellStyle.ALIGN_RIGHT);
			cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
			HSSFFont font = workbook.createFont();
			font.setFontHeight(HSSFFont.BOLDWEIGHT_BOLD);
			font.setFontHeightInPoints((short) size);
		    font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
		}

//		 将字体对象赋值给单元格样式对象
		cellStyle.setBorderLeft(HSSFCellStyle.BORDER_NONE);

		cellStyle.setBorderTop(HSSFCellStyle.BORDER_NONE);

		cellStyle.setBorderRight(HSSFCellStyle.BORDER_NONE);

		cellStyle.setBorderBottom(HSSFCellStyle.BORDER_NONE);

		
		
        return cellStyle;
	}
	
	
	/**
	 * 
	 * @param workbook  一个workbook对象
	 * @param row   行
	 * @param high 高度
	 * @param cellnum  本行中的第num个单元格
	 * @param fontsize  字体的大小
	 * @param fontBold 是否要粗体 0粗体
	 * @param value 单元格属性值
	 * @return
	 */
	
	public static HSSFCell getCell_NoBoder(HSSFWorkbook workbook,HSSFRow row,int high,int cellnum,int fontsize,int fontBold,String value){
		
		if(high!=0){
		row.setHeight((short) high);
		}
		HSSFCell cell = row.createCell((short) cellnum);
		cell.setEncoding(HSSFWorkbook.ENCODING_UTF_16);
		cell.setCellValue((value));
		
		cell.setCellStyle(CommonCellStyle.getCellStyle_Noboder(workbook, fontsize, fontBold));
		
		return cell;
	}
	
}
