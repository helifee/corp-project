package com.cnaps.common;

import java.awt.Color;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;

import com.lowagie.text.Cell;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.BaseFont;


public class CommonMethod_Pdf {
	
	/**
	 * 合并单元格
	 * @param name 内容
	 * @param n 合并的格数
	 * @param flag 横/纵向标识
	 * @return cell对象
	 */
	 public static Cell createCell_hb(String name,int n,String flag){
    	if(name==null||name.equals("")){
    		name="        ";
    	}
    	 BaseFont bfChinese = null;
         try {
             bfChinese = BaseFont.createFont("STSong-Light",
                                             "UniGB-UCS2-H",
                                             BaseFont.NOT_EMBEDDED);
  
             Font headFont = new Font(bfChinese, 10, Font.NORMAL);
             Cell cell = new Cell(new Phrase(name, headFont));
	         //cell.setLeading(2.0f, 2.0f);
             if(flag.equals("h")){//横向合并
            	 cell.setColspan(n);
             }else if(flag.equals("v")){//纵向合并
            	 cell.setRowspan(n);
             }
             
             
             cell.setHorizontalAlignment(Element.ALIGN_CENTER);
             cell.setVerticalAlignment(Element.ALIGN_LEFT);
	         //cell.setBackgroundColor(new Color(255, 255, 255));
             cell.setBorderWidth(0.1f);
             cell.setBorderColor(Color.black);
             return cell;
         }catch(IOException exe) {
         }catch (DocumentException ex) {
         }
         return null;
    }
	  /**
     * 生成table的单元格 合并单元格
     * @param name
     * @return
     */
	 public static Cell createCell_hb_l(String name,int n){
    	if(name==null||name.equals("")){
    		name="        ";
    	}
    	 BaseFont bfChinese = null;
         try {
             bfChinese = BaseFont.createFont("STSong-Light",
                                             "UniGB-UCS2-H",
                                             BaseFont.NOT_EMBEDDED);
  
             Font headFont = new Font(bfChinese, 10, Font.NORMAL);
             Cell cell = new Cell(new Phrase(name, headFont));
	         //cell.setLeading(2.0f, 2.0f);
             cell.setColspan(n);
             
             cell.setHorizontalAlignment(Element.ALIGN_LEFT);
             cell.setVerticalAlignment(Element.ALIGN_LEFT);
	         //cell.setBackgroundColor(new Color(255, 255, 255));
             cell.setBorderColor(Color.white);
             return cell;
         }catch(IOException exe) {
         }catch (DocumentException ex) {
         }
         return null;
    }
	 /**
	     * 生成table的单元格 合并单元格
	     * @param name
	     * @return
	     */
		 public static Cell createCell_header(String name,int n){
	    	if(name==null||name.equals("")){
	    		name="        ";
	    	}
	    	 BaseFont bfChinese = null;
	         try {
//	             bfChinese = BaseFont.createFont("STSong-Light",
//	                                             "UniGB-UCS2-H",
//	                                             BaseFont.NOT_EMBEDDED);
	        	 bfChinese = BaseFont.createFont("STSong-Light",
				         "UniGB-UCS2-H", BaseFont.NOT_EMBEDDED);
	             Font headFont = new Font(bfChinese, 15, Font.NORMAL);
	             Cell cell = new Cell(new Phrase(name, headFont));
		         cell.setColspan(n);
	             
	             cell.setHorizontalAlignment(Element.ALIGN_CENTER);
	             cell.setVerticalAlignment(Element.ALIGN_LEFT);
	             cell.setBorderColor(Color.white);
	             return cell;
	         }catch(Exception exe) {
	        	 exe.printStackTrace();
	         }
	         return null;
	    }
    
    /**
     * 生成table的单元格 合并行
     * @param name
     * @return
     */
    public static  Cell createCell_hb_h(String name,int n){
    	if(name==null||name.equals("")){
    		name="        ";
    	}
    	 BaseFont bfChinese = null;
         try {
             bfChinese = BaseFont.createFont("STSong-Light",
                                             "UniGB-UCS2-H",
                                             BaseFont.NOT_EMBEDDED);
  
             Font headFont = new Font(bfChinese, 10, Font.NORMAL);
             Cell cell = new Cell(new Phrase(name, headFont));
	         //cell.setLeading(2.0f, 2.0f);
             cell.setRowspan(n);
             cell.setHorizontalAlignment(Element.ALIGN_LEFT);
             cell.setVerticalAlignment(Element.ALIGN_LEFT);
	         //cell.setBackgroundColor(new Color(255, 255, 255));
             cell.setBorderColor(Color.white);
             return cell;
    } catch (IOException exe) {
    }
    catch (DocumentException ex) {
    }
         return null;
    }

    /**
     * 产生标题、结尾
     * @param name
     * @return
     */
   public static Paragraph biaoti(String name,int size){
	   BaseFont bfChinese = null;
	   if(name==null){
		   name="         ";
	   }
	   try {
			bfChinese = BaseFont.createFont("STSong-Light",
			         "UniGB-UCS2-H", BaseFont.NOT_EMBEDDED);
		} catch (DocumentException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	    Font headFont = new Font(bfChinese, size, Font.NORMAL);
	    Paragraph p1 = new Paragraph(name, headFont);
	   return p1;
   }
   
   /**
    * 生成table的单元格
    * @param name
    * @return
    */
   public static  Cell createCell_cell(String name){
   	if(name==null||name.equals("")){
   		name="        ";
   	}
   	 BaseFont bfChinese = null;
        try {
            bfChinese = BaseFont.createFont("STSong-Light",
                                            "UniGB-UCS2-H",
                                            BaseFont.NOT_EMBEDDED);
 
            Font headFont = new Font(bfChinese, 10, Font.NORMAL);
            Cell cell = new Cell(new Phrase(name, headFont));
	         //cell.setLeading(2.0f, 2.0f);
            
            cell.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell.setVerticalAlignment(Element.ALIGN_LEFT);
	         //cell.setBackgroundColor(new Color(255, 255, 255));
            cell.setBorderColor(Color.white);
            return cell;
   } catch (IOException exe) {
   }
   catch (DocumentException ex) {
   }
        return null;
   }
  
   /**
    * 生成table的单元格
    * @param name
    * @return
    */
   public static  Cell createCell_cell_b(String name){
   	if(name==null||name.equals("")){
   		name="        ";
   	}
   	 BaseFont bfChinese = null;
        try {
            bfChinese = BaseFont.createFont("STSong-Light",
                                            "UniGB-UCS2-H",
                                            BaseFont.NOT_EMBEDDED);
 
            Font headFont = new Font(bfChinese, 10, Font.NORMAL);
            Cell cell = new Cell(new Phrase(name, headFont));
	         //cell.setLeading(2.0f, 2.0f);
            
            cell.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell.setVerticalAlignment(Element.ALIGN_LEFT);
	         //cell.setBackgroundColor(new Color(255, 255, 255));
            cell.setBorderWidth(0.1f);
            cell.setBorderColor(Color.black);
           
            return cell;
   } catch (IOException exe) {
   }
   catch (DocumentException ex) {
   }
        return null;
   }
  
   /**
    * 按指定的格式显示打印时间  yyyy-mm-dd HH:MM:SS
    * @return
    */
   public static  String getPrintDate(){
		String dt="";
		try{
			SimpleDateFormat sdf=new SimpleDateFormat("yyyyMMddHHmmss");
			Calendar cal=Calendar.getInstance();
			dt=sdf.format(cal.getTime());
		}catch(Exception e){
			e.printStackTrace();
		}
   	String resultDate="";
   	if(dt==null||dt.equals("")||dt.length()!=14){
   		return "";
   	}
   	String year=dt.substring(0,4);
   	String month=dt.substring(4,6);
   	String day=dt.substring(6,8);
   	String hour=dt.substring(8,10);
   	String min=dt.substring(10,12);
   	String second=dt.substring(12,14);
   	resultDate=year+"-"+month+"-"+day+" "+hour+":"+min+":"+second;
   	return resultDate;
   }
}
