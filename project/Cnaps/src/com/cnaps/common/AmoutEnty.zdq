package com.cnaps.common;

import java.math.BigDecimal;
import java.text.DecimalFormat;

public class AmoutEnty {

	public static void main(String args[]) {
		System.out.println(formatAmount("0.00"));
		// System.out.println(formatAmount("2222222222222222.205"));
	}

	public static String getNotPoint(String amount) {
		if (amount == null || amount.trim().equals("")) {
			return "000";
		} else {
			String str[] = amount.split("[.]");
			return str[0] + str[1];
		}

	}

	/**
	 * 格式化金额
	 * 
	 * @param date
	 * @return
	 */
	public static String formatAmount(String date) {
		if (date == null || date.trim().equals("")) {
			return "0.00";
		}
		String temaDate=date;
		DecimalFormat df = new DecimalFormat("###,###,###,###,###,###,###.00");
		String str[] = date.split("[,]");
		if (str.length > 1) {
			return date;
		}
		String amount=df.format(new BigDecimal(date == null ? "0" : date));
		String strTemp[]=temaDate.split("[.]");
		String front="";
		if(strTemp!=null&&strTemp.length>1){
			front=strTemp[0];
			if(front!=null&&front.equals("0")){
				amount=front+amount;
			}
		}
		return amount;

	}

	/**
	 * 格式化金额
	 * 
	 * @param date
	 * @return
	 */
	public static String formatAmount(BigDecimal date) {
		DecimalFormat df = new DecimalFormat("###,###,###,###,###,###,###.00");
		return df.format(date);

	}

	/**
	 * 把格式化过的金额还原
	 * 
	 * @param s
	 * @return
	 */
	public static String getAmount(String s) {
		String amount = s;
		String str[] = amount.split("[,]");
		String ss = "";
		if (str.length > 1) {
			for (int i = 0; i < str.length; i++) {
				ss += str[i];
			}
		} else {
			ss = amount;
		}
		return ss;
	}

	public static String getSplit(long flag) {
		String s = "";
		String split = String.valueOf(flag);
		int length = split.length();
		if (length > 3) {
			s = "," + split.substring(length - 3);
			split = split.substring(0, length - 3);

			while (true) {
				length = split.length();
				if (length > 3) {
					s = "," + split.substring(length - 3) + s;
					split = split.substring(0, length - 3);
				} else {
					split = split + s;
					break;
				}
			}

		}
		// System.out.println("ssssssssssssssss="+split);
		return split;
	}
}
