package com.cnaps.common;

import java.awt.Color;
import java.io.OutputStream;
import java.text.DecimalFormat;
import java.util.Iterator;
import java.util.List;


import com.cnaps.hvps.persistence.transfer.ExchargeEntity;
import com.lowagie.text.Cell;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.HeaderFooter;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Rectangle;
import com.lowagie.text.Table;
import com.lowagie.text.pdf.PdfWriter;

/**
 * 凭证打印
 * @author dell
 *
 */
public class PingzhengPrint {

	/**
	 * 通用凭证打印
	 * @param os 输出流
	 * @param entity 查询书对象
	 * @param isdficode 发起清算行号
	 * @param printuser 打印人
	 * @param printtime 打印时间
	 */
	public static void buildCommPrint(OutputStream os, List list,String flag,String isdficode,String printuser,String printtime) {

		
		Document doc = new Document(PageSize.A4.rotate(), 5, 5, 36, 36);
		Rectangle pSize = new Rectangle(1280, 1024);

		doc.setPageSize(pSize);//设置纸张大小
		Document.compress = false;
		try {

			// 定义输出位置并把文档对象装入输出对象中
			PdfWriter writer = PdfWriter.getInstance(doc, os);
			writer.setViewerPreferences(PdfWriter.FitWindow);
			writer.setViewerPreferences(PdfWriter.CenterWindow);
			//设置头
			HeaderFooter header = new HeaderFooter(CommonMethod_Pdf.biaoti(
					getTitle(flag), 15), false);
			header.setBorder(Rectangle.NO_BORDER);
			header.setAlignment(Element.ALIGN_CENTER);
			doc.setHeader(header);
			
			doc.open();
			String end = "            会计：                                    主管：                                 打印：" + printuser+  "       打印时间："+ printtime;
			Paragraph p = new Paragraph(CommonMethod_Pdf.biaoti(end, 10));
			p.setAlignment(Element.ALIGN_CENTER);
			
//			Table table = getTable_wz_01(doc, list, p,isdficode , printtime);
			//获得要打印的表格对象
			Table table = getTable(flag,doc, list, p,isdficode , printtime);
			
			Paragraph p3 = CommonMethod_Pdf.biaoti("没有相关记录", 15);
			p3.setAlignment(Element.ALIGN_CENTER);
			if (table != null) {
				doc.add(table);
			} else {
				doc.add(p3);
			}
			//设置尾
			doc.add(p);
			doc.close();
		} catch (DocumentException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	/**
	 * 设置打印标题头
	 * @param flag 标识
	 * @return
	 */
	public static String getTitle(String flag){
		String result = "";
		if(flag.equals("11")){//大额
			result = "查询书凭证";
		}else if(flag.equals("12")){//大额
			result = "查复书凭证";
		}else if(flag.equals("13")){//大额
			result = "自由格式报文凭证";
		}else if(flag.equals("21")){//小额
			result = "查询书凭证";
		}else if(flag.equals("22")){//小额
			result = "查复书凭证";
		}else if(flag.equals("23")){//小额
			result = "自由格式报文凭证";
		}else if(flag.equals("HVPSHUIDIU")){
			result = "大额凭证";
		}
		return result;
	}
	/**
	 *  获得打印的表格对象
	 * @param flag 标识
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p 尾
	 * @param isdficode 发起清算行
	 * @param printtime
	 * @return
	 */
	public static Table getTable(String flag,Document doc, List list, Paragraph p,String isdficode,String printtime){
		Table table = null;
		if(list.size()<=0){
			return table;
		}
		
		if(flag.equals("11")){//大额查询书凭证
			Mbfequerymsg entity = (Mbfequerymsg)list.get(0);
			table = getTable_hvpsquery(doc, entity, p,isdficode , printtime);
		}else if(flag.equals("12")){//大额查复书凭证
			Mbfereplymsg entity = (Mbfereplymsg)list.get(0);
			table = getTable_hvpsrecheck(doc, entity, p,isdficode , printtime);
//		}else if(flag.equals("13")){//大额自由格式报文凭证
//			Mbfefrecmtbook entity = (Mbfefrecmtbook)list.get(0);
//			table = getTable_hvpsfreeform(doc, entity, p,isdficode , printtime);
		}else if(flag.equals("21")){//小额查询书凭证
			Bepsquerymsg entity = (Bepsquerymsg)list.get(0);
			table = getTable_bepsquery(doc, entity, p,isdficode , printtime);
		}else if(flag.equals("22")){//小额查复书凭证
			Bepsreplymsg entity = (Bepsreplymsg)list.get(0);
			table = getTable_bepsrecheck(doc, entity, p,isdficode , printtime);
		}else if(flag.equals("23")){//小额自由格式报文凭证
			Bepsfrecmtbook entity = (Bepsfrecmtbook)list.get(0);
			table = getTable_bepsfreeform(doc, entity, p,isdficode , printtime);
		}

		
		return table;
	}
	
	
	/**
	 * 大额来账汇兑凭证表格
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p  题尾
	 * @param isdficode 发起清算行行号
	 * @param dealdate 日期
	 * @return
	 */
	public  static Table getTable_hvpsrecv(Document doc, HVPSPingzheng entity,String isdficode,String printer,String dealdate) {
		try {
			if (entity == null ) {
				return null;
			}
			
			Table table = new Table(1);
			
			String header = "汇 兑 凭 证";
			Cell cellheader = CommonMethod_Pdf.createCell_header(header, 1);
			cellheader.setBorderColor(Color.white);
			cellheader.setHorizontalAlignment(Element.ALIGN_CENTER);
			cellheader.setVerticalAlignment(Element.ALIGN_LEFT);
			table.addCell(cellheader);
			
			String curdate = dealdate.substring(0,4)+"-"+dealdate.substring(4,6)+"-"+dealdate.substring(6,8)
							
							+"										第  "+entity.getPrintno()+"  次打印";

			table.setBorderWidthTop(0.0f);
			table.setBorderWidthLeft(0.0f);
			table.setBorderWidthRight(0.0f);
			table.setBorderWidthBottom(0.0f);
//			table.setBorderColorTop(Color.white);
//			table.setBorderColorBottom(Color.white);
			table.setBorderColor(Color.black);
			table.setPadding(1);
			table.setAutoFillEmptyCells(true);
			table.setWidths(new float[] { 50f});
			
			table.addCell(CommonMethod_Pdf.createCell_cell("报文种类: "+StringUtils.nullToString(entity.getCmtno()
					+"       交易种类: HVPS    贷记      业务种类: "+entity.getOprttype()+"        支付交易序号: "
					+StringUtils.nullToString(entity.getTxssno()))));
			
			table.addCell(CommonMethod_Pdf.createCell_cell("发起行行号: "+StringUtils.nullToString(entity.getOdficode())+"          汇款人开户行行号: "+
					StringUtils.nullToString(entity.getPayeropenaccbkcd())+"         委托日期: "+entity.getSendtime()));
			table.addCell(CommonMethod_Pdf.createCell_cell("发起行名称: "+entity.getOdficode()));
			table.addCell(CommonMethod_Pdf.createCell_cell("汇款人账号: "+StringUtils.nullToString(entity.getPayeracc())));
			table.addCell(CommonMethod_Pdf.createCell_cell("汇款人名称: "+StringUtils.nullToString(entity.getPayername())));
			table.addCell(CommonMethod_Pdf.createCell_cell("汇款人地址: "+StringUtils.nullToString(entity.getPayeraddr())));
			table.addCell(CommonMethod_Pdf.createCell_cell("接收行行号: "+StringUtils.nullToString(entity.getRdficode())+"          收款人开户行行号: "+
					StringUtils.nullToString(entity.getRdficode())+"         收报日期: "+entity.getRectime()));
			table.addCell(CommonMethod_Pdf.createCell_cell("收款人账号: "+StringUtils.nullToString(entity.getRecipientacc())));
			table.addCell(CommonMethod_Pdf.createCell_cell("收款人名称: "+StringUtils.nullToString(entity.getRecipientname())));
			table.addCell(CommonMethod_Pdf.createCell_cell("收款人地址: "+StringUtils.nullToString(entity.getRecipientaddr())));
			table.addCell(CommonMethod_Pdf.createCell_cell("              "));
			table.addCell(CommonMethod_Pdf.createCell_cell("                "));
			String amount = "";
			if(entity.getAmount()!=null&&(!entity.getAmount().equals(""))){
				amount = PingzhengPrint.formatAmount(Double.parseDouble(entity.getAmount()));
			}
			table.addCell(CommonMethod_Pdf.createCell_cell("货币符号、金额: "+amount));
			table.addCell(CommonMethod_Pdf.createCell_cell("            "));
			table.addCell(CommonMethod_Pdf.createCell_cell("            "));
			table.addCell(CommonMethod_Pdf.createCell_cell("附言: "+StringUtils.nullToString(entity.getStrinfo())));
			table.addCell(CommonMethod_Pdf.createCell_cell("   "));
			table.addCell(CommonMethod_Pdf.createCell_cell("    贷:"));
			table.addCell(CommonMethod_Pdf.createCell_cell("    借:"));
			
			table.addCell(CommonMethod_Pdf.createCell_cell("流水号: "+StringUtils.nullToString(entity.getFlowno())+""));
			table.addCell(CommonMethod_Pdf.createCell_cell("打印时间: "+curdate));
			table.addCell(CommonMethod_Pdf.createCell_cell("打印: "+printer));
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 大额来账汇兑凭证表格
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p  题尾
	 * @param isdficode 发起清算行行号
	 * @param dealdate 日期
	 * @return
	 */
	public  static Table getTable_hvpsrecvpd(Document doc, List list,int page,String isdficode,String printer,String dealdate) {
		try {
			if (list.size() <= 0 ) {
				return null;
			}
			
			Table table = new Table(1);
			int i=0;
			for(Iterator iterator = list.iterator();iterator.hasNext();){
				
				if(i!=0 && i % page==0){
					doc.add(table);
					doc.newPage();
					table = new Table(1);
				}
				i++;
				HVPSPingzheng entity = (HVPSPingzheng)iterator.next(); 
				String header = "汇 兑 凭 证";
				Cell cellheader = CommonMethod_Pdf.createCell_header(header, 1);
				cellheader.setBorderColor(Color.white);
				cellheader.setHorizontalAlignment(Element.ALIGN_CENTER);
				cellheader.setVerticalAlignment(Element.ALIGN_LEFT);
				table.addCell(cellheader);
				
				String curdate = dealdate.substring(0,4)+"-"+dealdate.substring(4,6)+"-"+dealdate.substring(6,8)
								
								+"										第  "+entity.getPrintno()+"  次打印";

				table.setBorderWidthTop(0.0f);
				table.setBorderWidthLeft(0.0f);
				table.setBorderWidthRight(0.0f);
				table.setBorderWidthBottom(0.0f);
//				table.setBorderColorTop(Color.white);
//				table.setBorderColorBottom(Color.white);
				table.setBorderColor(Color.black);
				table.setPadding(1);
				table.setAutoFillEmptyCells(true);
				table.setWidths(new float[] { 50f});
				
				table.addCell(CommonMethod_Pdf.createCell_cell("报文种类: "+StringUtils.nullToString(entity.getCmtno()
						+"       交易种类: HVPS    贷记      业务种类: "+entity.getOprttype()+"        支付交易序号: "
						+StringUtils.nullToString(entity.getTxssno()))));
				
				table.addCell(CommonMethod_Pdf.createCell_cell("发起行行号: "+StringUtils.nullToString(entity.getOdficode())+"          汇款人开户行行号: "+
						StringUtils.nullToString(entity.getPayeropenaccbkcd())+"         委托日期: "+entity.getSendtime()));
				table.addCell(CommonMethod_Pdf.createCell_cell("发起行名称: "+entity.getOdficode()));
				table.addCell(CommonMethod_Pdf.createCell_cell("汇款人账号: "+StringUtils.nullToString(entity.getPayeracc())));
				table.addCell(CommonMethod_Pdf.createCell_cell("汇款人名称: "+StringUtils.nullToString(entity.getPayername())));
				table.addCell(CommonMethod_Pdf.createCell_cell("汇款人地址: "+StringUtils.nullToString(entity.getPayeraddr())));
				table.addCell(CommonMethod_Pdf.createCell_cell("接收行行号: "+StringUtils.nullToString(entity.getRdficode())+"          收款人开户行行号: "+
						StringUtils.nullToString(entity.getRdficode())+"         收报日期: "+entity.getRectime()));
				table.addCell(CommonMethod_Pdf.createCell_cell("收款人账号: "+StringUtils.nullToString(entity.getRecipientacc())));
				table.addCell(CommonMethod_Pdf.createCell_cell("收款人名称: "+StringUtils.nullToString(entity.getRecipientname())));
				table.addCell(CommonMethod_Pdf.createCell_cell("收款人地址: "+StringUtils.nullToString(entity.getRecipientaddr())));
				table.addCell(CommonMethod_Pdf.createCell_cell("              "));
				table.addCell(CommonMethod_Pdf.createCell_cell("                "));
				String amount = "";
				if(entity.getAmount()!=null&&(!entity.getAmount().equals(""))){
					amount = PingzhengPrint.formatAmount(Double.parseDouble(entity.getAmount()));
				}
				table.addCell(CommonMethod_Pdf.createCell_cell("货币符号、金额: "+amount));
				table.addCell(CommonMethod_Pdf.createCell_cell("            "));
				table.addCell(CommonMethod_Pdf.createCell_cell("            "));
				table.addCell(CommonMethod_Pdf.createCell_cell("附言: "+StringUtils.nullToString(entity.getStrinfo())));
				table.addCell(CommonMethod_Pdf.createCell_cell("   "));
				table.addCell(CommonMethod_Pdf.createCell_cell("    贷:"));
				table.addCell(CommonMethod_Pdf.createCell_cell("    借:"));
				
				table.addCell(CommonMethod_Pdf.createCell_cell("流水号: "+StringUtils.nullToString(entity.getFlowno())+""));
				table.addCell(CommonMethod_Pdf.createCell_cell("打印时间: "+curdate));
				table.addCell(CommonMethod_Pdf.createCell_cell("打印: "+printer));
			}
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 大额查询书凭证表格
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p  题尾
	 * @param isdficode 发起清算行行号
	 * @param dealdate 日期
	 * @return
	 */
	public  static Table getTable_hvpsquery(Document doc, Mbfequerymsg entity, Paragraph p,String isdficode,String dealdate) {
		try {
			if (entity == null ) {
				return null;
			}
			
			Table table = new Table(7);
			String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
							+"										第  "+entity.getQuerymsgno()+"  号"
							+"										第  "+entity.getPrintno()+"  次打印";
			Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
			c2.setBorderColor(Color.white);
//			c2.setHorizontalAlignment(Element.ALIGN_CENTER);
//			c2.setVerticalAlignment(Element.ALIGN_LEFT);
			
			table.addCell(c2);
			
			table.setBorderWidthTop(0.0f);
			table.setBorderWidthLeft(0.0f);
			table.setBorderWidthRight(0.0f);
			table.setBorderWidthBottom(0.0f);
//			table.setBorderColorTop(Color.white);
//			table.setBorderColorBottom(Color.white);
			table.setBorderColor(Color.black);
			table.setPadding(2);
			table.setAutoFillEmptyCells(true);
			table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
			table.addCell(CommonMethod_Pdf.createCell_hb("查询行行号",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getQuerybkcode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查复行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplybkcode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查询日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getQuerydate()));
			table.addCell(CommonMethod_Pdf.createCell_hb("交易内容",3,"v"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原发报日期"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigconsigndate(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原支付交易序号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigtxssno(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原发起行行号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigodficode(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原交易种类"));
			if(entity.getOrigtxtype()!=null&&entity.getOrigtxtype().equals("1")){
				table.addCell(CommonMethod_Pdf.createCell_hb("1.大额",2,"h"));
			}else{
				table.addCell(CommonMethod_Pdf.createCell_hb("  ",2,"h"));
			}
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原接收行行号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigrdficode(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原清算金额"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigamount(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查询内容"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getQuerycontent(),6,"h"));
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 大额查复书凭证表格
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p  题尾
	 * @param isdficode 发起清算行行号
	 * @param dealdate 日期
	 * @return
	 */
	public  static Table getTable_hvpsrecheck(Document doc, Mbfereplymsg entity, Paragraph p,String isdficode,String dealdate) {
		try {
			if (entity == null ) {
				return null;
			}
			
			Table table = new Table(7);
			String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
							+"										第  "+entity.getRplymsgno()+"  号"
							+"										第  "+entity.getPrintno()+"  次打印";
			Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
			c2.setBorderColor(Color.white);
//			c2.setHorizontalAlignment(Element.ALIGN_CENTER);
//			c2.setVerticalAlignment(Element.ALIGN_LEFT);
			
			table.addCell(c2);
			
			table.setBorderWidthTop(0.0f);
			table.setBorderWidthLeft(0.0f);
			table.setBorderWidthRight(0.0f);
			table.setBorderWidthBottom(0.0f);
//			table.setBorderColorTop(Color.white);
//			table.setBorderColorBottom(Color.white);
			table.setBorderColor(Color.black);
			table.setPadding(2);
			table.setAutoFillEmptyCells(true);
			table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
			table.addCell(CommonMethod_Pdf.createCell_hb("查复行行号",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplybkcode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查询行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerybkcode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查复日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplydate()));
			table.addCell(CommonMethod_Pdf.createCell_hb("原查询书号",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerymsgno()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原查询日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerydate()));
			table.addCell(CommonMethod_Pdf.createCell_hb("     ",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_hb("交易内容",3,"v"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原发报日期"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigconsigndate(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原支付交易序号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigtxssno(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原发起行行号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigodficode(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原交易种类"));
			if(entity.getOrigtxtype()!=null&&entity.getOrigtxtype().equals("1")){
				table.addCell(CommonMethod_Pdf.createCell_hb("1.大额",2,"h"));
			}else{
				table.addCell(CommonMethod_Pdf.createCell_hb("  ",2,"h"));
			}
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原接收行行号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigrdficode(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原清算金额"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigamount(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查复内容"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getRplycontent(),6,"h"));
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 大额自由格式书凭证表格
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p  题尾
	 * @param isdficode 发起清算行行号
	 * @param dealdate 日期
	 * @return
	 */
	public  static Table getTable_hvpsfreeform(Document doc, Mbfefrecmtbook entity, Paragraph p,String isdficode,String dealdate) {
		try {
			if (entity == null ) {
				return null;
			}
			
			Table table = new Table(7);
			String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
							+"										第  "+entity.getFrebookno()+"  号"
							+"										第  "+entity.getPrintno()+"  次打印";
			Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
			c2.setBorderColor(Color.white);
//			c2.setHorizontalAlignment(Element.ALIGN_CENTER);
//			c2.setVerticalAlignment(Element.ALIGN_LEFT);
			
			table.addCell(c2);
			
			table.setBorderWidthTop(0.0f);
			table.setBorderWidthLeft(0.0f);
			table.setBorderWidthRight(0.0f);
			table.setBorderWidthBottom(0.0f);
//			table.setBorderColorTop(Color.white);
//			table.setBorderColorBottom(Color.white);
			table.setBorderColor(Color.black);
			table.setPadding(2);
			table.setAutoFillEmptyCells(true);
			table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
			table.addCell(CommonMethod_Pdf.createCell_hb("发起行行号",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOdficode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("接收行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRdficode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("发报日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getConsigndate()));
			table.addCell(CommonMethod_Pdf.createCell_hb("发报中心",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOdficenter()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("收报中心"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRdficenter()));
			table.addCell(CommonMethod_Pdf.createCell_hb("     ",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("信息内容"));
			
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getQuerycntt(),6,"h"));
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 小额查询书凭证表格
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p  题尾
	 * @param isdficode 发起清算行行号
	 * @param dealdate 日期
	 * @return
	 */
	public  static Table getTable_bepsquery(Document doc, Bepsquerymsg entity, Paragraph p,String isdficode,String dealdate) {
		try {
			if (entity == null ) {
				return null;
			}
			
			Table table = new Table(7);
			String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
							+"										第  "+entity.getQuerymsgno()+"  号"
							+"										第  "+entity.getPrintno()+"  次打印";
			Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
			c2.setBorderColor(Color.white);
//			c2.setHorizontalAlignment(Element.ALIGN_CENTER);
//			c2.setVerticalAlignment(Element.ALIGN_LEFT);
			
			table.addCell(c2);
			
			table.setBorderWidthTop(0.0f);
			table.setBorderWidthLeft(0.0f);
			table.setBorderWidthRight(0.0f);
			table.setBorderWidthBottom(0.0f);
//			table.setBorderColorTop(Color.white);
//			table.setBorderColorBottom(Color.white);
			table.setBorderColor(Color.black);
			table.setPadding(2);
			table.setAutoFillEmptyCells(true);
			table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
			table.addCell(CommonMethod_Pdf.createCell_hb("查询行行号",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getQuerybkcode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查复行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplybkcode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查询日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getQuerydate()));
			table.addCell(CommonMethod_Pdf.createCell_hb("交易内容",3,"v"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原发报日期"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigconsigndate(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原支付交易序号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigtxssno(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原发起行行号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigodficode(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原交易种类"));
			if(entity.getOrigtxtype()!=null&&entity.getOrigtxtype().equals("2")){
				table.addCell(CommonMethod_Pdf.createCell_hb("2.小额",2,"h"));
			}else{
				table.addCell(CommonMethod_Pdf.createCell_hb("  ",2,"h"));
			}
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原接收行行号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigrdficode(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原清算金额"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigamount(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查询内容"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getQuerycontent(),6,"h"));
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 小额查复书凭证表格
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p  题尾
	 * @param isdficode 发起清算行行号
	 * @param dealdate 日期
	 * @return
	 */
	public  static Table getTable_bepsrecheck(Document doc, Bepsreplymsg entity, Paragraph p,String isdficode,String dealdate) {
		try {
			if (entity == null ) {
				return null;
			}
			
			Table table = new Table(7);
			String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
							+"										第  "+entity.getRplymsgno()+"  号"
							+"										第  "+entity.getPirntno()+"  次打印";
			Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
			c2.setBorderColor(Color.white);
//			c2.setHorizontalAlignment(Element.ALIGN_CENTER);
//			c2.setVerticalAlignment(Element.ALIGN_LEFT);
			
			table.addCell(c2);
			
			table.setBorderWidthTop(0.0f);
			table.setBorderWidthLeft(0.0f);
			table.setBorderWidthRight(0.0f);
			table.setBorderWidthBottom(0.0f);
//			table.setBorderColorTop(Color.white);
//			table.setBorderColorBottom(Color.white);
			table.setBorderColor(Color.black);
			table.setPadding(2);
			table.setAutoFillEmptyCells(true);
			table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
			table.addCell(CommonMethod_Pdf.createCell_hb("查复行行号",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplybkcode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查询行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerybkcode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查复日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplydate()));
			table.addCell(CommonMethod_Pdf.createCell_hb("原查询书号",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerymsgno()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原查询日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerydate()));
			table.addCell(CommonMethod_Pdf.createCell_hb("     ",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_hb("交易内容",3,"v"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原发报日期"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigconsigndate(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原支付交易序号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigtxssno(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原发起行行号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigodficode(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原交易种类"));
			if(entity.getOrigtxtype()!=null&&entity.getOrigtxtype().equals("2")){
				table.addCell(CommonMethod_Pdf.createCell_hb("2.小额",2,"h"));
			}else{
				table.addCell(CommonMethod_Pdf.createCell_hb("  ",2,"h"));
			}
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原接收行行号"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigrdficode(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("原清算金额"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigamount(),2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("查复内容"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getRplycontent(),6,"h"));
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	/**
	 * 小额自由格式书凭证表格
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p  题尾
	 * @param isdficode 发起清算行行号
	 * @param dealdate 日期
	 * @return
	 */
	public  static Table getTable_bepsfreeform(Document doc, Bepsfrecmtbook entity, Paragraph p,String isdficode,String dealdate) {
		try {
			if (entity == null ) {
				return null;
			}
			
			Table table = new Table(7);
			String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
							+"										第  "+entity.getFrebookno()+"  号"
							+"										第  "+entity.getPrintno()+"  次打印";
			Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
			c2.setBorderColor(Color.white);
//			c2.setHorizontalAlignment(Element.ALIGN_CENTER);
//			c2.setVerticalAlignment(Element.ALIGN_LEFT);
			
			table.addCell(c2);
			
			table.setBorderWidthTop(0.0f);
			table.setBorderWidthLeft(0.0f);
			table.setBorderWidthRight(0.0f);
			table.setBorderWidthBottom(0.0f);
//			table.setBorderColorTop(Color.white);
//			table.setBorderColorBottom(Color.white);
			table.setBorderColor(Color.black);
			table.setPadding(2);
			table.setAutoFillEmptyCells(true);
			table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
			table.addCell(CommonMethod_Pdf.createCell_hb("发起行行号",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOdficode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("接收行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRdficode()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("发报日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getConsigndate()));
			table.addCell(CommonMethod_Pdf.createCell_hb("发报中心",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOdficenter()));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("收报中心"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRdficenter()));
			table.addCell(CommonMethod_Pdf.createCell_hb("     ",2,"h"));
			table.addCell(CommonMethod_Pdf.createCell_cell_b("信息内容"));
			table.addCell(CommonMethod_Pdf.createCell_hb(entity.getQuerycntt(),6,"h"));
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	
	
	/**
	 * 凭证批量打印表格
	 * @param flag 批量打印标识
	 * @param doc 文档对象
	 * @param list 打印列表
	 * @param isdficode 发起清算行号
	 * @param printuser 打印人
	 * @param printtime 打印时间
	 * @return 批量打印表格对象
	 */
	public static Table getTablePL(String flag,Document doc, List list,
			String isdficode,String printuser,String printtime,String direction){
		Table table = null;
		if(list.size()<=0){
			return table;
		}
		if(flag.equals("11pida")){//大额查询书批量打印
			table  = getTable_hvpsquerypd(doc,list,5,isdficode ,printuser, printtime);
		}else if(flag.equals("12pida")){//大额查复书批量打印
			table  = getTable_hvpsrecheckpd(doc,list,4,isdficode ,printuser, printtime);
		}else if(flag.equals("13pida")){//大额自由格式书凭证批量打印
			table  = getTable_hvpsfreebookpd(doc,list,5,isdficode ,printuser, printtime);
		}else if(flag.equals("HVPSHUIDIU")){//大额汇兑凭证打印
			HVPSPingzheng entity = convertHVPSPZW((ExchargeEntity)list.get(0),direction);
			table = getTable_hvpsrecv(doc, entity,isdficode ,printuser, printtime);
		}else if(flag.equals("HUIDIUPIDA")){//大额往账凭证批量打印
			table = getTable_hvpsrecvpd(doc, list,2,isdficode ,printuser, printtime);
		}else if(flag.equals("21pida")){//小额查询书批量打印
			table  = getTable_bepsquerypd(doc,list,5,isdficode ,printuser, printtime);
		}else if(flag.equals("22pida")){//小额查询书批量打印
			table  = getTable_bepsrecheckpd(doc,list,5,isdficode ,printuser, printtime);
		}else if(flag.equals("23pida")){//小额自由格式书批量打印
			table  = getTable_bepsfreebookpd(doc,list,5,isdficode ,printuser, printtime);
		}else if(flag.equals("32")){//小额来账凭证打印
			Bepsgberecvlist entity = (Bepsgberecvlist)list.get(0); 
			table = getTable_bepsrecv(doc, entity,isdficode ,printuser, printtime);
		}else if(flag.equals("32pida")){//小额来账凭证打印
			table = getTable_bepsrecvpd(doc, list,2,isdficode ,printuser, printtime);
		}
		return table;
	}
	
	
	/**
	 * 凭证打印通用入口
	 * @param os 输出流
	 * @param list 打印列表
	 * @param flag 打印类型标识
	 * @param isdficode 发起清算行行号
	 * @param printuser 打印人
	 * @param printtime 打印时间
	 */
	public static void buildCommPLPrint(OutputStream os, List list,String flag,String isdficode,String printuser,String printtime,String direction) {

		
		Document doc = new Document(PageSize.A4.rotate(), 5, 5, 36, 36);
		Rectangle pSize = new Rectangle(1280, 1024);

		doc.setPageSize(pSize);//设置纸张大小
		Document.compress = false;
		try {

			// 定义输出位置并把文档对象装入输出对象中
			PdfWriter writer = PdfWriter.getInstance(doc, os);
			writer.setViewerPreferences(PdfWriter.FitWindow);
			writer.setViewerPreferences(PdfWriter.CenterWindow);
			doc.open();
			Table table = getTablePL(flag,doc, list,isdficode ,printuser, printtime,direction);
			
			Paragraph p3 = CommonMethod_Pdf.biaoti("没有相关记录", 15);
			p3.setAlignment(Element.ALIGN_CENTER);
			if (table != null) {
				doc.add(table);
			} else {
				doc.add(p3);
			}
			
			doc.close();
		} catch (DocumentException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}
	
	/**
	 * 大额查询书凭证批量打印
	 * @param doc 文档对象
	 * @param flag 凭证标识
	 * @param list 大额查询书列表
	 * @param page 每页显示的条数
	 * @param isdficode 发起清算行号
	 * @param printuser 打印人 
	 * @param dealdate 打印时间
	 * @return
	 */
	public  static Table getTable_hvpsquerypd(Document doc, List list,int page,
				String isdficode,String printuser,String dealdate) {
		try {
			if (list.size()<=0 ) {
				return null;
			}
			Table table = new Table(7);
			int i=0;
			for(Iterator iterator = list.iterator();iterator.hasNext();){
				
				if(i!=0 && i % page==0){
					doc.add(table);
					doc.newPage();
					table = new Table(7);
				}
				i++;
				Mbfequerymsg entity = (Mbfequerymsg)iterator.next();
				
				String header = "查询书凭证";
				Cell cellheader = CommonMethod_Pdf.createCell_header(header, 7);
				cellheader.setBorderColor(Color.white);
				cellheader.setHorizontalAlignment(Element.ALIGN_CENTER);
				cellheader.setVerticalAlignment(Element.ALIGN_LEFT);
				table.addCell(cellheader);
				
				String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
								+"										第  "+entity.getQuerymsgno()+"  号"
								+"										第  "+entity.getPrintno()+"  次打印";
				Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
				c2.setBorderColor(Color.white);
				table.addCell(c2);
				
				table.setBorderWidthTop(0.0f);
				table.setBorderWidthLeft(0.0f);
				table.setBorderWidthRight(0.0f);
				table.setBorderWidthBottom(0.0f);
				table.setBorderColor(Color.black);
				table.setPadding(2);
				table.setAutoFillEmptyCells(true);
				
				table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
				table.addCell(CommonMethod_Pdf.createCell_hb("查询行行号",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getQuerybkcode()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查复行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplybkcode()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查询日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getQuerydate()));
				table.addCell(CommonMethod_Pdf.createCell_hb("交易内容",3,"v"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原发报日期"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigconsigndate(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原支付交易序号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigtxssno(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原发起行行号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigodficode(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原交易种类"));
				if(entity.getOrigtxtype()!=null&&entity.getOrigtxtype().equals("1")){
					table.addCell(CommonMethod_Pdf.createCell_hb("1.大额",2,"h"));
				}else{
					table.addCell(CommonMethod_Pdf.createCell_hb("  ",2,"h"));
				}
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原接收行行号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigrdficode(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原清算金额"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigamount(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查询内容"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getQuerycontent(),6,"h"));
				String end = "            会计：                                    主管：                                 打印：" + printuser+  "       打印时间："+ dealdate;
				Cell cellend = CommonMethod_Pdf.createCell_hb_l(end, 7);
				cellend.setBorderColor(Color.white);
				table.addCell(cellend);
			}
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 大额查复书凭证批量打印
	 * @param doc 文档对象
	 * @param flag 凭证标识
	 * @param list 大额查询书列表
	 * @param page 每页显示的条数
	 * @param isdficode 发起清算行号
	 * @param printuser 打印人 
	 * @param dealdate 打印时间
	 * @return
	 */
	public  static Table getTable_hvpsrecheckpd(Document doc, List list,int page,
				String isdficode,String printuser,String dealdate) {
		try {
			if (list.size()<=0 ) {
				return null;
			}
			Table table = new Table(7);
			int i=0;
			for(Iterator iterator = list.iterator();iterator.hasNext();){
				
				if(i!=0 && i % page==0){
					doc.add(table);
					doc.newPage();
					table = new Table(7);
				}
				i++;
				Mbfereplymsg entity = (Mbfereplymsg)iterator.next();
				
				String header = "查复书凭证";
				Cell cellheader = CommonMethod_Pdf.createCell_header(header, 7);
				cellheader.setBorderColor(Color.white);
				cellheader.setHorizontalAlignment(Element.ALIGN_CENTER);
				cellheader.setVerticalAlignment(Element.ALIGN_LEFT);
				table.addCell(cellheader);
				
				String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
								+"										第  "+entity.getRplymsgno()+"  号"
								+"										第  "+entity.getPrintno()+"  次打印";
				Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
				c2.setBorderColor(Color.white);
				table.addCell(c2);
				
				table.setBorderWidthTop(0.0f);
				table.setBorderWidthLeft(0.0f);
				table.setBorderWidthRight(0.0f);
				table.setBorderWidthBottom(0.0f);
				table.setBorderColor(Color.black);
				table.setPadding(2);
				table.setAutoFillEmptyCells(true);
				
				table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
				table.addCell(CommonMethod_Pdf.createCell_hb("查复行行号",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplybkcode()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查询行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerybkcode()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查复日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplydate()));
				table.addCell(CommonMethod_Pdf.createCell_hb("原查询书号",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerymsgno()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原查询日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerydate()));
				table.addCell(CommonMethod_Pdf.createCell_hb("     ",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_hb("交易内容",3,"v"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原发报日期"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigconsigndate(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原支付交易序号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigtxssno(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原发起行行号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigodficode(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原交易种类"));
				if(entity.getOrigtxtype()!=null&&entity.getOrigtxtype().equals("1")){
					table.addCell(CommonMethod_Pdf.createCell_hb("1.大额",2,"h"));
				}else{
					table.addCell(CommonMethod_Pdf.createCell_hb("  ",2,"h"));
				}
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原接收行行号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigrdficode(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原清算金额"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigamount(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查复内容"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getRplycontent(),6,"h"));
				
				String end = "            会计：                                    主管：                                 打印：" + printuser+  "       打印时间："+ dealdate;
				Cell cellend = CommonMethod_Pdf.createCell_hb_l(end, 7);
				cellend.setBorderColor(Color.white);
				table.addCell(cellend);
			}
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 大额自由格式书凭证批量打印
	 * @param doc 文档对象
	 * @param flag 凭证标识
	 * @param list 大额查询书列表
	 * @param page 每页显示的条数
	 * @param isdficode 发起清算行号
	 * @param printuser 打印人 
	 * @param dealdate 打印时间
	 * @return
	 */
	public  static Table getTable_hvpsfreebookpd(Document doc, List list,int page,
				String isdficode,String printuser,String dealdate) {
		try {
			if (list.size()<=0 ) {
				return null;
			}
			Table table = new Table(7);
			int i=0;
			for(Iterator iterator = list.iterator();iterator.hasNext();){
				
				if(i!=0 && i % page==0){
					doc.add(table);
					doc.newPage();
					table = new Table(7);
				}
				i++;
				Mbfefrecmtbook entity = (Mbfefrecmtbook)iterator.next();
				
				String header = "大额自由格式书凭证";
				Cell cellheader = CommonMethod_Pdf.createCell_header(header, 7);
				cellheader.setBorderColor(Color.white);
				cellheader.setHorizontalAlignment(Element.ALIGN_CENTER);
				cellheader.setVerticalAlignment(Element.ALIGN_LEFT);
				table.addCell(cellheader);
				
				String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
								+"										第  "+entity.getFrebookno()+"  号"
								+"										第  "+entity.getPrintno()+"  次打印";
				Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
				c2.setBorderColor(Color.white);
				table.addCell(c2);
				
				table.setBorderWidthTop(0.0f);
				table.setBorderWidthLeft(0.0f);
				table.setBorderWidthRight(0.0f);
				table.setBorderWidthBottom(0.0f);
				table.setBorderColor(Color.black);
				table.setPadding(2);
				table.setAutoFillEmptyCells(true);
				
				table.setWidths(new float[] { 0.03f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
				table.addCell(CommonMethod_Pdf.createCell_hb("发起行行号",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(StringUtils.nullToString(entity.getOdficode())));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("接收行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(StringUtils.nullToString(entity.getRdficode())));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("发报日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getConsigndate()));
				table.addCell(CommonMethod_Pdf.createCell_hb("发报中心",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOdficenter()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("收报中心"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRdficenter()));
				table.addCell(CommonMethod_Pdf.createCell_hb("     ",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("信息内容"));
				
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getQuerycntt(),6,"h"));
				
				String end = "            会计：                                    主管：                                 打印：" + printuser+  "       打印时间："+ dealdate;
				Cell cellend = CommonMethod_Pdf.createCell_hb_l(end, 7);
				cellend.setBorderColor(Color.white);
				table.addCell(cellend);
			}
			
			return table;
			
			
			
			
			
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 小额查询书凭证批量打印
	 * @param doc 文档对象
	 * @param flag 凭证标识
	 * @param list 大额查询书列表
	 * @param page 每页显示的条数
	 * @param isdficode 发起清算行号
	 * @param printuser 打印人 
	 * @param dealdate 打印时间
	 * @return
	 */
	public  static Table getTable_bepsquerypd(Document doc, List list,int page,
				String isdficode,String printuser,String dealdate) {
		try {
			if (list.size()<=0 ) {
				return null;
			}
			Table table = new Table(7);
			int i=0;
			for(Iterator iterator = list.iterator();iterator.hasNext();){
				
				if(i!=0 && i % page==0){
					doc.add(table);
					doc.newPage();
					table = new Table(7);
				}
				i++;
				Bepsquerymsg entity = (Bepsquerymsg)iterator.next();
				
				String header = "查询书凭证";
				Cell cellheader = CommonMethod_Pdf.createCell_header(header, 7);
				cellheader.setBorderColor(Color.white);
				cellheader.setHorizontalAlignment(Element.ALIGN_CENTER);
				cellheader.setVerticalAlignment(Element.ALIGN_LEFT);
				table.addCell(cellheader);
				
				String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
								+"										第  "+entity.getQuerymsgno()+"  号"
								+"										第  "+entity.getPrintno()+"  次打印";
				Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
				c2.setBorderColor(Color.white);
				table.addCell(c2);
				
				table.setBorderWidthTop(0.0f);
				table.setBorderWidthLeft(0.0f);
				table.setBorderWidthRight(0.0f);
				table.setBorderWidthBottom(0.0f);
				table.setBorderColor(Color.black);
				table.setPadding(2);
				table.setAutoFillEmptyCells(true);
				
				table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
				table.addCell(CommonMethod_Pdf.createCell_hb("查询行行号",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getQuerybkcode()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查复行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplybkcode()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查询日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getQuerydate()));
				table.addCell(CommonMethod_Pdf.createCell_hb("交易内容",3,"v"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原发报日期"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigconsigndate(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原支付交易序号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigtxssno(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原发起行行号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigodficode(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原交易种类"));
				if(entity.getOrigtxtype()!=null&&entity.getOrigtxtype().equals("2")){
					table.addCell(CommonMethod_Pdf.createCell_hb("2.小额",2,"h"));
				}else{
					table.addCell(CommonMethod_Pdf.createCell_hb("  ",2,"h"));
				}
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原接收行行号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigrdficode(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原清算金额"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigamount(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查询内容"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getQuerycontent(),6,"h"));
				
				String end = "            会计：                                    主管：                                 打印：" + printuser+  "       打印时间："+ dealdate;
				Cell cellend = CommonMethod_Pdf.createCell_hb_l(end, 7);
				cellend.setBorderColor(Color.white);
				table.addCell(cellend);
			}
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 小额查复书凭证批量打印
	 * @param doc 文档对象
	 * @param flag 凭证标识
	 * @param list 大额查询书列表
	 * @param page 每页显示的条数
	 * @param isdficode 发起清算行号
	 * @param printuser 打印人 
	 * @param dealdate 打印时间
	 * @return
	 */
	public  static Table getTable_bepsrecheckpd(Document doc, List list,int page,
				String isdficode,String printuser,String dealdate) {
		try {
			if (list.size()<=0 ) {
				return null;
			}
			Table table = new Table(7);
			int i=0;
			for(Iterator iterator = list.iterator();iterator.hasNext();){
				
				if(i!=0 && i % page==0){
					doc.add(table);
					doc.newPage();
					table = new Table(7);
				}
				i++;
				Bepsreplymsg entity = (Bepsreplymsg)iterator.next();
				
				String header = "查复书凭证";
				Cell cellheader = CommonMethod_Pdf.createCell_header(header, 7);
				cellheader.setBorderColor(Color.white);
				cellheader.setHorizontalAlignment(Element.ALIGN_CENTER);
				cellheader.setVerticalAlignment(Element.ALIGN_LEFT);
				table.addCell(cellheader);
				
				String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
								+"										第  "+entity.getRplymsgno()+"  号"
								+"										第  "+entity.getPirntno()+"  次打印";
				Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
				c2.setBorderColor(Color.white);
				table.addCell(c2);
				
				table.setBorderWidthTop(0.0f);
				table.setBorderWidthLeft(0.0f);
				table.setBorderWidthRight(0.0f);
				table.setBorderWidthBottom(0.0f);
				table.setBorderColor(Color.black);
				table.setPadding(2);
				table.setAutoFillEmptyCells(true);
				
				table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
				table.addCell(CommonMethod_Pdf.createCell_hb("查复行行号",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplybkcode()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查询行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerybkcode()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查复日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRplydate()));
				table.addCell(CommonMethod_Pdf.createCell_hb("原查询书号",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerymsgno()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原查询日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOrigquerydate()));
				table.addCell(CommonMethod_Pdf.createCell_hb("     ",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_hb("交易内容",3,"v"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原发报日期"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigconsigndate(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原支付交易序号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigtxssno(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原发起行行号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigodficode(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原交易种类"));
				if(entity.getOrigtxtype()!=null&&entity.getOrigtxtype().equals("2")){
					table.addCell(CommonMethod_Pdf.createCell_hb("2.小额",2,"h"));
				}else{
					table.addCell(CommonMethod_Pdf.createCell_hb("  ",2,"h"));
				}
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原接收行行号"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigrdficode(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("原清算金额"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getOrigamount(),2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("查复内容"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getRplycontent(),6,"h"));
				
				
				String end = "            会计：                                    主管：                                 打印：" + printuser+  "       打印时间："+ dealdate;
				Cell cellend = CommonMethod_Pdf.createCell_hb_l(end, 7);
				cellend.setBorderColor(Color.white);
				table.addCell(cellend);
			}
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 小额自由格式书凭证批量打印
	 * @param doc 文档对象
	 * @param flag 凭证标识
	 * @param list 大额查询书列表
	 * @param page 每页显示的条数
	 * @param isdficode 发起清算行号
	 * @param printuser 打印人 
	 * @param dealdate 打印时间
	 * @return
	 */
	public  static Table getTable_bepsfreebookpd(Document doc, List list,int page,
				String isdficode,String printuser,String dealdate) {
		try {
			if (list.size()<=0 ) {
				return null;
			}
			Table table = new Table(7);
			int i=0;
			for(Iterator iterator = list.iterator();iterator.hasNext();){
				
				if(i!=0 && i % page==0){
					doc.add(table);
					doc.newPage();
					table = new Table(7);
				}
				i++;
				Bepsfrecmtbook entity = (Bepsfrecmtbook)iterator.next();
				
				String header = "小额自由格式书凭证";
				Cell cellheader = CommonMethod_Pdf.createCell_header(header, 7);
				cellheader.setBorderColor(Color.white);
				cellheader.setHorizontalAlignment(Element.ALIGN_CENTER);
				cellheader.setVerticalAlignment(Element.ALIGN_LEFT);
				table.addCell(cellheader);
				
				String curdate = dealdate.substring(0,4)+"年"+dealdate.substring(4,6)+"月"+dealdate.substring(6,8)+"日"
								+"										第  "+entity.getFrebookno()+"  号"
								+"										第  "+entity.getPrintno()+"  次打印";
				Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
				c2.setBorderColor(Color.white);
				table.addCell(c2);
				
				table.setBorderWidthTop(0.0f);
				table.setBorderWidthLeft(0.0f);
				table.setBorderWidthRight(0.0f);
				table.setBorderWidthBottom(0.0f);
				table.setBorderColor(Color.black);
				table.setPadding(2);
				table.setAutoFillEmptyCells(true);
				
				table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.15f,0.15f, 0.13f, 0.31f});
				table.addCell(CommonMethod_Pdf.createCell_hb("发起行行号",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(StringUtils.nullToString(entity.getOdficode())));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("接收行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(StringUtils.nullToString(entity.getRdficode())));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("发报日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getConsigndate()));
				table.addCell(CommonMethod_Pdf.createCell_hb("发报中心",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getOdficenter()));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("收报中心"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b(entity.getRdficenter()));
				table.addCell(CommonMethod_Pdf.createCell_hb("     ",2,"h"));
				table.addCell(CommonMethod_Pdf.createCell_cell_b("信息内容"));
				table.addCell(CommonMethod_Pdf.createCell_hb(entity.getQuerycntt(),6,"h"));
				
				
				String end = "            会计：                                    主管：                                 打印：" + printuser+  "       打印时间："+ dealdate;
				Cell cellend = CommonMethod_Pdf.createCell_hb_l(end, 7);
				cellend.setBorderColor(Color.white);
				table.addCell(cellend);
			}
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	

	/**
	 * 小额来账汇兑凭证表格
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p  题尾
	 * @param isdficode 发起清算行行号
	 * @param dealdate 日期
	 * @return
	 */
	public  static Table getTable_bepsrecv(Document doc, Bepsgberecvlist entity,String isdficode,String printer,String dealdate) {
		try {
			if (entity == null ) {
				return null;
			}
			
			Table table = new Table(6);
			
			String header = "汇兑凭证";
			Cell cellheader = CommonMethod_Pdf.createCell_header(header, 6);
			cellheader.setBorderColor(Color.white);
			cellheader.setHorizontalAlignment(Element.ALIGN_CENTER);
			cellheader.setVerticalAlignment(Element.ALIGN_LEFT);
			table.addCell(cellheader);
			
			String curdate = dealdate.substring(0,4)+"-"+dealdate.substring(4,6)+"-"+dealdate.substring(6,8);
//			Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
//			c2.setBorderColor(Color.white);
////			c2.setHorizontalAlignment(Element.ALIGN_CENTER);
////			c2.setVerticalAlignment(Element.ALIGN_LEFT);
//			
//			table.addCell(c2);
			
			table.setBorderWidthTop(0.0f);
			table.setBorderWidthLeft(0.0f);
			table.setBorderWidthRight(0.0f);
			table.setBorderWidthBottom(0.0f);
//			table.setBorderColorTop(Color.white);
//			table.setBorderColorBottom(Color.white);
			table.setBorderColor(Color.black);
			table.setPadding(2);
			table.setAutoFillEmptyCells(true);
			
			table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.16f, 0.16f, 0.16f});
			table.addCell(CommonMethod_Pdf.createCell_cell("批量包委托日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell(entity.getPkgconsigndate()));
			table.addCell(CommonMethod_Pdf.createCell_cell("批量包类型"));
			if(entity.getCmtno()!=null&&entity.getCmtno().equals("PKG001")){
				table.addCell(CommonMethod_Pdf.createCell_cell("普通贷记包"));
			}else{
				table.addCell(CommonMethod_Pdf.createCell_cell(""));
			}
			table.addCell(CommonMethod_Pdf.createCell_cell("批量包编号"));
			table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getPkgno())));
			
			table.addCell(CommonMethod_Pdf.createCell_cell("包发起清算行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getIsdficode())));
			table.addCell(CommonMethod_Pdf.createCell_cell("交易种类"));
			table.addCell(CommonMethod_Pdf.createCell_cell("BEPS          贷记"));
			table.addCell(CommonMethod_Pdf.createCell_cell("业务类型"));
			String oprtypeno="";
			if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("100")){
				oprtypeno = "汇兑";
			}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("101")){
				oprtypeno = "委托收款划回";
			}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("102")){
				oprtypeno = "托收承付划回";
			}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("103")){
				oprtypeno = "国库资金贷记划拨";
			}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("106")){
				oprtypeno = "其他贷记业务";
			}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("20001")){
				oprtypeno = "缴税";
			}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("20002")){
				oprtypeno = "非税收收入";
			}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("20003")){
				oprtypeno = "财政直接支付退回";
			}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("20004")){
				oprtypeno = "财政授权支付退回";
			}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("20005")){
				oprtypeno = "国库资金国债兑付贷记划拨";
			}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("30002")){
				oprtypeno = "缴费";
			}
			table.addCell(CommonMethod_Pdf.createCell_cell(oprtypeno));
			
			
			table.addCell(CommonMethod_Pdf.createCell_cell("支付交易序号"));
			table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getTxssno())));
			table.addCell(CommonMethod_Pdf.createCell_cell("业务种类"));
			String oprttype="";
			if(entity.getOprttype()!=null&&entity.getOprttype().equals("10")){
				oprttype = "现金汇款";
			}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("11")){
				oprttype = "普通汇兑";
			}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("12")){
				oprttype = "网银支付";
			}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("30")){
				oprttype = "外汇清算";
			}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("40")){
				oprttype = "资金调拨";
			}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("50")){
				oprttype = "国库汇款";
			}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("51")){
				oprttype = "国库同城交换净额清算";
			}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("99")){
				oprttype = "其他";
			}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("20004")){
				oprttype = "财政授权支付退回";
			}
			table.addCell(CommonMethod_Pdf.createCell_hb_l(oprttype,3));
			
			table.addCell(CommonMethod_Pdf.createCell_cell("发起行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getOdficode())));
			table.addCell(CommonMethod_Pdf.createCell_cell("付款人开户行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getPayeropenaccbkcode())));
			table.addCell(CommonMethod_Pdf.createCell_cell("委托日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell(entity.getConsigndate()));
			
			table.addCell(CommonMethod_Pdf.createCell_cell("发起行名称"));
			table.addCell(CommonMethod_Pdf.createCell_hb_l(entity.getOdficode(),5));
			table.addCell(CommonMethod_Pdf.createCell_cell("付款人账号"));
			table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getPayeracc()),5));
			table.addCell(CommonMethod_Pdf.createCell_cell("付款人名称"));
			table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getPayername()),5));
			table.addCell(CommonMethod_Pdf.createCell_cell("付款人地址"));
			table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getPayeraddr()),5));
			
			table.addCell(CommonMethod_Pdf.createCell_cell("接收行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getRdficode())));
			table.addCell(CommonMethod_Pdf.createCell_cell("收款人开户行行号"));
			table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getRdficode())));
			table.addCell(CommonMethod_Pdf.createCell_cell("收报日期"));
			table.addCell(CommonMethod_Pdf.createCell_cell(entity.getRectime()));
			
			table.addCell(CommonMethod_Pdf.createCell_cell("收款人账号"));
			table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getRecipientacc()),5));
			table.addCell(CommonMethod_Pdf.createCell_cell("收款人名称"));
			table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getRecipientname()),5));
			table.addCell(CommonMethod_Pdf.createCell_cell("收款人地址"));
			table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getRecipientaddr()),5));
			table.addCell(CommonMethod_Pdf.createCell_cell("货币符号、金额"));
			String amount = "";
			if(entity.getAmount()!=null&&(!entity.getAmount().equals(""))){
				amount = PingzhengPrint.formatAmount(Double.parseDouble(entity.getAmount()));
			}
			table.addCell(CommonMethod_Pdf.createCell_hb_l(amount,5));
			table.addCell(CommonMethod_Pdf.createCell_cell("附言"));
			table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getStrinfo()),5));
			table.addCell(CommonMethod_Pdf.createCell_cell("会计分录"));
			table.addCell(CommonMethod_Pdf.createCell_hb_l("借：存款中央银行款项",2));
			table.addCell(CommonMethod_Pdf.createCell_hb_l("密押：",3));
			table.addCell(CommonMethod_Pdf.createCell_cell(""));
			table.addCell(CommonMethod_Pdf.createCell_hb_l("贷：",5));
			
			table.addCell(CommonMethod_Pdf.createCell_cell("复核员："));
			table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getCheckuser())));
			table.addCell(CommonMethod_Pdf.createCell_cell("记账："));
			table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getPutuser())));
			table.addCell(CommonMethod_Pdf.createCell_cell("打印："));
			table.addCell(CommonMethod_Pdf.createCell_cell(printer));
			
			table.addCell(CommonMethod_Pdf.createCell_cell("流水号："));
			table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getFlowno())));
			table.addCell(CommonMethod_Pdf.createCell_cell("打印时间："));
			table.addCell(CommonMethod_Pdf.createCell_cell(curdate));
			table.addCell(CommonMethod_Pdf.createCell_hb_l("第  "+entity.getPrintno()+"   次打印",2));
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 小额来账汇兑凭证表格
	 * @param doc 文档对象
	 * @param list 清单列表
	 * @param p  题尾
	 * @param isdficode 发起清算行行号
	 * @param dealdate 日期
	 * @return
	 */
	public  static Table getTable_bepsrecvpd(Document doc, List list,int page,String isdficode,String printer,String dealdate) {
		try {
			if (list.size() <= 0 ) {
				return null;
			}
			
			Table table = new Table(6);
			int i=0;
			for(Iterator iterator = list.iterator();iterator.hasNext();){
				
				if(i!=0 && i % page==0){
					doc.add(table);
					doc.newPage();
					table = new Table(6);
				}
				i++;
				Bepsgberecvlist entity = (Bepsgberecvlist)iterator.next(); 
				String header = " 汇 兑 凭 证";
				Cell cellheader = CommonMethod_Pdf.createCell_header(header, 6);
				cellheader.setBorderColor(Color.white);
				cellheader.setHorizontalAlignment(Element.ALIGN_CENTER);
				cellheader.setVerticalAlignment(Element.ALIGN_LEFT);
				table.addCell(cellheader);
				
				
				String curdate = dealdate.substring(0,4)+"-"+dealdate.substring(4,6)+"-"+dealdate.substring(6,8);
//				Cell c2 = CommonMethod_Pdf.createCell_hb_l(curdate, 7);
//				c2.setBorderColor(Color.white);
////				c2.setHorizontalAlignment(Element.ALIGN_CENTER);
////				c2.setVerticalAlignment(Element.ALIGN_LEFT);
//				
//				table.addCell(c2);
				
				table.setBorderWidthTop(0.0f);
				table.setBorderWidthLeft(0.0f);
				table.setBorderWidthRight(0.0f);
				table.setBorderWidthBottom(0.0f);
//				table.setBorderColorTop(Color.white);
//				table.setBorderColorBottom(Color.white);
				table.setBorderColor(Color.black);
				table.setPadding(2);
				table.setAutoFillEmptyCells(true);
				
				table.setWidths(new float[] { 0.16f,0.16f, 0.16f, 0.16f, 0.16f, 0.16f});
				table.addCell(CommonMethod_Pdf.createCell_hb_l("",6));
				table.addCell(CommonMethod_Pdf.createCell_cell("批量包委托日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell(entity.getPkgconsigndate()));
				table.addCell(CommonMethod_Pdf.createCell_cell("批量包类型"));
				if(entity.getCmtno()!=null&&entity.getCmtno().equals("PKG001")){
					table.addCell(CommonMethod_Pdf.createCell_cell("普通贷记包"));
				}else{
					table.addCell(CommonMethod_Pdf.createCell_cell(""));
				}
				table.addCell(CommonMethod_Pdf.createCell_cell("批量包编号"));
				table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getPkgno())));
				
				table.addCell(CommonMethod_Pdf.createCell_cell("包发起清算行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getIsdficode())));
				table.addCell(CommonMethod_Pdf.createCell_cell("交易种类"));
				table.addCell(CommonMethod_Pdf.createCell_cell("BEPS          贷记"));
				table.addCell(CommonMethod_Pdf.createCell_cell("业务类型"));
				String oprtypeno="";
				if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("100")){
					oprtypeno = "汇兑";
				}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("101")){
					oprtypeno = "委托收款划回";
				}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("102")){
					oprtypeno = "托收承付划回";
				}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("103")){
					oprtypeno = "国库资金贷记划拨";
				}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("106")){
					oprtypeno = "其他贷记业务";
				}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("20001")){
					oprtypeno = "缴税";
				}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("20002")){
					oprtypeno = "非税收收入";
				}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("20003")){
					oprtypeno = "财政直接支付退回";
				}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("20004")){
					oprtypeno = "财政授权支付退回";
				}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("20005")){
					oprtypeno = "国库资金国债兑付贷记划拨";
				}else if(entity.getOprtypeno()!=null&&entity.getOprtypeno().equals("30002")){
					oprtypeno = "缴费";
				}
				table.addCell(CommonMethod_Pdf.createCell_cell(oprtypeno));
				
				
				table.addCell(CommonMethod_Pdf.createCell_cell("支付交易序号"));
				table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getTxssno())));
				table.addCell(CommonMethod_Pdf.createCell_cell("业务种类"));
				String oprttype="";
				if(entity.getOprttype()!=null&&entity.getOprttype().equals("10")){
					oprttype = "现金汇款";
				}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("11")){
					oprttype = "普通汇兑";
				}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("12")){
					oprttype = "网银支付";
				}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("30")){
					oprttype = "外汇清算";
				}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("40")){
					oprttype = "资金调拨";
				}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("50")){
					oprttype = "国库汇款";
				}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("51")){
					oprttype = "国库同城交换净额清算";
				}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("99")){
					oprttype = "其他";
				}else if(entity.getOprttype()!=null&&entity.getOprttype().equals("20004")){
					oprttype = "财政授权支付退回";
				}
				table.addCell(CommonMethod_Pdf.createCell_hb_l(oprttype,3));
				
				table.addCell(CommonMethod_Pdf.createCell_cell("发起行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getOdficode())));
				table.addCell(CommonMethod_Pdf.createCell_cell("付款人开户行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getPayeropenaccbkcode())));
				table.addCell(CommonMethod_Pdf.createCell_cell("委托日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell(entity.getConsigndate()));
				
				table.addCell(CommonMethod_Pdf.createCell_cell("发起行名称"));
				
				table.addCell(CommonMethod_Pdf.createCell_hb_l(entity.getOdficode(),5));
				table.addCell(CommonMethod_Pdf.createCell_cell("付款人账号"));
				table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getPayeracc()),5));
				table.addCell(CommonMethod_Pdf.createCell_cell("付款人名称"));
				table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getPayername()),5));
				table.addCell(CommonMethod_Pdf.createCell_cell("付款人地址"));
				table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getPayeraddr()),5));
				
				table.addCell(CommonMethod_Pdf.createCell_cell("接收行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getRdficode())));
				table.addCell(CommonMethod_Pdf.createCell_cell("收款人开户行行号"));
				table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getRdficode())));
				table.addCell(CommonMethod_Pdf.createCell_cell("收报日期"));
				table.addCell(CommonMethod_Pdf.createCell_cell(entity.getRectime()));
				
				table.addCell(CommonMethod_Pdf.createCell_cell("收款人账号"));
				table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getRecipientacc()),5));
				table.addCell(CommonMethod_Pdf.createCell_cell("收款人名称"));
				table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getRecipientname()),5));
				table.addCell(CommonMethod_Pdf.createCell_cell("收款人地址"));
				table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getRecipientaddr()),5));
				table.addCell(CommonMethod_Pdf.createCell_cell("货币符号、金额"));
				String amount = "";
				if(entity.getAmount()!=null&&(!entity.getAmount().equals(""))){
					amount = PingzhengPrint.formatAmount(Double.parseDouble(entity.getAmount()));
				}
				table.addCell(CommonMethod_Pdf.createCell_hb_l(amount,5));
				table.addCell(CommonMethod_Pdf.createCell_cell("附言"));
				table.addCell(CommonMethod_Pdf.createCell_hb_l(StringUtils.nullToString(entity.getStrinfo()),5));
				table.addCell(CommonMethod_Pdf.createCell_cell("会计分录"));
				table.addCell(CommonMethod_Pdf.createCell_hb_l("借：存款中央银行款项",2));
				table.addCell(CommonMethod_Pdf.createCell_hb_l("密押：",3));
				table.addCell(CommonMethod_Pdf.createCell_cell(""));
				table.addCell(CommonMethod_Pdf.createCell_hb_l("贷：",5));
				
				table.addCell(CommonMethod_Pdf.createCell_cell("复核员："));
				table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getCheckuser())));
				table.addCell(CommonMethod_Pdf.createCell_cell("记账："));
				table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getPutuser())));
				table.addCell(CommonMethod_Pdf.createCell_cell("打印："));
				table.addCell(CommonMethod_Pdf.createCell_cell(printer));
				
				table.addCell(CommonMethod_Pdf.createCell_cell("流水号："));
				table.addCell(CommonMethod_Pdf.createCell_cell(StringUtils.nullToString(entity.getFlowno())));
				table.addCell(CommonMethod_Pdf.createCell_cell("打印时间："));
				table.addCell(CommonMethod_Pdf.createCell_cell(curdate));
				table.addCell(CommonMethod_Pdf.createCell_hb_l("第  "+entity.getPrintno()+"   次打印",2));
			}
			
			return table;
		}catch (DocumentException ex) {
			ex.printStackTrace();
			return null;
		}
	}
	
	
	/**
	 * 格式化金额
	 * @param amount 金额字符串
	 * @return 格式化后的金额
	 */
	private static String formatAmount(double amount){
		String stramount="";
		FormatAmount fa = new FormatAmount(); 
		String s = fa.cleanZero(fa.splitNum(fa.roundString(String.valueOf(amount)))); 
		
		stramount = s +"整   RMB"+new DecimalFormat("#,###,###,###.00").format(amount);
		return stramount;
		
	}
	
	/**
	 * 往账凭证打印
	 * @param entity
	 * @return
	 */
	public static HVPSPingzheng convertHVPSPZW(ExchargeEntity entity,String direction){
		HVPSPingzheng hvpspz = new HVPSPingzheng();
		hvpspz.setPrintno(entity.getPrinttimes());//打印次数
		hvpspz.setCmtno(entity.getMsgTpCd());//报文种类
		hvpspz.setDcind("DBIT");//借贷标识
		hvpspz.setOprttype(entity.getPmttp());//业务种类
		if("O".equals(direction)){
			hvpspz.setTxssno(entity.getPmtgrpid());//支付交易序号
		}else{
			hvpspz.setTxssno(entity.getTxid());//支付交易序号
		}
		
		hvpspz.setOdficode(entity.getDbtrbrnchid());//发起行行号
		hvpspz.setPayeropenaccbkcd(entity.getDbtrissuer());//汇款人开户行行号
		hvpspz.setOdfiname(entity.getDbtrbrnchnm());//发起行名称
		hvpspz.setPayeracc(entity.getDbtracct());//汇款人账号
		hvpspz.setPayername(entity.getDbtrnm());//汇款人名称
		hvpspz.setPayeraddr(entity.getDbtraddr());//汇款人地址
		hvpspz.setRdficode(entity.getCdtrbrnchid());//接收行行号
		hvpspz.setSendtime(entity.getWorkdt());//发报日期
		hvpspz.setRecpientopnaccbkcd(entity.getCdtrissuer());//收款人开户行行号
		hvpspz.setRectime(entity.getWorkdt());//收报日期
		hvpspz.setRecipientacc(entity.getCdtracct());//收款人账号
		hvpspz.setRecipientname(entity.getCdtrnm());//收款人名称
		hvpspz.setRecipientaddr(entity.getCdtraddr());//收款人地址
		hvpspz.setMoneysymb("RMB");//货币符号
		hvpspz.setAmount(entity.getAmount());//金额
		hvpspz.setStrinfo(entity.getAddtlinf());//附言
		hvpspz.setFlowno("");//收报流水号
		return hvpspz;
	}
	public static void main(String[] args) {
		double  str= 132120100224.2;
		System.out.println(formatAmount(str));
	}
}
