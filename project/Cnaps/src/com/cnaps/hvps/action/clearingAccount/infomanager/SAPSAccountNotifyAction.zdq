package com.cnaps.hvps.action.clearingAccount.infomanager;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.clearingAccount.infomanager.SAPSAccountNotifyForm;
import com.cnaps.hvps.persistence.clearingAccount.infomanager.SAPSAccountNotify;

/**
 * 清算账户记账通知
 * @author Administrator
 *
 */
@SuppressWarnings("unchecked")
public class SAPSAccountNotifyAction extends BaseAction{

	/**
	 * 发送查询报文 录入查询
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public ActionForward querySendxml(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			SAPSAccountNotifyForm voform = (SAPSAccountNotifyForm) form;
			//报文头设置
			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			//查询代码
			voform.setQueryCd(TransCodeEntity.SAPSAccountNotifyAction_sendMsg_query);
			//分页设置
			this.setFenYe(voform);
			//查询条件设置
			SAPSAccountNotify po = voform.getPo();
			commSetConditionsList(voform,po);
			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"clearingaccts",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			//设置分页信息。记录总条数
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
		    setQueryPageValue(voform,true);
			List<SAPSAccountNotify>  list = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request, "queryList",list);
			request.setAttribute("condition", po);
			return mapping.findForward("queryList");
		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
		
		
	}
		
		
		/**设置 传送到后台的XML 的条件List到FORM里  查询条件
		 * @param voform
		 * @param hpo
		 */
		@SuppressWarnings("unchecked")
		private void commSetConditionsList(SAPSAccountNotifyForm voform,SAPSAccountNotify hpo)
		{
			
			
			if (!StringUtils.isEmpty(hpo.getMsgid())) 
			{
				voform.getConditions().add("msgid:"+hpo.getMsgid());
			}
			if (!StringUtils.isEmpty(hpo.getWorkdate())) 
			{
				voform.getConditions().add("workdate:"+hpo.getWorkdate());
			}
			

		}
		
	
		
		/**
		 * 发送明细报文
		 * @param mapping
		 * @param form
		 * @param request
		 * @param response
		 * @return
		 */
		
		@SuppressWarnings("unchecked")
		public ActionForward sendDetailMessage(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
			try{
				SAPSAccountNotifyForm voform = (SAPSAccountNotifyForm) form;
				//报文头设置
				String transactionid = TransCodeEntity.QUERYCD;//功能代码
				commSetToXML(voform,request,transactionid);
				//查询代码
				voform.setQueryCd(TransCodeEntity.SAPSAccountNotifyAction_sendMsg_query);
				//分页设置
				this.setFenYe(voform);
				//查询条件设置
				String id = request.getParameter("id");
				voform.getConditions().add("id:"+id);
				//报文体组装发送
				TransServices transServices = (TransServices)this.getBean("transServices");
				CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"clearingaccts",voform.getQueryCd());
				if(!commonXMLEntity.getProcessCode().equals("000000")){
					throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
				}
				//设置分页信息。记录总条数
				if(commonXMLEntity.getRecordcount() == null){
					voform.setTotalSize(0);
				}else{
					voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
				}
			    setQueryPageValue(voform,true);
				List<SAPSAccountNotify>  list = commonXMLEntity.getResults();
				SAPSAccountNotify po= list.get(0);
				this.setPageInfo(request,voform);
				request.setAttribute("entity", po);
				return mapping.findForward("gotoDetailPage");
			} catch (Exception e) {
				e.printStackTrace(); 
				return toFailedPage(mapping, request,e.getMessage());
			}
		}
		
}
