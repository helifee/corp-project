package com.cnaps.hvps.action.collectionPayment;

import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.bancstone.service.systemManage.impl.CommonServices;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.collectionPayment.ActivePaymentForm;
import com.cnaps.hvps.persistence.messages.Hvpspartyinfo;
 
/**
 * @包名   com.cnaps.hvps.action.collectionPayment
 * @文件名 ActivePaymentAction.java
 * @作者   zcx
 * @创建日期 Aug 30, 2011
 * @版本 V 1.0
 * 主动交款查询查询,主动交款通知,发票打印申请
 */
public class ActivePaymentAction extends BaseAction{
	
	
	public ActionForward paymentQuery(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		 
		 
		
		ActivePaymentForm pvpform = (ActivePaymentForm)form;
		 CommonXMLEntity commonXMLEntity;
		 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss");
		 
		 pvpform.setBrnchCd("001");
		 Systemusersmanage user  =(Systemusersmanage) request.getSession().getAttribute("userentity");
		    pvpform.setOperTeller(user.getUsername());//操作员名字
		 pvpform.setTermId("001");
		 
		 pvpform.setSource("CNAPS2");
		 pvpform.setDestination("BEPS");
		 
			CommonServices commonService = (CommonServices)this.getBean("CommonServices");
			String workdate=request.getSession().getAttribute("workDate").toString();//工作日期
		  
			
		 pvpform.setSendDateTime(sdf.format(new Date()));
 	 	Hvpspartyinfo bankInfo =(Hvpspartyinfo)request.getSession().getAttribute("bankInfo");
			pvpform.setOperBankCode(bankInfo.getBankcode())	;//发起行行号
		    pvpform.setPmtGrpId(pvpform.getPo().getPmtGrpId());//支付交易组号
			 
			 
			 pvpform.setTransactionId(TransCodeEntity.ActivePaymentAction_paymentQuery);
			 
			pvpform.setQueryCd(TransCodeEntity.ActivePaymentAction_paymentQuery);
	   String  reslutmessage="";	
   	  commSetToXML(pvpform,TransCodeEntity.ActivePaymentAction_paymentQuery,"BEPS");
      	try {
      	  TransServices transServices = (TransServices)this.getBean("transServices");
   		
      	commonXMLEntity = transServices.transProcess(pvpform, TransCodeEntity.ActivePaymentAction_paymentQuery,
      			"transaction",pvpform.getQueryCd());//新版查询方法
		 
      		
      		if(!commonXMLEntity.getProcessCode().equals("000000"))
				{
					throw new PicpMessageException("错误码："+commonXMLEntity.getProcessCode()+"错误信息："+commonXMLEntity.getProcessDes());
				}else
				{
					 
						reslutmessage="处理成功码："+commonXMLEntity.getProcessCode()+"处理成功！";
				 
				}
      	 return toSuccessPage(mapping,request,reslutmessage+"您的支付交易组号是【"+pvpform.getPmtGrpId()+"】");
			} catch ( Exception e) {
				
				
				return toFailedPage(mapping, request,e.getMessage() );
			}
		}
	public ActionForward paymentNotify(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		 
		 
		
		ActivePaymentForm pvpform = (ActivePaymentForm)form;
		 CommonXMLEntity commonXMLEntity;
		 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss");
		 
		 pvpform.setBrnchCd("001");
		 Systemusersmanage user  =(Systemusersmanage) request.getSession().getAttribute("userentity");
		    pvpform.setOperTeller(user.getUsername());//操作员名字
		 pvpform.setTermId("001");
		 
		 pvpform.setSource("CNAPS2");
		 pvpform.setDestination("BEPS");
		 
			CommonServices commonService = (CommonServices)this.getBean("CommonServices");
			String workdate=request.getSession().getAttribute("workDate").toString();//工作日期
		  
			
		 pvpform.setSendDateTime(sdf.format(new Date()));
 	 	Hvpspartyinfo bankInfo =(Hvpspartyinfo)request.getSession().getAttribute("bankInfo");
			pvpform.setOperBankCode(bankInfo.getBankcode())	;//发起行行号
		    pvpform.setPmtGrpId(pvpform.getPoNotify().getPmtGrpId());//支付交易组号
			 
			 
			 pvpform.setTransactionId(TransCodeEntity.ActivePaymentAction_paymentNotify);
			 
			pvpform.setQueryCd(TransCodeEntity.ActivePaymentAction_paymentNotify);
	   String  reslutmessage="";	
   	  commSetToXML(pvpform,TransCodeEntity.ActivePaymentAction_paymentNotify,"BEPS");
      	try {
      	  TransServices transServices = (TransServices)this.getBean("transServices");
   		
      	commonXMLEntity = transServices.transProcess(pvpform, TransCodeEntity.ActivePaymentAction_paymentNotify,
      			"transaction",pvpform.getQueryCd());//新版查询方法
		 
      		
      		if(!commonXMLEntity.getProcessCode().equals("000000"))
				{
					throw new PicpMessageException("错误码："+commonXMLEntity.getProcessCode()+"错误信息："+commonXMLEntity.getProcessDes());
				}else
				{
					 
						reslutmessage="处理成功码："+commonXMLEntity.getProcessCode()+"处理成功！";
				 
				}
      	 return toSuccessPage(mapping,request,reslutmessage+"您的支付交易组号是【"+pvpform.getPmtGrpId()+"】");
			} catch ( Exception e) {
				
				
				return toFailedPage(mapping, request,e.getMessage() );
			}
		}
	public ActionForward invoicePrintApply(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		 
		 
		
		ActivePaymentForm pvpform = (ActivePaymentForm)form;
		 CommonXMLEntity commonXMLEntity;
		 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss");
		 
		 pvpform.setBrnchCd("001");
		 Systemusersmanage user  =(Systemusersmanage) request.getSession().getAttribute("userentity");
		    pvpform.setOperTeller(user.getUsername());//操作员名字
		 pvpform.setTermId("001");
		 
		 pvpform.setSource("CNAPS2");
		 pvpform.setDestination("BEPS");
		 
			CommonServices commonService = (CommonServices)this.getBean("CommonServices");
			String workdate=request.getSession().getAttribute("workDate").toString();//工作日期
		  
			
		 pvpform.setSendDateTime(sdf.format(new Date()));
 	 	Hvpspartyinfo bankInfo =(Hvpspartyinfo)request.getSession().getAttribute("bankInfo");
			pvpform.setOperBankCode(bankInfo.getBankcode())	;//发起行行号
		    pvpform.setPmtGrpId(pvpform.getPoPrint().getPmtGrpId());//支付交易组号
			 System.out.println("---------------------------");
			 
			 pvpform.setTransactionId(TransCodeEntity.ActivePaymentAction_invoicePrintApply);
			 
			pvpform.setQueryCd(TransCodeEntity.ActivePaymentAction_invoicePrintApply);
	   String  reslutmessage="";	
   	  commSetToXML(pvpform,TransCodeEntity.ActivePaymentAction_invoicePrintApply,"BEPS");
      	try {
      	  TransServices transServices = (TransServices)this.getBean("transServices");
   		
      	commonXMLEntity = transServices.transProcess(pvpform, TransCodeEntity.ActivePaymentAction_invoicePrintApply,
      			"transaction",pvpform.getQueryCd());//新版查询方法
		 
      		
      		if(!commonXMLEntity.getProcessCode().equals("000000"))
				{
					throw new PicpMessageException("错误码："+commonXMLEntity.getProcessCode()+"错误信息："+commonXMLEntity.getProcessDes());
				}else
				{
					 
						reslutmessage="处理成功码："+commonXMLEntity.getProcessCode()+"处理成功！";
				 
				}
      	 return toSuccessPage(mapping,request,reslutmessage+"您的支付交易组号是【"+pvpform.getPmtGrpId()+"】");
			} catch ( Exception e) {
				
				
				return toFailedPage(mapping, request,e.getMessage() );
			}
		}
}
