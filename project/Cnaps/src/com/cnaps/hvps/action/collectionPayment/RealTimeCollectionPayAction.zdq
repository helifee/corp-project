/**
 * 
 */
package com.cnaps.hvps.action.collectionPayment;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.bancstone.service.systemManage.impl.CommonServices;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.collectionPayment.BatchPaymentForm;
import com.cnaps.hvps.form.collectionPayment.RealTimeCollectionPayForm;
import com.cnaps.hvps.persistence.collectionPayment.BatchPayment;
import com.cnaps.hvps.persistence.collectionPayment.RealPay;

/**
 * @包名   com.cnaps.hvps.action.collectionPayment
 * @文件名 RealTimeCollectionPayAction.java
 * @作者   zcx
 * @创建日期 Sep 8, 2011
 * @版本 V 1.0
 */
public class RealTimeCollectionPayAction extends BaseAction {
	public ActionForward realTimePayQueryList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	 //实时代付
	//38401 
		 //界面查询条件
		RealTimeCollectionPayForm voform = (RealTimeCollectionPayForm) form;
		RealPay hpo = voform.getPo();
		 String id=request.getParameter("id");
		 String  collect=request.getParameter("flag");
		 
		 System.out.println(collect);
		 
		 if (!StringUtils.isEmpty(id)&&!"".equals(id.trim())) 
			{
				
				voform.getConditions().add("id:"+id.trim());//
			}
			if (!StringUtils.isEmpty(hpo.getPmtGrpId() )&&!"".equals(hpo.getPmtGrpId().trim())) 
			{
				
				voform.getConditions().add("pmtgrpid:"+hpo.getPmtGrpId());//支付组号查询
			}
			
			 
			if (!StringUtils.isEmpty(hpo.getBtchNb())&&!"".equals(hpo.getBtchNb().trim())) 
			{
				
				voform.getConditions().add("btchnb:"+hpo.getBtchNb());//付款人帐号
			}
			
			 
		 
		 
		String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……	
		commSetToXML(voform, TransCodeEntity.QUERYCD,business);
		
		//报文标识号
		CommonServices commonService = (CommonServices)this.getBean("CommonServices");
		String workdate=request.getSession().getAttribute("workDate").toString();//工作日期
		String  msgId= commonService.getSEQMsgId(workdate);
		voform.setMsgId(msgId);//报文标识号
		voform.setQueryCd("1510738401");//查询吗
		if("collect".equals(collect)){
			voform.setQueryCd("1510738601");//实时代收
		}
		this.setFenYe(voform);
		CommonXMLEntity commonXMLEntity=null;
			try {
		
				 	
				TransServices transServices = (TransServices)this.getBean("transServices");
			 	commonXMLEntity = transServices.transProcess(voform,  TransCodeEntity.QUERYCD,
		      			"transaction",voform.getQueryCd());//新版查询方法
				if(!commonXMLEntity.getProcessCode().equals("000000"))
				{
					throw new PicpMessageException("错误码：【"+commonXMLEntity.getProcessCode()+"】 错误信息：【"+commonXMLEntity.getProcessDes()+"】");
				}
			
			
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
			
		    this.setQueryPageValue(voform,true);
			List<RealPay> list = commonXMLEntity.getResults();  
			if(list!=null&&list.size()==1&&id!=null&&id.trim().equals(list.get(0).getId())){
			 	request.setAttribute("sap",  list.get(0));
			 	if("collect".equals(collect)){
		 			return mapping.findForward("realTimeCollectionDetail");//实时代收
				}
			 	return mapping.findForward("realTimePayDetail");//跳转到明细页面

			}
			 	request.setAttribute("queryList",  list);
			 
			this.setPageInfo(request,voform);
		 		} catch ( Exception e) {
		 
			 e.printStackTrace();
				return mapping.findForward("queryList");
			}
		
			 
			 
		 		if("collect".equals(collect)){
		 			return mapping.findForward("realTimeCollection");//实时代收
				}
		 		
		 
			 	
		return mapping.findForward("queryList");
		}
}
