/**
 * 
 */
package com.cnaps.hvps.action.collectionPayment;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import jxl.Sheet;
import jxl.Workbook;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.bancstone.service.systemManage.impl.CommonServices;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.collectionPayment.BatchProtocolManageForm;
import com.cnaps.hvps.persistence.collectionPayment.BatchProtocolManageDetails;
import com.cnaps.hvps.persistence.messages.Hvpspartyinfo;
import com.cnaps.hvps.persistence.transfer.RegularDebitdetails;

/**
 * @包名   com.cnaps.hvps.action.collectionPayment
 * @文件名 BatchProtocolManageAction.java
 * @作者   zcx
 * @创建日期 Sep 21, 2011
 * @版本 V 1.0
 */
public class BatchProtocolManageAction extends BaseAction{
	public ActionForward  saveBatchProtocolManage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		List<BatchProtocolManageDetails> list=new ArrayList<BatchProtocolManageDetails>();
		
		BatchProtocolManageForm voform=(BatchProtocolManageForm)form;
		 InputStream is;
		try {
			is = voform.getZcxfiles().getInputStream();
			 jxl.Workbook rwb = Workbook.getWorkbook(is);
			 Sheet rs = rwb.getSheet(0);
		 System.out.println( "行数"+rs.getRows()+" 列数 "+rs.getColumns()+"{"+rs.getCell(0, 1).getContents()+"}");
		    
		 for(int rows=0;rows<rs.getRows();rows++){
			 BatchProtocolManageDetails bpmd=new BatchProtocolManageDetails();
			   bpmd.setNbOfAgrmt(rs.getCell(0,rows).getContents());
			   bpmd.setAgrmtNb(rs.getCell(1,rows).getContents());
			   bpmd.setDbtrNm(rs.getCell(2,rows).getContents());
			   bpmd.setDbtrAcct(rs.getCell(3,rows).getContents());
			   bpmd.setDbtrIssuer(rs.getCell(4,rows).getContents());
			   bpmd.setDbtrMmbId(rs.getCell(5,rows).getContents());
			   bpmd.setCdtrNm(rs.getCell(6,rows).getContents());
			   list.add(bpmd);
		 }
		 voform.getPo().setList(list);
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 commSetToXML(voform, TransCodeEntity.BatchProtocolManageAction_saveBatchProtocolManage,"BEPS");  // 付款人录入
		 
	  	 voform.getPo().setList(list);
	  	 
	  	//报文标识号
			CommonServices commonService = (CommonServices)this.getBean("CommonServices");
			String workdate=request.getSession().getAttribute("workDate").toString();//工作日期
			String  msgId= commonService.getSEQMsgId(workdate);
	  	 
		voform.setPmtGrpId(msgId);//支付交易组号
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss");
		voform.setSendDateTime(sdf.format(new Date()));//报文发送时间
		voform.setBrnchCd("001");// 网点号
		 Systemusersmanage user  =(Systemusersmanage) request.getSession().getAttribute("userentity");
		 voform.setOperTeller(user.getUsername());//操作员名字
		 voform.setTermId("001");
			Hvpspartyinfo bankInfo =(Hvpspartyinfo)request.getSession().getAttribute("bankInfo");
		 voform.setOperBankCode(bankInfo.getBankcode())	;//发起行行号
		 
		CommonXMLEntity commonXMLEntity;
		
			TransServices transServices = (TransServices)this.getBean("transServices");
			commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"transaction",
					"15107210"); 
			
			
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}

			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
			 
		 
		 
		}  catch ( Exception e) {
			 
			e.printStackTrace();
			return toFailedPage(mapping, request,e.getMessage());
		}
		
		
		
		
		
		    
		   return toSuccessPage(mapping,request,"录入操作已成功！");
	}
}
