package com.cnaps.hvps.action.business;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.utils.StringUtil;
import com.bancstone.constants.SystemConstants;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.business.Hvpsth141Form;
import com.cnaps.hvps.persistence.business.HVPSth141;

public class Hvpsth141Action extends BaseAction {

	
	
	/**
	 * 公开市场交易结算查询
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	@SuppressWarnings( { "unchecked", "static-access" })
	public ActionForward querySendxml(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			TransServices transServices = (TransServices)this.getBean("transServices");
			String path = request.getSession().getServletContext().getRealPath("/");
			//界面查询条件			
			Hvpsth141Form voform = (Hvpsth141Form) form;
			HVPSth141 hpo=voform.getHvpsth141(); 
		    String pmtTp= request.getParameter("pmtTp");//根据点击不同的功能 得到不同的业务种类
			commSetToXML(voform);//设置 为组XML 需要的FROM的公共字段
			voform.setQueryCd("151014100");
			commSetConditionsList(voform,hpo,pmtTp);//设置FROM里的 条件LIST 将业务种类传递进来
			this.setQueryPageValue(voform,true);

			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, "1510000000", "transaction", "151014100");


			if(!commonXMLEntity.getProcessCode().equals(SystemConstants.SUCCESS_CODE))
			{
				return toFailedPage(mapping, request,SystemConstants.getErrorMessage(commonXMLEntity));
			}
			List<HVPSth141>  List = commonXMLEntity.getResults();
//			this.setQueryPageInfo(request,voform,commonXMLEntity);
			this.setQueryPageValue(voform, true);
			//设置界面标识 
			this.setDoPageRequestObject(request);
			this.setObjectToRequest(request,SystemConstants.DO_STATS, SystemConstants.QUERYSENDXML_STATS);
			this.setObjectToRequest(request, "queryList",List);
			this.setObjectToRequest(request, "entitypo",hpo);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			 e.printStackTrace();
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	
	/**
	 * 公开市场交易结算查询明细
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward gotoSendXMLDetailPage(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response)throws Exception
			{
					String id=request.getParameter("id");
					TransServices transServices = (TransServices)this.getBean("transServices");
					HVPSth141 hpo=new HVPSth141();
					String path = request.getSession().getServletContext().getRealPath("/");
					//界面查询条件			
					Hvpsth141Form voform = (Hvpsth141Form)form;
					
				try{

					voform.setQueryCd("1510xxx");//查询码
					voform.getConditions().add("id:"+id);
					voform.setTransactionId("1510xxx");//功能码
					this.setQueryPageValue(voform,true);
					CommonXMLEntity  commonXMLEntity = transServices.busProcess(voform, voform.getTransactionId(),path);
					if(!commonXMLEntity.getProcessCode().equals(SystemConstants.SUCCESS_CODE))
					{
						return toFailedPage(mapping, request,SystemConstants.getErrorMessage(commonXMLEntity));
					}
					List<HVPSth141>  List = commonXMLEntity.getResults();
					if(List!=null)
					{
						
						hpo=(HVPSth141)List.get(0);
					}
//					this.setQueryPageInfo(request,voform,commonXMLEntity);
					this.setQueryPageValue(voform, true);
					//设置界面标识 
					//设置界面标识 
					this.setDoPageRequestObject(request);
					this.setObjectToRequest(request,SystemConstants.DO_STATS, SystemConstants.DETAIL_STATS);
					this.setObjectToRequest(request, "entity", hpo);
					return mapping.findForward("gotoDetailPage");

				} catch (Exception e) {
					e.printStackTrace();
					return toFailedPage(mapping, request,e.getMessage());
				}
				
			}
	
	
	

/**设置 传送到后台的XML 的条件List到FORM里
 * @param voform
 * @param hpo
 */
@SuppressWarnings("unchecked")
private void commSetConditionsList(Hvpsth141Form voform,HVPSth141 hpo,String pmtTp)
{
	
	voform.getConditions().add("txid:"+pmtTp);
	
	if (!StringUtils.isEmpty(hpo.getTxid())) 
	{
		voform.getConditions().add("txid:"+hpo.getTxid());
	}
	if (!StringUtils.isEmpty(hpo.getNtryamt())) 
	{
		voform.getConditions().add("ntryamt:"+hpo.getNtryamt());
	}
	if (!StringUtils.isEmpty(hpo.getDbtracctid())) 
	{
		voform.getConditions().add("dbtracctid:"+hpo.getDbtracctid());
	}

}
/**设置XML需要用到公共XML部分
 * @param voform
 * @param hpo
 */
private void commSetToXML(Hvpsth141Form voform)
{
	voform.setSource("QDEB");
	voform.setDestination("HVPS");
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	voform.setSendDateTime(sdf.format(new Date()));
	voform.setMsgId("");


}

}
