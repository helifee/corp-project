package com.cnaps.hvps.action.business;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.constants.SystemConstants;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.transfer.FnclpendingForm;
/**
 * 来账待处理
 * @author Administrator
 *
 */ 
public class FnclpendingAction  extends BaseAction {
	@SuppressWarnings( { "unchecked", "static-access" })
	public ActionForward sendQueryXML(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			TransServices transServices = (TransServices)this.getBean("transServices");
			String path = request.getSession().getServletContext().getRealPath("/");
			//界面查询条件
			FnclpendingForm voform = (FnclpendingForm) form;
			voform.setQueryCd("1510999902");
			commSetToXML(voform, TransCodeEntity.QUERYCD,"CNAPS2");
			this.setFenYe(voform);
			//查询条件设置
			if(!StringUtils.isEmpty(voform.getPmtgrpid())){
				voform.getConditions().add("pmtgrpid:"+voform.getPmtgrpid());
			}
			//
			if(!StringUtils.isEmpty(voform.getInwarddt())){
				voform.getConditions().add("Inwarddt:"+voform.getInwarddt());
			}
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, TransCodeEntity.QUERYCD, "transaction", "1510999902");
			if(!commonXMLEntity.getProcessCode().equals(SystemConstants.SUCCESS_CODE))
			{
				return toFailedPage(mapping, request,SystemConstants.getErrorMessage(commonXMLEntity));
			}
			//设置分页信息。记录总条数
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
			this.setQueryPageValue(voform,true);
			List<FnclpendingForm>  list = commonXMLEntity.getResults();
			 
			//设置界面标识 
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request,SystemConstants.DO_STATS, SystemConstants.QUERYSENDXML_STATS);
			this.setObjectToRequest(request, "queryList",list);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			 e.printStackTrace();
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
}
