package com.cnaps.hvps.action.transfer;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.util.Iterator;
import java.util.List;
import java.util.Properties;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.bancstone.service.systemManage.impl.CommonServices;
import com.cnaps.common.HVPSPingzheng;
import com.cnaps.common.PingzhengPrint;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.PingzhengPrintService;
import com.cnaps.coreservices.ReportManagService;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.transfer.TransProcessForm;
import com.cnaps.hvps.persistence.transfer.TransProcessEntity;

/**
 * 凭证打印处理类
 * 
 * @author Administrator
 * 
 */
public class PingzhengPrintAction extends BaseAction {

	

	/**
	 * 大额凭证打印
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward toHVPSendPZPrint(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		try {
			String pmtgrpid = "";// 支付交易组号
			String systemcd = "";// 系统编号
			String direction = "";//来往标识
			String msgtpid="";//报文类型
			if (request.getParameter("pmtgrpid") != null) {
				pmtgrpid = request.getParameter("pmtgrpid");
			}
			if (request.getParameter("systemcd") != null) {
				systemcd = request.getParameter("systemcd");
			}
			if (request.getParameter("direction") != null) {
				direction = request.getParameter("direction");
			}
			if (request.getParameter("msgtpid") != null) {
				msgtpid = request.getParameter("msgtpid");
			}

			CommonServices commonService = (CommonServices) this
					.getBean("CommonServices");
			String workdate = request.getSession().getAttribute("workDate")
					.toString();// 工作日期
			String msgId = commonService.getSEQMsgId(workdate);

			// 界面查询条件

			TransProcessForm voform = new TransProcessForm();

			commSetToXML(voform, TransCodeEntity.SENDCHECK_MODIFY_QUERYCD,
					"CMCS");
			voform.setMsgId(msgId);// 报文标识号
			voform.setPmtgrpid(pmtgrpid);//往账-支付交易组号；来账-支付交易序号
			voform.setDestination(systemcd);//系统编码
			voform.setDirection(direction);//来往标识
			TransServices transServices = (TransServices) this.getBean("transServices");
			CommonXMLEntity commonXMLEntity = transServices.transQuery(voform,
					voform.getTransactionId(), "transaction",
					TransCodeEntity.SENDCHECK_MODIFY_QUERYCD,
					TransCodeEntity.SENDRECVMSG_COMMON_QUERYCD);
			if (!commonXMLEntity.getProcessCode().equals("000000")) {
				throw new PicpMessageException("错误码：["
						+ commonXMLEntity.getProcessCode() + "] 错误信息：["
						+ commonXMLEntity.getProcessDes() + "]");
			}
			List list = commonXMLEntity.getResults();

			// 登录用户
			Systemusersmanage user = (Systemusersmanage) request.getSession()
					.getAttribute("userentity");
			// 系统日期
			String printtime = request.getSession().getAttribute("workDate")
					.toString();
			
//			ByteArrayOutputStream baos = new ByteArrayOutputStream();
//			 String isdficode ="";//清算行行号
//			 if("HVPS".equals(systemcd)){//大额凭证
//				 PingzhengPrint.buildCommPLPrint(baos, list, 
//							"HVPSHUIDIU", isdficode,user.getUsername(), printtime,direction);
//			 }else{//小额凭证
//				 
//			 }
//			//更新打印次数
//			PingzhengPrintService pzPrintServices = (PingzhengPrintService)this.getBean("PingzhengPrintService");
//			for(Iterator iterator = list.iterator();iterator.hasNext();){
//				ExchargeEntity mq = (ExchargeEntity)iterator.next();
//				int printno=0;
//				if(mq.getPrinttimes()!=null&&(!"".equals(mq.getPrinttimes()))){
//					printno =Integer.parseInt(mq.getPrinttimes())+1;
//				}
//				pzPrintServices.updatePrinttimes(mq.getPmtgrpid(),String.valueOf(printno),direction,msgtpid);
//			}	
//			response.setContentType("application/pdf");
//			response.setContentLength(baos.size());
//			ServletOutputStream out = response.getOutputStream();
//			baos.writeTo(out);
//			out.flush();
//			return null;
			
			
			File reportFile=null;
	         System.out.println(request. getContextPath());
	         System.out.println(request.getSession().getServletContext().getRealPath("/"));
	         reportFile = new File(request.getSession().getServletContext().getRealPath("/ireport/ccmsQueryReplyInfo.jasper"));

			ReportManagService  rms = (ReportManagService)this.getBean("reportManagService");
			byte [] bytes = rms.billPrint(list,reportFile);
			response.setContentType("application/pdf");
			response.setContentLength(bytes.length);
			ServletOutputStream ouputStream = response.getOutputStream();
			ouputStream.write(bytes, 0, bytes.length);
			ouputStream.flush();
			ouputStream.close();
			return null;
			
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}
	
	/**
	 * 大额凭证批量打印
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward toHVPRecvPZPPrint(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		try {
			String direction ="";
			String msgtpid="";
			
			if(request.getParameter("direction")!=null){
				direction = request.getParameter("direction");
			}
			if(request.getParameter("msgtpid")!=null){
				msgtpid= request.getParameter("msgtpid");
			}
			
			//获得凭证打印条件
			TransProcessEntity po = new TransProcessEntity();
			po.setMsgtpid(msgtpid);
			po.setStatus("PR04");//已清算
			po.setDirection(direction);//来往标识
			PingzhengPrintService pzPrintServices = (PingzhengPrintService)this.getBean("PingzhengPrintService");
			List list = pzPrintServices.queryPrintList(po);
			//更新打印次数
			for(Iterator iterator = list.iterator();iterator.hasNext();){
				HVPSPingzheng mq = (HVPSPingzheng)iterator.next();
				int printno=0;
				if(mq.getPrintno()!=null&&(!"".equals(mq.getPrintno()))){
					printno =Integer.parseInt(mq.getPrintno())+1;
				}
				pzPrintServices.updatePrinttimes(mq.getTxssno(),String.valueOf(printno),direction,msgtpid);
			}	
			// 登录用户
			Systemusersmanage user = (Systemusersmanage) request.getSession().getAttribute("userentity");
			// 系统日期
			String printtime = request.getSession().getAttribute("workDate").toString();
			ByteArrayOutputStream baos = new ByteArrayOutputStream();
			String sabankno = "";//机构所属行的清算行
			
			PingzhengPrint.buildCommPLPrint(baos, list, "HUIDIUPIDA",sabankno,user.getUsername(), printtime,direction);
			response.setContentType("application/pdf");
			response.setContentLength(baos.size());
			ServletOutputStream out = response.getOutputStream();
			baos.writeTo(out);
			out.flush();
			return null;

		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
		
	}

	/**
	 * 自由格式打印
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward printCcmsFreeMsgAction(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		try {
			String id = "";// 主键ID
			if (request.getParameter("id") != null) {
				id = request.getParameter("id");
			String workdate = request.getSession().getAttribute("workDate").toString();// 工作日期
			// 界面查询条件
			TransProcessForm voform = new TransProcessForm();
			voform.setId(id);
			PingzhengPrintService pzPrintServices = (PingzhengPrintService)this.getBean("PingzhengPrintService");
			List replyList = pzPrintServices.queryCcmsFreeMsgBySql(voform);
			// 登录用户
			Systemusersmanage user = (Systemusersmanage) request.getSession().getAttribute("userentity");
			// 系统日期
			String printtime = request.getSession().getAttribute("workDate").toString();
			File reportFile=null;
	        reportFile = new File(request.getSession().getServletContext().getRealPath("/ireport/ccmsFreeMsg.jasper"));
	        
	        ReportManagService  rms = (ReportManagService)this.getBean("reportManagService");
			byte [] bytes = rms.billPrintFreeMsg(replyList,reportFile);
			response.setContentType("application/pdf");
			response.setContentLength(bytes.length);
			ServletOutputStream ouputStream = response.getOutputStream();
			ouputStream.write(bytes, 0, bytes.length);
			ouputStream.flush();
			ouputStream.close();
			}
			return null;
			
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}
	/**
	 * 查询查复书明细
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings("unchecked")
	public ActionForward queryReplyInfoDetailAction(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		try {
			String id = "";// 主键ID
			List replyList=null;
			if (request.getParameter("id") != null) {
				id = request.getParameter("id");
				// 界面查询条件
				TransProcessForm voform = new TransProcessForm();
				voform.setId(id);
				PingzhengPrintService pzPrintServices = (PingzhengPrintService)this.getBean("PingzhengPrintService");
				replyList = pzPrintServices.queryCcmsFreeMsgBySql(voform);
			}
			request.setAttribute("replyList", replyList);
			
			return mapping.findForward("queryReplyInfoDetail");
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}
	/**
	 * 查询查复的打印
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward  printQueryReplyInfoAction(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		try {
			String id = "";// 主键ID
			if (request.getParameter("id") != null) {
				id = request.getParameter("id");
				String flag=request.getParameter("flag");
				//CommonServices commonService = (CommonServices) this.getBean("CommonServices");
				String workdate = request.getSession().getAttribute("workDate").toString();// 工作日期
				// 界面查询条件
				TransProcessForm voform = new TransProcessForm();
				voform.setId(id);
				PingzhengPrintService pzPrintServices = (PingzhengPrintService)this.getBean("PingzhengPrintService");
				
				List replyList = pzPrintServices.queryBySql(voform);
				// 登录用户
				Systemusersmanage user = (Systemusersmanage) request.getSession().getAttribute("userentity");
				// 系统日期
				String printtime = request.getSession().getAttribute("workDate").toString();
				File reportFile=null;
				if(flag!=null&&flag.trim().equals("QT00")){//查询
					reportFile = new File(request.getSession().getServletContext().getRealPath("/ireport/ccmsQueryInfo.jasper"));
				}else{
					reportFile = new File(request.getSession().getServletContext().getRealPath("/ireport/ccmsQueryReplyInfo.jasper"));
				}
				ReportManagService  rms = (ReportManagService)this.getBean("reportManagService");
				byte [] bytes = rms.billPrintQuery(replyList,reportFile);
				response.setContentType("application/pdf");
				response.setContentLength(bytes.length);
				ServletOutputStream ouputStream = response.getOutputStream();
				ouputStream.write(bytes, 0, bytes.length);
				ouputStream.flush();
				ouputStream.close();
			}
			return null;
			
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}

	/**
	 * 汇兑凭证打印
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward printexchangeMsgAction(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
  try{
		TransProcessEntity po = new TransProcessEntity();
		String systemcd = "";
		String pmgrpid = "";
		String pmttp="";
		if (request.getParameter("systemcd") != null) {
			systemcd = request.getParameter("systemcd");
		}
		if (request.getParameter("msgtpid") != null) {
			pmgrpid = request.getParameter("msgtpid");
		}
		if (request.getParameter("pmttp") != null) {
			pmttp = request.getParameter("pmttp");
		}
		List list;
		PingzhengPrintService pzPrintServices = (PingzhengPrintService)this.getBean("PingzhengPrintService");
		if(pmttp.equals("A202"))
		{
			 list = pzPrintServices.queryfundMsgBySql(po, systemcd, pmgrpid);
		}else{
		list = pzPrintServices.queryexchangeMsgBySql(po, systemcd, pmgrpid);}
		//更新打印次数
		for(Iterator iterator = list.iterator();iterator.hasNext();){
			HVPSPingzheng mq = (HVPSPingzheng)iterator.next();
			int printno=0;
			if(mq.getPrintno()!=null&&(!"".equals(mq.getPrintno()))){
				printno =Integer.parseInt(mq.getPrintno())+1;
			}
			pzPrintServices.updatePrintimes(pmgrpid, String.valueOf(printno), systemcd);
		}	
		// 登录用户
		Systemusersmanage user = (Systemusersmanage) request.getSession().getAttribute("userentity");
		// 系统日期
		String printtime = request.getSession().getAttribute("workDate").toString();
		File reportFile=null;
		
		
		if(pmttp.equals("A109"))//委托收款(划回)
		{
			 reportFile = new File(request.getSession().getServletContext().getRealPath("/ireport/trustCashTranfer.jasper"));
		        
		}else if(pmttp.equals("A110"))//托收承付(划回)
		{
			 reportFile = new File(request.getSession().getServletContext().getRealPath("/ireport/collecpaytansfer.jasper"));
		        
		}else if(pmttp.equals("A104"))//国库资金贷记划拨
		{
			 reportFile = new File(request.getSession().getServletContext().getRealPath("/ireport/treasuryTranfer.jasper"));
		        
		}else if(pmttp.equals("A202"))//
		{
			 reportFile = new File(request.getSession().getServletContext().getRealPath("/ireport/tranfersave.jasper"));
		        
		}else
		{
			 reportFile = new File(request.getSession().getServletContext().getRealPath("/ireport/exchangtranfer.jasper"));
		        
		}
       
        ReportManagService  rms = (ReportManagService)this.getBean("reportManagService");
		byte [] bytes = rms.billPrintexchangeMsg(list,reportFile);
		response.setContentType("application/pdf");
		response.setContentLength(bytes.length);
		ServletOutputStream ouputStream = response.getOutputStream();
		ouputStream.write(bytes, 0, bytes.length);
		ouputStream.flush();
		ouputStream.close();
		return null;
	} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}
	
	/**
	 *银行汇票的凭证打印
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward printfundMsgAction(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
  try{
		TransProcessEntity po = new TransProcessEntity();
		String systemcd = "";
		String pmgrpid = "";
		String pmttp="";
		if (request.getParameter("systemcd") != null) {
			systemcd = request.getParameter("systemcd");
		}
		if (request.getParameter("msgtpid") != null) {
			pmgrpid = request.getParameter("msgtpid");
		}
		if (request.getParameter("pmttp") != null) {
			pmttp = request.getParameter("pmttp");
		}
		PingzhengPrintService pzPrintServices = (PingzhengPrintService)this.getBean("PingzhengPrintService");
		List list = pzPrintServices.queryfundMsgBySql(po, systemcd, pmgrpid);
		//更新打印次数
		for(Iterator iterator = list.iterator();iterator.hasNext();){
			HVPSPingzheng mq = (HVPSPingzheng)iterator.next();
			int printno=0;
			if(mq.getPrintno()!=null&&(!"".equals(mq.getPrintno()))){
				printno =Integer.parseInt(mq.getPrintno())+1;
			}
			pzPrintServices.updatePrintimes(pmgrpid, String.valueOf(printno), systemcd);
		}	
		// 登录用户
		Systemusersmanage user = (Systemusersmanage) request.getSession().getAttribute("userentity");
		// 系统日期
		String printtime = request.getSession().getAttribute("workDate").toString();
		File reportFile=null;
		
		
		
		reportFile = new File(request.getSession().getServletContext().getRealPath("/ireport/"));
		        
	
       
        ReportManagService  rms = (ReportManagService)this.getBean("reportManagService");
		byte [] bytes = rms.billPrintexchangeMsg(list,reportFile);
		response.setContentType("application/pdf");
		response.setContentLength(bytes.length);
		ServletOutputStream ouputStream = response.getOutputStream();
		ouputStream.write(bytes, 0, bytes.length);
		ouputStream.flush();
		ouputStream.close();
		return null;
	} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}
}
