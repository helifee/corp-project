package com.cnaps.hvps.action.transfer;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.jms.Session;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.bancstone.service.systemManage.impl.CommonServices;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.transfer.GeneralDebitForm;
import com.cnaps.hvps.form.transfer.RegularDebitForm;
import com.cnaps.hvps.persistence.info.BusinessStatusQuery;
import com.cnaps.hvps.persistence.info.Businesscancle;
import com.cnaps.hvps.persistence.messages.Hvpspartyinfo;
import com.cnaps.hvps.persistence.transfer.RegularDebit;
import com.cnaps.hvps.persistence.transfer.RegularDebitSigned;
import com.cnaps.hvps.persistence.transfer.RegularDebitdetails;
import com.cnaps.hvps.persistence.transfer.TreasuryFundsTransferDebit;
import com.cnaps.hvps.persistence.transfer.TreasuryFundsTransferDebitPayment;
  
public class RegularDebitASignupAction  extends BaseAction{
	
	/**
	 * 定期借记-付款签约 录入、修改
	 *
	 */
	@SuppressWarnings( { "unchecked", "static-access" })
	public ActionForward sendMsgSigned(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			RegularDebitForm voform = (RegularDebitForm) form;
			String syspara = request.getParameter("syspara");
			
			if(syspara.equals("modify")){
				commSetToXML(voform, TransCodeEntity.RegularDebitAction_sendMsgSigned_modify,"BEPS");  // 修改"1510713303"
			}else if(syspara.equals("delete")){
				commSetToXML(voform, TransCodeEntity.RegularDebitAction_sendMsgSigned_del,"BEPS");  // 删除"1510713304"
				String htbh = request.getParameter("htbh");
				voform.getPoSigned().setHtbh(htbh);
			}else{
				commSetToXML(voform, TransCodeEntity.RegularDebitAction_sendMsgSigned_add,"BEPS");  // 录入"1510713301"
			}
			voform.setMsgId("123");//报文标识号 
			voform.setMsgcode("beps.133.001.01"); // 报文号
			
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"transaction", TransCodeEntity.RegularDebitAction_sendMsgSigned_add);
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			return toSuccessPage(mapping,request,"操作已成功！");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	/**
	 * 从菜单直接跳转页面
	 * 
	 */ 
	public ActionForward gotoPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String syspara = request.getParameter("syspara"); 
			request.setAttribute("syspara",syspara);
			saveToken(request);
			if(syspara.equals("fkradd")){
				String prntid = request.getParameter("prntid"); 
				request.setAttribute("prntid",prntid);
				String pmtgrpid = request.getParameter("pmtgrpid");
				request.setAttribute("pmtgrpid", pmtgrpid);
				return mapping.findForward("RegularDebitPayer");
			}else if(syspara.equals("addmxjl")){
				return mapping.findForward("RegularDebitMsg");
			}else if(syspara.equals("delmxjl")){
				String id = request.getParameter("id");
				request.setAttribute("id", id);
				return mapping.findForward("commpage");
			}else if(syspara.equals("fkrdelete")){
				String id = request.getParameter("id");
				request.setAttribute("id", id);
				String PrntId = request.getParameter("PrntId");
				request.setAttribute("PrntId", PrntId);
				return mapping.findForward("commpage");
			}else if(syspara.equals("RegularDebitLedger") || syspara.equals("RegularDebitTransfer")){
				return mapping.findForward("RegularDebitLedger");
			}else{
				return mapping.findForward("inputSigned");
			}
		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	/**
	 * 定期借记-付款签约 查询、明细浏览、修改页面跳转
	 */
	public ActionForward sendMsgMaintenanceSigned(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			RegularDebitForm voform = (RegularDebitForm) form;
			RegularDebitSigned hpo = voform.getPoSigned();
			
			String syspara = request.getParameter("syspara"); 
			
			commSetToXML(voform, TransCodeEntity.QUERYCD,"BEPS");
			voform.setMsgId("123");//报文标识号
			voform.setQueryCd(TransCodeEntity.RegularDebitAction_sendMsgMaintenanceSigned);
			this.setFenYe(voform);
			
			if(syspara.equals("mx") || syspara.equals("modify")){
				String htbh = request.getParameter("htbh");
				voform.getConditions().add("PmtAgrmtNb:"+htbh);
			}else{
				if(!"".equals(hpo.getHtbh()) && hpo.getHtbh() != null){
					voform.getConditions().add("PmtAgrmtNb:"+hpo.getHtbh());
				}
			}
			
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"transaction",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
			
			List<RegularDebitSigned>  List = commonXMLEntity.getResults();	
			
			if(syspara.equals("mx")){			
				request.setAttribute("po", List.get(0));
				request.setAttribute("cnaps2jydm","1510713302");
				return mapping.findForward("detailInfo");
			}else if(syspara.equals("modify")){
				request.setAttribute("po",List.get(0));
				request.setAttribute("syspara",syspara);
				return mapping.findForward("inputSigned");
			}else{
			    this.setQueryPageValue(voform,true);
				this.setPageInfo(request,voform);
				this.setObjectToRequest(request, "MaintenanceSigned",List);
				return mapping.findForward("MaintenanceSigned");
			}

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	 
}