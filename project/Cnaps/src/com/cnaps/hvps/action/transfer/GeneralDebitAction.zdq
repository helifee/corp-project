package com.cnaps.hvps.action.transfer;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.bancstone.service.systemManage.impl.CommonServices;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.transfer.GeneralDebitForm;
import com.cnaps.hvps.persistence.transfer.TreasuryFundsTransferDebit;
import com.cnaps.hvps.persistence.transfer.TreasuryFundsTransferDebitPayment;

public class GeneralDebitAction extends BaseAction {

	/**
	 * 普通借记-总账、普通借记-转账 录入
	 */
	@SuppressWarnings( { "unchecked", "static-access" })
	public ActionForward sendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			
				GeneralDebitForm voform = (GeneralDebitForm) form;
				// 报文头
				String transactionid = TransCodeEntity.SEND_BEPS_GENERAL_DEBIT;// 功能代码
				commSetToXML(voform, request, transactionid);
				voform.setPmtGrpId(voform.getPo().getPmtgrpid());//支付交易组号
				TreasuryFundsTransferDebit tftd;
				TreasuryFundsTransferDebitPayment tftdp;

				if (voform.getPo().getPmttp().equals("B104")) {
					voform.getPo().setNumOfTrnsctns(voform.getPo().getGk_numoftrnsctns());//明细条数
					// String[] mx_xh = request.getParameterValues("po.xh");
					String[] mx_zsjgdldm = request
							.getParameterValues("po.gk_typecd");
					String[] mx_yskmdm = request
							.getParameterValues("po.gk_sbjctcd");
					String[] mx_fse = request
							.getParameterValues("po.gk_occrrdamt");

					for (int i = 0; i < mx_zsjgdldm.length; i++) {
						tftd = new TreasuryFundsTransferDebit();
						// tftd.setXh(mx_xh[i]);
						tftd.setTypecd(mx_zsjgdldm[i]);
						tftd.setSbjctcd(mx_yskmdm[i]);
						tftd.setOccrrdamt(mx_fse[i]);
						
						voform.getPo().getTftd().add(tftd);
					}
				}
				if (voform.getPo().getPmttp().equals("B307")) {
					voform.getPo().setNumOfTrnsctns(voform.getPo().getGz_numoftrnsctns());//明细条数
					String[] mx_gzdfgzyhdl = request
							.getParameterValues("po.gz_typecd");
					String[] mx_gzbjdm = request
							.getParameterValues("po.gz_cptlcd");
					String[] mx_gzbjje = request
							.getParameterValues("po.gz_cptlamt");
					String[] mx_gzlxdm = request
							.getParameterValues("po.gz_accrlcd");
					String[] mx_gzlxje = request
							.getParameterValues("po.gz_accrlamt");
					for (int i = 0; i < mx_gzdfgzyhdl.length; i++) {
						tftdp = new TreasuryFundsTransferDebitPayment();
						tftdp.setTypecd(mx_gzdfgzyhdl[i]);
						tftdp.setCptlcd(mx_gzbjdm[i]);
						tftdp.setCptlamt(mx_gzbjje[i]);
						tftdp.setAccrlcd(mx_gzlxdm[i]);
						tftdp.setAccrlamt(mx_gzlxje[i]);

						voform.getPo().getTftdp().add(tftdp);
					}
				}

				TransServices transServices = (TransServices) this
						.getBean("transServices");
				CommonXMLEntity commonXMLEntity = transServices.transProcess(
						voform, voform.getTransactionId(), "transaction", "");
				String reslutmessage = "";// 处理信息
				if (!commonXMLEntity.getProcessCode().equals("000000")) {
					throw new PicpMessageException("错误码：["
							+ commonXMLEntity.getProcessCode() + "] 错误信息：["
							+ commonXMLEntity.getProcessDes() + "]");
				}else{
					reslutmessage = "处理成功码：" + commonXMLEntity.getProcessCode()
					+ "普通借记业务业务发送成功！支付交易组号为："+voform.getPmtGrpId() ;
				}
				saveToken(request);
				return toSuccessPage(mapping, request, reslutmessage);
			

		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}

	// 从菜单直接调整页面
	public ActionForward gotoPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			String syspara = request.getParameter("syspara");
			request.setAttribute("syspara", syspara);
			CommonServices commonService = (CommonServices) this
					.getBean("CommonServices");
			String workdate = request.getSession().getAttribute("workDate")
					.toString();// 工作日期
			String transId = commonService.getSEQTransId(workdate);
			request.setAttribute("transId", transId);
			saveToken(request);
			return mapping.findForward("input");
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}

	}

}
