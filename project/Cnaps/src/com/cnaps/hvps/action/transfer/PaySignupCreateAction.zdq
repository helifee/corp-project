package com.cnaps.hvps.action.transfer;

import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.bancstone.service.systemManage.impl.CommonServices;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.transfer.PaySignupCreateForm;
import com.cnaps.hvps.form.transfer.PersonCrashSpanBankForm;

/**
 * @包名   com.cnaps.hvps.action.transfer
 * @文件名 PaySignupCreate.java
 * @作者   zcx
 * @创建日期 Jun 1, 2011
 * @版本 V 1.0
 * 付款签约维护
 */
public class PaySignupCreateAction extends BaseAction{
	/**
	 * <ul>
	 * <li>开发作者：zcx</li>
	  * <li> 方法说明： 付款签约录入  
	  *   
	  * 
	  * </li>
	 * </ul>
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward  signupCreate(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response)throws Exception {
		PaySignupCreateForm pvpform = (PaySignupCreateForm)form;
		 CommonXMLEntity commonXMLEntity;
		 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss");
		 
		 CommonServices commonService = (CommonServices)this.getBean("CommonServices");
			String workdate=request.getSession().getAttribute("workDate").toString();//工作日期
			String  msgId= commonService.getSEQMsgId(workdate);
			pvpform.setMsgId(msgId);//报文标识号
			pvpform.setBrnchCd((String) request.getSession().getAttribute("bankCode"));//网点号
			//pvpform.setTermId("001");//终端号
			pvpform.setTermId((String)request.getSession().getAttribute("termId"));//终端号 
			Systemusersmanage user  =(Systemusersmanage) request.getSession().getAttribute("userentity");
			
			
		    pvpform.setOperTeller(user.getUsername());//操作员名字
	 	 pvpform.setSource("CNAPS2");
		 pvpform.setDestination("BEPS");
		 pvpform.setSendDateTime(sdf.format(new Date()));
		 pvpform.getPo().setContractorCstmrId("0000");
		 pvpform.setMsgcode("beps.101.001.01");
		 pvpform.setQueryCd("1510610101");
	   String  reslutmessage="";	
   	  commSetToXML(pvpform,TransCodeEntity.SEND_BEPS_PaySignupCreateAction_signupCreate,"BEPS");
      	try {
      	  TransServices transServices = (TransServices)this.getBean("transServices");
   		
        
       		 commonXMLEntity = transServices.transProcess(pvpform,pvpform.getTransactionId() ,
          			"transaction",pvpform.getQueryCd());//新版查询方法
    			 
    		
      		
      		if(!commonXMLEntity.getProcessCode().equals("000000"))
				{
					throw new PicpMessageException("错误码："+commonXMLEntity.getProcessCode()+"错误信息："+commonXMLEntity.getProcessDes());
				}else
				{
					 
						reslutmessage="处理成功码："+commonXMLEntity.getProcessCode()+" 录入成功！";
				 
				}
      	 return toSuccessPage(mapping,request,reslutmessage);
			} catch ( Exception e) {
				
				//e.printStackTrace();
				return toFailedPage(mapping, request,e.getMessage() );
			}
	
		
		
	}
	public ActionForward  delete(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response)throws Exception {
		  String id= request.getParameter("id");
			PaySignupCreateForm pvpform = (PaySignupCreateForm)form;
			 CommonXMLEntity commonXMLEntity;
			 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss");
			 
			 pvpform.setBrnchCd("001");//网店号
			 Systemusersmanage user  =(Systemusersmanage) request.getSession().getAttribute("userentity");
			    pvpform.setOperTeller(user.getUsername());//操作员名字
			  
			 pvpform.setTermId("001");//终端号
			 
			 pvpform.setSource("CNAPS2");
			 pvpform.setDestination("BEPS");
			 CommonServices commonService = (CommonServices)this.getBean("CommonServices");
				String workdate=request.getSession().getAttribute("workDate").toString();//工作日期
				String  msgId= commonService.getSEQMsgId(workdate);
				pvpform.setMsgId(msgId);//报文标识号
				 pvpform.setQueryCd(TransCodeEntity.SEND_BEPS_PaySignupCreateAction_delete);
			 pvpform.setSendDateTime(sdf.format(new Date()));
			 pvpform.setBusinesscode("1510610103");
			 pvpform.setMsgcode("beps.101.001.03");
				pvpform.getPo().setId(id);
		   String  reslutmessage="";	
	   	  commSetToXML(pvpform,TransCodeEntity.SEND_BEPS_PaySignupCreateAction_delete,"BEPS");
	      	try {
	      	  TransServices transServices = (TransServices)this.getBean("transServices");
	   		
	   	commonXMLEntity = transServices.transProcess(pvpform, TransCodeEntity.SEND_BEPS_PaySignupCreateAction_delete,
	          			"transaction",pvpform.getQueryCd());//新版查询方法
	    			 
	      		
	      		if(!commonXMLEntity.getProcessCode().equals("000000"))
					{
						throw new PicpMessageException("错误码："+commonXMLEntity.getProcessCode()+"错误信息："+commonXMLEntity.getProcessDes());
					}else
					{
						 
							reslutmessage="处理成功码："+commonXMLEntity.getProcessCode()+"删除成功！";
					 
					}
	      	 return toSuccessPage(mapping,request,reslutmessage);
				} catch ( Exception e) {
					
					
					return toFailedPage(mapping, request,e.getMessage() );
				}
		
			
			
	
				
}
	//激活密码，将跨行查询密码累计错误次数  和 跨行通兑密码累计错误次数重置为零
	public ActionForward  SetQryPswdErrNbO(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response)throws Exception {
		  String id= request.getParameter("id");
			PaySignupCreateForm pvpform = (PaySignupCreateForm)form;
			 CommonXMLEntity commonXMLEntity;
			 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss");
			 String exchangecode="610104";//
			 pvpform.setBrnchCd("001");//网店号
			 Systemusersmanage user  =(Systemusersmanage) request.getSession().getAttribute("userentity");
			    pvpform.setOperTeller(user.getUsername());//操作员名字
			  
			 pvpform.setTermId("001");//终端号
			 
			 pvpform.setSource("CNAPS2");
			 pvpform.setDestination("BEPS");
			 CommonServices commonService = (CommonServices)this.getBean("CommonServices");
				String workdate=request.getSession().getAttribute("workDate").toString();//工作日期
				String  msgId= commonService.getSEQMsgId(workdate);
				pvpform.setMsgId(msgId);//报文标识号
				
			 pvpform.setSendDateTime(sdf.format(new Date()));
			 pvpform.setBusinesscode("1510610104");
			 pvpform.setMsgcode("beps.101.001.04");
			 pvpform.setQueryCd("1510610104");
				pvpform.getPo().setId(id);
		   String  reslutmessage="";	
	   	  commSetToXML(pvpform,exchangecode,"BEPS");
	      	try {
	      	  TransServices transServices = (TransServices)this.getBean("transServices");
	   		
	        
	       		//commonXMLEntity = transServices.busProcess(pvpform, "1510"+exchangecode, request.getRealPath("/"));
	       	  	commonXMLEntity = transServices.transProcess(pvpform, TransCodeEntity.SEND_BEPS_PaySignupCreateAction_SetQryPswdErrNbO,
	          			"transaction",pvpform.getQueryCd());//新版查询方法
	    			
	      		
	      		if(!commonXMLEntity.getProcessCode().equals("000000"))
					{
						throw new PicpMessageException("错误码："+commonXMLEntity.getProcessCode()+"错误信息："+commonXMLEntity.getProcessDes());
					}else
					{
						 
							reslutmessage="处理成功码："+commonXMLEntity.getProcessCode()+"密码激活成功！";
					 
					}
	      	 return toSuccessPage(mapping,request,reslutmessage);
				} catch ( Exception e) {
					
					
					return toFailedPage(mapping, request,e.getMessage() );
				}
		
			
			
	
}
	//付款签约维护
	public ActionForward  modify(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response)throws Exception {
		  String id= request.getParameter("id");
	
		  
			PaySignupCreateForm pvpform = (PaySignupCreateForm)form;
			 CommonXMLEntity commonXMLEntity;
			 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss");
			 
			 pvpform.setBrnchCd("001");//网页
			 Systemusersmanage user  =(Systemusersmanage) request.getSession().getAttribute("userentity");
			    pvpform.setOperTeller(user.getUsername());//操作员名字
			  
			 pvpform.setTermId("001");//终端号
			 
			 pvpform.setSource("CNAPS2");
			 pvpform.setDestination("BEPS");
			 CommonServices commonService = (CommonServices)this.getBean("CommonServices");
				String workdate=request.getSession().getAttribute("workDate").toString();//工作日期
				String  msgId= commonService.getSEQMsgId(workdate);
				pvpform.setMsgId(msgId);//报文标识号
			 pvpform.setSendDateTime(sdf.format(new Date()));
			 
			 pvpform.setMsgcode("beps.101.001.05");
			 pvpform.setQueryCd("1510610105");
				pvpform.getPo().setId(id);
		   String  reslutmessage="";	
	   	  commSetToXML(pvpform,TransCodeEntity.SEND_BEPS_PaySignupCreateAction_modify,"BEPS");
	      	try {
	      	  TransServices transServices = (TransServices)this.getBean("transServices");
	   		
	         	commonXMLEntity = transServices.transProcess(pvpform, TransCodeEntity.SEND_BEPS_PaySignupCreateAction_modify,
	          			"transaction",pvpform.getQueryCd());//新版查询方法
	    			
	    		
	      		
	      		if(!commonXMLEntity.getProcessCode().equals("000000"))
					{
						throw new PicpMessageException("错误码："+commonXMLEntity.getProcessCode()+"错误信息："+commonXMLEntity.getProcessDes());
					}else
					{
						 
							reslutmessage="处理成功码："+commonXMLEntity.getProcessCode()+"处理成功！";
					 
					}
	      	 return toSuccessPage(mapping,request,reslutmessage);
				} catch ( Exception e) {
					
					
					return toFailedPage(mapping, request,e.getMessage() );
				}
		
			
			
 
 
   

   }
}
