package com.cnaps.hvps.action.info;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.info.BusinessReturnAnswerForm;
import com.cnaps.hvps.persistence.info.BusinessReturnAnswer;

/**
 * @author zhangxj
 * 业务退回应答
 * 
 *
 */
@SuppressWarnings("unchecked")
public class BusinessReturnAnswerAction extends BaseAction {
	/**
	 * 业务退回应答发送方法
	 * @param mapping 路径映射
	 * @param form 界面信息
	 * @param request 请求
	 * @param response 回应
	 * @return ActionForward
	 */
	public ActionForward sendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String flag = request.getParameter("flag");
		String id = request.getParameter("id");
		try{
			BusinessReturnAnswerForm voform = (BusinessReturnAnswerForm) form;
			//报文设置
			String transactionid = TransCodeEntity.BusinessReturnAnswerAction_sendMsg;//功能代码
			commSetToXML(voform,request,transactionid);
			voform.getPo().setBackflag(flag);
			voform.getPo().setId(id);
			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols","");
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			return toSuccessPage(mapping,request,"业务退回申请发送成功,报文标识号为："+commonXMLEntity.getMessageId());

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	/**
	 * 业务退回应答页面跳转方法
	 * @param mapping 路径映射
	 * @param form 界面请求
	 * @param request 请求
	 * @param response 回应
	 */
	public ActionForward gotoPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("input");
	}
	
	// 业务退回应答查询
	public ActionForward querysendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {


		try{
			BusinessReturnAnswerForm voform = (BusinessReturnAnswerForm) form;
			//报文头设置

			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			//查询代码
			voform.setQueryCd(TransCodeEntity.BusinessReturnAnswerAction_sendMsg_query);
			//分页设置
			this.setFenYe(voform);

			//查询条件设置
			if(null!=voform.getMsgID()&&!"".equals(voform.getMsgID())){
				voform.getConditions().add("msgid:"+voform.getMsgID());
			}
			if(null!=voform.getWorkDt()&&!"".equals(voform.getWorkDt())){
				voform.getConditions().add("workdt:"+voform.getWorkDt());
			}
			if(null!=voform.getInstdPty()&&!"".equals(voform.getInstdPty())){
				voform.getConditions().add("instdpty:"+voform.getInstdPty());
			}
			if(null!=voform.getStatus()&&!"".equals(voform.getStatus())){
				voform.getConditions().add("status:"+voform.getStatus());
			}
			if(null!=voform.getBackTpCd()&&!"".equals(voform.getBackTpCd())){
				voform.getConditions().add("status:"+voform.getBackTpCd());
			}
			
			
			

			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			//设置分页信息。记录总条数
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
		    setQueryPageValue(voform,true);
			List<BusinessReturnAnswer>  list = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request, "queryList",list);
			return mapping.findForward("query");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	// 业务退回应答明细查询
	public ActionForward viewDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		

		try{
			//String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			
			BusinessReturnAnswerForm voform = (BusinessReturnAnswerForm) form;
			//报文头设置
			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			voform.setQueryCd(TransCodeEntity.BusinessReturnAnswerAction_sendMsg_query);
			this.setFenYe(voform);
			
			// 查询明细条件
			String detailid = request.getParameter("detailid");
			voform.getConditions().add("msgid:"+detailid);
			
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			List<BusinessReturnAnswer>  list = commonXMLEntity.getResults();	
			BusinessReturnAnswer entity = new BusinessReturnAnswer();
			if(list.size()>0){
				entity = list.get(0);
			}
			request.setAttribute("po", entity);
			request.setAttribute("cnaps2jydm",TransCodeEntity.BusinessReturnAnswerAction_sendMsg_query);
			return mapping.findForward("detailInfo");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
}
