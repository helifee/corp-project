package com.cnaps.hvps.action.info;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.info.InformationQueryForm;
import com.cnaps.hvps.form.info.SendFreeMessageForm;
import com.cnaps.hvps.persistence.info.Informationquery;
import com.cnaps.hvps.persistence.info.Sendfreemessage;

public class InformationAction extends BaseAction {
	
	// 信息往报查询
	public ActionForward querysendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			
			InformationQueryForm voform = (InformationQueryForm) form; //获得InformationQueryForm
			//报文头设置

			String transactionid = TransCodeEntity.QUERYCODE_MSG;//功能代码
			commSetToXML(voform,request,transactionid); //设置XML需要用到公共XML部分
			voform.setMsgtpcd(voform.getPo().getMsgtpcd());
//			voform.setSystemcd(voform.getPo().getSystemcd());
			//查询代码
			voform.setQueryCd(TransCodeEntity.QUERYCODE_MSG);
			//分页设置
			this.setFenYe(voform);
			//查询条件设置
			Informationquery hpo = voform.getPo();
			if(!"".equals(hpo.getMsgid()) && hpo.getMsgid() != null){
				voform.getConditions().add("msgid:"+hpo.getMsgid());
			}
			if(!"".equals(hpo.getWorkdate()) && hpo.getWorkdate() != null){
				voform.getConditions().add("workdate:"+hpo.getWorkdate());
			}
			if(!"".equals(hpo.getSystemcd()) && hpo.getSystemcd() != null){
				voform.getConditions().add("systemcd:"+hpo.getSystemcd());
			}
//			if(!"".equals(hpo.getMsgtpcd()) && hpo.getMsgtpcd() != null){
//				voform.getConditions().add("Msgtpcd:"+hpo.getMsgtpcd());
//			}
			voform.getConditions().add("direction:O");
			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			//设置分页信息。记录总条数
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
		    this.setQueryPageValue(voform,true);
		    
			List<Informationquery>  List = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			request.setAttribute("condition", hpo);
			
			this.setObjectToRequest(request, "queryList",List);
			request.setAttribute("business", business);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	// 从菜单直接调整页面
	public ActionForward gotoPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			request.setAttribute("business",business);
			
			return mapping.findForward("input");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	//信息往报查询明细浏览(发送)
	public ActionForward querysendMsgdetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			
			InformationQueryForm voform = (InformationQueryForm) form;
			String transactionid = TransCodeEntity.QUERYCODE_MSG;//功能代码
			commSetToXML(voform,request,transactionid);
			voform.setQueryCd(TransCodeEntity.QUERYCODE_MSG);
			this.setFenYe(voform);
			
			// 查询明细条件
			String detailid = request.getParameter("detailid");
			voform.getConditions().add("msgid:"+detailid);
			
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			List<Informationquery>  list = commonXMLEntity.getResults();	
			Informationquery entity = new Informationquery();
			if(list.size()>0){
				entity = list.get(0);
			}
			request.setAttribute("po", entity);
			request.setAttribute("cnaps2jydm","15101000");
			
			return mapping.findForward("informationDetailInfo");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
}
