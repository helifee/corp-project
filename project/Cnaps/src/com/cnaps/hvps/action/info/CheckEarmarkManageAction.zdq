package com.cnaps.hvps.action.info;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.info.BusinessStatusQueryForm;
import com.cnaps.hvps.form.info.CheckEarmarkManageForm;
import com.cnaps.hvps.persistence.info.BusinessStatusQuery;
import com.cnaps.hvps.persistence.info.CheckEarmarkManage;
import com.cnaps.hvps.persistence.messages.CcmsMsgTpManger;


public class CheckEarmarkManageAction extends BaseAction {
	
	/**
	 * 支票圈存管理报文
	 *
	 */
	public ActionForward sendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
//			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			
			CheckEarmarkManageForm voform = (CheckEarmarkManageForm) form;
			
			//报文设置
			String transactionid = TransCodeEntity.CHECK_EARMARK_MANAGE;//功能代码
			commSetToXML(voform,request,transactionid);
//			commSetToXML(voform, "15107418",business);
//			voform.setMsgId("123");//报文标识号 
//			voform.setMsgcode("ccms.316.001.01"); // 报文号

			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols","");
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			return toSuccessPage(mapping,request,"发送成功！");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	// 从菜单直接调整页面
	public ActionForward gotoPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			request.setAttribute("business",business);
			
			return mapping.findForward("input");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
		
	}
	
	// 支票圈存管理报文浏览
	public ActionForward querysendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……			
			
			BusinessStatusQueryForm voform = (BusinessStatusQueryForm) form;
			BusinessStatusQuery hpo = voform.getPo();
			
			commSetToXML(voform, TransCodeEntity.QUERYCD,business);
			//voform.setMsgId("123");//报文标识号
			voform.setQueryCd("1510931602");			
			this.setFenYe(voform);
			
			if(!"".equals(hpo.getMsgid()) && hpo.getMsgid() != null){
				voform.getConditions().add("msgid:"+hpo.getMsgid());
			}
			if(!"".equals(hpo.getWorkdate()) && hpo.getWorkdate() != null){
				voform.getConditions().add("workdate:"+hpo.getWorkdate());
			}
 
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
			
		    this.setQueryPageValue(voform,true);
			List<BusinessStatusQuery>  List = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request, "queryList",List);
			request.setAttribute("business", business);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	/**
	 * 支票圈存管理查询
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return 查询界面 queryCheckEarmarkManageList.jsp
	 */
	public ActionForward findCheckEarmarkManageList(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {


		try{
			String business = request.getParameter("business");  // 标识 CCMS 公共控制…			
			
			//封装界面查询条件
			CheckEarmarkManageForm cemform = (CheckEarmarkManageForm) form;
			CheckEarmarkManage cem = cemform.getPo();//获取实体类
			
			if(!"".equals(cem.getMsgid())&&cem.getMsgid()!= null){
				cemform.getConditions().add("msgid:"+cem.getMsgid());//报文标识号加入数据集
			}
			if(!"".equals(cem.getWorkdt())&&cem.getWorkdt()!= null){
				cemform.getConditions().add("workdt:"+cem.getWorkdt());//工作日期加入数据集
			}
			
			String transactionid = TransCodeEntity.QUERYCD;//功能代码--普通查询
			commSetToXML(cemform,transactionid ,business);
			cemform.setQueryCd(TransCodeEntity.BepsCheckEarmarkManageAction_sendMsg_query);//查询码 与后台查询沟通			
			this.setFenYe(cemform);
 
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(cemform, cemform.getTransactionId(),"systemcontrols",cemform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			if(commonXMLEntity.getRecordcount() == null){
				cemform.setTotalSize(0);
			}else{
				cemform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
			
		    this.setQueryPageValue(cemform,true);
			List<CheckEarmarkManage>  List = commonXMLEntity.getResults();
			this.setPageInfo(request,cemform);
			this.setObjectToRequest(request, "queryList",List);
			request.setAttribute("business", business);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	
	}
	
	
	
	public ActionForward findCheckEarmarkManageDetailList(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {
		 
		try{
		String id= request.getParameter("id");//获取明细查询参数
		CheckEarmarkManageForm cemform = (CheckEarmarkManageForm) form;
		
		if(!"".equals(id) && id!= null){
			cemform.getConditions().add("id:"+id);//序号加入查询条件
		}
		String transactionid = TransCodeEntity.QUERYCD;//功能代码--普通查询
		commSetToXML(cemform,TransCodeEntity.QUERYCD ,"");
		cemform.setQueryCd(TransCodeEntity.BepsCheckEarmarkManageAction_sendMsg_query);//查询码 与后台查询沟通	
		this.setFenYe(cemform);
		TransServices transServices = (TransServices)this.getBean("transServices");
		CommonXMLEntity  commonXMLEntity = transServices.transProcess(cemform, cemform.getTransactionId(),"systemcontrols",cemform.getQueryCd());
		if(!commonXMLEntity.getProcessCode().equals("000000"))
		{
			throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
		}
		List<CheckEarmarkManage>  list = commonXMLEntity.getResults();
		if(list!=null&&list.size()>0){
			request.setAttribute("cem",list.get(0));//封装实体对象，用于窗口中明细页面信息显示
		}
		return mapping.findForward("detail");//跳转到明细页面
   
	} catch (Exception e) {
		e.printStackTrace(); 
		return toFailedPage(mapping, request,e.getMessage());
	}
  }
	
	
}
