package com.cnaps.hvps.action.info;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.info.BusinessCancleForm;
import com.cnaps.hvps.form.info.RecvFreeMessageForm;
import com.cnaps.hvps.form.info.SendFreeMessageForm;
import com.cnaps.hvps.form.info.QuerybookForm;
import com.cnaps.hvps.persistence.info.Businesscancle;
import com.cnaps.hvps.persistence.info.Querybook;
import com.cnaps.hvps.persistence.info.Recvfreemessage;
import com.cnaps.hvps.persistence.info.Sendfreemessage;
import com.cnaps.hvps.persistence.messages.Hvpsbankclassalternotify;

public class BusinessCancleAction extends BaseAction{
	
	/**
	 * 业务撤销录入
	 *
	 */
	@SuppressWarnings( { "unchecked", "static-access" })
	public ActionForward sendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			
			BusinessCancleForm voform = (BusinessCancleForm) form;

			//报文设置
			String transactionid = TransCodeEntity.BUSINESSCANCLE_SEND;//功能代码
			commSetToXML(voform,request,transactionid);
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols","");
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			return toSuccessPage(mapping,request,"业务撤销成功！");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	// 从菜单直接调整页面
	public ActionForward gotoPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			request.setAttribute("business",business);
			
			return mapping.findForward("input");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	// 业务撤销查询
	public ActionForward querysendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			
			BusinessCancleForm voform = (BusinessCancleForm) form;
			Businesscancle hpo = voform.getPo();		
			//报文设置
			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			
			voform.setQueryCd(TransCodeEntity.BUSINESSCANCLE_QUERY);			
			this.setFenYe(voform);
			
			if(!"".equals(hpo.getMsgid()) && hpo.getMsgid() != null){
				voform.getConditions().add("msgid:"+hpo.getMsgid());
			}
			if(!"".equals(hpo.getWorkdate()) && hpo.getWorkdate() != null){
				voform.getConditions().add("workdate:"+hpo.getWorkdate());
			}
 
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
			
		    this.setQueryPageValue(voform,true);
			List<Businesscancle>  List = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request, "queryList",List);
			request.setAttribute("business", business);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	// 业务撤销查询明细浏览
	public ActionForward querysendMsgDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			
			BusinessCancleForm voform = (BusinessCancleForm) form;
			
//			commSetToXML(voform, TransCodeEntity.QUERYCD,business);
//			voform.setMsgId("123");//报文标识号
//			voform.setQueryCd("1510930702");
			//报文设置
			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			
			voform.setQueryCd(TransCodeEntity.BUSINESSCANCLE_QUERY);	
			this.setFenYe(voform);
			
			// 查询明细条件
			String detailid = request.getParameter("detailid");
			voform.getConditions().add("msgid:"+detailid);
			
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			List<Businesscancle>  List = commonXMLEntity.getResults();			
			request.setAttribute("po", List.get(0));
			request.setAttribute("cnaps2jydm","1510930703");
			return mapping.findForward("detailInfo");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}

}
