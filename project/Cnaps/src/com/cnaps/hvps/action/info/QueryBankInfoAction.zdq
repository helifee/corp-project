package com.cnaps.hvps.action.info;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.bancstone.service.systemManage.impl.CommonServices;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.info.QueryBankInfoForm;
import com.cnaps.hvps.persistence.info.QueryBankInfo;

public class QueryBankInfoAction extends BaseAction {
	
	/**
	 * 发送查询报文 行名行号查询
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward querySendxml(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			
			CommonServices commonService = (CommonServices)this.getBean("CommonServices");
			String workdate=request.getSession().getAttribute("workDate").toString();//工作日期
			String  msgId= commonService.getSEQMsgId(workdate);
			
            String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
            String bankcode = (String)request.getAttribute("cc");
			
			//界面查询条件
            QueryBankInfoForm voform = (QueryBankInfoForm) form;
            QueryBankInfo po = voform.getPo();
			
			commSetToXML(voform, TransCodeEntity.QUERYCD,business);
			voform.setMsgId(msgId);//报文标识号
			voform.setQueryCd("1510991603");			
			this.setFenYe(voform);
 
			TransServices transServices = (TransServices)this.getBean("transServices");
			commSetConditionsList(voform,po);
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(), "systemcontrols", voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000"))

			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
		    this.setQueryPageValue(voform,true);
			List<QueryBankInfo>  List = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request, "queryList",List);
//			request.setAttribute("business", business);
			request.setAttribute("condition", po);
			return mapping.findForward("queryList");
			
		} catch (Exception e) {
			 e.printStackTrace();
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	/**设置 传送到后台的XML 的条件List到FORM里  查询条件
	 * @param voform
	 * @param hpo
	 */
	@SuppressWarnings("unchecked")
	private void commSetConditionsList(QueryBankInfoForm voform,QueryBankInfo hpo)
	{
		
		
		if (!StringUtils.isEmpty(hpo.getBankcode())) 
		{
			voform.getConditions().add("bankcode:"+hpo.getBankcode());
		}
		if (!StringUtils.isEmpty(hpo.getParticipantshortname())) 
		{
			voform.getConditions().add("participantname:"+hpo.getParticipantshortname());
		}
		

	}
	
	

}
