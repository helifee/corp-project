package com.cnaps.hvps.action.info;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.info.RealTimeReversalForm;
import com.cnaps.hvps.form.info.SendFreeMessageForm;
import com.cnaps.hvps.persistence.info.RealTimeReversal;
import com.cnaps.hvps.persistence.info.Sendfreemessage;

@SuppressWarnings("unchecked")
public class RealTimeReversalAction extends BaseAction{

	/**
	 * 实时业务冲正
	 * 
	 */
	public ActionForward sendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			RealTimeReversalForm voform = (RealTimeReversalForm) form;
			//报文设置
			String transactionid = TransCodeEntity.RealTimeReversalAction_sendMsg_add;//功能代码
			commSetToXML(voform,request,transactionid);
			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols","");
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			return toSuccessPage(mapping,request,"实时业务冲正发送成功,报文标识号为："+commonXMLEntity.getMessageId());

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	// 从菜单跳转到页面
	public ActionForward gotoPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			
			
			return mapping.findForward("input");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
		
	}
	
	// 实时业务冲正查询
	public ActionForward querysendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {


		try{
			RealTimeReversalForm voform = (RealTimeReversalForm) form;
			//报文头设置

			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			//查询代码
			voform.setQueryCd(TransCodeEntity.RealTimeReversalAction_sendMsg_query);
			//分页设置
			this.setFenYe(voform);
			
//			<tr>
//        	<td class="text_tablehead_b">报文标识号</td>
//          	<td >
//           		<html:text property="msgid" maxlength="35" onkeyup="fun_number(this)" onblur="fun_number(this)"/>
//          	</td>
//          	<td class="text_tablehead_b">工作日期</td>
//          	<td >
//           		<html:text property="workDt" styleClass="Wdate" onclick="WdatePicker()"/>
//          	</td>
//          
//        </tr> 
//        <tr>
//        	<td class="text_tablehead_b">接收参与机构</td>
//          	<td >
//           		<html:text property="instdPty" maxlength="14" onkeyup="fun_number(this)" onblur="fun_number(this)"/>
//          	</td>
//          	<td class="text_tablehead_b">状态</td>
//          	<td >
//           		<html:text property="status" />
//          	</td>
//          
//        </tr> 
			//查询条件设置
			if(null!=voform.getMsgid()&&!"".equals(voform.getMsgid())){
				voform.getConditions().add("msgid:"+voform.getMsgid());
			}
			if(null!=voform.getWorkDt()&&!"".equals(voform.getWorkDt())){
				voform.getConditions().add("workdt:"+voform.getWorkDt());
			}
			if(null!=voform.getInstdPty()&&!"".equals(voform.getInstdPty())){
				voform.getConditions().add("instdpty:"+voform.getInstdPty());
			}
			if(null!=voform.getStatus()&&!"".equals(voform.getStatus())){
				voform.getConditions().add("status:"+voform.getStatus());
			}
			
			
//		
//			if(null!=request.getParameter("po.msgid") && (!"".equals(request.getParameter("po.msgid")))){
//				voform.getConditions().add("msgid:"+request.getParameter("po.msgid"));
//			}
//			if(null!=request.getParameter("po.pmtGrpId")&&(!"".equals(request.getParameter("po.pmtGrpId")))){
//				voform.getConditions().add("pmtgrpid:"+request.getParameter("po.pmtGrpId"));
//			}
//			if(null!=request.getParameter("po.instdPty")&& (!"".equals(request.getParameter("po.instdPty")))){
//				voform.getConditions().add("instdpty:"+request.getParameter("po.instdPty"));
//			}
//			if(null!=request.getParameter("po.grpCxlId")&&(!"".equals(request.getParameter("po.grpCxlId")))){
//				voform.getConditions().add("grpcxlid:"+request.getParameter("po.grpCxlId"));
//			}
//			if(null!=request.getParameter("po.workDt")&&(!"".equals(request.getParameter("po.workDt")))){
//				voform.getConditions().add("workdt:"+request.getParameter("po.workDt"));
//			}
//			Iterator it=voform.getConditions().iterator();
//			while(it.hasNext()){
//				System.out.println((String)it.next());
//			}
			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			//设置分页信息。记录总条数
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
		    setQueryPageValue(voform,true);
			List<RealTimeReversal>  list = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			//request.setAttribute("condition", hpo);
			this.setObjectToRequest(request, "queryList",list);
//			request.setAttribute("po.msgid", request.getParameter("po.msgid"));
//			request.setAttribute("po.pmtGrpId", request.getParameter("po.pmtGrpId"));
//			request.setAttribute("po.instdPty", request.getParameter("po.instdPty"));
//			request.setAttribute("po.grpCxlId", request.getParameter("po.grpCxlId"));
//			request.setAttribute("po.workDt", request.getParameter("po.workDt"));
			return mapping.findForward("queryInput");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	// 实时业务冲正明细查询
	public ActionForward viewDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		

		try{
			//String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			
			RealTimeReversalForm voform = (RealTimeReversalForm) form;
			//报文头设置
//			voform.setTransactionId(TransCodeEntity.QUERYCD);//功能代码
//			voform.setTermId(request.getSession().getAttribute("termId")+"");//终端号
//			voform.setBrnchCd(request.getSession().getAttribute("brnchCd")+"");//网点号
//			Systemusersmanage user = (Systemusersmanage)request.getSession().getAttribute("userentity");
//			voform.setOperTeller(user.getUsername());//操作员
//			Hvpspartyinfo bankInfo =(Hvpspartyinfo)request.getSession().getAttribute("bankInfo");
//			voform.setOperBankCode(bankInfo.getBankcode());//发起参与机构
//			commSetToXML(voform);
			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			voform.setQueryCd(TransCodeEntity.RealTimeReversalAction_sendMsg_query);
			this.setFenYe(voform);
			
			// 查询明细条件
			String detailid = request.getParameter("detailid");
			voform.getConditions().add("msgid:"+detailid);
			
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			List<RealTimeReversal>  list = commonXMLEntity.getResults();	
			RealTimeReversal entity = new RealTimeReversal();
			if(list.size()>0){
				entity = list.get(0);
			}
			request.setAttribute("po", entity);
			request.setAttribute("cnaps2jydm","1510741301");
			return mapping.findForward("detailInfo");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
}
