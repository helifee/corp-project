package com.cnaps.hvps.action.info;

import java.util.Enumeration;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.info.DebitStopPaymentForm;
import com.cnaps.hvps.form.info.RealTimeReversalForm;
import com.cnaps.hvps.persistence.info.BusinessDetails;
import com.cnaps.hvps.persistence.info.DebitStopPayment;
import com.cnaps.hvps.persistence.info.RealTimeReversal;

@SuppressWarnings("unchecked")
public class DebitStopPaymentAction extends BaseAction {
	public ActionForward sendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		try{
			DebitStopPaymentForm voform = (DebitStopPaymentForm) form;
			for(int i=0;i<voform.getPo().getMxcount();i++){
				voform.getPo().getBds().add(new BusinessDetails());
			}
			Enumeration enums=request.getParameterNames();
			while(enums.hasMoreElements()){
				String str =(String) enums.nextElement();
				if(null!=str && str.indexOf("tempbd")>=0){
					if(str.indexOf("orgnlTxId")>=0){
						voform.getPo().getBds().get(Integer.valueOf(str.substring(6, 7))).setOrgnlTxId(request.getParameter(str));
					}
					if(str.indexOf("orgnlPmtTp")>=0){
						voform.getPo().getBds().get(Integer.valueOf(str.substring(6, 7))).setOrgnlPmtTp(request.getParameter(str));
					}
					if(str.indexOf("addtlInf")>=0){
						voform.getPo().getBds().get(Integer.valueOf(str.substring(6, 7))).setAddtlInf(request.getParameter(str));
					}
					if(str.indexOf("orgnlDbtrBrnchId")>=0){
						voform.getPo().getBds().get(Integer.valueOf(str.substring(6, 7))).setOrgnlDbtrBrnchId(request.getParameter(str));
					}
					if(str.indexOf("orgnlCdtrBrnchId")>=0){
						voform.getPo().getBds().get(Integer.valueOf(str.substring(6, 7))).setOrgnlCdtrBrnchId(request.getParameter(str));
					}
				}
			}
			//报文设置
			String transactionid = TransCodeEntity.DebitStopPaymentAction_sendMsg;//功能代码
			commSetToXML(voform,request,transactionid);
			//voform.setPmtGrpId("15102011062100003580");
			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols","");
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			return toSuccessPage(mapping,request,"借记业务止付发送成功,报文标识号为："+commonXMLEntity.getMessageId());

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
		
	}
	
	public ActionForward gotoPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		request.setAttribute("business", "DebitStopPaymentAction");
		return mapping.findForward("input");
	}
	
	public ActionForward gotoQueryPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		request.setAttribute("business", "DebitStopPaymentAction");
		return mapping.findForward("queryInput");
	}
	
	public ActionForward queryMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){

		try{
			DebitStopPaymentForm voform = (DebitStopPaymentForm) form;
			//报文头设置

			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			//查询代码
			voform.setQueryCd(TransCodeEntity.DebitStopPaymentAction_sendQueryMsg);
			//分页设置
			this.setFenYe(voform);
			//查询条件设置
			if(null!=request.getParameter("po.msgid") && (!"".equals(request.getParameter("po.msgid")))){
				voform.getConditions().add("msgid:"+request.getParameter("po.msgid"));
			}
			if(null!=request.getParameter("po.pmtGrpId")&&(!"".equals(request.getParameter("po.pmtGrpId")))){
				voform.getConditions().add("pmtgrpid:"+request.getParameter("po.pmtGrpId"));
			}
			if(null!=request.getParameter("po.instdPty")&& (!"".equals(request.getParameter("po.instdPty")))){
				voform.getConditions().add("instdpty:"+request.getParameter("po.instdPty"));
			}
			if(null!=request.getParameter("po.grpCxlId")&&(!"".equals(request.getParameter("po.grpCxlId")))){
				voform.getConditions().add("grpcxlid:"+request.getParameter("po.grpCxlId"));
			}
			if(null!=request.getParameter("po.workDt")&&(!"".equals(request.getParameter("po.workDt")))){
				voform.getConditions().add("workdt:"+request.getParameter("po.workDt"));
			}
			Iterator it=voform.getConditions().iterator();
			while(it.hasNext()){
				System.out.println((String)it.next());
			}
			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			//设置分页信息。记录总条数
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
		    setQueryPageValue(voform,true);
			List<DebitStopPayment>  list = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			//request.setAttribute("condition", hpo);
			this.setObjectToRequest(request, "queryList",list);
			request.setAttribute("po.msgid", request.getParameter("po.msgid"));
			request.setAttribute("po.pmtGrpId", request.getParameter("po.pmtGrpId"));
			request.setAttribute("po.instdPty", request.getParameter("po.instdPty"));
			request.setAttribute("po.grpCxlId", request.getParameter("po.grpCxlId"));
			request.setAttribute("po.workDt", request.getParameter("po.workDt"));
			return mapping.findForward("queryInput");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	
	// 明细查询
	public ActionForward viewDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			DebitStopPaymentForm voform = (DebitStopPaymentForm) form;
			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			voform.setQueryCd(TransCodeEntity.DebitStopPaymentAction_sendQueryMsg);
			this.setFenYe(voform);
			
			// 查询明细条件
			String detailid = request.getParameter("detailid");
			voform.getConditions().add("msgid:"+detailid);
			
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			List<DebitStopPayment>  list = commonXMLEntity.getResults();	
			DebitStopPayment entity = new DebitStopPayment();
			if(list.size()>0){
				entity = list.get(0);
			}
			request.setAttribute("po", entity);
			request.setAttribute("cnaps2jydm","1510741101");
			return mapping.findForward("detailInfo");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
}
