package com.cnaps.hvps.action.messages;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.messages.HvpsdigsigdownreqinfoForm;
import com.cnaps.hvps.form.messages.HvpspartystatusapplyForm;
import com.cnaps.hvps.persistence.info.Sendfreemessage;
import com.cnaps.hvps.persistence.messages.Hvpsdigsigdownreqinfo;
import com.cnaps.hvps.persistence.messages.Hvpspartystatusapply;

public class HvpsdigsigdownreqinfoAction extends BaseAction  {


	// 数字证书下载申请查询
	public ActionForward findList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		try{
			
			//界面查询条件			
			HvpsdigsigdownreqinfoForm voform = (HvpsdigsigdownreqinfoForm) form;
			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			
			voform.setQueryCd(TransCodeEntity.CERTDOWNLOADAPPLY_QUERYCD);//查询码		
			
			//分页信息设置
			this.setFenYe(voform);
			//查询条件设置
			Hvpsdigsigdownreqinfo hpo = voform.getPo();
			if(!"".equals(hpo.getMsgid()) && hpo.getMsgid() != null){
				voform.getConditions().add("msgid:"+hpo.getMsgid());
			}
 
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}		
			
		    this.setQueryPageValue(voform,true);
			List<Hvpsdigsigdownreqinfo>  list = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request, "queryList",list);
			request.setAttribute("condition", hpo);//查询条件回显
			return mapping.findForward("queryList");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	
	// 数字证书下载
	public ActionForward digisgDownload(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		try{
			//报文头
			HvpsdigsigdownreqinfoForm voform = (HvpsdigsigdownreqinfoForm) form;
			String transactionid = TransCodeEntity.CERTDOWNLOADAPPLY;//功能代码
			commSetToXML(voform,request,transactionid);
			//报文体
			String [] mmbcd = request.getParameterValues("mmbcd");  // 标识 HVPS、BEPS、IBPS
			Hvpsdigsigdownreqinfo hpo = voform.getPo();
			hpo.setMbcd(mmbcd);
			//发送组装报文
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols","");
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			return toSuccessPage(mapping,request,"数字证书申请下载成功！");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	//数字证书申请查询明细浏览
	public ActionForward queryDigsignAppDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			
			HvpsdigsigdownreqinfoForm voform = (HvpsdigsigdownreqinfoForm) form;
			//报文头设置
			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			voform.setQueryCd(TransCodeEntity.CERTDOWNLOADAPPLY_QUERYCD_DETAILS);	
			this.setFenYe(voform);
			
			// 查询明细条件
			String id = "";
			if(request.getParameter("id")!=null){
				id = request.getParameter("id");
			}
			voform.getConditions().add("ApplyId:"+id);
			
			
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}		
			
		    this.setQueryPageValue(voform,true);
			List<Hvpsdigsigdownreqinfo>  list = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request, "queryList",list);
			request.setAttribute("condition", id);
			return mapping.findForward("querydetails");
			
//			List<Hvpsdigsigdownreqinfo>  list = commonXMLEntity.getResults();
//			Hvpsdigsigdownreqinfo entity = new Hvpsdigsigdownreqinfo();
//			if(list.size()>0){
//				entity = list.get(0);
//			}
//			request.setAttribute("po", entity);
//			request.setAttribute("cnaps2jydm",TransCodeEntity.CERTDOWNLOADAPPLY_QUERYCD_DETAILS);
//			return mapping.findForward("detailInfo");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	
	
	
	// 从菜单直接调整页面
	public ActionForward gotoPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			request.setAttribute("business",business);
			
			return mapping.findForward("input");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
		
	}

}
