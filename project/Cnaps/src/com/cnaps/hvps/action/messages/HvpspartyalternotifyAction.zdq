package com.cnaps.hvps.action.messages;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.bancstone.common.utils.BeanUtil;
import com.bancstone.common.utils.StringUtil;
import com.bancstone.constants.MessageConstants;
import com.bancstone.constants.SystemConstants;
import com.bancstone.form.systemManage.SystemusersmanageForm;
import com.bancstone.hibernate.systemManage.Systemgroupsmanage;
import com.bancstone.hibernate.systemManage.Systemorganizationsmanage;
import com.bancstone.hibernate.systemManage.Systemuserandgrouprelation;
import com.bancstone.hibernate.systemManage.Systemuserorganizationrelation;
import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.bancstone.service.systemManage.SystemgroupsmanageServices;
import com.bancstone.service.systemManage.SystemorganizationsmanageServices;
import com.bancstone.service.systemManage.SystemusersmanageServices;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.messages.HvpsbankclassalternotifyForm;
import com.cnaps.hvps.form.messages.HvpspartyalternotifyForm;
import com.cnaps.hvps.persistence.messages.Hvpsbankclassalternotify;
import com.cnaps.hvps.persistence.messages.Hvpspartyalternotify;

public class HvpspartyalternotifyAction extends BaseAction {
	/**
	 * 根据条件模糊查询用户列表
	 * 
	 * @author  史文龙
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	@SuppressWarnings( { "unchecked", "static-access" })
	public ActionForward findList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		try{
			//界面查询条件
			HvpspartyalternotifyForm voform = (HvpspartyalternotifyForm) form;
			Hvpspartyalternotify hpo=voform.getHvpspartyalternotify();
			voform.getConditions().add("msgid:"+hpo.getMsgid());
			voform.getConditions().add("workdate:"+hpo.getWorkdate());
 
			TransServices transServices = (TransServices)this.getBean("transServices");
			String path = request.getSession().getServletContext().getRealPath("/");
			CommonXMLEntity  commonXMLEntity = transServices.busProcess(voform, voform.getTransactionId(),path);if(!commonXMLEntity.getProcessCode().equals("0000"))
			{
				throw new PicpMessageException("错误码："+commonXMLEntity.getProcessCode()+"错误信息："+commonXMLEntity.getProcessDes());
			}
		    this.setQueryPageValue(voform,true);
			List<Hvpspartyalternotify>  List = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request, "queryList",List);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}

}
