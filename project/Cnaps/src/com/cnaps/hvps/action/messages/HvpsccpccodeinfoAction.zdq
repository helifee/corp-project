package com.cnaps.hvps.action.messages;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.messages.HvpsccpccodeinfoForm;
import com.cnaps.hvps.persistence.messages.Hvpsccpccodeinfo;

public class HvpsccpccodeinfoAction extends BaseAction{

	/**
	 * CCPC代码查询
	 *
	 */
	@SuppressWarnings( { "unchecked", "static-access" })
	public ActionForward findList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			
			//界面查询条件			
			HvpsccpccodeinfoForm voform = (HvpsccpccodeinfoForm) form;
			Hvpsccpccodeinfo hpo = voform.getPo();			
			
			commSetToXML(voform, TransCodeEntity.QUERYCD,business);
			//voform.setMsgId("123");//报文标识号msgid 已经取消掉，故不赋值
			voform.setQueryCd("1510991702");			
			this.setFenYe(voform);
			
			if(!"".equals(hpo.getNodecode()) && hpo.getNodecode() != null){
				voform.getConditions().add("nodecode:"+hpo.getNodecode());
			}
			if(!"".equals(hpo.getNodename()) && hpo.getNodename() != null){
				voform.getConditions().add("nodename:"+hpo.getNodename());
			}
 
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
			
		    this.setQueryPageValue(voform,true);
			List<Hvpsccpccodeinfo>  List = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request, "queryList",List);
			request.setAttribute("business", business);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			//e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
}
