package com.cnaps.hvps.action.messages;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.bancstone.common.utils.BeanUtil;
import com.bancstone.common.utils.StringUtil;
import com.bancstone.constants.MessageConstants;
import com.bancstone.constants.SystemConstants;
import com.bancstone.form.systemManage.SystemusersmanageForm;
import com.bancstone.hibernate.systemManage.Systemgroupsmanage;
import com.bancstone.hibernate.systemManage.Systemorganizationsmanage;
import com.bancstone.hibernate.systemManage.Systemuserandgrouprelation;
import com.bancstone.hibernate.systemManage.Systemuserorganizationrelation;
import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.bancstone.service.systemManage.SystemgroupsmanageServices;
import com.bancstone.service.systemManage.SystemorganizationsmanageServices;
import com.bancstone.service.systemManage.SystemusersmanageServices;
import com.bancstone.service.systemManage.impl.CommonServices;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.info.BusinessCancleForm;
import com.cnaps.hvps.form.messages.HvpsbankclassalternotifyForm;
import com.cnaps.hvps.form.messages.HvpspartystatusapplyForm;
import com.cnaps.hvps.persistence.info.Businesscancle;
import com.cnaps.hvps.persistence.messages.Hvpsbankclassalternotify;
import com.cnaps.hvps.persistence.messages.Hvpspartyinfo;
import com.cnaps.hvps.persistence.messages.Hvpspartystatusapply;

public class HvpspartystatusapplyAction extends BaseAction  {
	
	// 登录退出申请查询
	@SuppressWarnings( { "unchecked", "static-access" })
	public ActionForward findList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			//报文头设置
			HvpspartystatusapplyForm voform = (HvpspartystatusapplyForm) form;
			Hvpspartystatusapply hpo = voform.getPo();
			
			//功能代码
			String transactionid = TransCodeEntity.QUERYCD;
			commSetToXML(voform,request,transactionid);
			
			//查询代码
			voform.setQueryCd(TransCodeEntity.LOGIN_OUT_QUERY);	
			
			this.setFenYe(voform);//设置分页信息
			
			
			if(!"".equals(hpo.getMsgid()) && hpo.getMsgid() != null){
				voform.getConditions().add("msgid:"+hpo.getMsgid());
			}
			if(!"".equals(hpo.getWorkdate()) && hpo.getWorkdate() != null){
				voform.getConditions().add("workdate:"+hpo.getWorkdate());
			}
			if(!"".equals(hpo.getSystemcd()) && hpo.getSystemcd() != null){
				voform.getConditions().add("systemcd:"+hpo.getSystemcd());
			}
 
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
			
		    this.setQueryPageValue(voform,true);
			List<Hvpspartystatusapply>  list = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			this.setObjectToRequest(request, "queryList",list);
			request.setAttribute("condition", hpo);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	// 登录退出申请查询明细浏览
	public ActionForward querysendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			
			HvpspartystatusapplyForm voform = (HvpspartystatusapplyForm) form;
			
			//功能代码
			String transactionid = TransCodeEntity.QUERYCD;
			commSetToXML(voform,request,transactionid);
			
			//查询代码
			voform.setQueryCd(TransCodeEntity.LOGIN_OUT_QUERY);	
			
			this.setFenYe(voform);
			
			// 查询明细条件
			String msgid = request.getParameter("msgid");
			voform.getConditions().add("msgid:"+msgid);
			
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			List<Hvpspartystatusapply>  List = commonXMLEntity.getResults();			
			request.setAttribute("po", List.get(0));
			request.setAttribute("cnaps2jydm","1510980502");
			return mapping.findForward("detailInfo");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	//登录退出申请录入
	public ActionForward loginOrOut(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		try{
			
			HvpspartystatusapplyForm voform = (HvpspartystatusapplyForm) form;	
			Hvpspartystatusapply hpo = voform.getPo();
			
			//功能代码
			String transactionid = TransCodeEntity.LOGIN_OUT_APP;
			commSetToXML(voform,request,transactionid);
			
			CommonServices commonService = (CommonServices) this.getBean("CommonServices");
			String workdate = request.getSession().getAttribute("workDate").toString();// 工作日期
			String msgId = commonService.getSEQMsgId(workdate);			
			hpo.setPmtgrpid(msgId);//报文标识号
			
			
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"systemcontrols","");
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			String msg = "";
			if(hpo.getLoginoprtp().equals("OT00")){
				msg="登录成功！";
			}else{
				msg="退出成功！";
			}
			return toSuccessPage(mapping,request,msg);

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	// 从菜单直接调整页面
	public ActionForward gotoPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			request.setAttribute("business",business);
			
			return mapping.findForward("input");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
		
	}

}
