package com.cnaps.hvps.action.messages;

import java.util.HashMap;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.cnaps.hvps.form.messages.HvpsBusinessTypeManagementForm;
import com.cnaps.hvps.persistence.messages.CcmsMsgTpManger;
import com.cnaps.hvps.persistence.transfer.Signup;
/**
 * 业务种类与类别管理 Action 类
 * @author pdhuang
 */
public class HvpsBusinessTypeManagementAction extends BaseAction{

	
	@SuppressWarnings( { "unchecked", "static-access" })
	public ActionForward findBusTypeMangeList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		try{
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……			
			
			//封装界面查询条件
			HvpsBusinessTypeManagementForm bmform = (HvpsBusinessTypeManagementForm) form;
			CcmsMsgTpManger tpm = bmform.getCmt();//获取实体类
			
			if(!"".equals(tpm.getMsgid()) && tpm.getMsgid() != null){
				//System.out.println("看看tpm.getMsgid()的值为："+tpm.getMsgid());
				bmform.getConditions().add("msgid:"+tpm.getMsgid());//报文标识号加入数据集
			}
			String transactionid = TransCodeEntity.QUERYCD;//功能代码--普通查询
			commSetToXML(bmform,transactionid,business);
			bmform.setQueryCd(TransCodeEntity.HvpsBusinessTypeManagementAction_sendMsg_query);//查询码 与后台查询沟通			
			this.setFenYe(bmform);
 
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(bmform, bmform.getTransactionId(),"systemcontrols",bmform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000"))
			{
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			
			if(commonXMLEntity.getRecordcount() == null){
				bmform.setTotalSize(0);
			}else{
				bmform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
			
		    this.setQueryPageValue(bmform,true);
			List<CcmsMsgTpManger>  List = commonXMLEntity.getResults();
			this.setPageInfo(request,bmform);
			this.setObjectToRequest(request, "queryList",List);
			request.setAttribute("business", business);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}

	/**
	 * 明细查询
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return 明细页
	 */
	public ActionForward findBusTypeMangeDetailList(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {
		 
		try{
		String id= request.getParameter("id");//获取明细查询参数
		HvpsBusinessTypeManagementForm bmform = (HvpsBusinessTypeManagementForm) form;
		
		if(!"".equals(id) && id!= null){
			bmform.getConditions().add("id:"+id);//序号加入查询条件
		}
		String transactionid = TransCodeEntity.QUERYCD;//功能代码--普通查询
		commSetToXML(bmform,TransCodeEntity.QUERYCD ,transactionid);
		bmform.setQueryCd(TransCodeEntity.HvpsBusinessTypeManagementAction_sendMsg_query);//查询码 与后台查询沟通	
		this.setFenYe(bmform);
		TransServices transServices = (TransServices)this.getBean("transServices");
		CommonXMLEntity  commonXMLEntity = transServices.transProcess(bmform, bmform.getTransactionId(),"systemcontrols",bmform.getQueryCd());
		if(!commonXMLEntity.getProcessCode().equals("000000"))
		{
			throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
		}
		List<CcmsMsgTpManger>  list = commonXMLEntity.getResults();
		if(list!=null&&list.size()>0){
			request.setAttribute("cmt", list.get(0));//封装实体对象，用于窗口中明细页面信息显示
		}
		return mapping.findForward("detail");//跳转到明细页面
   
	} catch (Exception e) {
		e.printStackTrace(); 
		return toFailedPage(mapping, request,e.getMessage());
	}
  }
}
