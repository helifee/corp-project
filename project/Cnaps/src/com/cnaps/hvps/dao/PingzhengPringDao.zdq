package com.cnaps.hvps.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.hibernate.Session;

import com.bancstone.common.dao.impl.GenericHibernateDaoSupportImpl;
import com.bancstone.constants.SystemConstants;
import com.cnaps.common.CommonMethod_Pdf;
import com.cnaps.common.HVPSPingzheng;
import com.cnaps.hvps.form.transfer.TransProcessForm;
import com.cnaps.hvps.persistence.messages.CcmsFreeMsg;
import com.cnaps.hvps.persistence.messages.CcmsQueryReplyInfo;
import com.cnaps.hvps.persistence.transfer.TransProcessEntity;

public class PingzhengPringDao extends GenericHibernateDaoSupportImpl {

	String nowtime;
	
    
	
	
	public List queryHVPSPDList(String sql){
		List list = new ArrayList();
		Connection conn = null;
		PreparedStatement pst = null;
		ResultSet rs =null;
		Session session = this.getHibernateTemplate().getSessionFactory().openSession();
		
		try {
			conn = session.connection();
			conn.setAutoCommit(false);
			pst = conn.prepareStatement(sql);
			System.out.println(sql);
			
			rs = pst.executeQuery();
			while(rs.next()){
				HVPSPingzheng hvpspz = new HVPSPingzheng();
				hvpspz.setPrintno(rs.getString("PrintTimes"));//打印次数
				hvpspz.setCmtno(rs.getString("MsgTpId"));//报文种类
				hvpspz.setDcind("HVPS          贷记");//借贷标识
				hvpspz.setOprttype(rs.getString("pmttp"));//业务种类
				hvpspz.setTxssno(rs.getString("Pmtgrpid"));//支付交易序号
				hvpspz.setOdficode(rs.getString("Dbtrbrnchid"));//发起行行号
				hvpspz.setPayeropenaccbkcd(rs.getString("Dbtrissuer"));//汇款人开户行行号
				hvpspz.setOdfiname(rs.getString("Dbtrbrnchnm"));//发起行名称
				hvpspz.setPayeracc(rs.getString("Dbtracct"));//汇款人账号
				hvpspz.setPayername(rs.getString("Dbtrnm"));//汇款人名称
				hvpspz.setPayeraddr(rs.getString("Dbtraddr"));//汇款人地址
				hvpspz.setRdficode(rs.getString("Cdtrbrnchid"));//接收行行号
				hvpspz.setSendtime(rs.getString("Workdt"));//发报日期
				hvpspz.setRecpientopnaccbkcd(rs.getString("Cdtrissuer"));//收款人开户行行号
				hvpspz.setRectime(rs.getString("Workdt"));//收报日期
				hvpspz.setRecipientacc(rs.getString("Cdtracct"));//收款人账号
				hvpspz.setRecipientname(rs.getString("Cdtrnm"));//收款人名称
				hvpspz.setRecipientaddr(rs.getString("Cdtraddr"));//收款人地址
				hvpspz.setMoneysymb("RMB");//货币符号
				hvpspz.setAmount(rs.getString("Amount"));//金额
				hvpspz.setStrinfo(rs.getString("Ustrd"));//附言
				hvpspz.setFlowno("");//收报流水号
				list.add(hvpspz);
			}
			conn.commit();
		} catch (SQLException e) {
			try {
				conn.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
			
			e.printStackTrace();
		}finally{
			try {
				if(rs!=null){
					rs.close();
				}
				pst.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			this.releaseSession(session);
		}
		return list;
	}
	public boolean updatePrinttimes(String sql){
		//System.out.println(sql);
		Connection conn = null;
		PreparedStatement pst = null;
		boolean result =false;
		Session session = this.getHibernateTemplate().getSessionFactory().openSession();
		
		try {
			conn = session.connection();
			conn.setAutoCommit(false);
			pst = conn.prepareStatement(sql);
			
			
			int rs = pst.executeUpdate();
			conn.commit();
			if(rs>0){
				result = true;
			}
		} catch (SQLException e) {
			try {
				conn.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
			
			e.printStackTrace();
		}finally{
			try {
				
				pst.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			this.releaseSession(session);
		}
		return result;
	}
	/**
	 * 根据ID查询需要打印的信息
	 * @param voform
	 * @return
	 */
	public List queryBySql(TransProcessForm voform){
		List list = new ArrayList();
		Connection conn = null;
		PreparedStatement pst = null;
		ResultSet rs =null;
		CcmsQueryReplyInfo replyEntity=null;
		Session session = this.getHibernateTemplate().getSessionFactory().openSession();
		try {
			String sql="select WorkDt,Direction,PmtGrpId,MsgId,CreDtTm,RecptMsgId,RecptDtTm," +
					"InstgPty,InstgIndrctPty,InstdPty,InstdIndrctPty,OrnglMsgId,OrnglInstgPty," +
					"OrnglMsgTp,OrnglTxId,OrnglPmtTp,QueryType," +
					"CurrencyCd,Amount,QueryContent,ReplyContent,Status,PrcCd,RjctInf,SttlmDt,SystemCd," +
					"Ustrd from  CCMSQUERYREPLYINFO where 1=1 and id='"+voform.getId().trim()+"'";
			conn = session.connection();
			conn.setAutoCommit(false);
			pst = conn.prepareStatement(sql);
			rs = pst.executeQuery();
			while(rs.next()){
				replyEntity= new CcmsQueryReplyInfo();
				replyEntity.setWorkDt(rs.getString("WorkDt"));//工作日期
				replyEntity.setDirection(rs.getString("Direction"));//来往标识
				replyEntity.setPmtGrpId(rs.getString("PmtGrpId"));//支付交易组号
				replyEntity.setMsgId(rs.getString("MsgId"));//报文标识号
				replyEntity.setCreDtTm((rs.getString("CreDtTm")).substring(0,10));//报文发送时间
				replyEntity.setRecptMsgId(rs.getString("RecptMsgId"));//回执报文标识号
				replyEntity.setRecptDtTm(rs.getString("RecptDtTm"));//回执报文时间
				replyEntity.setInstgPty(rs.getString("InstgPty"));//发起参与机构
				replyEntity.setInstgIndrctPty(rs.getString("InstgIndrctPty"));//发起直接参与机构
				replyEntity.setInstdPty(rs.getString("InstdPty"));//接收参与机构
				replyEntity.setInstdIndrctPty(rs.getString("InstdIndrctPty"));//接收直接参与机构
				replyEntity.setOrnglMsgId(rs.getString("OrnglMsgId"));//原报文标识号
				replyEntity.setOrnglInstgPty(rs.getString("OrnglInstgPty"));//原发起参与机构
				replyEntity.setOrnglMsgTp(rs.getString("OrnglMsgTp"));//原报文类型编码
				replyEntity.setOrnglTxId(rs.getString("OrnglTxId"));//原明细标识号
				replyEntity.setOrnglPmtTp(rs.getString("OrnglPmtTp"));//原业务类型编码
				replyEntity.setQueryType(rs.getString("QueryType"));//查询类型
				replyEntity.setCurrencyCd(rs.getString("CurrencyCd"));//币种
				replyEntity.setAmount(rs.getString("Amount"));//金额
				replyEntity.setQueryContent(rs.getString("QueryContent"));//查询内容
				replyEntity.setReplyContent(rs.getString("ReplyContent"));//查复内容
				replyEntity.setStatus(SystemConstants.getPrcStsNameByPrcStsCode(rs.getString("Status")));//业务状态
				replyEntity.setPrcCd(SystemConstants.getPrcStsNameByPrcStsCode(rs.getString("PrcCd")));//处理状态
				replyEntity.setRjctInf(rs.getString("RjctInf"));//业务拒绝信息
				replyEntity.setSttlmDt(rs.getString("SttlmDt"));//终态日期
				replyEntity.setSystemCd(rs.getString("SystemCd"));//系统编号
				replyEntity.setUstrd(rs.getString("Ustrd"));//备注
				list.add(replyEntity);
			}
			conn.commit();
		} catch (SQLException e) {
			try {
				conn.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
			e.printStackTrace();
		}finally{
			try {
				if(rs!=null){
					rs.close();
				}
				pst.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			this.releaseSession(session);
		}
		return list;
	}
	/**
	 * 查询需要打印的自由格式信息
	 * @param voform
	 * @return
	 */
	public List queryCcmsFreeMsgBySql(TransProcessForm voform){
		List list = new ArrayList();
		Connection conn = null;
		PreparedStatement pst = null;
		ResultSet rs =null;
		CcmsFreeMsg replyEntity=null;
		Session session = this.getHibernateTemplate().getSessionFactory().openSession();
		try {
			String sql="select Id,MsgId,CreDtTm,InstgPty,InstdPty,InstgDrctPty,InstdDrctPty,MsgCnt,Status,WorkDt,SttlmDt," +
					"PrcCd,TxRjctInf,TxRjctCd,Direction,SystemCd,Ustrd " +
					"from  ccmsFreeMsg where 1=1 and id='"+voform.getId().trim()+"'";
			conn = session.connection();
			conn.setAutoCommit(false);
			pst = conn.prepareStatement(sql);
			rs = pst.executeQuery();
			while(rs.next()){
				replyEntity= new CcmsFreeMsg();
				replyEntity.setId(rs.getString("Id"));//主键
				replyEntity.setMsgId(rs.getString("MsgId"));
				replyEntity.setCreDtTm(rs.getString("CreDtTm"));
				replyEntity.setInstgPty(rs.getString("InstgPty"));
				replyEntity.setInstdPty(rs.getString("InstdPty"));
				replyEntity.setInstgDrctPty(rs.getString("InstgDrctPty"));
				replyEntity.setInstdDrctPty(rs.getString("InstdDrctPty"));
				replyEntity.setMsgCnt(rs.getString("MsgCnt"));
				replyEntity.setStatus(rs.getString("Status"));
				replyEntity.setWorkDt(rs.getString("WorkDt"));
				replyEntity.setSttlmDt(rs.getString("SttlmDt"));
				replyEntity.setPrcCd(rs.getString("PrcCd"));
				replyEntity.setTxRjctInf(rs.getString("TxRjctInf"));
				replyEntity.setTxRjctCd(rs.getString("TxRjctCd"));
				replyEntity.setDirection(rs.getString("Direction"));
				replyEntity.setSystemCd(rs.getString("SystemCd"));
				replyEntity.setUstrd(rs.getString("Ustrd"));
				list.add(replyEntity);
			}
			conn.commit();
		} catch (SQLException e) {
			try {
				conn.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
			e.printStackTrace();
		}finally{
			try {
				if(rs!=null){
					rs.close();
				}
				pst.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			this.releaseSession(session);
		}
		return list;
	}
	/**
	 * 查询需要打印的大小额汇兑信息
	 * @param entity
	 * @param SystemCd 大小额
	 * @param  PmtGrpId 支付交易组号 
	 * @return
	 */
	public List queryexchangeMsgBySql(TransProcessEntity entity,String SystemCd,String PmtGrpId){
		List list = new ArrayList();
		Connection conn = null;
		PreparedStatement pst = null;
		ResultSet rs =null;
	
		Session session = this.getHibernateTemplate().getSessionFactory().openSession();
		try {
			String sql="";
			if(SystemCd.equals("HVPS")){
				
				sql+="select o.PrintTimes,c.MsgTpId,o.pmttp,o.Pmtgrpid,o.Dbtrbrnchid,";
				sql+="o.Dbtrissuer,o.Dbtrbrnchnm,o.Dbtracct,o.Dbtrnm,o.Dbtraddr,o.Cdtrbrnchid,";
				sql+="o.Workdt,o.Cdtrissuer,o.Workdt,o.Cdtracct,o.Cdtrnm,o.Cdtraddr,o.Amount,o.Ustrd";
				sql+=" from HVPS111DBTR o ";
			}else if(SystemCd.equals("BEPS")){
				
				sql+="select o.PrintTimes,c.MsgTpId,o.pmttp,o.Pmtgrpid,o.Dbtrbrnchid,";
				sql+="o.Dbtrissuer,o.Dbtrbrnchnm,o.Dbtracct,o.Dbtrnm,o.Dbtraddr,o.Cdtrbrnchid,";
				sql+="o.Workdt,o.Cdtrissuer,o.Workdt,o.Cdtracct,o.Cdtrnm,o.Cdtraddr,o.Amount,o.ADDTLINF";
				sql+=" from BEPS121DBTR o ";
			}
			sql+=" left join CNAPSPMTCOLLECT c on  o.PmtGrpId = c.PmtGrpId  where 1=1  ";
		    sql+=" and o.PmtGrpId='"+PmtGrpId+"'";
		
			System.out.print(sql);
			conn = session.connection();
			conn.setAutoCommit(false);
			pst = conn.prepareStatement(sql);
			rs = pst.executeQuery();
			while(rs.next()){
				HVPSPingzheng hvpspz = new HVPSPingzheng();
				hvpspz.setPrintno(rs.getString("PrintTimes"));//打印次数
				hvpspz.setCmtno(rs.getString("MsgTpId"));//报文种类
				hvpspz.setDcind(SystemCd+"          贷记");//交易种类
				hvpspz.setOprttype(rs.getString("pmttp"));//业务种类
				hvpspz.setTxssno(rs.getString("Pmtgrpid"));//支付交易序号
				hvpspz.setOdficode(rs.getString("Dbtrbrnchid"));//发起行行号
				hvpspz.setPayeropenaccbkcd(rs.getString("Dbtrissuer"));//汇款人开户行行号
				hvpspz.setOdfiname(rs.getString("Dbtrbrnchnm"));//发起行名称
				hvpspz.setPayeracc(rs.getString("Dbtracct"));//汇款人账号
				hvpspz.setPayername(rs.getString("Dbtrnm"));//汇款人名称
				hvpspz.setPayeraddr(rs.getString("Dbtraddr"));//汇款人地址
				hvpspz.setRdficode(rs.getString("Cdtrbrnchid"));//接收行行号
				hvpspz.setWorkdt(rs.getString("Workdt"));//委托日期
				hvpspz.setRecpientopnaccbkcd(rs.getString("Cdtrissuer"));//收款人开户行行号
				hvpspz.setRectime(rs.getString("Workdt"));//收报日期
				hvpspz.setRecipientacc(rs.getString("Cdtracct"));//收款人账号
				hvpspz.setRecipientname(rs.getString("Cdtrnm"));//收款人名称
				hvpspz.setRecipientaddr(rs.getString("Cdtraddr"));//收款人地址
				hvpspz.setMoneysymb("RMB");//货币符号
				hvpspz.setAmount(rs.getString("Amount"));//金额
				hvpspz.setStrinfo(rs.getString("Ustrd"));//附言
				hvpspz.setFlowno("123");//收报流水号
				
				nowtime =CommonMethod_Pdf.getPrintDate();;
				
				hvpspz.setNowtime(nowtime);
				hvpspz.setNumbernm("1234567890123456");
				
				list.add(hvpspz);
			}
			conn.commit();
		} catch (SQLException e) {
			try {
				conn.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
			e.printStackTrace();
		}finally{
			try {
				if(rs!=null){
					rs.close();
				}
				pst.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			this.releaseSession(session);
		}
		return list;
	}
	/**
	 * 银行汇票信息
	 * @param entity
	 * @param SystemCd 大小额
	 * @param  PmtGrpId 支付交易组号 
	 * @return
	 */
	public List queryfundMsgBySql(TransProcessEntity entity,String SystemCd,String PmtGrpId){
		List list = new ArrayList();
		Connection conn = null;
		PreparedStatement pst = null;
		ResultSet rs =null;
	
		Session session = this.getHibernateTemplate().getSessionFactory().openSession();
		try {
			String sql="";
			
			sql+="select o.PrintTimes,c.MsgTpId,o.pmttp,o.Pmtgrpid,o.Dbtrbrnchid,";
			sql+="o.Dbtrissuer,o.Dbtrbrnchnm,o.Dbtracct,o.Dbtrnm,o.Dbtraddr,o.Cdtrbrnchid,";
			sql+="o.Workdt,o.Cdtrissuer,o.Workdt,o.Cdtracct,o.Cdtrnm,o.Cdtraddr,o.Amount,o.Ustrd";
			
			sql+=" from HVPSBILLDBTR o ";
			
			sql+=" left join CNAPSPMTCOLLECT c on  o.PmtGrpId = c.PmtGrpId  where 1=1  ";
		    sql+=" and o.PmtGrpId='"+PmtGrpId+"'";
		
			System.out.print(sql);
			conn = session.connection();
			conn.setAutoCommit(false);
			pst = conn.prepareStatement(sql);
			rs = pst.executeQuery();
			while(rs.next()){
				HVPSPingzheng hvpspz = new HVPSPingzheng();
				hvpspz.setPrintno(rs.getString("PrintTimes"));//打印次数
				hvpspz.setCmtno(rs.getString("MsgTpId"));//报文种类
				hvpspz.setDcind("HVPS          贷记");//交易种类
				hvpspz.setOprttype(rs.getString("pmttp"));//业务种类
				hvpspz.setTxssno(rs.getString("Pmtgrpid"));//支付交易序号
				hvpspz.setOdficode(rs.getString("Dbtrbrnchid"));//发起行行号
				hvpspz.setPayeropenaccbkcd(rs.getString("Dbtrissuer"));//汇款人开户行行号
				hvpspz.setOdfiname(rs.getString("Dbtrbrnchnm"));//发起行名称
				hvpspz.setPayeracc(rs.getString("Dbtracct"));//汇款人账号
				hvpspz.setPayername(rs.getString("Dbtrnm"));//汇款人名称
				hvpspz.setPayeraddr(rs.getString("Dbtraddr"));//汇款人地址
				hvpspz.setRdficode(rs.getString("Cdtrbrnchid"));//接收行行号
				hvpspz.setWorkdt(rs.getString("Workdt"));//委托日期
				hvpspz.setRecpientopnaccbkcd(rs.getString("Cdtrissuer"));//收款人开户行行号
				hvpspz.setRectime(rs.getString("Workdt"));//收报日期
				hvpspz.setRecipientacc(rs.getString("Cdtracct"));//收款人账号
				hvpspz.setRecipientname(rs.getString("Cdtrnm"));//收款人名称
				hvpspz.setRecipientaddr(rs.getString("Cdtraddr"));//收款人地址
				hvpspz.setMoneysymb("RMB");//货币符号
				hvpspz.setAmount(rs.getString("Amount"));//金额
				hvpspz.setStrinfo(rs.getString("Ustrd"));//附言
				hvpspz.setFlowno("123");//收报流水号
				
				nowtime =CommonMethod_Pdf.getPrintDate();
				
				
				hvpspz.setNowtime(nowtime);
				hvpspz.setNumbernm("1234567890123456");
				
				list.add(hvpspz);
			}
			conn.commit();
		} catch (SQLException e) {
			try {
				conn.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
			e.printStackTrace();
		}finally{
			try {
				if(rs!=null){
					rs.close();
				}
				pst.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			this.releaseSession(session);
		}
		return list;
	}
	
}
	
