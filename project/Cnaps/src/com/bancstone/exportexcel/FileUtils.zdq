package com.bancstone.exportexcel;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import jxl.CellType;
import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableCell;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;


public class FileUtils {

	 // 删除文件
	public static void deleteFile(String filePath){
		File file = new File(filePath);
		if(file.exists()){
			try{
			file.delete();
			}catch(Exception e){
				e.printStackTrace();
			}
		}
	}
	
	//生成文件包
	public static void createWorkBag(String workPath){
		File file = new File(workPath);
		if(!file.exists()){
			file.mkdirs();
		}
	}
	
	
	//以时间为文件得到路径
	public static String createTimeBagRead(String basePath,String timeStamp){
		String path = "";
		//String time = timeStamp3(timeStamp);
		path = path+timeStamp.substring(0,4)+"/"+
			timeStamp.substring(4,6)+"/"+
			timeStamp.substring(6,8)+"/";
		basePath = basePath + path;
		return basePath;
	}
	
	
	//以时间为文件生成路径
	public static String createTimeBag(String basePath,String timeStamp){
		String path = "";
		//String time = timeStamp3(timeStamp);
		path = path+timeStamp.substring(0,4)+"\\"+
			timeStamp.substring(4,6)+"\\"+
			timeStamp.substring(6,8)+"\\";
		basePath = basePath + path;
		createWorkBag(basePath);
		return basePath;
	}
	
	//数组转换，把 一纬数组 转换成 2纬数组
	public static String[][] getArray(String [] name){
		int length = name.length;
		String [][] outValue = new String[length][1];
		for(int i=0;i<length;i++){
			outValue[i][0]=name[i];
		}
		return outValue;
	}
	
	public static void createFile(String filePath,InputStream input){
		try{
			byte[ ] by = new byte[8192];
			File file = new File(filePath);
			BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(file));
			BufferedInputStream in = new BufferedInputStream(input);
			int line;
			while((line=in.read(by))!=-1){
				out.write(by,0,line);
			}
			out.flush();
			out.close();
			in.close();
		}catch(Exception e){
			
		}
	}
	
	public static void createFileInc(String filePath,String resource){
		try{
			File file = new File(filePath);
			PrintWriter pw = new PrintWriter(new FileOutputStream(file));
			pw.println(resource);
			pw.close();
	    }catch(IOException e){
	    }
	}
//	根据传进的文件格式进行判断转换,组合成  XXXX.xls
	public static String processFileTail(String fileName,String synax){
		String resultFileName = "";
		int dot = fileName.indexOf(".");
		if(dot>0){
			resultFileName = fileName.substring(0,dot)+synax;
		}else{
			resultFileName = fileName+synax;
		}
		return resultFileName;
	}
//	得到现在的系统时刻
	public static String timeStamp(boolean boo){
		String currentTime = "";
		String parameter = "";
		if(boo){
			parameter = "yyyyMMddhhmmss";
		}else{
			parameter = "yyyyMMdd";
		}
		Calendar a =Calendar.getInstance();
		SimpleDateFormat s = new SimpleDateFormat(parameter);
		currentTime = s.format(a.getTime());
		return currentTime;
	}
	
//	以时间为文件生成路径
	public static String createTimeBag(String basePath){
		String path = "";
		String timeStamp = timeStamp(false);
		path = path+timeStamp.substring(0,4)+"\\"+
		      timeStamp.substring(4,6)+"\\"+
		      timeStamp.substring(6,8)+"\\";
		basePath = basePath + path;
		createWorkBag(basePath);
		return basePath;
	}
	
    
	/**判断 索引文件是不是存在
	 * @param filename 文件名称 格式为 c:/s/folderpath/ECDS-20100301.txt
	 */
	    public static Boolean isExistFile(String filename)
	    {
		        File file=new File(filename);
		        if(file.exists())
		        	return true;
		        else
		        	return false;
	    }
	    
	 /**
	 * 取得项目根目录文件夹物理路径 空格替换掉 20%
	 * @return
	 */
	public static String getFolderPath()
	{
		String allpath=FileUtils.class.getResource("").getPath().replaceAll("%20", " ");
		String folderPath = allpath.substring(1, allpath.indexOf("WEB-INF"));
		System.out.println("the folderPath is"+folderPath);
		return folderPath;
	}
 
	/**
	 * 替换文件路径的 斜杠统一替换为\
	 * @param a
	 */
	public static String replaceAllPathSeparator(String path)
	{
		String rePath=path.replaceAll("[/]","\\\\");
		return rePath;
	}

	public static void main(String[] a){
	         System.out.print("2007-05-02".substring(5, 10));
//		System.out.println(FileUtils.copyOsdevFile("D:\\ECDS\\exception.xls","D:\\ECDS\\ecds_2010-05-17\\ecds_ex_2010-05-17.xls","错误西西"));
	}
	
	
	/**
	 * 从指定的目录新建一个xls文件显示错误信息
	 * @param oldpath 你要copy的原始文档路径
	 * @param newpath copy之后放到的文档路径
	 * @return str 返回的值如果是“成功”就表示拷贝完成 
	 */
	public static String copyOsdevFile(String oldpath,String newpath,String extext){
		String str = "";
		try
        {
			if(FileUtils.isExistFile(oldpath)){
	            Workbook rwb = Workbook.getWorkbook(new File(oldpath));
	            WritableWorkbook wwb = Workbook.createWorkbook(new File(newpath),rwb);//copy
	            WritableSheet ws = wwb.getSheet(0);
	            WritableCell wc = ws.getWritableCell(1,1);
	            //判断单元格的类型,做出相应的转换
	            if(wc.getType() == CellType.LABEL){
	                Label label = (Label)wc;
	                label.setString(extext);
	            }
	            wwb.write();
	            wwb.close();
	            rwb.close();
			}else{
				str = "找不到指定的目录";
			}
            str = "成功";
        } catch (Exception ex) {
			ex.printStackTrace();
			str = ex.getMessage();
		} finally{
			return str;
		}
	}
	
	/**
	 * 替换文件路径的 斜杠统一替换为\
	 * @param a
	 */
	public static String replaceAllPath(String path)
	{
		String rePath=path.replaceAll("[\\]","/");
		return rePath;
	}
	
}
