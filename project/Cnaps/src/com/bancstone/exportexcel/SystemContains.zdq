package com.bancstone.exportexcel;

import java.math.BigDecimal;
import java.text.DecimalFormat;

/**
 * <ul>
 * <li>1、开发日期：2010-9-20</li>
 * <li>2、开发时间：下午01:47:52</li>
 * <li>3、类型名称：systemcontains</li>
 * <li>4、类型意图：</li>
 * </ul>
 * @author 史文龙
 *
 */
public class SystemContains 
{
 
	public static final String SELECT_TYPE_WYDJ = "0";//网银贷记
	public static final String SELECT_TYPE_WYJJ = "1";//网银借记
	public static final String SELECT_TYPE_DSFDJ = "2";//第三方贷记
	
	public static final String CUSTMER_TYPE_DWYH_ZH = "AT00";//单位银行结算账户
	public static final String CUSTMER_TYPE_GRJJK_ZH = "AT01";//个人借记卡（存折）账户
	public static final String CUSTMER_TYPE_GRDJK_ZH = "AT02";//个人贷记卡账户
	
	
	public static final String BUS_TYPE_WY = "XMBK";//网银
 	public static final String BUS_TYPE_GM = "XMGM";//柜面
 	
 	public static final String ENTERPRISE_CUSTOMER = "0";//企业客户
 	public static final String ONE_CUSTOMER = "1";//个人客户
 	public static final String EXCEL_TYPE_ONE = "1";//导出类型1维表头 
 	public static final String EXCEL_TYPE_TWO = "2";//导出类型2 维表头 
 	public static final String EXCEL_TYPE_THREE = "3";//导出类型3 维表头 
 	public static final String CY_STATS = "CY00";//已查阅状态
 	
 	/**
 	 * <ul>
 	 * <li>1、开发作者：史文龙</li>
 	 * <li>2、开发日期：2010-9-20</li>
 	 * <li>3、开发时间：下午05:09:02</li>
 	 * <li>4、返回类型：String</li>
 	 * <li>5、方法含义：</li>
 	 * <li>6、方法说明： 根据参数取得交易类型名称</li>
 	 * </ul>
 	 * @param type
 	 * @return
 	 */
 	public static String getNameBytype(String type)
 	{
 		if(type.equals(SELECT_TYPE_WYDJ))
 		{
 			return "网银贷记";
 		}else if(type.equals(SELECT_TYPE_WYJJ))
 		{
 			return "网银借记";
 		}else if(type.equals(SELECT_TYPE_DSFDJ))
 		{
 			return "第三方贷记";
 		}else
 		{
 			return "其他";
 		}
 	}
 	
 	
 	
 	
 	
 	
 	
 	
/* 	
 	网银贷记业务：IBPS.101
 	网银借记业务：IBPS.103
 	第三方贷记业务：IBPS.105*/

 	
	public static final String WYDJ_IBPS_101 = "IBPS.101";//网银贷记
	public static final String WYJJ_IBPS_103 = "IBPS.103";//网银借记
	public static final String DSFDJ_IBPS_105 = "IBPS.105";//第三方贷记
	public static final String DSFDJ_FKH_IBPS_105 = "FKH_IBPS.105";//第三方贷记 作为付款行
	public static final String DSFDJ_SKH_IBPS_105 = "SKH_IBPS.105";//第三方贷记 作为收款行
 	/**
 	 * <ul>
 	 * <li>1、开发作者：史文龙</li>
 	 * <li>2、开发日期：2010-9-20</li>
 	 * <li>3、开发时间：下午05:09:02</li>
 	 * <li>4、返回类型：String</li>
 	 * <li>5、方法含义：</li>
 	 * <li>6、方法说明： 根据参数取得交易类型名称</li>
 	 * </ul>
 	 * @param type
 	 * @return
 	 */
 	public static String getNameByBussinessType(String type)
 	{
 		if(type.equals(WYDJ_IBPS_101))
 		{
 			return "网银贷记";
 		}else if(type.equals(WYJJ_IBPS_103))
 		{
 			return "网银借记";
 		}else if(type.equals(DSFDJ_IBPS_105))
 		{
 			return "第三方贷记";
 		}else
 		{
 			return "其他";
 		}
 	}
 	
 	
 	/**
 	 * <ul>
 	 * <li>1、开发作者：史文龙</li>
 	 * <li>2、开发日期：2010-9-20</li>
 	 * <li>3、开发时间：下午05:09:02</li>
 	 * <li>4、返回类型：String</li>
 	 * <li>5、方法含义：已清算往帐清算 往帐时收付款行标识</li>
 	 * <li>6、方法说明： 根据报文类型取得往帐的时 的收付款行标识 </li>
 	 * 付款行：DBIT 收款行：CRDT 第三方：THRD
 	 * 业务类型	收付款行标识
	 *	网银贷记业务	付款行
	 *	网银借记业务	收款行
	 * 	第三方贷记业务	第三方
 	 * 
 	 * </ul>
 	 * @param type
 	 * @return
 	 */
 	public static String getBankFlagForGoAccount(String type)
 	{
 		
 		if(type.equals(WYDJ_IBPS_101))
 		{
 			return "付款行";
 		}else if(type.equals(WYJJ_IBPS_103))
 		{
 			return "收款行";
 		}else if(type.equals(DSFDJ_IBPS_105))
 		{
 			return "第三方";
 		}else
 		{
 			return "";
 		}
 	}
 	
 	
 	/**
 	 * <ul>
 	 * <li>1、开发作者：史文龙</li>
 	 * <li>2、开发日期：2010-9-20</li>
 	 * <li>3、开发时间：下午05:09:02</li>
 	 * <li>4、返回类型：String</li>
 	 * <li>5、方法含义：已清算来帐清算 来帐时收付款行标识</li>
 	 * <li>6、方法说明： 根据报文类型取得来帐的时 的收付款行标识 </li>
 	 * 付款行：DBIT 收款行：CRDT 第三方：THRD
 	 *网银贷记业务	收款行
     *网银借记业务	付款行
     *第三方贷记业务	付款行
	                收款行
 	 * 
 	 * </ul>
 	 * @param type
 	 * @return
 	 */
 	public static String getBankFlagForComeAccount(String type)
 	{
 		
 		if(type.equals(WYDJ_IBPS_101))
 		{
 			return "收款行";
 		}else if(type.equals(WYJJ_IBPS_103))
 		{
 			return "付款行";
 		}else if(type.equals(DSFDJ_FKH_IBPS_105))
 		{
 			return "付款行";
 		}else if(type.equals(DSFDJ_SKH_IBPS_105))
 		{
 			return "收款行";
 		}else
 		{
 			return "";
 		}
 	}
 	
 	/**
 	 * <ul>
 	 * <li>1、开发作者：史文龙</li>
 	 * <li>2、开发日期：2010-9-20</li>
 	 * <li>3、开发时间：下午05:09:02</li>
 	 * <li>4、返回类型：String</li>
 	 * <li>5、方法含义： </li>
 	 * <li>6、方法说明： 结算金额 </li>
 	 * 付款行：DBIT 收款行：CRDT 第三方：THRD
 	 * 网银贷记业务，网银借记业务结算金额=交易金额 第三方贷记业务结算金额=交易金额+第三方手续费金额
 	 * amt 结算金额 SXF 为手续费
 	 * </ul>
 	 * @param type
 	 * @return
 	 */
/* 	public static String getLastAMT(String type,String amt,String sxf)
 	{
 		BigDecimal amtnum=new BigDecimal(amt);

 	    if(type.equals(DSFDJ_IBPS_105))
 		{
 		  return String.valueOf(amtnum.add(new BigDecimal(sxf)));
 		}else
 		{
 			return String.valueOf(amtnum);
 		}
 	}*/
 	
/* 	0	01	电费	00	00100
	02	水暖费	00	00200
	03	煤气费	00	00300
	04	电话费	00	00400
	05	通讯费	00	00500
	06	保险费	00	00600
	07	房屋管理费	00	00700
	08	代理服务费	00	00800
	09	学教费	00	00900
	10	有线电视费	00	01000
	11	企业管理费用	00	01100
	12	薪金报酬	00	01200
0	20	汇兑	01	02001
		理财股票类	02	02002
		理财基金类	03	02003
		理财保险类	04	02004
		理财彩票类	05	02005
		理财黄金类	06	02006
		理财债券类	07	02007
		理财其他类	08	02008
		网络购物服装类	09	02009
		网络购物饰品类	10	02010
		网络购物家居类	11	02011
		网络购物生活类	12	02012
		网络购物食品类	13	02013
		网络购物虚拟类	14	02014
		网络购物机票类	15	02015
		网络购物旅游类	16	02016
		网络购物美容类	17	02017
		网络购物数码类	18	02018
		网络购物电器类	19	02019
		网络购物文体类	20	02020
		商旅服务酒店类	21	02021
		商旅服务机票类	22	02022
		商旅服务其他类	23	02023
		慈善捐款	24	02024
		贷款还款房贷类	25	02025
		贷款还款车贷类	26	02026
		贷款还款信用卡类	27	02027
		预授权结算	28	02028
        其他	01	09001
*/
	public static String getCode(String code){
		String meg="";
		if(code.equals("00100")){
			meg="电费";
		}else if(code.equals("00200")){
			meg="水暖费";
		}else if(code.equals("00300")){
			meg="煤气费";
		}else if(code.equalsIgnoreCase("00400")){
			meg="电话费";
		}else if(code.equalsIgnoreCase("00500")){
			meg="通讯费";
		}else if(code.equalsIgnoreCase("00600")){
			meg="保险费";
		}else if(code.equalsIgnoreCase("00700")){
			meg="房屋管理费";
		}else if(code.equalsIgnoreCase("00800")){
			meg="代理服务费";
		}else if(code.equalsIgnoreCase("00900")){
			meg="学教费";
		}else if(code.equalsIgnoreCase("01000")){
			meg="有线电视费";
		}else if(code.equalsIgnoreCase("01100")){
			meg="企业管理费用";
		}else if(code.equalsIgnoreCase("01200")){
			meg="薪金报酬";
		}else if(code.equalsIgnoreCase("02001")){
			meg="汇兑";
		}else if(code.equalsIgnoreCase("02002")){
			meg="理财股票类";
		}else if(code.equalsIgnoreCase("02003")){
			meg="理财基金类";
		}else if(code.equalsIgnoreCase("02004")){
			meg="理财保险类";
		}else if(code.equalsIgnoreCase("02005")){
			meg="理财彩票类";
		}else if(code.equalsIgnoreCase("02006")){
			meg="理财黄金类";
		}else if(code.equalsIgnoreCase("02007")){
			meg="理财债券类";
		}else if(code.equalsIgnoreCase("02008")){
			meg="理财其他类";
		}else if(code.equalsIgnoreCase("02009")){
			meg="网络购物服装类";
		}else if(code.equalsIgnoreCase("02010")){
			meg="网络购物饰品类";
		}else if(code.equalsIgnoreCase("02011")){
			meg="网络购物家居类";
		}else if(code.equalsIgnoreCase("02012")){
			meg="网络购物生活类";
		}else if(code.equalsIgnoreCase("02013")){
			meg="网络购物食品类";
		}else if(code.equalsIgnoreCase("02014")){
			meg="网络购物虚拟类";
		}else if(code.equalsIgnoreCase("02015")){
			meg="网络购物机票类";
		}else if(code.equalsIgnoreCase("02016")){
			meg="网络购物旅游类";
		}else if(code.equalsIgnoreCase("02017")){
			meg="网络购物美容类";
		}else if(code.equalsIgnoreCase("02018")){
			meg="网络购物数码类";
		}
		else if(code.equalsIgnoreCase("02019")){
			meg="网络购物电器类";
		}else if(code.equalsIgnoreCase("02020")){
			meg="网络购物文体类";
		}else if(code.equalsIgnoreCase("02021")){
			meg="商旅服务酒店类";
		}else if(code.equalsIgnoreCase("02022")){
			meg="商旅服务机票类";
		}else if(code.equalsIgnoreCase("02023")){
			meg="商旅服务其他类";
		}else if(code.equalsIgnoreCase("02024")){
			meg="慈善捐款";
		}else if(code.equalsIgnoreCase("02025")){
			meg="贷款还款房贷类";
		}else if(code.equalsIgnoreCase("02026")){
			meg="贷款还款车贷类";
		}else if(code.equalsIgnoreCase("02027")){
			meg="贷款还款信用卡类";
		}else if(code.equalsIgnoreCase("02028")){
			meg="预授权结算";
		}else if (code.equalsIgnoreCase("09001")){
			meg="其他";
		} 
		
		
		return meg;
	}
	
	
	public static String MESSAGE_TYPE[]={"ibps_101","ibps_103","ibps_105","ibps_335","ibps_337","ibps_339","ibps_339_1","ibps_309","ibps_311","ibps_305","ibps_307","ibps_703","ibps_705","ccms_303"};
	
	public static String getMessageTypeName(String code)
	{
		String meg="";
		if(code.equals("ibps_101")){
			meg="网银贷记";
		}else if(code.equals("ibps_103")){
			meg="网银借记";
		}else if(code.equals("ibps_105")){
			meg="第三方贷记";
		}else if(code.equalsIgnoreCase("ibps_335")){
			meg="授权支付协议管理申请";
		}else if(code.equalsIgnoreCase("ibps_337")){
			meg="授权支付协议管理通知";
		}else if(code.equalsIgnoreCase("ibps_339")){
			meg="帐户信息查询协议申请";
		}else if(code.equalsIgnoreCase("ibps_339_1")){
			meg="帐户信息查询协议通知";
		}else if(code.equalsIgnoreCase("ibps_309")){
			meg="帐户信息余额查询";
		}else if(code.equalsIgnoreCase("ibps_311")){
			meg="帐户信息明细查询";
		}else if(code.equalsIgnoreCase("ibps_305")){
			meg="业务状态查询";
		}else if(code.equalsIgnoreCase("ibps_307")){
			meg="业务撤销申请";
		}else if(code.equalsIgnoreCase("ibps_703")){
			meg="业务明细核对申请";
		}else if(code.equalsIgnoreCase("ibps_705")){
			meg="业务明细下载申请";
		}else if(code.equalsIgnoreCase("ccms_303")){
			meg="自由格式";
		}
		return meg;
	}
	public static String PATTERN_MOENY=",###,##0.00";
	/** *转换方法 */
	public static String parseMoney(String pattern,String amt){
		if(amt.equals(""))
		{
			amt="0";
		}
		BigDecimal bd=new BigDecimal(amt);
		DecimalFormat df=new DecimalFormat(pattern);
	    return df.format(bd);
	}
}
