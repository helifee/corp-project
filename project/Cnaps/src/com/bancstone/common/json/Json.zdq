package com.bancstone.common.json;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.bancstone.common.json.renderer.JsonRenderer;
import com.bancstone.common.json.renderer.JsonRendererClass;

/**
 * 
 * <ul>
 * <li>1、开发日期：Jul 17, 2010</li>
 * <li>2、开发时间：12:13:47 AM</li>
 * <li>3、类型名称：Json</li>
 * <li>4、类型意图：以JSON串返回的处理类，多用于AJAX应用中.对于复杂的数据结构，可以先构造Map,List后再使用</li>
 * </ul>
 * 
 * @author 王亮
 * 
 */
@JsonRendererClass(JsonRenderer.class)
public class Json extends AbstractJsonView {
	private String json;

	public Json() {
		json = "{}";
	}

	public Json(Map<String, Object> map) {
		json = JsonProcess.toJson(map);
	}

	public Json(List<?> list) {
		json = JsonProcess.toJson(list);
	}

	public Json(Object[] objects) {
		json = JsonProcess.toJson(objects);
	}

	public Json(Object obj) {
		json = JsonProcess.toJson(obj);
	}

	public Json(String str) {
		Map<String, Object> map = parseStr(str);
		json = JsonProcess.toJson(map);
	}

	@Override
	public String toString() {
		return json;
	}

	private Map<String, Object> parseStr(String str) {
		Map<String, Object> map = new HashMap<String, Object>();
		for (String strPart : str.split(",")) {
			String[] ss = strPart.split(":");
			if (ss == null || ss.length != 2) {
				continue;
			}
			String key = ss[0];
			String value = ss[1].trim();
			if (value.startsWith("'") && value.endsWith("'")) {
				map.put(key, value.substring(1, value.length() - 1));
			} else if (value.startsWith("\"") && value.endsWith("\"")) {
				map.put(key, value.substring(1, value.length() - 1));
			} else if (value.equals("true") || value.equals("false")) {
				map.put(key, Boolean.valueOf(value));
			} else if (value.indexOf(".") == -1) {
				try {
					int val = Integer.parseInt(value);
					map.put(key, val);
				} catch (Exception e) {
					map.put(key, value);
				}
			} else {
				try {
					BigDecimal val = new BigDecimal(value);
					map.put(key, val);
				} catch (Exception e) {
					map.put(key, value);
				}
			}
		}
		return map;
	}
}
