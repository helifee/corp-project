package com.bancstone.common.dao.impl;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.Map.Entry;

import org.hibernate.Criteria;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.springframework.dao.DataAccessException;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.bancstone.common.dao.GenericHibernateDaoSupportDao;
import com.bancstone.common.exception.PicpDAOException;
import com.bancstone.common.page.PageInfo;

/**
 * 
 * <ul>
 * <li>1、开发日期：Jul 15, 2010</li>
 * <li>2、开发时间：1:57:43 PM</li>
 * <li>3、类型名称：GenericHibernateDaoSupportImpl</li>
 * <li>4、类型意图：表现系统底层访问数据库的基类DAO对象</li>
 * </ul>
 * 
 * @author 王亮
 * 
 * @param <T>
 * @param <PK>
 */ 
public class GenericHibernateDaoSupportImpl<T, PK extends Serializable> extends
		HibernateDaoSupport implements GenericHibernateDaoSupportDao<T, PK> {
	private Class<T> clazz;

	@SuppressWarnings("unchecked")
	public GenericHibernateDaoSupportImpl() {
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#deleteAll()
	 */
	public void deleteAll() {

		final String hql = " from " + clazz.getName();
		this.getHibernateTemplate().execute(new HibernateCallback() {
			public Object doInHibernate(Session session)
					throws HibernateException, SQLException {
				try {
					Query query = session.createQuery(hql);
					query.executeUpdate();
				} catch (RuntimeException e) {
					e.printStackTrace();
				} finally {
					session.close();
				}
				return null;
			}
		});
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#getClazz()
	 */
	public Class<T> getClazz() {
		return clazz;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#getClazzName()
	 */
	public String getClazzName() {
		return this.getClass().getName();
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#getClazzByIndentifier(PK)
	 */
	@SuppressWarnings("unchecked")
	public T getClazzByIndentifier(PK id) throws PicpDAOException {
		T clazz = (T) super.getHibernateTemplate().get(this.clazz, id);
		return clazz;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#loadClazzByIndentifier(PK)
	 */
	@SuppressWarnings("unchecked")
	public T loadClazzByIndentifier(PK id) throws PicpDAOException {
		T clazz = (T) super.getHibernateTemplate().load(this.clazz, id);
		return clazz;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#getClazzByEntityNameAndIndentifier(java.lang.String,
	 *      PK)
	 */
	@SuppressWarnings("unchecked")
	public T getClazzByEntityNameAndIndentifier(String entityName, PK id)
			throws PicpDAOException {
		T clazz = (T) super.getHibernateTemplate().get(entityName, id);
		return clazz;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#getAll()
	 */
	@SuppressWarnings("unchecked")
	public List<T> getAll() {
		return (List<T>) getHibernateTemplate().loadAll(clazz);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#getAllByEntityName(java.lang.String)
	 */
	@SuppressWarnings("unchecked")
	public List<T> getAllByEntityName(String entityName)
			throws PicpDAOException {
		String hql = "from " + entityName;
		return this.queryByHql(hql);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#createByClazz(T)
	 */
	@SuppressWarnings("unchecked")
	public PK createByClazz(T clazz) throws PicpDAOException {
		PK id = null;
		try {
			id = (PK) super.getHibernateTemplate().save(clazz);
		} catch (Exception e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + clazz
					+ " save Exception!");
		}
		if (id == null) {
			throw new PicpDAOException(clazz + " save Exception!");
		}
		return id;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#createByEntityNameAndClazz(java.lang.String,
	 *      T)
	 */
	@SuppressWarnings("unchecked")
	public PK createByEntityNameAndClazz(String entityName, T clazz)
			throws PicpDAOException {
		PK id = null;
		try {
			id = (PK) super.getHibernateTemplate().save(entityName, clazz);
		} catch (Exception e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + clazz
					+ " save Exception!");
		}
		if (id == null) {
			throw new PicpDAOException(clazz + " save Exception!");
		}
		return id;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#createByClazzAndReturnClazz(T)
	 */
	public T createByClazzAndReturnClazz(T clazz) throws PicpDAOException {
		try {
			super.getHibernateTemplate().save(clazz);
		} catch (Exception e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + clazz
					+ " save Exception!");
		}
		return clazz;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#createByEntities(java.util.List)
	 */
	public void createByEntities(List<T> entities) throws PicpDAOException {
		try {
			super.getHibernateTemplate().saveOrUpdateAll(entities);
		} catch (Exception e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + clazz
					+ " save Exception!");
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#deleteByClazz(T)
	 */
	public void deleteByClazz(T clazz) throws PicpDAOException {
		try {
			super.getHibernateTemplate().delete(clazz);
		} catch (DataAccessException e) {
			throw new PicpDAOException(e.getMessage() + "delete " + clazz
					+ "Exception");
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#deleteByIndentifier(PK)
	 */
	public void deleteByIndentifier(PK id) throws PicpDAOException {
		T instance = this.getClazzByIndentifier(id);
		if (instance == null) {
			throw new PicpDAOException("delete by id exception,contains "
					+ this.clazz);
		} else {
			this.deleteByClazz(instance);
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#deleteByEntityNameAndIndentifier(java.lang.String,
	 *      PK)
	 */
	public void deleteByEntityNameAndIndentifier(String entityName, PK id)
			throws PicpDAOException {
		T instance = this.getClazzByEntityNameAndIndentifier(entityName, id);
		if (instance == null) {
			throw new PicpDAOException("delete by id exception,contains "
					+ this.clazz);
		} else {
			this.deleteByClazz(instance);
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#deleteByEntities(java.util.List)
	 */
	public void deleteByEntities(List<T> entities) throws PicpDAOException {
		try {
			super.getHibernateTemplate().deleteAll(entities);
		} catch (Exception e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + clazz
					+ " save Exception!");
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#updateByClazz(T)
	 */
	public void updateByClazz(T clazz) throws PicpDAOException {
		try {
			super.getHibernateTemplate().update(clazz);
		} catch (DataAccessException e) {
			throw new PicpDAOException(e.getMessage() + "update " + clazz
					+ "Exception");

		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#updateByEntityNameAndClazz(java.lang.String,
	 *      T)
	 */
	public void updateByEntityNameAndClazz(String entityName, T clazz)
			throws PicpDAOException {
		try {
			super.getHibernateTemplate().update(entityName, clazz);
		} catch (DataAccessException e) {
			throw new PicpDAOException(e.getMessage() + "update " + clazz
					+ "Exception");

		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#updateByEntities(java.util.List)
	 */
	public void updateByEntities(List<T> entities) throws PicpDAOException {
		try {
			super.getHibernateTemplate().saveOrUpdateAll(entities);
		} catch (Exception e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + clazz
					+ " save Exception!");
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#queryOnUniqueResult(java.lang.String)
	 */
	@SuppressWarnings("unchecked")
	public T queryOnUniqueResult(String queryHql) {
		Session session = openSession();
		T obj = (T) session.createQuery(queryHql).uniqueResult();
		return obj;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#queryByHql(java.lang.String)
	 */
	@SuppressWarnings("unchecked")
	public List<T> queryByHql(String hql) throws PicpDAOException {
		List<T> result = new ArrayList<T>();
		try {
			result = super.getHibernateTemplate().find(hql);
		} catch (DataAccessException e) {
			throw new PicpDAOException(e.getMessage() + "query " + this.clazz
					+ "Exception,the sql is" + hql);
		}
		return result;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#queryBySql(java.lang.String)
	 */
	@SuppressWarnings("unchecked")
	public List queryBySql(String sql) throws PicpDAOException {
		List result = null;
		SQLQuery sqlQuery = null;
		Session session = this.getHibernateTemplate().getSessionFactory()
				.openSession();
		try {
			sqlQuery = session.createSQLQuery(sql);
			result = sqlQuery.list();
		} catch (HibernateException he) {
			he.printStackTrace();
			throw new PicpDAOException(he);
		} finally {
			session.close();
		}
		return result;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#query(java.lang.String,
	 *      java.lang.Object)
	 */
	@SuppressWarnings("unchecked")
	public List<T> query(String sql, Object... values) throws PicpDAOException {
		List<T> result;
		try {
			result = getHibernateTemplate().find(sql, values);
		} catch (DataAccessException e) {
			throw new PicpDAOException(e.getMessage() + "query " + this.clazz
					+ "Exception,the sql is" + sql);
		}
		return result;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#query4Page(java.lang.String,
	 *      int, int, java.lang.Object)
	 */
	@SuppressWarnings("unchecked")
	public List<T> query4Page(String sql, int startIndex, int pagesize,
			Object... values) {
		Session session = openSession();
		List<T> result = new ArrayList();
		;
		try {
			Query query = session.createQuery(sql);
			if (values != null && values.length != 0) {
				for (int i = 0; i < values.length; i++) {
					query.setParameter(i, values[i]);
				}
			}
			query.setFirstResult(startIndex);
			query.setMaxResults(pagesize);
			result = query.list();
		} catch (HibernateException e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + "query " + this.clazz
					+ "Exception,the sql is" + sql);
		} finally {
			session.close();
		}
		return result;
	}

	public List<T> query4Page(String sql, int startIndex, int pagesize) {
		Session session = openSession();
		List<T> result = new ArrayList<T>();
		try {
			Query query = session.createQuery(sql);
			query.setFirstResult(startIndex);
			query.setMaxResults(pagesize);
			result = query.list();
		} catch (HibernateException e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + "query " + this.clazz
					+ "Exception,the sql is" + sql);
		} finally {
			session.close();
		}
		return result;
	}

	/**
	 * 通过sql语句进行分页查询
	 */
	public List<T> queryBySql4Page(String sql, PageInfo pageInfo) {
		List resultList = null;
		SQLQuery sqlQuery = null;
		Session session = null;
		if (pageInfo != null) {
			int recordCount = 0;
			String countHql = "";
			String fromHql = sql.trim().substring(
					sql.trim().toLowerCase().indexOf("from"));
			String from = fromHql.substring(0, 4);
			if (from.equalsIgnoreCase("from")) {
				countHql = "select count(*) " + fromHql;
			} else {
				countHql = "select count(*) from (" + fromHql + ")";
			}
			List queryList = this.queryBySql(countHql);
			if (queryList != null && queryList.size() != 0) {
				recordCount = ((BigDecimal) queryList.get(0)).intValue();
			}
			pageInfo.setTotalSize(recordCount);
			int size = pageInfo.getTotalSize()/pageInfo.getPageSize();//总条数/每页显示的条数=总页数
	        int mod = pageInfo.getTotalSize()%pageInfo.getPageSize();//最后一页的条数
	        if(mod != 0)
	            size++;
	        pageInfo.setTotalPageNum(size);

		}
		session = this.getHibernateTemplate().getSessionFactory().openSession();
		sqlQuery = session.createSQLQuery(sql);
		resultList = sqlQuery.list();
		if (pageInfo.isIzPage()) {
			sqlQuery.setFirstResult(pageInfo.getBeginNum());
			sqlQuery.setMaxResults(pageInfo.getPageSize());
		}
		resultList = sqlQuery.list();
		for (int i = 0; i < resultList.size(); i++) {
			session.evict(resultList.get(i));
		}
		return resultList;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#queryByCriteria(org.hibernate.Criteria)
	 */
	@SuppressWarnings("unchecked")
	public List<T> queryByCriteria(final Criteria criteria) {
		List<T> result = new ArrayList<T>();
		result = criteria.list();
		return result;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#queryByHql4Page(java.lang.String,
	 *      com.bancstone.common.page.PageInfo)
	 */
	@SuppressWarnings("unchecked")
	public List<T> queryByHql4Page(String hql, PageInfo pageInfo) {
		List resultList = null;
		Query query = null;
		Session session = openSession();
		try {
			if (pageInfo != null) {
				int recordCount = 0;
				String countHql = "";
				String fromHql = hql.trim().substring(
						hql.trim().toLowerCase().indexOf("from"));
				String from = fromHql.substring(0, 4);
				if (from.equalsIgnoreCase("from")) {
					countHql = "select count(*) " + fromHql;
				} else {
					countHql = "select count(*) from (" + fromHql + ")";
				}
				List queryList = this.query(countHql);
				if (queryList != null && queryList.size() != 0) {
					recordCount = ((Integer) queryList.get(0)).intValue();
				}
				pageInfo.setTotalSize(recordCount);
			}

			query = session.createQuery(hql);
			if (pageInfo.isIzPage()) {
				query.setFirstResult(pageInfo.getBeginNum());
				query.setMaxResults(pageInfo.getPageSize());
			}
			resultList = query.list();
			for (int i = 0; i < resultList.size(); i++) {
				session.evict(resultList.get(i));
			}
		} catch (HibernateException e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + "query " + this.clazz
					+ "Exception,the sql is" + hql);
		} catch (PicpDAOException e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + "query " + this.clazz
					+ "Exception,the sql is" + hql);
		} finally {
			session.close();
		}
		return resultList;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#query4Page(java.lang.String,
	 *      com.bancstone.common.page.PageInfo)
	 */
	@SuppressWarnings("unchecked")
	public List<T> query4Page(String hql, PageInfo pageInfo)
			throws PicpDAOException {
		if (pageInfo != null) {
			int recordCount = 0;
			String sumcount = "0.00";
			@SuppressWarnings("unused")
			String str = "";
			hql.trim();
			String countHql = "";
			String fromStart = hql.trim().substring(0, 4);
			if (pageInfo.isSum()) {// 需要统计总金额
				if (fromStart.equalsIgnoreCase("from")) {
					countHql = "select count(*),sum("
							+ pageInfo.getColumeName() + ") " + hql;
				} else {
					countHql = "select count(*),sum("
							+ pageInfo.getColumeName() + ") from (" + hql + ")";
				}
			} else {
				if (fromStart.equalsIgnoreCase("from")) {
					countHql = "select count(*) " + hql;
				} else {
					countHql = "select count(*) from (" + hql + ")";
				}
			}

			List queryList = this.query(countHql);
			if (queryList != null && queryList.size() != 0) {
				if (pageInfo.isSum()) {
					Object[] obj = (Object[]) queryList.get(0);
					recordCount = ((Integer) obj[0]).intValue();
					if (obj[1] != null) {
						sumcount = obj[1].toString();
					}
				} else {
					recordCount = ((Integer) queryList.get(0)).intValue();
				}
			}
			pageInfo.setTotalSize(recordCount);
			pageInfo.setSumcount(sumcount);
		}
		Session session = openSession();
		List resultList = new ArrayList();
		try {

			Query query = session.createQuery(hql);
			if (pageInfo.isIzPage()) {
				query.setFirstResult(pageInfo.getBeginNum());
				query.setMaxResults(pageInfo.getPageSize());
			}
			resultList = query.list();
			// session.flush();
			for (int i = 0; i < resultList.size(); i++) {
				session.evict(resultList.get(i));
			}
		} catch (HibernateException e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + "query " + this.clazz
					+ "Exception,the sql is" + hql);
		} finally {
			this.releaseSession(session);
		}
		return resultList;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#queryBySql(java.lang.String,
	 *      java.lang.String)
	 */
	@SuppressWarnings("unchecked")
	public List<T> queryBySql(String sql, String entityName)
			throws PicpDAOException {
		List<T> result = null;
		Session session = openSession();
		try {
			SQLQuery query = null;
			query = session.createSQLQuery(sql);
			query.addEntity(entityName, clazz);
			query.setCacheable(true);
			result = query.list();
		} catch (HibernateException e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + " query " + this.clazz
					+ " Exception,the sql is " + sql);
		} finally {
			session.close();
		}
		return result;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#sequenceQueryBySql(java.lang.String,
	 *      java.lang.Object)
	 */
	@SuppressWarnings("unchecked")
	public List sequenceQueryBySql(String sql, Object... parameter)
			throws PicpDAOException {
		Session session = openSession();
		List list = new ArrayList();
		try {
			SQLQuery query = session.createSQLQuery(sql.toString());

			for (int i = 0; i < parameter.length; i++) {
				Object object = parameter[i];
				query.setParameter(i, object);
			}
			list = query.list();
		} catch (HibernateException e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + " query " + this.clazz
					+ " Exception,the sql is " + sql);
		} finally {
			session.close();
		}
		return list;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 7, 2010</li>
	 * <li>3、开发时间：10:25:07 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.common.dao.GenericHibernateDaoSupportDao#namedQueryBySql(java.lang.String,
	 *      java.util.Map)
	 */
	@SuppressWarnings("unchecked")
	public List namedQueryBySql(String sql, Map<String, Object> parameter)
			throws PicpDAOException {
		Session session = openSession();
		List list = new ArrayList();
		try {
			SQLQuery query = session.createSQLQuery(sql.toString());

			Set<Entry<String, Object>> entrySet = parameter.entrySet();
			for (Entry<String, Object> entry : entrySet) {
				String key = entry.getKey();
				Object value = entry.getValue();
				query.setParameter(key, value);
			}

			list = query.list();
		} catch (HibernateException e) {
			e.printStackTrace();
			throw new PicpDAOException(e.getMessage() + " query " + this.clazz
					+ " Exception,the sql is " + sql);
		} finally {
			session.close();
		}
		return list;
	}

	/**
	 * 生成报文标识号
	 * 
	 * @return
	 */
	public int getSEQMsgId() {
		int num = 0;

		Connection conn = null;
		ResourceBundle rb = ResourceBundle.getBundle("Syspara");//读取配置文件
		String database = "orcl";
		if(rb.getString("database")!=null){
			database =rb.getString("database").toString().trim();
		}
		String sql ="";
		if("orcl".equals(database)){
			sql =  "select SEQ_FRONTMSGID.Nextval as num from dual ";
		}else{
			sql = "select  nextval   for SEQ_FRONTMSGID from sysibm.sysdummy1";
		}
	 
		//String sql = "select  nextval for SEQ_FRONTMSGID from sysibm.sysdummy1";  db2 用法
		 
		ResultSet rs = null;
		PreparedStatement pst = null;
		Session session = openSession();
		try {
			conn = session.connection();
			pst = conn.prepareStatement(sql);
			rs = pst.executeQuery();
			while (rs.next())
			 
				 
					num = rs.getInt("num");
					 
					 
			 
				 
				 
		} catch (SQLException e) {
			e.printStackTrace();
			try {
				pst.close();
				conn.close();
				session.close();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		} finally {
			try {
				pst.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return num;

	}

	/**
	 * 生成交易标识号
	 * 
	 * @return
	 */
	public int getSEQTransId() {
		int num = 0;
		Connection conn = null;
		ResourceBundle rb = ResourceBundle.getBundle("Syspara");//读取配置文件
		String database = "orcl";
		if(rb.getString("database")!=null){
			database =rb.getString("database").toString().trim();
		}
		String sql ="";
		if("orcl".equals(database)){
			sql = "select SEQ_TRANSID.Nextval as num from dual ";
		}else{
			sql = "select  nextval for SEQ_TRANSID from sysibm.sysdummy1";
		}
		
		ResultSet rs = null;
		PreparedStatement pst = null;
		Session session = openSession();
		try {
			conn = session.connection();
			pst = conn.prepareStatement(sql);
			rs = pst.executeQuery();
			while (rs.next())
				num = rs.getInt("num");
		} catch (SQLException e) {
			e.printStackTrace();
			try {
				pst.close();
				conn.close();
				session.close();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		} finally {
			try {
				pst.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return num;

	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 15, 2010</li>
	 * <li>3、开发时间：2:33:09 PM</li>
	 * <li>4、返回类型：Session</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：获取一个Sessiion</li>
	 * </ul>
	 * 
	 * @return
	 */
	private Session openSession() {
		// HibernateTemplate hibernateTemplate = this.getHibernateTemplate();
		// Session openSession = hibernateTemplate.getSessionFactory()
		// .openSession();
		Session openSession = this.getSession();
		return openSession;
	}

}
