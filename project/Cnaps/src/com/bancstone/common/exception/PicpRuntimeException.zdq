package com.bancstone.common.exception;

import java.io.PrintStream;
import java.io.PrintWriter;

/**
 * 
 * <ul>
 * <li>1、开发日期：Jul 18, 2010</li>
 * <li>2、开发时间：9:58:39 PM</li>
 * <li>3、类型名称：PicpRuntimeException</li>
 * <li>4、类型意图：运行时异常基类</li>
 * </ul>
 * 
 * @author 王亮
 * 
 */
public class PicpRuntimeException extends RuntimeException {
	private static final long serialVersionUID = -312476846739721232L;
	private Throwable nested = null;

	/**
	 * 构造函数
	 */
	public PicpRuntimeException() {
		super();
	}

	/**
	 * 构造函数
	 * 
	 * @param message
	 */
	public PicpRuntimeException(String message) {
		super(message);
	}

	/**
	 * 构造函数
	 * 
	 * @param message
	 * @param nested
	 */
	public PicpRuntimeException(String message, Throwable nested) {
		super(message);
		this.nested = nested;
	}

	/**
	 * 构造函数
	 * 
	 * @param nested
	 */
	public PicpRuntimeException(Throwable nested) {
		super();
		this.nested = nested;
	}

	/**
	 * 返回包括嵌套异常信息在内的异常详细信息
	 * 
	 * @see java.lang.Throwable#getMessage()
	 */
	@Override
	public String getMessage() {
		if (this.nested != null) {
			return super.getMessage() + " (" + this.nested.getMessage() + ")";
		} else {
			return super.getMessage();
		}
	}

	/**
	 * @return the nested
	 */
	public Throwable getNested() {
		return this.nested;
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 18, 2010</li>
	 * <li>3、开发时间：9:59:01 PM</li>
	 * <li>4、返回类型：String</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：返回不包括嵌套异常信息在内的异常信息</li>
	 * </ul>
	 * 
	 * @return
	 */
	public String getNonNestedMessage() {
		return super.getMessage();
	}

	/**
	 * @see java.lang.Throwable#printStackTrace()
	 */
	@Override
	public void printStackTrace() {
		super.printStackTrace();
		if (this.nested != null) {
			this.nested.printStackTrace();
		}
	}

	/**
	 * @see java.lang.Throwable#printStackTrace(java.io.PrintStream)
	 */
	@Override
	public void printStackTrace(PrintStream printStream) {
		super.printStackTrace(printStream);
		if (this.nested != null) {
			this.nested.printStackTrace(printStream);
		}
	}

	/**
	 * @see java.lang.Throwable#printStackTrace(java.io.PrintWriter)
	 */
	@Override
	public void printStackTrace(PrintWriter printWriter) {
		super.printStackTrace(printWriter);
		if (this.nested != null) {
			this.nested.printStackTrace(printWriter);
		}
	}
}
