/**
 * <p>项目名称：zhiNengT<p>
 * <ul>
 * <li>1、版权所有：驰波公司</li>
 * <li>2、开发作者：王亮</li>
 * <li>3、开发日期：Aug 22, 2010</li>
 * <li>4、开发时间：12:19:37 PM</li>
 * <li>5、文件名称：WebUrlSessionFilter.java</li>
 * <li>6、包路径名：com.bancstone.common.filter</li>
 * </ul>
 */
package com.bancstone.common.filter;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.bancstone.hibernate.systemManage.Systemusersmanage;

/**
 * <ul>
 * <li>1、开发日期：Aug 22, 2010</li>
 * <li>2、开发时间：12:19:37 PM</li>
 * <li>3、类型名称：WebUrlSessionFilter</li>
 * <li>4、类型意图：</li>
 * </ul>
 * <!-- Filter 登陆过滤开始--> <filter> <filter-name>WebUrlSessionFilter</filter-name>
 * <filter-class>com.bancstone.common.filter.WebUrlSessionFilter</filter-class>
 * </filter> <filter-mapping> <filter-name>WebUrlSessionFilter</filter-name>
 * <url-pattern>/*</url-pattern> </filter-mapping> <!-- Filter 登陆过滤结束-->
 * 
 * @author 王亮
 * 
 */
public class WebUrlSessionFilter implements Filter {
	protected String defaultEncoding = "GBK";
	protected String sendRedirectLoginJsp = "/login.jsp";
	protected String sessionAttribute = "userentity";
	protected boolean defaultIsOpenFilter = true;
	protected FilterConfig filterConfig = null;

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 22, 2010</li>
	 * <li>3、开发时间：12:19:37 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see javax.servlet.Filter#destroy()
	 */
	public void destroy() {
		this.defaultEncoding = null;
		this.sendRedirectLoginJsp = null;
		this.filterConfig = null;
		this.sessionAttribute = null;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 22, 2010</li>
	 * <li>3、开发时间：12:19:37 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see javax.servlet.Filter#doFilter(javax.servlet.ServletRequest,
	 *      javax.servlet.ServletResponse, javax.servlet.FilterChain)
	 */
	public void doFilter(ServletRequest request, ServletResponse response,
			FilterChain chain) throws IOException, ServletException {
		// 设置请求的字符编码
		request.setCharacterEncoding(this.defaultEncoding);
		// 设置返回请求的字符编码
		response.setCharacterEncoding(this.defaultEncoding);
		// 转换ServletRequest为 HttpServletRequest
		HttpServletRequest req = (HttpServletRequest) request;
		// 转换ServletResponse为HttpServletRequest
		HttpServletResponse res = (HttpServletResponse) response;
		// 获取Session
		HttpSession session = req.getSession();
		// 获取Session中存储的对象
		Systemusersmanage user = (Systemusersmanage) session
				.getAttribute(this.sessionAttribute);
		
		// 获取当前请求的URI
		String url = req.getRequestURI();
		if (this.defaultIsOpenFilter) {// 开启过滤功能呢
			if (user == null) {
				res.sendRedirect(req.getContextPath()
						+ this.sendRedirectLoginJsp);
				return;
			} else {
				this.doFilterChain(req, res, chain);
			}
		} else {
			this.doFilterChain(req, res, chain);
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 22, 2010</li>
	 * <li>3、开发时间：12:19:37 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see javax.servlet.Filter#init(javax.servlet.FilterConfig)
	 */
	public void init(FilterConfig filterConfig) throws ServletException {
		this.filterConfig = filterConfig;
		String value = this.filterConfig
				.getInitParameter("defaultisopenfilter");
		if (value == null)
			this.defaultIsOpenFilter = true;
		else if (value.equalsIgnoreCase("true")) {
			this.defaultIsOpenFilter = true;
		} else if (value.equalsIgnoreCase("yes")) {
			this.defaultIsOpenFilter = true;
		} else {
			this.defaultIsOpenFilter = false;
		}
		this.defaultEncoding = filterConfig.getInitParameter("defaultencoding");
		this.sendRedirectLoginJsp = filterConfig
				.getInitParameter("sendredirectloginjsp");
		this.sessionAttribute = filterConfig
				.getInitParameter("sessionattribute");
	}

	public void doFilterChain(HttpServletRequest req, HttpServletResponse res,
			FilterChain chain) throws IOException, ServletException {
		//解决weblogic服务器下的response has already been committed
//		res.setHeader("Cache-Control", "no-store");
//		res.setDateHeader("Expires", 0);
//		res.setHeader("Pragma", "no-cache");
//		res.flushBuffer();
		chain.doFilter(req, res);
	}
}
