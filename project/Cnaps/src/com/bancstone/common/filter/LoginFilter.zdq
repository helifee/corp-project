package com.bancstone.common.filter;

import java.io.IOException;
import java.util.ResourceBundle;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.cnaps.coreservices.ReadConfigation;

public class LoginFilter implements Filter {
	private String Longin = "/test/test.jsp";
	private FilterConfig filterConfig;
	private String urlString = null;
	private ServletContext sc = null;
	private Systemusersmanage user = null;

	public void destroy() {

	}

	public void doFilter(ServletRequest servletRequest,
			ServletResponse servletResponse, FilterChain chain)
			throws IOException, ServletException {
		HttpServletRequest request = (HttpServletRequest) servletRequest;
		HttpServletResponse response = (HttpServletResponse) servletResponse;
		HttpSession session  = request.getSession(true);
		HttpSession s = null;
		user = (Systemusersmanage) session.getAttribute("userentity");

		sc = (ServletContext) session.getAttribute("sc");
		if (user != null) {
			if (sc != null) {
				if (sc.getAttribute(user.getUsername()) != null) {
					s = (HttpSession) sc.getAttribute(user.getUsername());
				}
			}
		}
		urlString = request.getRequestURI();
		
		if (!urlString.contains("login.do")) {
			if (session != null && s != null && !s.equals(session)) {// 不允许相同的账号同时登录
				response.reset();
				response.setContentType("text/html; charset=gbk");
				response.getWriter().print("<script language=\"JavaScript\">");
				response.getWriter().print("alert('此账号已在其他地方登录！！');");
				response.getWriter().print("window.close();");
				response.getWriter().print("parent.close();");
				response.getWriter().print(
								"var winFeatures=\"location=yes,menubar=yes,status=yes,toolbar=yes,resizable=yes,titlebar=yes,scrollbars=yes,directories=yes\";");
				response.getWriter().print("</script>");
				return;
			}

			if (session != null && session != s) {// 统统在制定的时间内没有操作 自动重新登录
				response.reset();
				response.setContentType("text/html; charset=gbk");
				response.getWriter().print("<script language=\"JavaScript\">");
				response.getWriter().print("alert('系统操作超时,请重新登录 ！！');");
				response.getWriter().print("window.close();");
				response.getWriter().print("parent.close();");
				response.getWriter().print(
								"var winFeatures=\"location=yes,menubar=yes,status=yes,toolbar=yes,resizable=yes,titlebar=yes,scrollbars=yes,directories=yes\";");
				response.getWriter().print("</script>");
				return;
			}
		}else{
//			ResourceBundle rb = ResourceBundle.getBundle("Syspara");//读取配置文件
//			String remoteip = rb.getString("remoteaddr").trim();
//			String port = rb.getString("remoteport").trim();
//			int remoteport = Integer.parseInt(port);
//			System.out.println(request.getRequestURL());
//			if(request.getParameter("username")==null){
//				response.reset();
//				response.setContentType("text/html; charset=gbk");
//				response.getWriter().print("<script language=\"JavaScript\">");
//				response.getWriter().print("alert('登录异常！！');");
//				response.getWriter().print("window.close();");
//				response.getWriter().print("parent.close();");
//				response.getWriter().print(
//								"var winFeatures=\"location=yes,menubar=yes,status=yes,toolbar=yes,resizable=yes,titlebar=yes,scrollbars=yes,directories=yes\";");
//				response.getWriter().print("</script>");
//				return;
//			}
			
			
			
		}
		// System.out.println("s============"+s);
		// System.out.println("session============"+session);

		chain.doFilter(request, response);
	}

	public void init(FilterConfig config) throws ServletException {
		this.filterConfig = config;
		String page = filterConfig.getInitParameter("Longin");
		if (page != null && !page.equals("")) {
			Longin = page;
		}

	}
}
