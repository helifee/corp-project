package com.bancstone.dao.systemManage.impl;

import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.LockMode;
import org.springframework.context.ApplicationContext;

import com.bancstone.common.dao.impl.GenericHibernateDaoSupportImpl;
import com.bancstone.common.utils.StringUtil;
import com.bancstone.constants.SystemConstants;
import com.bancstone.dao.systemManage.SystemgroupsmanageDAO;
import com.bancstone.form.systemManage.SystemgroupsmanageFormBean;
import com.bancstone.hibernate.systemManage.Systemgroupsmanage;

/**
 * A data access object (DAO) providing persistence and search support for
 * Systemgroupsmanage entities. Transaction control of the save(), update() and
 * delete() operations can directly support Spring container-managed
 * transactions or they can be augmented to handle user-managed Spring
 * transactions. Each of these methods provides additional information for how
 * to configure it for the desired type of transaction control.
 * 
 * @see com.bancstone.hibernate.systemManage.Systemgroupsmanage
 * @author MyEclipse Persistence Tools
 */

public class SystemgroupsmanageDAOImpl extends GenericHibernateDaoSupportImpl
		implements SystemgroupsmanageDAO {
	private static final Log log = LogFactory
			.getLog(SystemgroupsmanageDAOImpl.class);
	// property constants
	public static final String TEAMNAME = "teamname";
	public static final String COMMON = "common";
	public static final String DESCRIPTION = "description";
	public static final String NAMECODE = "namecode";
	public static final String ENGLISHNAME = "englishname";
	public static final String PHONETICIZECODE = "phoneticizecode";

	protected void initDao() {
		// do nothing
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#save(com.bancstone.hibernate.Systemgroupsmanage)
	 */
	public void save(Systemgroupsmanage transientInstance) {
		log.debug("saving Systemgroupsmanage instance");
		try {
			getHibernateTemplate().save(transientInstance);
			log.debug("save successful");
		} catch (RuntimeException re) {
			log.error("save failed", re);
			throw re;
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#delete(com.bancstone.hibernate.Systemgroupsmanage)
	 */
	public void delete(Systemgroupsmanage persistentInstance) {
		log.debug("deleting Systemgroupsmanage instance");
		try {
			getHibernateTemplate().delete(persistentInstance);
			log.debug("delete successful");
		} catch (RuntimeException re) {
			log.error("delete failed", re);
			throw re;
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#findById(java.lang.Long)
	 */
	public Systemgroupsmanage findById(java.lang.Long id) {
		log.debug("getting Systemgroupsmanage instance with id: " + id);
		try {
			Systemgroupsmanage instance = (Systemgroupsmanage) getHibernateTemplate()
					.get(
							"com.bancstone.hibernate.systemManage.Systemgroupsmanage",
							id);
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#findByExample(com.bancstone.hibernate.Systemgroupsmanage)
	 */
	public List findByExample(Systemgroupsmanage instance) {
		log.debug("finding Systemgroupsmanage instance by example");
		try {
			List results = getHibernateTemplate().findByExample(instance);
			log.debug("find by example successful, result size: "
					+ results.size());
			return results;
		} catch (RuntimeException re) {
			log.error("find by example failed", re);
			throw re;
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#findByProperty(java.lang.String,
	 *      java.lang.Object)
	 */
	public List findByProperty(String propertyName, Object value) {
		log.debug("finding Systemgroupsmanage instance with property: "
				+ propertyName + ", value: " + value);
		try {
			String queryString = "from Systemgroupsmanage as model where model."
					+ propertyName + "= ?";
			return getHibernateTemplate().find(queryString, value);
		} catch (RuntimeException re) {
			log.error("find by property name failed", re);
			throw re;
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#findByTeamname(java.lang.Object)
	 */
	public List findByTeamname(Object teamname) {
		return findByProperty(TEAMNAME, teamname);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#findByCommon(java.lang.Object)
	 */
	public List findByCommon(Object common) {
		return findByProperty(COMMON, common);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#findByDescription(java.lang.Object)
	 */
	public List findByDescription(Object description) {
		return findByProperty(DESCRIPTION, description);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#findByNamecode(java.lang.Object)
	 */
	public List findByNamecode(Object namecode) {
		return findByProperty(NAMECODE, namecode);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#findByEnglishname(java.lang.Object)
	 */
	public List findByEnglishname(Object englishname) {
		return findByProperty(ENGLISHNAME, englishname);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#findByPhoneticizecode(java.lang.Object)
	 */
	public List findByPhoneticizecode(Object phoneticizecode) {
		return findByProperty(PHONETICIZECODE, phoneticizecode);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#findAll()
	 */
	public List findAll() {
		log.debug("finding all Systemgroupsmanage instances");
		try {
			String queryString = "from Systemgroupsmanage";
			return getHibernateTemplate().find(queryString);
		} catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#merge(com.bancstone.hibernate.Systemgroupsmanage)
	 */
	public Systemgroupsmanage merge(Systemgroupsmanage detachedInstance) {
		log.debug("merging Systemgroupsmanage instance");
		try {
			Systemgroupsmanage result = (Systemgroupsmanage) getHibernateTemplate()
					.merge(detachedInstance);
			log.debug("merge successful");
			return result;
		} catch (RuntimeException re) {
			log.error("merge failed", re);
			throw re;
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#attachDirty(com.bancstone.hibernate.Systemgroupsmanage)
	 */
	public void attachDirty(Systemgroupsmanage instance) {
		log.debug("attaching dirty Systemgroupsmanage instance");
		try {
			getHibernateTemplate().saveOrUpdate(instance);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.bancstone.dao.impl.SystemgroupsmanageDAO#attachClean(com.bancstone.hibernate.Systemgroupsmanage)
	 */
	public void attachClean(Systemgroupsmanage instance) {
		log.debug("attaching clean Systemgroupsmanage instance");
		try {
			getHibernateTemplate().lock(instance, LockMode.NONE);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public static SystemgroupsmanageDAO getFromApplicationContext(
			ApplicationContext ctx) {
		return (SystemgroupsmanageDAO) ctx.getBean("SystemgroupsmanageDAOImpl");
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 26, 2010</li>
	 * <li>3、开发时间：9:07:23 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemgroupsmanageDAO#querySystemGroupList(com.bancstone.form.systemManage.SystemgroupsmanageFormBean)
	 */
	@SuppressWarnings("unchecked")
	public List<Systemgroupsmanage> querySystemGroupList(
			SystemgroupsmanageFormBean systemgroupsmanageForm) {

		StringBuffer buf = new StringBuffer("FROM Systemgroupsmanage WHERE 1=1");
		if (!"".equals(StringUtil.nullToString(systemgroupsmanageForm
				.getNamecode()))) {
			if (systemgroupsmanageForm.getNamecode().equals(
					SystemConstants.ROLE_AND_GROUP_LEVEL_CODE01)) {
				buf.append(" AND namecode!='"
						+ SystemConstants.ROLE_AND_GROUP_LEVEL_CODE02 + "'");
			}
			if (systemgroupsmanageForm.getNamecode().equals(
					SystemConstants.ROLE_AND_GROUP_LEVEL_CODE00)) {
				buf.append(" AND namecode='"
						+ SystemConstants.ROLE_AND_GROUP_LEVEL_CODE00 + "'");
			}
		}
		if (!"".equals(StringUtil.nullToString(systemgroupsmanageForm
				.getEnglishname()))) {
			if (!systemgroupsmanageForm.getEnglishname().equals(
					SystemConstants.USER_CLASS_CODE_ADMIN)) {
				buf.append(" AND englishname='"
						+ systemgroupsmanageForm.getEnglishname() + "'");
			}
		}
		if (!"".equals(StringUtil.nullToString(systemgroupsmanageForm
				.getTeamname()))) {
			buf.append(" AND teamname='" + systemgroupsmanageForm.getTeamname()
					+ "'");
		}
		if (!"".equals(StringUtil.nullToString(systemgroupsmanageForm
				.getPhoneticizecode()))) {
			buf.append(" AND phoneticizecode='"
					+ systemgroupsmanageForm.getPhoneticizecode() + "'");
		}
		buf.append("ORDER BY teamid ASC");
		List<Systemgroupsmanage> systemGroupList = null;

		try {
			systemGroupList = this.query4Page(buf.toString(),
					systemgroupsmanageForm.getPageInfo());

		} catch (Exception e) {
			e.printStackTrace();
		}

		return systemGroupList;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 4, 2010</li>
	 * <li>3、开发时间：9:21:13 AM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：根据标识符查询自定义对象</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemgroupsmanageDAO#findByIndentifier(java.lang.String)
	 */
	public SystemgroupsmanageFormBean findByIndentifier(String indentifier) {
		StringBuffer buf = new StringBuffer(
				"SELECT NEW com.bancstone.form.systemManage.SystemgroupsmanageFormBean"
						+ "(group.teamid,group.teamname,group.common,group.description,group.namecode,group.englishname,group.phoneticizecode,relation.roleindentifier)");
		buf
				.append(" FROM Systemgroupsmanage AS group,Systemroleandgrouprelation AS relation");
		buf.append(" WHERE 1=1");
		buf.append(" AND group.teamid=relation.groupindentifier");
		buf.append(" AND group.teamid='" + indentifier + "'");
		SystemgroupsmanageFormBean systemgroupsmanageFormBean = null;
		try {
			systemgroupsmanageFormBean = (SystemgroupsmanageFormBean) this
					.queryOnUniqueResult(buf.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return systemgroupsmanageFormBean;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Oct 12, 2010</li>
	 * <li>3、开发时间：5:45:47 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemgroupsmanageDAO#findByEnglishname(java.lang.String)
	 */
	public List findByEnglishname(String englishname) {
		StringBuffer queryString = new StringBuffer(
				"from Systemgroupsmanage as model WHERE 1=1");
		if (!"".equals(StringUtil.nullToString(englishname))
				&& !englishname.trim().equals(
						SystemConstants.USER_CLASS_CODE_ADMIN)) {
			queryString.append(" AND model.englishname='" + englishname + "'");
		}
		try {
			return this.queryByHql(queryString.toString());
		} catch (RuntimeException re) {
			throw re;
		}

	}
}