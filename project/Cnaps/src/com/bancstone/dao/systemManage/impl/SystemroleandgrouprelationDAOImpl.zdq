package com.bancstone.dao.systemManage.impl;

import java.util.List;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.LockMode;
import org.springframework.context.ApplicationContext;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.bancstone.dao.systemManage.SystemroleandgrouprelationDAO;
import com.bancstone.hibernate.systemManage.Systemroleandgrouprelation;

/**
 * A data access object (DAO) providing persistence and search support for
 * Systemroleandgrouprelation entities. Transaction control of the save(),
 * update() and delete() operations can directly support Spring
 * container-managed transactions or they can be augmented to handle
 * user-managed Spring transactions. Each of these methods provides additional
 * information for how to configure it for the desired type of transaction
 * control.
 * 
 * @see com.bancstone.hibernate.systemManage.Systemroleandgrouprelation
 * @author MyEclipse Persistence Tools
 */

public class SystemroleandgrouprelationDAOImpl extends HibernateDaoSupport implements SystemroleandgrouprelationDAO {
	private static final Log log = LogFactory
			.getLog(SystemroleandgrouprelationDAOImpl.class);
	// property constants
	public static final String ROLEINDENTIFIER = "roleindentifier";
	public static final String GROUPINDENTIFIER = "groupindentifier";
	public static final String COMMN = "commn";
	public static final String DESCRIPTIION = "descriptiion";

	protected void initDao() {
		// do nothing
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#save(com.bancstone.hibernate.Systemroleandgrouprelation)
	 */
	public void save(Systemroleandgrouprelation transientInstance) {
		log.debug("saving Systemroleandgrouprelation instance");
		try {
			getHibernateTemplate().save(transientInstance);
			log.debug("save successful");
		} catch (RuntimeException re) {
			log.error("save failed", re);
			throw re;
		}
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#delete(com.bancstone.hibernate.Systemroleandgrouprelation)
	 */
	public void delete(Systemroleandgrouprelation persistentInstance) {
		log.debug("deleting Systemroleandgrouprelation instance");
		try {
			getHibernateTemplate().delete(persistentInstance);
			log.debug("delete successful");
		} catch (RuntimeException re) {
			log.error("delete failed", re);
			throw re;
		}
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#findById(java.lang.Long)
	 */
	public Systemroleandgrouprelation findById(java.lang.Long id) {
		log.debug("getting Systemroleandgrouprelation instance with id: " + id);
		try {
			Systemroleandgrouprelation instance = (Systemroleandgrouprelation) getHibernateTemplate()
					.get("com.bancstone.hibernate.Systemroleandgrouprelation",
							id);
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#findByExample(com.bancstone.hibernate.Systemroleandgrouprelation)
	 */
	public List findByExample(Systemroleandgrouprelation instance) {
		log.debug("finding Systemroleandgrouprelation instance by example");
		try {
			List results = getHibernateTemplate().findByExample(instance);
			log.debug("find by example successful, result size: "
					+ results.size());
			return results;
		} catch (RuntimeException re) {
			log.error("find by example failed", re);
			throw re;
		}
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#findByProperty(java.lang.String, java.lang.Object)
	 */
	public List findByProperty(String propertyName, Object value) {
		log.debug("finding Systemroleandgrouprelation instance with property: "
				+ propertyName + ", value: " + value);
		try {
			String queryString = "from Systemroleandgrouprelation as model where model."
					+ propertyName + "= ?";
			return getHibernateTemplate().find(queryString, value);
		} catch (RuntimeException re) {
			log.error("find by property name failed", re);
			throw re;
		}
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#findByRoleindentifier(java.lang.Object)
	 */
	public List findByRoleindentifier(Object roleindentifier) {
		return findByProperty(ROLEINDENTIFIER, roleindentifier);
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#findByGroupindentifier(java.lang.Object)
	 */
	public List findByGroupindentifier(Object groupindentifier) {
		return findByProperty(GROUPINDENTIFIER, groupindentifier);
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#findByCommn(java.lang.Object)
	 */
	public List findByCommn(Object commn) {
		return findByProperty(COMMN, commn);
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#findByDescriptiion(java.lang.Object)
	 */
	public List findByDescriptiion(Object descriptiion) {
		return findByProperty(DESCRIPTIION, descriptiion);
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#findAll()
	 */
	public List findAll() {
		log.debug("finding all Systemroleandgrouprelation instances");
		try {
			String queryString = "from Systemroleandgrouprelation";
			return getHibernateTemplate().find(queryString);
		} catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#merge(com.bancstone.hibernate.Systemroleandgrouprelation)
	 */
	public Systemroleandgrouprelation merge(
			Systemroleandgrouprelation detachedInstance) {
		log.debug("merging Systemroleandgrouprelation instance");
		try {
			Systemroleandgrouprelation result = (Systemroleandgrouprelation) getHibernateTemplate()
					.merge(detachedInstance);
			log.debug("merge successful");
			return result;
		} catch (RuntimeException re) {
			log.error("merge failed", re);
			throw re;
		}
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#attachDirty(com.bancstone.hibernate.Systemroleandgrouprelation)
	 */
	public void attachDirty(Systemroleandgrouprelation instance) {
		log.debug("attaching dirty Systemroleandgrouprelation instance");
		try {
			getHibernateTemplate().saveOrUpdate(instance);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	/* (non-Javadoc)
	 * @see com.bancstone.dao.impl.SystemroleandgrouprelationDAO#attachClean(com.bancstone.hibernate.Systemroleandgrouprelation)
	 */
	public void attachClean(Systemroleandgrouprelation instance) {
		log.debug("attaching clean Systemroleandgrouprelation instance");
		try {
			getHibernateTemplate().lock(instance, LockMode.NONE);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public static SystemroleandgrouprelationDAO getFromApplicationContext(
			ApplicationContext ctx) {
		return (SystemroleandgrouprelationDAO) ctx
				.getBean("SystemroleandgrouprelationDAOImpl");
	}
}