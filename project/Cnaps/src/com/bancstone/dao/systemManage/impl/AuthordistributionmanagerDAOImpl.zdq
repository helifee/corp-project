package com.bancstone.dao.systemManage.impl;

import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.LockMode;
import org.springframework.context.ApplicationContext;

import com.bancstone.common.dao.impl.GenericHibernateDaoSupportImpl;
import com.bancstone.common.utils.StringUtil;
import com.bancstone.constants.SystemConstants;
import com.bancstone.dao.systemManage.AuthordistributionmanagerDAO;
import com.bancstone.form.systemManage.AuthordistributionmanagerForm;
import com.bancstone.hibernate.systemManage.Authordistributionmanager;
import com.bancstone.hibernate.systemManage.Systemmenusmanage;
import com.bancstone.hibernate.systemManage.Systemrolesmanage;

/**
 * A data access object (DAO) providing persistence and search support for
 * Authordistributionmanager entities. Transaction control of the save(),
 * update() and delete() operations can directly support Spring
 * container-managed transactions or they can be augmented to handle
 * user-managed Spring transactions. Each of these methods provides additional
 * information for how to configure it for the desired type of transaction
 * control.
 * 
 * @see com.bancstone.hibernate.systemManage.Authordistributionmanager
 * @author MyEclipse Persistence Tools
 */

public class AuthordistributionmanagerDAOImpl extends
		GenericHibernateDaoSupportImpl implements AuthordistributionmanagerDAO {
	private static final Log log = LogFactory
			.getLog(AuthordistributionmanagerDAOImpl.class);
	// property constants
	public static final String ROLEINDENTIFIER = "roleindentifier";
	public static final String MENUINDENTIFIERS = "menuindentifiers";
	public static final String COMMON = "common";

	protected void initDao() {
		// do nothing
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#save(com.bancstone.hibernate.systemManage.Authordistributionmanager)
	 */
	public void save(Authordistributionmanager transientInstance) {
		log.debug("saving Authordistributionmanager instance");
		try {
			getHibernateTemplate().save(transientInstance);
			log.debug("save successful");
		} catch (RuntimeException re) {
			log.error("save failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#delete(com.bancstone.hibernate.systemManage.Authordistributionmanager)
	 */
	public void delete(Authordistributionmanager persistentInstance) {
		log.debug("deleting Authordistributionmanager instance");
		try {
			getHibernateTemplate().delete(persistentInstance);
			log.debug("delete successful");
		} catch (RuntimeException re) {
			log.error("delete failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#findById(java.lang.String)
	 */
	public Authordistributionmanager findById(java.lang.String id) {
		log.debug("getting Authordistributionmanager instance with id: " + id);
		try {
			Authordistributionmanager instance = (Authordistributionmanager) getHibernateTemplate()
					.get(
							"com.bancstone.hibernate.systemManage.Authordistributionmanager",
							id);
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#findByExample(com.bancstone.hibernate.systemManage.Authordistributionmanager)
	 */
	public List findByExample(Authordistributionmanager instance) {
		log.debug("finding Authordistributionmanager instance by example");
		try {
			List results = getHibernateTemplate().findByExample(instance);
			log.debug("find by example successful, result size: "
					+ results.size());
			return results;
		} catch (RuntimeException re) {
			log.error("find by example failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#findByProperty(java.lang.String,
	 *      java.lang.Object)
	 */
	public List findByProperty(String propertyName, Object value) {
		log.debug("finding Authordistributionmanager instance with property: "
				+ propertyName + ", value: " + value);
		try {
			String queryString = "from Authordistributionmanager as model where model."
					+ propertyName + "= ?";
			return getHibernateTemplate().find(queryString, value);
		} catch (RuntimeException re) {
			log.error("find by property name failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#findByRoleindentifier(java.lang.Object)
	 */
	public List findByRoleindentifier(Object roleindentifier) {
		return findByProperty(ROLEINDENTIFIER, roleindentifier);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#findByMenuindentifiers(java.lang.Object)
	 */
	public List findByMenuindentifiers(Object menuindentifiers) {
		return findByProperty(MENUINDENTIFIERS, menuindentifiers);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#findByCommon(java.lang.Object)
	 */
	public List findByCommon(Object common) {
		return findByProperty(COMMON, common);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#findAll()
	 */
	public List findAll() {
		log.debug("finding all Authordistributionmanager instances");
		try {
			String queryString = "from Authordistributionmanager";
			return getHibernateTemplate().find(queryString);
		} catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#merge(com.bancstone.hibernate.systemManage.Authordistributionmanager)
	 */
	public Authordistributionmanager merge(
			Authordistributionmanager detachedInstance) {
		log.debug("merging Authordistributionmanager instance");
		try {
			Authordistributionmanager result = (Authordistributionmanager) getHibernateTemplate()
					.merge(detachedInstance);
			log.debug("merge successful");
			return result;
		} catch (RuntimeException re) {
			log.error("merge failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#attachDirty(com.bancstone.hibernate.systemManage.Authordistributionmanager)
	 */
	public void attachDirty(Authordistributionmanager instance) {
		log.debug("attaching dirty Authordistributionmanager instance");
		try {
			getHibernateTemplate().saveOrUpdate(instance);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：1:43:27 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#attachClean(com.bancstone.hibernate.systemManage.Authordistributionmanager)
	 */
	public void attachClean(Authordistributionmanager instance) {
		log.debug("attaching clean Authordistributionmanager instance");
		try {
			getHibernateTemplate().lock(instance, LockMode.NONE);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public static AuthordistributionmanagerDAO getFromApplicationContext(
			ApplicationContext ctx) {
		return (AuthordistributionmanagerDAO) ctx
				.getBean("AuthordistributionmanagerDAOImpl");
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：2:01:57 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#getSystemMenusIndentifiers(com.bancstone.hibernate.systemManage.Systemusersmanage)
	 */
	public Authordistributionmanager getSystemMenusIndentifiers(
			Systemrolesmanage systemrolesmanage) {
		StringBuffer buffer = new StringBuffer(
				"FROM Authordistributionmanager WHERE 1=1 AND roleindentifier='"
						+ systemrolesmanage.getIdentifier() + "'");
		return (Authordistributionmanager) this.queryOnUniqueResult(buffer
				.toString());
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：2:11:26 PM</li>
	 * <li>4、返回类型：String</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：</li>
	 * </ul>
	 * 
	 * @param organizationsmanages
	 * @return
	 */
	public String getAvailiableSystemMenus(
			Authordistributionmanager authordistributionmanager) {
		String result = "";
		String[] menuindentifiers = null;
		if (authordistributionmanager != null
				&& authordistributionmanager.getMenuindentifiers().length() > 0) {
			menuindentifiers = authordistributionmanager.getMenuindentifiers()
					.split(",");
			for (int i = 0; i < menuindentifiers.length; i++) {
				result = result + menuindentifiers[i] + "','";
			}
		}
		if (!result.equals("")) {
			result = result.substring(0, result.length() - 2);
			result = "'" + result;
		} else {
			result = "'" + SystemConstants.SYSTEM_MENUS_ROOT_IDENTIFIER + "'"
					+ result;
		}
		return result;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：3:19:13 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#getWFPNodesBySystemRole(com.bancstone.form.systemManage.AuthordistributionmanagerForm)
	 */
	@SuppressWarnings("unchecked")
	public List<Systemmenusmanage> getWFPNodesBySystemRole(
			AuthordistributionmanagerForm authordistributionmanagerForm) {
		StringBuffer buffer = new StringBuffer(
				"FROM Systemmenusmanage WHERE 1=1");
//		if (!"".equals(StringUtil.nullToString(authordistributionmanagerForm
//				.getUserclass()))
//				&& !authordistributionmanagerForm.getUserclass().equals(
//						SystemConstants.USER_CLASS_CODE_ADMIN)) {// 获取用户类别
//
//			if (authordistributionmanagerForm.getUserclass().equals(
//					SystemConstants.USER_CLASS_CODE_ZNT)) {
//				buffer.append(" AND namecode='"
//						+ SystemConstants.USER_CLASS_CODE_ZNT
//						+ "' OR namecode='"
//						+ SystemConstants.USER_CLASS_CODE_GGX + "'");
//			}
//			if (authordistributionmanagerForm.getUserclass().equals(
//					SystemConstants.USER_CLASS_CODE_CDT)) {
//				buffer.append(" AND namecode='"
//						+ SystemConstants.USER_CLASS_CODE_CDT
//						+ "' OR namecode='"
//						+ SystemConstants.USER_CLASS_CODE_GGX + "'");
//			}
//		}
		/*
		 * if (!"".equals(authordistributionmanagerForm.getMenuindentifiers())) {
		 * buffer .append(" AND indentifier NOT IN (" +
		 * authordistributionmanagerForm .getMenuindentifiers() + ")"); }
		 */

		List<Systemmenusmanage> systemmenusmanagesList = null;
		try {
			systemmenusmanagesList = this.queryByHql(buffer.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return systemmenusmanagesList;
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：4:21:23 PM</li>
	 * <li>4、返回类型：List<Systemmenusmanage></li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：</li>
	 * </ul>
	 * 
	 * @param authordistributionmanagerForm
	 * @return
	 */
	public List<Systemmenusmanage> getYFPNodesBySystemRole(
			AuthordistributionmanagerForm authordistributionmanagerForm) {
		StringBuffer buffer = new StringBuffer(
				"FROM Systemmenusmanage WHERE 1=1");
		if (!"".equals(authordistributionmanagerForm.getMenuindentifiers())) {
			buffer
					.append(" AND indentifier IN ("
							+ authordistributionmanagerForm
									.getMenuindentifiers() + ")");
		}
		List<Systemmenusmanage> systemmenusmanagesList = null;
		try {
			systemmenusmanagesList = this.queryByHql(buffer.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return systemmenusmanagesList;
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 19, 2010</li>
	 * <li>3、开发时间：9:10:10 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.AuthordistributionmanagerDAO#findByRoleindentifier(java.lang.String)
	 */
	public Authordistributionmanager findByRoleindentifier(
			String roleindentifier) {
		String queryString = "FROM Authordistributionmanager AS model WHERE 1=1 AND model.roleindentifier='"
				+ roleindentifier + "'";
		try {
			return (Authordistributionmanager) this
					.queryOnUniqueResult(queryString);
		} catch (RuntimeException re) {
			throw re;
		}
	}
}