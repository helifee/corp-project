package com.bancstone.dao.systemManage.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.LockMode;
import org.springframework.context.ApplicationContext;

import com.bancstone.common.dao.impl.GenericHibernateDaoSupportImpl;
import com.bancstone.dao.systemManage.SystemmenusmanageDAO;
import com.bancstone.hibernate.systemManage.Systemmenusmanage;

/**
 * A data access object (DAO) providing persistence and search support for
 * Systemmenusmanage entities. Transaction control of the save(), update() and
 * delete() operations can directly support Spring container-managed
 * transactions or they can be augmented to handle user-managed Spring
 * transactions. Each of these methods provides additional information for how
 * to configure it for the desired type of transaction control.
 * 
 * @see com.bancstone.hibernate.systemManage.Systemmenusmanage
 * @author MyEclipse Persistence Tools
 */

public class SystemmenusmanageDAOImpl extends GenericHibernateDaoSupportImpl
		implements SystemmenusmanageDAO {
	private static final Log log = LogFactory
			.getLog(SystemmenusmanageDAOImpl.class);
	// property constants
	public static final String NAME = "name";
	public static final String NAMECODE = "namecode";
	public static final String PHONETICIZECODE = "phoneticizecode";
	public static final String COMMCON = "commcon";
	public static final String LINKURL = "linkurl";
	public static final String PARENTIDENTIFIER = "parentidentifier";
	public static final String ISACTIVITY = "isactivity";

	protected void initDao() {
		// do nothing
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#save(com.bancstone.hibernate.systemManage.Systemmenusmanage)
	 */
	public void save(Systemmenusmanage transientInstance) {
		log.debug("saving Systemmenusmanage instance");
		try {
			getHibernateTemplate().save(transientInstance);
			log.debug("save successful");
		} catch (RuntimeException re) {
			log.error("save failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#delete(com.bancstone.hibernate.systemManage.Systemmenusmanage)
	 */
	public void delete(Systemmenusmanage persistentInstance) {
		log.debug("deleting Systemmenusmanage instance");
		try {
			getHibernateTemplate().delete(persistentInstance);
			log.debug("delete successful");
		} catch (RuntimeException re) {
			log.error("delete failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findById(java.lang.String)
	 */
	public Systemmenusmanage findById(java.lang.String id) {
		log.debug("getting Systemmenusmanage instance with id: " + id);
		try {
			Systemmenusmanage instance = (Systemmenusmanage) getHibernateTemplate()
					.get(
							"com.bancstone.hibernate.systemManage.Systemmenusmanage",
							id);
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findByExample(com.bancstone.hibernate.systemManage.Systemmenusmanage)
	 */
	public List findByExample(Systemmenusmanage instance) {
		log.debug("finding Systemmenusmanage instance by example");
		try {
			List results = getHibernateTemplate().findByExample(instance);
			log.debug("find by example successful, result size: "
					+ results.size());
			return results;
		} catch (RuntimeException re) {
			log.error("find by example failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findByProperty(java.lang.String,
	 *      java.lang.Object)
	 */
	public List findByProperty(String propertyName, Object value) {
		log.debug("finding Systemmenusmanage instance with property: "
				+ propertyName + ", value: " + value);
		try {
			String queryString = "from Systemmenusmanage as model where model."
					+ propertyName + "= ?";
			return getHibernateTemplate().find(queryString, value);
		} catch (RuntimeException re) {
			log.error("find by property name failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findByName(java.lang.Object)
	 */
	public List findByName(Object name) {
		return findByProperty(NAME, name);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findByNamecode(java.lang.Object)
	 */
	public List findByNamecode(Object namecode) {
		return findByProperty(NAMECODE, namecode);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findByPhoneticizecode(java.lang.Object)
	 */
	public List findByPhoneticizecode(Object phoneticizecode) {
		return findByProperty(PHONETICIZECODE, phoneticizecode);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findByCommcon(java.lang.Object)
	 */
	public List findByCommcon(Object commcon) {
		return findByProperty(COMMCON, commcon);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findByLinkurl(java.lang.Object)
	 */
	public List findByLinkurl(Object linkurl) {
		return findByProperty(LINKURL, linkurl);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findByParentidentifier(java.lang.Object)
	 */
	public List findByParentidentifier(Object parentidentifier) {
		return findByProperty(PARENTIDENTIFIER, parentidentifier);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findByIsactivity(java.lang.Object)
	 */
	public List findByIsactivity(Object isactivity) {
		return findByProperty(ISACTIVITY, isactivity);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#findAll()
	 */
	public List findAll() {
		log.debug("finding all Systemmenusmanage instances");
		try {
			String queryString = "from Systemmenusmanage";
			return getHibernateTemplate().find(queryString);
		} catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#merge(com.bancstone.hibernate.systemManage.Systemmenusmanage)
	 */
	public Systemmenusmanage merge(Systemmenusmanage detachedInstance) {
		log.debug("merging Systemmenusmanage instance");
		try {
			Systemmenusmanage result = (Systemmenusmanage) getHibernateTemplate()
					.merge(detachedInstance);
			log.debug("merge successful");
			return result;
		} catch (RuntimeException re) {
			System.out.println(re.getMessage());
			log.error("merge failed", re);
			throw re;
		}
	}

	public void update(Systemmenusmanage detachedInstance) {
		log.debug("merging Systemmenusmanage instance");
		try {
			this.updateByClazz(detachedInstance);

		} catch (Exception re) {
			re.printStackTrace();
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#attachDirty(com.bancstone.hibernate.systemManage.Systemmenusmanage)
	 */
	public void attachDirty(Systemmenusmanage instance) {
		log.debug("attaching dirty Systemmenusmanage instance");
		try {
			getHibernateTemplate().saveOrUpdate(instance);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:37:11</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#attachClean(com.bancstone.hibernate.systemManage.Systemmenusmanage)
	 */
	public void attachClean(Systemmenusmanage instance) {
		log.debug("attaching clean Systemmenusmanage instance");
		try {
			getHibernateTemplate().lock(instance, LockMode.NONE);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public static SystemmenusmanageDAOImpl getFromApplicationContext(
			ApplicationContext ctx) {
		return (SystemmenusmanageDAOImpl) ctx.getBean("SystemmenusmanageDAO");
	}

	/**
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-28</li>
	 * <li>3、开发时间：上午10:41:57</li>
	 * <li>4、返回类型：List<Systemrolesmanage></li>
	 * <li>5、方法含义：分页查询菜单 一个节点下的列表</li>
	 * <li>6、方法说明：</li>
	 * </ul>
	 * 
	 * @param SystemmenusmanageForm
	 * @see
	 */
	public List<Systemmenusmanage> querySystemmenusmanageList(String pid) {
		log.debug("querySystemmenusmanageList");
		StringBuffer buf = new StringBuffer(
				"FROM Systemmenusmanage as sys WHERE sys.parentidentifier='"
						+ pid + "'");
		buf.append(" ORDER BY NUM,phoneticizeCode");
		List<Systemmenusmanage> list = null;
		try {
			list = this.queryByHql(buf.toString());

		} catch (Exception e) {
			e.printStackTrace();
			log.error("系统菜单DAO querySystemmenusmanageList failed", e);
		}
		return list;
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-29</li>
	 * <li>3、开发时间：下午02:52:03</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：异步删除数据，包括其子孙节点 递归删除</li>
	 * </ul>
	 * 
	 * @see com.bancstone.service.systemManage.SystemmenusmanageService#delNode(java.lang.String)
	 */
	@SuppressWarnings("unchecked")
	public void delNode(String id) {
		log.debug("delNode");
		List list = this.querySystemmenusmanageList(id);
		for (Object object : list) {
			Systemmenusmanage obj = (Systemmenusmanage) object;
			delNode(obj.getIndentifier());
		}
		Systemmenusmanage po = this.findById(id);
		this.delete(po);
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：史文龙</li>
	 * <li>2、开发日期：2010-7-29</li>
	 * <li>3、开发时间：下午02:50:17</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：删除其中一个节点后 这个节点下面的节点需要把NUM的数都减1 下移动一位</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#queryDownNodes(int,
	 *      int, int)
	 */
	public List<Systemmenusmanage> queryDownNodes(int parentId, int minIndex,
			int maxIndex) {
		// 指定的节点下移，意味着其范围内的节点各自减1
		log.debug("queryDownNodes");
		StringBuffer sql = new StringBuffer(
				"FROM Systemmenusmanage as sys WHERE sys.parentidentifier = ");
		sql.append(parentId);
		if (maxIndex != -1) {
			sql.append(" and sys.num <= ");
			sql.append(maxIndex);
		}
		if (minIndex != -1) {
			sql.append(" and sys.num > ");
			sql.append(minIndex);
		}
		List<Systemmenusmanage> list = new ArrayList<Systemmenusmanage>();
		;
		try {
			list = this.queryByHql(sql.toString());

		} catch (Exception e) {
			e.printStackTrace();
			log.error("指定的节点下移DAO downNode failed", e);
		}
		return list;
	}

	/**
	 * 指定的节点下移 [删除时 下面的节点的 NUM都要减1]
	 * 
	 * @param parentId
	 *            指定范围内要移动的节点的父节点
	 * @param minIndex
	 *            指定节点移动发生时所在的位置
	 * @param maxIndex
	 *            指定节点要移动到的目标位置
	 */
	@SuppressWarnings("unchecked")
	public void downNodes(List listpo) {
		log.debug("downNodes");
		for (Object object : listpo) {
			Systemmenusmanage obj = (Systemmenusmanage) object;
			int lastnum = Integer.parseInt(obj.getNum() == null ? "0" : obj
					.getNum());
			obj.setNum(String.valueOf(lastnum - 1));
		}
		this.updateByEntities(listpo);
	}

	/**
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 20, 2010</li>
	 * <li>3、开发时间：2:31:35 PM</li>
	 * <li>4、方法含义：</li>
	 * <li>5、方法说明：</li>
	 * </ul>
	 * 
	 * @see com.bancstone.dao.systemManage.SystemmenusmanageDAO#querySystemmenusmanageList(java.lang.String,
	 *      java.lang.String)
	 */
	public List<Systemmenusmanage> querySystemmenusmanageList(String pid,
			String availiableSystemMenus) {

		log.debug("querySystemmenusmanageList");
		StringBuffer buf = new StringBuffer(
				"FROM Systemmenusmanage as sys WHERE sys.parentidentifier='"
						+ pid + "' AND indentifier IN ("
						+ availiableSystemMenus + ")");
		buf.append(" ORDER BY NUM,phoneticizeCode");
		List<Systemmenusmanage> list = null;
		try {
			list = this.queryByHql(buf.toString());

		} catch (Exception e) {
			e.printStackTrace();
			log.error("系统菜单DAO querySystemmenusmanageList failed", e);
		}
		return list;
	}
}