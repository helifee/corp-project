package com.bancstone.action.report;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.constants.SystemConstants;
import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.cnaps.coreservices.ReportManagService;
import com.cnaps.excel.CreateCells_Liquidation;
import com.cnaps.hvps.form.transfer.TransProcessForm;
import com.cnaps.hvps.persistence.messages.ReportManagEntity;
import com.cnaps.hvps.persistence.transfer.TransProcessEntity;

public class DebitstoppayanswerAction extends BaseAction {

	/**
	 * 借记止付申请及应答情况登记查询
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	@SuppressWarnings( { "static-access", "unchecked" })
	public ActionForward querySendMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		try {
			ReportManagService reportManagService = (ReportManagService) this
					.getBean("ReportManagService");
			TransProcessForm voform = (TransProcessForm) form;
			TransProcessEntity TransProcess = voform.getPo();
			List signupMsgList = new ArrayList();
			List signupMsgTempList = new ArrayList();
			ReportManagEntity entity=null;
			
				// 根据FORM查询符合条件的数据
				this.setPageValue(voform,true);
				signupMsgTempList = reportManagService.getDebitstoppayanswerMsgList(voform);
				
				Object obj[] = null;
				for(int i=0;i<signupMsgTempList.size();i++){
					obj = (Object[]) signupMsgTempList.get(i);;
					entity = new ReportManagEntity();
					entity.setMsgId(obj[0]==null?"":obj[0].toString());//报文标识号
					entity.setInstgPty(obj[1]==null?"":obj[1].toString());//发起参与机构
					entity.setPmtGrpId(obj[2]==null?"":obj[2].toString());//支付交易组号
					entity.setCreDtTm(obj[3]==null?"":obj[3].toString());//报文发送时间 
					entity.setOrnglinstgpty(obj[4]==null?"":obj[4].toString());//原发起参与机构 
					  
					
					entity.setDirection(SystemConstants.getDirectionNameByDirectionCode(obj[5]==null?"":obj[5].toString()));//来往标识
					signupMsgList.add(entity);
					//System.out.print(signupMsgList);
				}
	
			request.setAttribute("signupMsgList", signupMsgList);
			this.setPageInfo(request, voform);
			return mapping.findForward("signupMsgList");
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}
	/**
	 * 导出借记止付申请及应答情况登记报表
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward signupMsgExcel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			ReportManagService reportManagService = (ReportManagService) this
			.getBean("ReportManagService");
			TransProcessForm voform = (TransProcessForm) form;
			List signupMsgList = new ArrayList();
			List signupMsgTempList = null;// 
		
			
				this.setPageValue(voform, false);//设置成不分页
				// 根据FORM查询符合条件的数据
				signupMsgTempList = reportManagService.getDebitstoppayanswerMsgList(voform);
				
			
			if (signupMsgTempList!=null&&signupMsgTempList.size() > 0) {
				CreateCells_Liquidation create = new CreateCells_Liquidation();
				Systemusersmanage userEntity=(Systemusersmanage)request.getSession().getAttribute("userentity");
				String userName=userEntity.getUsername();
				String workdt=request.getSession().getAttribute("workDate").toString();
				create.createExcel(response, userName, workdt, signupMsgTempList, ExcelHeader.Excel_DEBITSTOPPAYANSWER_NAME, "借记止付申请及应答情况登记查询");
				return null;
			} else {
				return toFailedPage(mapping, request,"找不到需要被导出的数据！");
			}
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}
}
