package com.bancstone.action.report;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.constants.SystemConstants;
import com.bancstone.entity.beps.Beps131cdtr;
import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.cnaps.coreservices.ReportManagService;
import com.cnaps.excel.CreateCells_Liquidation;
import com.cnaps.hvps.form.transfer.TransProcessForm;
public class Beps131cdtrAction extends BaseAction {
	/**
	 * 已签发银行本票清单
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public ActionForward queryBeps131cdtrList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			ReportManagService reportManagService = (ReportManagService) this
					.getBean("ReportManagService");
			TransProcessForm voform = (TransProcessForm) form;
			List liquidatedMsgList = new ArrayList();// 已签发银行本票
			List liquidatedMsgTempList = new ArrayList();// 已签发银行本票
			Beps131cdtr entity = null;
			if (voform.getPo().getWorkdt() != null
					&& !voform.getPo().getWorkdt().trim().equals("")) {
				this.setPageValue(voform, true);
				// 根据FORM查询符合条件的数据
				liquidatedMsgTempList = reportManagService.getBeps131cdtrList(voform);
				//msgid,pmtGrpId，dbtrbrnchid,cdtrbrnchid,amount,cdtrAcct,dbtrAcct,pmtkd
				Object obj[] = null;
				for(int i=0;i<liquidatedMsgTempList.size();i++){
					obj = (Object[]) liquidatedMsgTempList.get(i);;
					entity = new Beps131cdtr();
					entity.setMsgid(obj[0]==null?"":obj[0].toString());//报文标识号
					entity.setPmtgrpid(obj[1]==null?"":obj[1].toString());//支付交易组号
					entity.setDbtrbrnchid(obj[2]==null?"":obj[2].toString());//接收参与机构
					entity.setCdtrbrnchid(obj[3]==null?"":obj[3].toString());//发起参与机构
					entity.setAmount(obj[4]==null?"":obj[4].toString());//金额
					entity.setDbtracct(obj[5]==null?"":obj[5].toString());//付款人账号
					entity.setCdtracct(obj[6]==null?"":obj[6].toString());//收款人账号
					entity.setPmtkd(SystemConstants.getPmtkdNameByPmtkdCode(obj[7]==null?"":obj[7].toString()));//收款人账号
					liquidatedMsgList.add(entity);
				}
			}
			request.setAttribute("liquidatedMsgList", liquidatedMsgList);
			this.setPageInfo(request, voform);
			return mapping.findForward("queryBeps131cdtrList");// 已签发银行汇票清单
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}
	/**
	 * 已签发银行本票清单导出EXCEL
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public ActionForward queryBeps131cdtrListExcel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			ReportManagService reportManagService = (ReportManagService) this
			.getBean("ReportManagService");
			TransProcessForm voform = (TransProcessForm) form;
			List liquidatedMsgList = new ArrayList();// 已清算账单清单
			List liquidatedMsgTempList = null;// 已清算账单清单
			if (voform.getPo().getWorkdt() != null
					&& !voform.getPo().getWorkdt().trim().equals("")) {
				this.setPageValue(voform, false);//设置成不分页
				// 根据FORM查询符合条件的数据
				liquidatedMsgTempList = reportManagService.getBeps131cdtrList(voform);
				if(liquidatedMsgTempList!=null&&liquidatedMsgTempList.size()>0){
					DateFormat dtf=new DateFormat();
					liquidatedMsgList=dtf.getBeps131cdtrList(liquidatedMsgTempList);
				}
			}
			if (liquidatedMsgList!=null&&liquidatedMsgList.size() > 0) {
				CreateCells_Liquidation create = new CreateCells_Liquidation();
				Systemusersmanage userEntity=(Systemusersmanage)request.getSession().getAttribute("userentity");
				String userName=userEntity.getUsername();
				String workdt=request.getSession().getAttribute("workDate").toString();
				create.createExcel(response, userName, workdt, liquidatedMsgList, ExcelHeader.Excel_BEPS131CDTR_NAME, "已签发银行本票清单");
				return null;
			} else {
				return toFailedPage(mapping, request,"找不到需要被导出的数据！");
			}
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, e.getMessage());
		}
	}
}
