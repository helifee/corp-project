package com.bancstone.action.systemManage;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.SystemMenuTree;
import com.bancstone.common.tree.TreeNode;
import com.bancstone.common.utils.BeanUtil;
import com.bancstone.constants.SystemConstants;
import com.bancstone.form.systemManage.AuthordistributionmanagerForm;
import com.bancstone.hibernate.systemManage.Systemmenusmanage;
import com.bancstone.service.systemManage.AuthordistributionmanagerServices;
import com.bancstone.service.systemManage.SystemmenusmanageService;

/**
 * 
 * <ul>
 * <li>1、开发日期：Jul 16, 2010</li>
 * <li>2、开发时间：1:58:05 PM</li>
 * <li>3、类型名称：SystemMenuTreeAction</li>
 * <li>4、类型意图：用于处理Extjs与后台交互用的Action对象</li>
 * </ul>
 * 
 * @author 王亮
 * 
 */
@SuppressWarnings("unchecked")
public class SystemMenuTreeAction extends BaseAction {

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 16, 2010</li>
	 * <li>3、开发时间：11:57:24 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：根据节点的标识符及当前系统用户的权限返回相应的Tree节点(不会一次全部返回)</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getNodesByIndentifier(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String flag = "";
		if(null!=request.getSession().getAttribute("flag")){
			flag = request.getSession().getAttribute("flag").toString();
		}
		if("system0".equals(flag)){
			String indentifier = request.getParameter("indentifier");
			SystemmenusmanageService systemmenusmanageService = (SystemmenusmanageService) this
					.getBean("systemmenusmanageServices");
			AuthordistributionmanagerServices authordistributionServices = (AuthordistributionmanagerServices) this
					.getBean(AuthordistributionmanagerServices.class);
			String availiableSystemMenus = authordistributionServices
					.getAvailiableSystemMenus(this.getUserSystemAuthor(request));
			List<Systemmenusmanage> systemmenusmanageList = null;
			List<SystemMenuTree> testList = new ArrayList<SystemMenuTree>();
			try {
				systemmenusmanageList = systemmenusmanageService
						.querySystemmenusmanageList(indentifier,
								availiableSystemMenus);
				SystemMenuTree systemMenuTree = null;
				for (Systemmenusmanage systemmenusmanage : systemmenusmanageList) {
					systemMenuTree = new SystemMenuTree();
					systemMenuTree.setId(systemmenusmanage.getIndentifier());
					systemMenuTree.setText(systemmenusmanage.getName());
					systemMenuTree.setLeaf((systemmenusmanage.getIsactivity()
							.equals("0") ? false : true));
					systemMenuTree.setUrl(systemmenusmanage.getLinkurl());
					testList.add(systemMenuTree);
				}
				response.setContentType(SystemConstants.JSON_RESPONSE_CONTENT_TYPE);
				response.getWriter().write(BeanUtil.bean2JSONString(testList));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}else{
			String  promenus = "";
			if(null!=request.getSession().getAttribute("promenus")){
				promenus = (String)request.getSession().getAttribute("promenus");
			}
			
			response.setContentType(SystemConstants.JSON_RESPONSE_CONTENT_TYPE);
			response.getWriter().write(promenus);
		}
		return null;
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 20, 2010</li>
	 * <li>3、开发时间：1:31:06 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：根据当前系统用户（即系统登录用户）获取系统权限（即系统菜单数据）</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getAllTreeNodesByUserAuthor(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		AuthordistributionmanagerForm authorForm = (AuthordistributionmanagerForm) form;
		AuthordistributionmanagerServices authordistributionServices = (AuthordistributionmanagerServices) this
				.getBean(AuthordistributionmanagerServices.class);
		String availiableSystemMenus = authordistributionServices
				.getAvailiableSystemMenus(this.getUserSystemAuthor(request));
		List<Systemmenusmanage> systemmenusmanageList = null;
		List<TreeNode> treeNodeList = new ArrayList<TreeNode>();
		TreeNode treeNode = null;
		try {
			authorForm.setMenuindentifiers(availiableSystemMenus);
			systemmenusmanageList = authordistributionServices
					.getYFPNodesBySystemRole(authorForm);
			for (Systemmenusmanage systemmenusmanage : systemmenusmanageList) {
				treeNode = new TreeNode(Integer.parseInt(systemmenusmanage
						.getIndentifier()), Integer.parseInt(systemmenusmanage
						.getParentidentifier()), systemmenusmanage.getName(),
						systemmenusmanage.getLinkurl(), false);
				treeNodeList.add(treeNode);
			}
			response.setContentType(SystemConstants.JSON_RESPONSE_CONTENT_TYPE);
			response.getWriter().write(
					BeanUtil.toJsonUrlTree(new TreeNode(0, -1, "现代化支付系统"),
							treeNodeList));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;

	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：2:38:39 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：根据系统角色标识符返回相应的未分配权限的Tree节点(一次全部返回)</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings("static-access")
	public ActionForward getWFPNodesBySystemRole(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String rolueIdentifier = request.getParameter("rolueIdentifier");
		AuthordistributionmanagerForm authorForm = (AuthordistributionmanagerForm) form;
		AuthordistributionmanagerServices authordistributionServices = (AuthordistributionmanagerServices) this
				.getBean(AuthordistributionmanagerServices.class);
		String availiableSystemMenus = authordistributionServices
				.getAvailiableSystemMenus(this
						.getUserSystemAuthor(rolueIdentifier));
		List<Systemmenusmanage> systemmenusmanageList = null;
		List<TreeNode> treeNodeList = new ArrayList<TreeNode>();
		TreeNode treeNode = null;
		try {
			authorForm.setMenuindentifiers(availiableSystemMenus);
//			authorForm.setUserclass(this.getUserInfo(request).getEnglishname());// 设置用户类别
			systemmenusmanageList = authordistributionServices
					.getWFPNodesBySystemRole(authorForm);
			for (Systemmenusmanage systemmenusmanage : systemmenusmanageList) {
				treeNode = new TreeNode(Integer.parseInt(systemmenusmanage
						.getIndentifier()), Integer.parseInt(systemmenusmanage
						.getParentidentifier()), systemmenusmanage.getName(),
						Boolean.parseBoolean(systemmenusmanage.getIschecked()));
				treeNodeList.add(treeNode);
			}
			response.setContentType(SystemConstants.JSON_RESPONSE_CONTENT_TYPE);
			response.getWriter().write(
					BeanUtil.toJsonCkeckTree(new TreeNode(0, -1, "现代化支付系统"),
							treeNodeList));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Aug 18, 2010</li>
	 * <li>3、开发时间：4:16:30 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：根据系统角色标识符返回相应的已分配权限的Tree节点(一次全部返回)</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getYFPNodesBySystemRole(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String rolueIdentifier = request.getParameter("rolueIdentifier");
		AuthordistributionmanagerForm authorForm = (AuthordistributionmanagerForm) form;
		AuthordistributionmanagerServices authordistributionServices = (AuthordistributionmanagerServices) this
				.getBean(AuthordistributionmanagerServices.class);
		String availiableSystemMenus = authordistributionServices
				.getAvailiableSystemMenus(this
						.getUserSystemAuthor(rolueIdentifier));
		List<Systemmenusmanage> systemmenusmanageList = null;
		List<TreeNode> treeNodeList = new ArrayList<TreeNode>();
		try {
			authorForm.setMenuindentifiers(availiableSystemMenus);
			systemmenusmanageList = authordistributionServices
					.getYFPNodesBySystemRole(authorForm);
			TreeNode treeNode = null;
			for (Systemmenusmanage systemmenusmanage : systemmenusmanageList) {
				treeNode = new TreeNode(Integer.parseInt(systemmenusmanage
						.getIndentifier()), Integer.parseInt(systemmenusmanage
						.getParentidentifier()), systemmenusmanage.getName(),
						Boolean.parseBoolean(systemmenusmanage.getIschecked()));
				treeNodeList.add(treeNode);
			}
			response.setContentType(SystemConstants.JSON_RESPONSE_CONTENT_TYPE);
			response.getWriter().write(
					BeanUtil.toJsonCkeckTree(new TreeNode(0, -1, "现代化支付系统"),
							treeNodeList));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
}