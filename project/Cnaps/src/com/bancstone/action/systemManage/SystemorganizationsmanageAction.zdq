/**
 * <p>项目名称：zhiNengT<p>
 * <ul>
 * <li>1、版权所有：驰波公司</li>
 * <li>2、开发作者：王亮</li>
 * <li>3、开发日期：Jul 26, 2010</li>
 * <li>4、开发时间：10:05:30 AM</li>
 * <li>5、文件名称：SystemorganizationsmanageAction.java</li>
 * <li>6、包路径名：com.bancstone.action</li>
 * </ul>
 */
package com.bancstone.action.systemManage;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bancstone.action.BaseAction;
import com.bancstone.common.tree.TreeNode;
import com.bancstone.common.utils.BeanUtil;
import com.bancstone.constants.MessageConstants;
import com.bancstone.constants.SystemConstants;
import com.bancstone.form.systemManage.SystemorganizationsmanageForm;
import com.bancstone.hibernate.systemManage.Systemorganizationsmanage;
import com.bancstone.hibernate.systemManage.Systemusersmanage;
import com.bancstone.service.systemManage.SystemorganizationsmanageServices;
import com.bancstone.service.systemManage.SystemusersmanageServices;

/**
 * <ul>
 * <li>1、开发日期：Jul 26, 2010</li>
 * <li>2、开发时间：10:05:30 AM</li>
 * <li>3、类型名称：SystemorganizationsmanageAction</li>
 * <li>4、类型意图：系统机构管理</li>
 * </ul>
 * 
 * @author 王亮
 * 
 */
public class SystemorganizationsmanageAction extends
		BaseAction<SystemorganizationsmanageForm> {
	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Oct 23, 2010</li>
	 * <li>3、开发时间：12:25:29 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：根据名称模糊查询机构列表(用于SuggestCombox自动联想搜索)</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public ActionForward findOrgByName(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String param = request.getParameter("param");
		SystemorganizationsmanageServices systemorganizationsmanageServices = (SystemorganizationsmanageServices) this
				.getBean("systemorganizationsmanageServices");
		List<Systemorganizationsmanage> systemorganizationsmanageList = null;
		try {
			if (param != null && param.length() != 0) {
				systemorganizationsmanageList = systemorganizationsmanageServices
						.findOrgByName(param);
				this.writeResponseJson(response, BeanUtil
						.bean2JSONString(systemorganizationsmanageList));
				return null;
			} else {
				return toFailedPage(
						mapping,
						request,
						"查询条件 namecode 值不合法！文件名:SystemorganizationsmanageAction 方法名:findOrgByNameCode 参数值:"
								+ param);
			}

		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request,
					"查询机构列表出错！文件名:SystemorganizationsmanageAction 方法名:findOrgByNameCode 错误信息:"
							+ e.getMessage());
		}
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Oct 23, 2010</li>
	 * <li>3、开发时间：12:26:48 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：根据名称代码模糊查询机构列表(用于SuggestCombox自动联想搜索)</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public ActionForward findOrgByNameCode(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		String param = request.getParameter("param");
		SystemorganizationsmanageServices systemorganizationsmanageServices = (SystemorganizationsmanageServices) this
				.getBean("systemorganizationsmanageServices");
		List<Systemorganizationsmanage> systemorganizationsmanageList = null;
		try {
			if (param != null && param.length() != 0) {
				systemorganizationsmanageList = systemorganizationsmanageServices
						.findOrgByNameCode(param);
				this.writeResponseJson(response, BeanUtil
						.bean2JSONString(systemorganizationsmanageList));
				return null;
			} else {
				return toFailedPage(
						mapping,
						request,
						"查询条件 namecode 值不合法！文件名:SystemorganizationsmanageAction 方法名:findOrgByNameCode 参数值:"
								+ param);
			}

		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request,
					"查询机构列表出错！文件名:SystemorganizationsmanageAction 方法名:findOrgByNameCode 错误信息:"
							+ e.getMessage());
		}
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 28, 2010</li>
	 * <li>3、开发时间：4:56:32 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：点击添加时跳转到添加页面</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward addSystemOrganizationView(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		SystemorganizationsmanageServices systemorganizationsmanageServices = (SystemorganizationsmanageServices) this
				.getBean("systemorganizationsmanageServices");
		List<Systemorganizationsmanage> systemorganizationsmanageList = null;
		try {
			systemorganizationsmanageList = systemorganizationsmanageServices
					.querySystemOrganizationList();
			
			request.setAttribute("organizationCodeSet", this
					.getAllOrganizationCodeModel());
			
			request.setAttribute("organizationList",
					systemorganizationsmanageList);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mapping.findForward("addSystemOrganizationView");

	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 26, 2010</li>
	 * <li>3、开发时间：5:03:18 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：添加系统机构</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward addSystemOrganization(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		SystemorganizationsmanageForm systemorganizationsmanageForm = (SystemorganizationsmanageForm) form;
		Systemorganizationsmanage systemorganizationsmanage = new Systemorganizationsmanage();
		SystemorganizationsmanageServices systemorganizationsmanageServices = (SystemorganizationsmanageServices) this
				.getBean("systemorganizationsmanageServices");

		try {
			systemorganizationsmanageForm.setBankNumber(" ");
			BeanUtil.copyProperties2Object(systemorganizationsmanage,
					systemorganizationsmanageForm);
			systemorganizationsmanageServices
					.saveSystemOrganization(systemorganizationsmanage);
			// 添加成功
			return toReceiptPage(
					mapping,
					request,
					true,
					"sucess",
					"/systemManage/systemOrganizationManageAction.do?method=querySystemOrganization",
					MessageConstants.SYSTEM_ORGANIZATION_ADD_SUCCESS);
			
		} catch (Exception e) {
			e.printStackTrace();
			return toReceiptPage(
					mapping,
					request,
					true,
					"failed",
					"/systemManage/systemOrganizationManageAction.do?method=querySystemOrganization",
					MessageConstants.SYSTEM_ORGANIZATION_ADD_FAILED);
			
		}
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 26, 2010</li>
	 * <li>3、开发时间：5:10:39 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：删除系统机构</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward deleteSystemOrganization(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String identifier = request.getParameter("indentifier");
		
		SystemorganizationsmanageServices systemorganizationsmanageServices = (SystemorganizationsmanageServices) this
				.getBean("systemorganizationsmanageServices");
		SystemusersmanageServices systemusersmanageServices = (SystemusersmanageServices) this
				.getBean("SystemusersmanageServiceImpl");
		List<Systemusersmanage> userList = null;
		try {
			Systemusersmanage systemusersmanage = systemusersmanageServices.findById(identifier);
			if(systemusersmanage!=null&&"01".equals(systemusersmanage.getUserisactivity())){
				return toReceiptPage(
						mapping,
						request,
						true,
						"failed",
						"/systemManage/systemOrganizationManageAction.do?method=querySystemOrganization",
						MessageConstants.SYSTEM_ORGANIZATION_DELETE_CHECK_FAILED);
			}
//			userList = systemusersmanageServices.findAll();
//			for (Systemusersmanage systemusersmanage : userList) {
//				
//				if (!identifier.equals(systemusersmanage.getSystemorganizationsmanage()
//						.getIndentifier())) {
//					continue;
//				} else {
//					return toFailedPage(
//							mapping,
//							request,
//							systemusersmanage.getSystemorganizationsmanage()
//									.getName()
//									+ " "
//									+ MessageConstants.SYSTEM_ORGANIZATION_DELETE_CHECK_FAILED);
//				}
//			}
			systemorganizationsmanageServices
					.deleteSystemOrganization(systemorganizationsmanageServices
							.findSystemOrganizationByIndentifier(identifier));
			return toReceiptPage(
					mapping,
					request,
					true,
					"sucess",
					"/systemManage/systemOrganizationManageAction.do?method=querySystemOrganization",
					MessageConstants.SYSTEM_ORGANIZATION_DELETE_SUCCESS);
			// return mapping.findForward("deleteSystemOrganization");
		} catch (Exception e) {
			e.printStackTrace();
			return toReceiptPage(
					mapping,
					request,
					true,
					"failed",
					"/systemManage/systemOrganizationManageAction.do?method=querySystemOrganization",
					MessageConstants.SYSTEM_ORGANIZATION_DELETE_FAILED);
		}
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 26, 2010</li>
	 * <li>3、开发时间：5:16:02 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：修改系统机构</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward modifySystemOrganization(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		String identifier = request.getParameter("indentifier");
		SystemorganizationsmanageForm systemorganizationsmanageForm = (SystemorganizationsmanageForm) form;
		SystemorganizationsmanageServices systemorganizationsmanageServices = (SystemorganizationsmanageServices) this
				.getBean("systemorganizationsmanageServices");
		Systemorganizationsmanage systemorganizationsmanage = null;
		try {
			systemorganizationsmanage = systemorganizationsmanageServices
					.findSystemOrganizationByIndentifier(identifier);
			BeanUtil.copyProperties2Object(systemorganizationsmanage,
					systemorganizationsmanageForm);
			systemorganizationsmanageServices
					.modifySystemOrganization(systemorganizationsmanage);
			// 修改成功
			return toReceiptPage(
					mapping,
					request,
					true,
					"sucess",
					"/systemManage/systemOrganizationManageAction.do?method=querySystemOrganization",
					MessageConstants.SYSTEM_ORGANIZATION_MODIFY_SUCCESS);
			// return this.querySystemOrganization(mapping, form, request,
			// response);
			// return mapping.findForward("modifySystemOrganization");
		} catch (Exception e) {
			e.printStackTrace();
			return toReceiptPage(
					mapping,
					request,
					true,
					"failed",
					"/systemManage/systemOrganizationManageAction.do?method=querySystemOrganization",
					MessageConstants.SYSTEM_ORGANIZATION_MODIFY_FAILED);
		}
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 26, 2010</li>
	 * <li>3、开发时间：5:19:00 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：查询系统机构列表</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings("static-access")
	public ActionForward querySystemOrganization(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		SystemorganizationsmanageForm systemorganizationsmanageForm = (SystemorganizationsmanageForm) form;
		List<Systemorganizationsmanage> systemorganizationsmanageList = null;
		SystemorganizationsmanageServices systemorganizationsmanageServices = (SystemorganizationsmanageServices) this
				.getBean("systemorganizationsmanageServices");
		this.setPageValue(systemorganizationsmanageForm, true);
		try {
			if ("".equals(systemorganizationsmanageForm.getLevelCode())
					|| systemorganizationsmanageForm.getLevelCode() == null) {
				systemorganizationsmanageForm.setLevelCode(this
						.getOrganizationModel(request).getLevelCode());
			}
			systemorganizationsmanageList = systemorganizationsmanageServices
					.querySystemOrganizationList(systemorganizationsmanageForm);
			for (Systemorganizationsmanage systemorganizationsmanage : systemorganizationsmanageList) {
				if (systemorganizationsmanage.getParentidentifier().trim().equals(
						SystemConstants.zh_code)) {
					systemorganizationsmanage
							.setParentidentifier(SystemConstants.zh_name);
				} else {
					systemorganizationsmanage.setParentidentifier(this
							.getOrganizationsByNameCode(
									systemorganizationsmanage
											.getParentidentifier().trim())
							.getName());
				}
			}
			request.setAttribute("orgentity", this.getUserInfo(request)
					.getSystemorganizationsmanage());
			request.setAttribute("organizationCodeSet", this
					.getAllOrganizationCodeModel());
			request.setAttribute("organizationList",
					systemorganizationsmanageList);
			this.setQueryPageInfo(request, systemorganizationsmanageForm,true);
			return mapping.findForward("querySystemOrganization");
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request,
					MessageConstants.SYSTEM_ORGANIZATION_QUERY_ERROR);
		}
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 26, 2010</li>
	 * <li>3、开发时间：6:55:46 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：根据标识符查询需要修改的系统机构</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward querySystemOrganizationByIndentifier(
			ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		String indentifier = request.getParameter("indentifier");
		Systemorganizationsmanage systemorganizationsmanage = new Systemorganizationsmanage();
		SystemorganizationsmanageServices systemorganizationsmanageServices = (SystemorganizationsmanageServices) this
				.getBean("systemorganizationsmanageServices");
		List<Systemorganizationsmanage> systemorganizationsmanageList = null;
		try {
			systemorganizationsmanage = systemorganizationsmanageServices
					.findSystemOrganizationByIndentifier(indentifier);
			systemorganizationsmanageList = systemorganizationsmanageServices
					.querySystemOrganizationList();
			
			request.setAttribute("organizationCodeSet", this
					.getAllOrganizationCodeModel());
			request.setAttribute("organizationList",
					systemorganizationsmanageList);
			request.setAttribute("entity", systemorganizationsmanage);
			return mapping.findForward("querySystemOrganizationByIndentifier");
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request,
					MessageConstants.SYSTEM_ORGANIZATION_DETAIL_FAILED);
		}
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Jul 21, 2010</li>
	 * <li>3、开发时间：6:01:47 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：查看系统机构的明细信息</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward systemOrganizationDetail(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		String indentifier = request.getParameter("indentifier");
		Systemorganizationsmanage systemorganizationsmanage = new Systemorganizationsmanage();
		SystemorganizationsmanageServices systemorganizationsmanageServices = (SystemorganizationsmanageServices) this
				.getBean("systemorganizationsmanageServices");
		try {
			systemorganizationsmanage = systemorganizationsmanageServices
					.findSystemOrganizationByIndentifier(indentifier);
			if (systemorganizationsmanage.getParentidentifier().equals(
					SystemConstants.zh_code)) {
				systemorganizationsmanage
						.setParentidentifier(SystemConstants.zh_name);
			} else {
				systemorganizationsmanage
						.setParentidentifier(this
								.getOrganizationsByNameCode(
										systemorganizationsmanage
												.getParentidentifier())
								.getName());
			}
			request.setAttribute("entity", systemorganizationsmanage);
			return mapping.findForward("systemOrganizationDetail");
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request,
					MessageConstants.SYSTEM_ORGANIZATION_DETAIL_FAILED);
		}
	}

	/**
	 * 
	 * <ul>
	 * <li>1、开发作者：王亮</li>
	 * <li>2、开发日期：Sep 8, 2010</li>
	 * <li>3、开发时间：3:43:17 PM</li>
	 * <li>4、返回类型：ActionForward</li>
	 * <li>5、方法含义：</li>
	 * <li>6、方法说明：获取所有的机构(树形结构展示)</li>
	 * </ul>
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public ActionForward findAllOrganization(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		SystemorganizationsmanageServices systemorganizationsmanageServices = (SystemorganizationsmanageServices) this
				.getBean("systemorganizationsmanageServices");
		List<Systemorganizationsmanage> systemorganizationsmanageList = null;
		List<TreeNode> treeNodeList = new ArrayList<TreeNode>();
		TreeNode treeNode = null;
		try {
			systemorganizationsmanageList = systemorganizationsmanageServices
					.findOrderAllList();
			System.out.println(systemorganizationsmanageList.size());
			for (Systemorganizationsmanage systemorganizationsmanage : systemorganizationsmanageList) {
				treeNode = new TreeNode(Integer
						.parseInt(systemorganizationsmanage.getNamecode()),
						Integer.parseInt(systemorganizationsmanage
								.getParentidentifier()),
						systemorganizationsmanage.getName(), Boolean.FALSE);
				treeNodeList.add(treeNode);
			}
			response.setContentType(SystemConstants.JSON_RESPONSE_CONTENT_TYPE);
			response.getWriter().write(
					BeanUtil.toJsonTree(new TreeNode(1, -1, "机构菜单"),
							treeNodeList));
			return null;
		} catch (Exception e) {
			e.printStackTrace();
			return toFailedPage(mapping, request, "查询机构数据失败! ");
		}
	}
}
