/**
 * 
 */
package com.saps.action.nettingQueue;



import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.bancstone.action.BaseAction;
import com.bancstone.common.exception.PicpMessageException;
import com.cnaps.coreservices.CommonXMLEntity;
import com.cnaps.coreservices.TransCodeEntity;
import com.cnaps.coreservices.TransServices;
import com.saps.entity.SAPSNettingQueueQuery;
import com.saps.form.SAPSNettingQueueQueryForm;

/**
 * @包名   com.saps.action.nettingQueue
 * @文件名 SAPSNettingQueueQueryAction.java
 * @作者   zcx
 * @创建日期 May 17, 2011
 * @版本 V 1.0
 */
@SuppressWarnings("unchecked")
public class SAPSNettingQueueQueryAction extends BaseAction{
	
	
	
	public ActionForward  querySave(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response)throws Exception {
		try{
			SAPSNettingQueueQueryForm voform = (SAPSNettingQueueQueryForm) form;
			//报文设置
			String transactionid = TransCodeEntity.SAPSNettingQueueQueryAction_sendMsg;//功能代码
			commSetToXML(voform,request,transactionid);
			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"clearingaccts","");
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			return toSuccessPage(mapping,request,"轧差排队查询申请录入成功 ！,报文标识号为："+commonXMLEntity.getMessageId());

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	
	
	@SuppressWarnings("unchecked")
	public ActionForward  queryList(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response)throws Exception {
		
		try{
			
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			SAPSNettingQueueQueryForm voform = (SAPSNettingQueueQueryForm) form;
			SAPSNettingQueueQuery hpo = voform.getPo();
			//报文头设置
			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			//查询代码
			voform.setQueryCd(TransCodeEntity.SAPSNettingQueueQueryAction_sendMsg_query);
			//分页设置
			this.setFenYe(voform);

			//查询条件设置
			if (!StringUtils.isEmpty(hpo.getSendDrctPty())&&!"".equals(hpo.getSendDrctPty().trim())) 
				{
					
					voform.getConditions().add("instgdrctpty:"+hpo.getSendDrctPty().trim());
				}
				if (!StringUtils.isEmpty(hpo.getWorkDate())&&!"".equals(hpo.getWorkDate().trim())) 
				{
					
					voform.getConditions().add("workdt:"+hpo.getWorkDate().trim());
				}
				if (!StringUtils.isEmpty(hpo.getMsgId())&&!"".equals( hpo.getMsgId().trim())) 
				{
					
					voform.getConditions().add("msgid:"+hpo.getMsgId().trim());
				}
			

			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"clearingaccts",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			//设置分页信息。记录总条数
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
		    setQueryPageValue(voform,true);
			List<SAPSNettingQueueQuery>  list = commonXMLEntity.getResults();
			this.setPageInfo(request,voform);
			request.setAttribute("business", business);
			this.setObjectToRequest(request, "queryList",list);
			return mapping.findForward("queryList");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
	@SuppressWarnings("unchecked")
	public ActionForward  queryDetail(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response)throws Exception {
try{
			
			String business = request.getParameter("business");  // 标识 HVPS、BEPS、IBPS ……
			SAPSNettingQueueQueryForm voform = (SAPSNettingQueueQueryForm) form;
			SAPSNettingQueueQuery hpo = voform.getPo();
			//报文头设置
			String transactionid = TransCodeEntity.QUERYCD;//功能代码
			commSetToXML(voform,request,transactionid);
			//查询代码
			voform.setQueryCd(TransCodeEntity.SAPSNettingQueueQueryAction_sendMsg_query);
			//分页设置
			this.setFenYe(voform);

			//查询条件设置
			String id= request.getParameter("id");
			voform.getConditions().add("id:"+id);
			//报文体组装发送
			TransServices transServices = (TransServices)this.getBean("transServices");
			CommonXMLEntity  commonXMLEntity = transServices.transProcess(voform, voform.getTransactionId(),"clearingaccts",voform.getQueryCd());
			if(!commonXMLEntity.getProcessCode().equals("000000")){
				throw new PicpMessageException("错误码：["+commonXMLEntity.getProcessCode()+"] 错误信息：["+commonXMLEntity.getProcessDes()+"]");
			}
			//设置分页信息。记录总条数
			if(commonXMLEntity.getRecordcount() == null){
				voform.setTotalSize(0);
			}else{
				voform.setTotalSize(Integer.parseInt(commonXMLEntity.getRecordcount()));
			}
		    setQueryPageValue(voform,true);
			List<SAPSNettingQueueQuery>  list = commonXMLEntity.getResults();
			request.setAttribute("sap", list.get(0));
			return mapping.findForward("detail");

		} catch (Exception e) {
			e.printStackTrace(); 
			return toFailedPage(mapping, request,e.getMessage());
		}
	}
}
