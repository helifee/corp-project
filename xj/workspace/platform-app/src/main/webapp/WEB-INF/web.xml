<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	
	
	<welcome-file-list>
	 <welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml,classpath:dubbo-*.xml</param-value>
	</context-param>
	
	<!-- spring配置文件加载的处理 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
   </listener>
   
  
	<!-- 编码转码 -->
	<filter>  
        <filter-name>characterEncodingFilter</filter-name>  
        <filter-class>com.xinleju.platform.base.filter.HtmlCharacterEncodingFilter</filter-class>
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
        <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param>  
    </filter>  
    
    <filter-mapping>  
        <filter-name>characterEncodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>

    <!-- 特殊字符转移-->
   <!-- <filter>
        <filter-name>xssFilter</filter-name>
        <filter-class>com.xinleju.platform.base.filter.XssFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>xssFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
-->
    <filter>
	    <filter-name>springSessionRepositoryFilter</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>springSessionRepositoryFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
	    <filter-name>thirdParyRequestFilter</filter-name>
	    <filter-class>com.xinleju.platform.base.filter.ThirdParyRequestFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>thirdParyRequestFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>

     <filter>
       <filter-name>baseAuthorizedFilter</filter-name>
       <filter-class>com.xinleju.platform.base.filter.BaseAuthorizedFilter</filter-class>
         <init-param>
         <param-name>noAuthorized</param-name> 
         <param-value>
                      /**/login.html,
                      /**/sys/authentication/login,
                      /**/sys/authentication/authCode,
                      /**/sys/authentication/authCheckCode,
                      /**/sys/authentication/logout,
                      /**/queryPwd/find_pwd.html,
                      /**/queryPwd/auth_restpwd.html,
                      /**/queryPwd/find_pwd_suc.html,
                      /**/sys/authentication/authCheckCode,
                      /**/sys/authentication/verifByVcode,
                      /**/sys/authentication/resetPwd,
                      /**/register/register.html,
                      /**/sys/authentication/checkRepeatByCol,
                      /**/sys/authentication/registerSendCode,
                      /**/sys/authentication/registerVerifCode,
                      /**/sys/authentication/checkAndRegister,
                      /**/sys/authentication/postCode,
                   /**/sys/thirdPartyAuthentication/login,
                      /**/register/registersuccess.html,
                      /**/sys/thirdPartyAuthentication/redirect,
                      /**/sys/thirdPartyAuthentication/getData,
                      /**/sys/thirdPartyAuthentication/getCommonData,
                      /**/sys/thirdPartyAuthentication/accessToken,
                    /**/sys/thirdPartyAuthentication/accessToken2,
                      /**/sys/thirdPartyAuthentication/syncUser,
                      /**/sys/thirdPartyAuthentication/getLoginNameByVX,
                      /**/sys/thirdPartyAuthentication/wxLoginByToken,
                      /**/sys/thirdPartyAuthentication/setLoginInfo,
                    /**/sys/thirdPartyAuthentication/checkLogin,
             /**/sys/thirdPartyAuthentication/innerLogin,
             /**/sys/thirdPartyAuthentication/queryNoticeMsg,
             /**/sys/thirdPartyAuthentication/postNoticeMsg,
             /**/sys/thirdPartyAuthentication/updateNoticeMsg,
                      /**/mobile/approve/wxAuth.html,
                      /**/attachment_page.html,
                      /**/flow/runtime/approve/flow.html,
                      /**/sys/base/customFormInstance/updateStatus,
                 /**/oa/servey/serveyCreate/updateStatus,
                 /**/oa/officeOut/updateCount,
                /**/oa/content/contentRowType/updateProcessState,
                /**/oa/meeting/meeting/updateStatus,
             /**/oa/meeting/meetingSummary/updateStatus,
                      /**/platform-app/flow/instance/flowView,
                      /**/platform-app/sys/sysLogo/getLogo,
                      /**/sys/org/user/queryUserOrOrgList,
             /**/mobile/error.html,
             /**/sys/base/customFormInstance/getVariable,
             /**/oa/meeting/meeting/getStartFlowInfo,
             /**/oa/meeting/meetingSummary/getStartFlowInfo,
             /**/oa/content/contentRowType/queryVariableForFlow,
             /**/oa/officeOut/getStartFlowInfo,
             /**/oa/servey/serveyCreate/getStartFlowInfo,
             /**/download.html,
             /**/cc/ccManage/getExeFileUrl
          </param-value>
        </init-param>
          <init-param>
         <param-name>loginUrl</param-name> 
         <param-value>login.html</param-value> 
        </init-param>
    </filter>
    <filter-mapping>
       <filter-name>baseAuthorizedFilter</filter-name>
       <url-pattern>/*</url-pattern>
    </filter-mapping>
 
    
     <!--配置  HiddenHttpMethodFilter 可以将   POST 请求转为 DELETE、PUT 请求 -->  
	<filter>
		<filter-name>httpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>httpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- spring mvc 的处理 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	


	
</web-app>