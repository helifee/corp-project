<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.finance.entity.CashFlowItem">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.finance.entity.CashFlowItem">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.finance.entity.CashFlowItem">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.finance.entity.CashFlowItem">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	<!-- 获取树列表数据 -->
	<select id="queryTreeList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT
			e.name AS parentName,
			t.id,
			t.name,
			t.code,
			t.node_level as nodeLevel,
			t.parent_id as parentId,
			t.subject_codes as subjectCodes,
			t.subject_names as subjectNames,
			t.account_set_id as accountSetId,
			t.create_date as createDate,
			t.update_date as  updateDate,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.concurrency_version as concurrencyVersion,
			t.delflag
		FROM PT_FI_CASH_FLOW_ITEM t LEFT JOIN PT_FI_CASH_FLOW_ITEM e ON t.parent_id = e.id
		where 1=1 
		<choose>
        <when test="parentId != null">
             and   t.parent_id = #{parentId}
        </when>
        <otherwise>
             and    t.parent_id='0'
         </otherwise>
        </choose>
        <choose>
        <when test="accountSetId != null and accountSetId !=''">
             and   t.account_set_id = #{accountSetId}
        </when>
        <otherwise>
             and    t.account_set_id='null'
         </otherwise>
        </choose>
        and t.delflag=0  order by t.create_date asc
	</select>
	
	<select id="getpageList" resultType="com.xinleju.platform.finance.entity.CashFlowItem">
		 SELECT
			t.id,
			t.name,
			t.code,
			t.node_level as nodeLevel,
			t.parent_id as parentId,
			t.subject_codes as subjectCodes,
			t.subject_names as subjectNames,
			t.account_set_id as accountSetId,
			t.create_date as createDate,
			t.update_date as  updateDate,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.concurrency_version as concurrencyVersion,
			t.delflag
		FROM PT_FI_CASH_FLOW_ITEM t 
		where t.delflag=0 
		<if test="code!=null and code!=''">
		and FIND_IN_SET(#{code},t.code)
		</if>
		<if test="accountSetId!=null and accountSetId!=''">
		and t.account_set_id = #{accountSetId}
		</if>
		<if test="subjectCodes != null and subjectCodes !=''">
             and   t.subject_codes LIKE CONCAT(CONCAT('%',#{subjectCodes}),'%') 
        </if>
		<if test="start!=null and start!='' and limit!=null and limit!=''">
	        limit #{start},#{limit}
	   </if>

	</select>
	<!-- 获取树列表数据 -->
	<select id="queryCashFlowItemList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT
			t.id,
			t.name,
			t.code,
			t.node_level as nodeLevel,
			t.parent_id as parentId,
			t.subject_codes as subjectCodes,
			t.subject_names as subjectNames,
			t.account_set_id as accountSetId,
			t.create_date as createDate,
			t.update_date as  updateDate,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.concurrency_version as concurrencyVersion,
			t.delflag
		FROM PT_FI_CASH_FLOW_ITEM t 
		where 1=1 
		<choose>
        <when test="nodeLevel != null">
             <![CDATA[ and   t.node_level < #{nodeLevel}]]>    
        </when>
        </choose>
        <choose>
        <when test="accountSetId != null and accountSetId !=''">
             and   t.account_set_id = #{accountSetId}
        </when>
        <otherwise>
             and    t.account_set_id='null'
         </otherwise>
        </choose>
        <choose>
        <when test="subjectCodes != null and subjectCodes !=''">
             and   t.subject_codes LIKE CONCAT(CONCAT('%',#{subjectCodes}),'%') 
        </when>
        </choose>
        and t.delflag=0  order by t.create_date asc
	</select>
</mapper>