<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	    http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-4.3.xsd">

    <util:properties id="configuration" location="classpath:configuration.properties"/>
    <context:component-scan base-package="com.xinleju.platform.sys.**.service.impl"></context:component-scan>
	<context:component-scan base-package="com.xinleju.platform.**.service.impl"></context:component-scan>
	<context:component-scan base-package="com.xinleju.platform.**.dao.impl"></context:component-scan>
   
    <!-- 基础数据源 -->
	 <bean id="mainDataSource" class="com.alibaba.druid.pool.DruidDataSource"  
        init-method="init" destroy-method="close">  
        <property name="driverClassName" value="#{configuration['db.driverClassName']}" />
        <property name="url" value="#{configuration['db.url']}" />
        <property name="username" value="#{configuration['db.username']}" />
        <property name="password" value="#{configuration['db.password']}" />
        
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="#{configuration['db.initialSize']}" />
        
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="#{configuration['db.maxActive']}" />
        
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="#{configuration['db.minIdle']}" />
        
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="#{configuration['db.maxWait']}" />
	    
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
	    <property name="timeBetweenEvictionRunsMillis" value="#{configuration['db.timeBetweenEvictionRunsMillis']}" />  
	   
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
	    <property name="minEvictableIdleTimeMillis" value="#{configuration['db.minEvictableIdleTimeMillis']}" /> 
	    
	    <property name="validationQuery" value="#{configuration['db.validationQuery']}" />  
    </bean>
   
    <bean id="dataSource" class="com.xinleju.platform.base.datasource.DynamicDataSource"  >
         <property name="targetDataSources">  
         	<map></map>
         </property>  
        <property name="defaultTargetDataSource" ref="mainDataSource"></property>
    </bean>

    <!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mainDataSource"  />
	</bean>
	

    <!-- 开启事务注解驱动 -->  
    <tx:annotation-driven transaction-manager="transactionManager"  />   
     
    <!-- mybatis sessionFactory工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mainDataSource" />
		
		<!-- 配置mybatis的日志记录 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="#{configuration['mybatis.mapper']}"></property>
	</bean>
	
	<bean id="excuteTimeMonitor" class="com.xinleju.platform.base.interceptor.MethodTimeMonitoring"></bean>

	<aop:config>
		<!--切入点-->    
        <aop:pointcut id="methodPoint" expression="execution(*  com.xinleju.platform..service.impl.*.*(..) ) ||  execution(*  com.xinleju.platform..dao.impl.*.*(..)) "/>
	    
	    <!--在该切入点使用自定义拦截器-->    
		<aop:advisor pointcut-ref="methodPoint" advice-ref="excuteTimeMonitor"/>  
	</aop:config>
	
		<!-- redis -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"></bean>
	
	<bean id="jedisConnectionFactory"
	    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	    <property name="hostName" value="#{configuration['redis.host']}" />
	    <property name="port" value="#{configuration['redis.port']}" />
	    <property name="database" value="#{configuration['redis.database']}" />
	    <property name="password" value="#{configuration['redis.pass']}" />
	    <property name="timeout" value="#{configuration['redis.timeout']}" />
	    <property name="poolConfig" ref="jedisPoolConfig" />
	    
	    <property name="usePool" value="true" />
	</bean>
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
	    <property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>
</beans>