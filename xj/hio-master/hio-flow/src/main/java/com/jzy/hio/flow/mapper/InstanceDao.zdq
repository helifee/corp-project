package com.jzy.hio.flow.mapper;

import java.util.List;
import java.util.Map;

import com.jzy.hio.flow.dto.tobedeleted.ApprovalList;
import com.jzy.hio.flow.dto.tobedeleted.InstanceAcDto;
import com.jzy.hio.flow.dto.tobedeleted.InstanceDto;
import com.jzy.hio.flow.entity.Instance;
import com.jzy.hio.flow.rt.model.OverdueAc;
import org.apache.ibatis.annotations.Param;

import com.xinleju.platform.base.dao.BaseMapper;

/**
 * @author admin
 *
 */
public interface InstanceDao extends BaseMapper<Instance> {

	/**
	 * 根据模板ID，业务单据ID查询实例
	 *
	 * @param flId
	 * @param businessId
	 * @return
	 */
	List<Instance> queryInstanceByFlIdAndBusinessId(String flId, String businessId);

	/**
	 * 审批列表查询
	 *
	 * @param instanceId
	 * @param status
	 * @return
	 */
	List<ApprovalList> queryApprovalList(@Param("instanceId") String instanceId, @Param("status") String status);

	/**
	 * 外部查询审批记录
	 *
	 * @param flCode
	 * @param businessId
	 * @param appId
	 * @return
	 */
	List<ApprovalList> queryApprovalListExternal(String flCode, String businessId, String appId);

	boolean changeStatus(String instanceId, String value);

	// 查询分类的List
	List<InstanceDto> queryInstanceListByParam(Map<String, Object> map);

	// 查询分类的Count
	Integer queryInstanceCountByParam(Map<String, Object> map);

	List<InstanceDto> getRelateInstances(String instanceId);

	/**
	 * 查询逾期环节
	 *
	 * @return
	 */
	List<OverdueAc> queryOverdueAc();

	// List<InstanceDto> personalQueryList(Map<String, String> map);
	List<InstanceDto> personalQueryListByParam(Map<String, Object> map);

	Integer personalQueryCountByParam(Map<String, Object> map);

	// List<InstanceDto> queryListByApprover(Map<String, String> paramMap);
	// 优化修改为分页查询
	List<InstanceDto> queryListByApproverParam(Map<String, Object> map);

	Integer queryListCountByApproveParam(Map<String, Object> map);

	/**
	 * 获取节点审批类型
	 *
	 * @param map
	 * @return
	 * @throws Exception
	 */
	public String queryApprovalTypeId(Map<String, Object> map) throws Exception;

	List<Instance> queryListByInstanceIds(List<String> instanceIds);

	List<Instance> queryListByFlCodeAndBusinessIds(String flCode, List<String> businessIds);

	List<InstanceAcDto> queryCurrentNodeOf(String instanceId);

	/**
	 * 查找流程相关人员：发起人、审批人、转办/协办人、可阅人、传阅人、抄送人ID集合
	 *
	 * @param instanceId
	 * @return
	 */
	List<String> queryFlowRelationUserIds(String instanceId);

	/**
	 * 查询实例的所有开始节点对应的消息id，针对存在打回操作时，开始环节有多个的情况
	 *
	 * @param param
	 * @return
	 */
	List<String> getMsgIdsByInstanceId(String instanceId);

	List<Map<String, String>> scanFlowOf(List<String> names);

	List<Map<String, String>> monitor1(String instanceId);

	List<Map<String, String>> monitor2(String instanceId);

	List<Map<String, String>> monitor3(String instanceId);

	List<Map<String, String>> monitor4(String instanceId);

	List<Map<String, String>> monitor5(String instanceId);

	List<Map<String, String>> monitor6(String instanceId);

	List<Map<String, String>> monitor7(String instanceId);

	List<Map<String, String>> monitor8(String instanceId);

	List<Map<String, String>> monitor9(String instanceId);

}
