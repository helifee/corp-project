package com.jzy.hio.flow.operation.concurrent;

import java.util.List;

import com.jzy.hio.flow.enums.AutoPassType;
import com.jzy.hio.flow.enums.TaskStatus;
import com.jzy.hio.flow.rt.model.ApproverUnit;
import com.jzy.hio.flow.rt.model.PostUnit;
import org.apache.commons.collections.CollectionUtils;

/**
 * 抢占策略
 * 
 * @author daoqi
 *
 */
public class CompetitionStrategy implements ConcurrentStrategy {

	@Override
	public int calculateLeftCnt(PostUnit currentPost) {
		int leftCount = 0;
		List<ApproverUnit> approvers = currentPost.getApprovers();
		if(CollectionUtils.isNotEmpty(approvers)) {
			for(ApproverUnit approver : approvers) {
				if(TaskStatus.RUNNING.getValue().equals(approver.getTask().getTaskStatus())
						&& approver.getAutoPass() == AutoPassType.NOT_PASS.getValue()) {
					leftCount++;
				}
			}
		}
		return  leftCount;
	}

	@Override
	public int calculateLeftCnt(int currentCnt) {
		return  0;
	}

}
