package com.jzy.hio.flow.mapper;

import java.io.Serializable;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;

import com.xinleju.platform.base.annotation.Description;
import com.xinleju.platform.base.dao.BaseMapper;
import com.xinleju.platform.base.service.BaseService;

@Service
public abstract class BaseServiceImpl<K extends Serializable, T> implements BaseService<K, T>, BaseMapper<T> {
	private static Logger log = Logger.getLogger(BaseServiceImpl.class);

	public BaseServiceImpl() {
	}

	@Description(instruction = "保存对象基础类")
	public int save(T object) throws Exception {
		return this.insert(object);
	}

	@Description(instruction = "批量保存对象基础类")
	public int saveBatch(List<T> objectList) throws Exception {
		return this.insertList(objectList);
	}

	@Description(instruction = "批量更新对象基础类")
	public int updateBatch(List<T> objectList) throws Exception {
		// return getBaseDao().updateBatch(objectList);
		return 0;
	}

	@Description(instruction = "更新对象基础类")
	public int update(T object) throws Exception {
		return this.updateByPrimaryKey(object);
	}

	@Description(instruction = "删除对象基础类")
	public int deleteObjectById(K id) throws Exception {
		return this.deleteByPrimaryKey(id);
	}

	// @Description(instruction = "批量删除对象基础类")
	// public int deleteAllObjectByIds(List<K> ids) throws Exception {
	//// return getBaseDao().deleteAllObjectByIds(ids);
	// }

	@Description(instruction = "获取对象基础类")
	public T getObjectById(K id) throws Exception {
//		return baseMapper.selectByPrimaryKey(id);
		return this.selectByPrimaryKey(id);
	}

	// @Description(instruction = "获取分页对象基础类")
	// public Page getPage(Map<String, Object> paramater, Integer start, Integer
	// pageSize) throws Exception {
	// return getBaseDao().getPage(paramater, start, pageSize);
	// }
	//
	// @Description(instruction = "获取列表对象基础类")
	// public List<T> queryList(Map<String, Object> paramater) throws Exception {
	// return getBaseDao().queryList(paramater);
	// }
	//
	// public Page getPage(Map<String, Object> paramater, Integer start, Integer
	// pageSize, String sort) throws Exception {
	// return getBaseDao().getPage(paramater, start, pageSize, sort);
	// }
	//
	// public List<T> queryList(Map<String, Object> paramater, String sort) throws
	// Exception {
	// return getBaseDao().queryList(paramater, sort);
	// }
	//
	// public int deletePseudoObjectById(K id) throws Exception {
	// return getBaseDao().deletePseudoObjectById(id);
	// }
	//
	// public int deletePseudoAllObjectByIds(List<K> ids) throws Exception {
	// return getBaseDao().deletePseudoAllObjectByIds(ids);
	// }
	//
	// @Description(instruction = "获取总数基础类")
	// public Integer getCount(Map<String, Object> paramater) throws Exception {
	// return Integer.valueOf(getBaseDao().getCount(paramater));
	// }

}