import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.annotation.Resource;

import com.xinleju.cloud.oa.portal.dao.PortalPageDao;
import com.xinleju.cloud.oa.portal.entity.PortalPage;
import com.xinleju.cloud.oa.portal.service.PortalPageService;
import org.junit.Test;

import com.xinleju.cloud.oa.portal.entity.PortalComponentPosition;
import com.xinleju.cloud.oa.portal.service.PortalComponentPositionService;
import com.xinleju.platform.tools.data.JacksonUtils;
import org.junit.runner.RunWith;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 * Created by xueshuang on 2017/2/10.
 */

//@RunWith(JUnit4.class)
//@RunWith(SpringJUnit4ClassRunner.class)
//@ContextConfiguration(locations = {"/spring/applicationContext.xml"})
public class PortalTest {

    //@Resource
    //private PortalPageDtoServiceCustomer portalPageDtoServiceCustomer;

    @Resource
    private PortalComponentPositionService portalComponentPositionService;

    @Resource
    private PortalPageService portalPageService;

    @Test
    public void findPortalById() {
        //String result = portalPageDtoServiceCustomer.getObjectById(null, "{\"id\":\"1ee09f3a6871414ba3484a5b6aaf1e37\"}");
        //System.out.println(result);
    }

   // @Test
    public void systemInTest() {
        try {
            System.out.println(System.in);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

   // @Test
    public void stringFormatTest() {
        String sqlStatement = "select * from OA_PORTAL_COMPONENT_POSITION t where t.portal_page_id='%s',t.id='%s' ";
        String result = String.format(sqlStatement, "hello","hello");
        System.out.println(result);
    }

  //  @Test
    public void findComponentsByPortalIdTest() {
        System.out.println(portalComponentPositionService.findComponentsByPortalId("2e02205a2200488aa2125cfd79ed0aa4"));
    }

   // @Test
    public void findListTest() {
        Map<String,Object> paramMap = new HashMap<String,Object>();
        paramMap.put("portalId","2e02205a2200488aa2125cfd79ed0aa4");
        try {
            List<PortalComponentPosition> list = portalComponentPositionService.queryList(paramMap);
            System.out.println(JacksonUtils.toJson(list));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //@Test
    public void mapTest() {
        PortalComponentPosition portalComponentPosition = new PortalComponentPosition();
        portalComponentPosition.setId("1111");
        PortalComponentPosition portalComponentPosition1 = new PortalComponentPosition();
        portalComponentPosition1.setComponentId("222");

        String json = JacksonUtils.toJson(portalComponentPosition);
        String json1 = JacksonUtils.toJson(portalComponentPosition1);

        Map<String,Object> map = JacksonUtils.fromJson(json,HashMap.class);


        Map<String,Object> map1 = JacksonUtils.fromJson(json1,HashMap.class);
        System.out.println(map);
        map.putAll(map1);
        System.out.println(map);
        System.out.println(map1);

        String mapJson = JacksonUtils.toJson(map1);
        PortalComponentPosition portalComponentPosition2 = JacksonUtils.fromJson(mapJson,PortalComponentPosition.class);
        System.out.println(portalComponentPosition2.getId()+"===="+portalComponentPosition2.getComponentId());
    }

    //@Test
    public void testQueryPortal(){
        ApplicationContext ctx = new ClassPathXmlApplicationContext(new String[]{"applicationContext.xml"});
        PortalPageDao portalPageDao = ctx.getBean(PortalPageDao.class);
        Map<String,Object> paramMap1 = new HashMap<String, Object>();
        List<String> list = new ArrayList<String>();
        list.add("000fbb2eef694532ab9d8ssssrole01");
        paramMap1.put("roleIds",list);
        try {
            List<PortalPage> portalPages = portalPageDao.queryPortalByPermission(paramMap1);
            System.out.println(portalPages);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * B方法追加文件：使用FileWriter
     */
    private void appendMethodB(String fileName, String content) {
        try {
            //打开一个写文件器，构造函数中的第二个参数true表示以追加形式写文件
            FileWriter writer = new FileWriter(fileName, true);
            writer.write(content);
            writer.flush();
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

   // @Test
    public void testIo(){
        appendMethodB("C:\\Users\\admin\\Desktop\\new.html","<div></div>");
    }

    @Test
    public void testRegexMatches(){
        String line = "http://my.platform.com/platform-app/flow/runtime/approve/flow.html?instanceId=dbf70bece10347edb2591dbcf5397994&time=1513777271520&msgId=36bad5c69dd94a79ad2e00952669ac44&source=FQ&action=view&_t=1513923820316&_s=0&attachmentUrl_id=497bd3a201eb455896df90bd55a04a88";
        String pattern = "(instanceId=dbf70bece10347edb2591dbcf5397994)";

        // 创建 Pattern 对象
        Pattern r = Pattern.compile(pattern);

        // 现在创建 matcher 对象
        Matcher m = r.matcher(line);
        System.out.println(m.find( ));
        /*if (m.find( )) {
            System.out.println("Found value: " + m.group(0) );
            System.out.println("Found value: " + m.group(1) );
            System.out.println("Found value: " + m.group(2) );
            System.out.println("Found value: " + m.group(3) );
        } else {
            System.out.println("NO MATCH");
        }*/
    }
}
