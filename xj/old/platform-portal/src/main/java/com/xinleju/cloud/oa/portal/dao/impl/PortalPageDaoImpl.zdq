package com.xinleju.cloud.oa.portal.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.xinleju.cloud.oa.util.SqlStatementUtil;
import com.xinleju.platform.base.utils.Page;
import org.apache.ibatis.session.SqlSession;
import org.springframework.stereotype.Repository;

import com.xinleju.platform.base.dao.impl.BaseDaoImpl;
import com.xinleju.cloud.oa.portal.dao.PortalPageDao;
import com.xinleju.cloud.oa.portal.entity.PortalPage;

/**
 * @author admin
 */

@Repository
public class PortalPageDaoImpl extends BaseDaoImpl<String, PortalPage> implements PortalPageDao {

    public PortalPageDaoImpl() {
        super();
    }

    //模糊查询
    @Override
    public List<PortalPage> queryFuzzyList(Map<String, Object> map) {
        return this.getSqlSession().selectList("com.xinleju.cloud.oa.portal.entity.PortalPage.queryFuzzyList", map);
    }

    //模糊查询总数
    @Override
    public Integer queryFuzzyCount(Map<String, Object> map) {
        return this.getSqlSession().selectOne("com.xinleju.cloud.oa.portal.entity.PortalPage.queryFuzzyCount", map);
    }

    @Override
    public List<PortalPage> queryPortalByPermission(Map<String, Object> map) {
        return this.getSqlSession().selectList("com.xinleju.cloud.oa.portal.entity.PortalPage.queryPortalByPermission", map);
    }

    @Override
    public Page queryObjectsByPage(Map map) {
        map.put("delflag", false);
        Page page = new Page();
        page.setLimit((Integer) map.get("limit"));
        page.setStart((Integer) map.get("start"));

        //设置总条数查询条件
        Map countMap = new HashMap(map.size());
        countMap.putAll(map);

        //查询数据
        SqlSession sqlSession = this.getSqlSession();
        String pageSqlStatment = SqlStatementUtil.getPageSqlStatment(map, PortalPage.class);
        List<PortalPage> list = sqlSession.selectList(PortalPage.class.getName() + ".queryObjectsByPage", pageSqlStatment);
        page.setList(list);

        //查询总数
        String pageCountSqlStatment = SqlStatementUtil.getPageCountSqlStatment(countMap, PortalPage.class);
        Integer count = sqlSession.selectOne(PortalPage.class.getName() + ".queryObjectsCountByPage", pageCountSqlStatment);
        page.setTotal(count);
        return page;
    }

    @Override
    public List<PortalPage> queryListByIdsForUpdataStatus(Map<String, Object> paramMap) {
        return this.getSqlSession().selectList(PortalPage.class.getName() + ".queryListByIdsForUpdataStatus", paramMap);
    }
}
