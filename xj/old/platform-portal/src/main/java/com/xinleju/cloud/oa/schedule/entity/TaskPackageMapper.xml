<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.cloud.oa.schedule.entity.TaskPackage">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.cloud.oa.schedule.entity.TaskPackage">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.cloud.oa.schedule.entity.TaskPackage">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.cloud.oa.schedule.entity.TaskPackage">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	<select id="getTaskPackageCount" resultType="java.lang.Integer">
		select count(t.id) from oa_schedule_task_package  t where t.delflag=0 and ( t.create_person_id=#{userId} or t.publish_user_id=#{userId})
		
	</select>
	<select id="getTaskPackageListPage" resultType="java.util.Map">
		SELECT
	t.concurrency_version as concurrencyVersion,
	t.create_company_id  as createCompanyId,
	t.create_company_name as  createCompanyName,
	t.create_date as createDate,
	t.create_org_id as createOrgId,
	t.create_org_name as createOrgName,
	t.create_person_id as createPersonId,
	t.create_person_name as createPersonName,
	t.delflag,
	t.id,
	t.publish_date as publishDate,
	t.propose_dept as proposeDept,
	t.propose_dept_id as proposeDeptId,
	t.propose_user as proposeUser,
	t.propose_user_id as proposeUserId,
	t.publish_user as publishUser,
	t.publish_user_id as publishUserId,
	t.remark,
	t.tend_id as tendId,
	t.title,
	t.status,
	t.update_date as updateDate,
	t.update_person_id as updatePersonId,
	t.update_person_name as updatePersonName,
	(SELECT count(t1.id) FROM oa_schedule_task_package_dispatch t1 WHERE t1.task_package_id = t.id) as totalCount,
	(SELECT count(t1.id) FROM oa_schedule_task_package_dispatch t1 WHERE t1.task_package_id = t.id AND t1.report_status='2') as completeCount,
	(SELECT count(t1.id) FROM oa_schedule_task_package_dispatch t1 WHERE t1.task_package_id = t.id AND t1.report_status!='2') as unCompleteCount
FROM
	oa_schedule_task_package t
	 where t.delflag=0  and ( t.create_person_id=#{userId} or t.propose_user_id=#{userId} or t.publish_user_id =#{userId})
	 <if test="title!=null and title!=''">
	  and  t.title like CONCAT(CONCAT('%',#{title}),'%')
	 </if>
	 <if test="startTime!=null and startTime!=''">
	 and t.publish_date &gt;=  #{startTime}
	 </if>
	 <if test="endTime!=null and endTime!=''">
	 and t.publish_date &lt;= #{endTime}
	 </if>
	 order by t.status asc,t.create_date desc
        limit #{start},#{limit}
	</select>
</mapper>