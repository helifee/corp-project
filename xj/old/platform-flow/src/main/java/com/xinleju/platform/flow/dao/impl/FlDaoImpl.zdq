package com.xinleju.platform.flow.dao.impl;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.xinleju.platform.base.dao.impl.BaseDaoImpl;
import com.xinleju.platform.base.utils.LoginUtils;
import com.xinleju.platform.base.utils.Page;
import com.xinleju.platform.flow.dao.FlDao;
import com.xinleju.platform.flow.dto.FlDto;
import com.xinleju.platform.flow.entity.Fl;

/**
 * @author admin
 * 
 * 
 */

@Repository
public class FlDaoImpl extends BaseDaoImpl<String, Fl> implements FlDao {

	public FlDaoImpl() {
		super();
	}

	@Override
	public Page queryFlList(Map<String, Object> paramater) throws Exception {
		// TODO Auto-generated method stub
		
		Page page = new Page();
		System.out.println("==================="+LoginUtils.getSecurityUserBeanInfo().getTendCode());
		List<FlDto> list= getSqlSession().selectList(Fl.class.getName()+".queryFlList", paramater);
		System.out.println(LoginUtils.getSecurityUserBeanInfo());
		int total = 0;
		if (paramater.get("limit") != null)
			total = getSqlSession().selectOne(Fl.class.getName() + ".queryFlCount", paramater);
		page.setList(list);
		page.setLimit((Integer) paramater.get("limit"));
		page.setStart((Integer) paramater.get("start"));
		page.setTotal(total);
		
		return page;
	}
	@Override
	public Page queryFlListNew(Map<String, Object> paramater) throws Exception {
		Page page = new Page();
		List<String> codes=getSqlSession().selectList("com.xinleju.platform.flow.entity.Fl.selectCodeByQuery", paramater);
		paramater.put("codes", codes);
		List<FlDto> list=null;
		if (codes!=null &&codes.size()>0) {
			list=getSqlSession().selectList("com.xinleju.platform.flow.entity.Fl.selectFlsByQuery", paramater);
		}
		page.setList(list);
		page.setLimit((Integer) paramater.get("limit"));
		page.setStart((Integer) paramater.get("start"));
		page.setTotal(codes.size());
		
		return page;
	}
	@Override
	public Page queryFlByGroupList(Map<String, Object> paramater) throws Exception {
		Page page = new Page();
		List<String> codes=getSqlSession().selectList("com.xinleju.platform.flow.entity.Fl.selectCodeByQueryNew", paramater);
		Integer total=getSqlSession().selectOne("com.xinleju.platform.flow.entity.Fl.selectCodeCount", paramater);
		paramater.put("codes", codes);
		List<FlDto> list=null;
		if (codes!=null &&codes.size()>0) {
			list=getSqlSession().selectList("com.xinleju.platform.flow.entity.Fl.selectFlsByQuery", paramater);
		}
		page.setList(list);
		page.setLimit((Integer) paramater.get("limit"));
		page.setStart((Integer) paramater.get("start"));
		page.setTotal(total);
		
		return page;
	}

	@Override
	public int deleteFl(String paramater) throws Exception {
		// TODO Auto-generated method stub
		return getSqlSession().delete(Fl.class.getName()+".deleteByFlId", paramater);
	}

	@Override
	public Fl queryDefaultFlow(String businessObjectCode) {
		return getSqlSession().selectOne(Fl.class.getName() + ".queryDefaultFlow", businessObjectCode);
	}

	@Override
	public Fl queryReadyFlowBy(String flCode) {
		return getSqlSession().selectOne(Fl.class.getName() + ".queryReadyFlowBy", flCode);
	}

	@Override
	public List<FlDto> queryListByApprover(Map<String, String> paramMap) {
		return getSqlSession().selectList(Fl.class.getName() + ".queryListByApprover", paramMap);
	}

	@Override
	public List<FlDto> queryViewList(Map<String, String> paraMap) {
		return getSqlSession().selectList(Fl.class.getName() + ".queryViewList", paraMap);
	}

	@Override
	public List<FlDto> queryFlowBusiObjectList(Map<String, String> paramMap) {
		String method = Fl.class.getName() + ".queryFlowBusiObjectList";
		return getSqlSession().selectList(method, paramMap);
	}
	@Override
	public Map<String, String> getFlowRetractForInstance(Map<String, String> paramMap) {
		String method = Fl.class.getName() + ".getFlowRetractForInstance";
		return getSqlSession().selectOne(method, paramMap);
	}

	@Override
	public List<String> queryFlListBy(List<String> params) {
		return getSqlSession().selectList(Fl.class.getName() + ".queryFlListByUserId", params);
	}

}
