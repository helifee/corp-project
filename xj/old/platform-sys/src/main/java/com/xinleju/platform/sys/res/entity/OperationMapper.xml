<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.sys.res.entity.Operation">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.sys.res.entity.Operation">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.sys.res.entity.Operation">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.sys.res.entity.Operation">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
		<!-- 根据资源id获取功能操作点-->
	<select id="queryOperationList" resultType="com.xinleju.platform.sys.res.dto.DataNodeDto" parameterType="java.lang.String">
		 select id,name,sort,parent_id as 'parentId' from pt_sys_res_operation 
		<choose>
                <when test="_parameter != null">
                        where resource_id = #{_parameter,jdbcType=VARCHAR};
                </when>
                <otherwise>
                        where resource_id is null;
                 </otherwise>
         </choose>
	</select>
		<!-- 根据资源id获取功能操作点-->
	<select id="queryOperationListAll" resultType="com.xinleju.platform.sys.res.dto.DataNodeDto" parameterType="java.lang.String">
		 select id,name,sort,parent_id as 'parentId' from pt_sys_res_operation 
		<choose>
                <when test="_parameter != null">
                        where parent_id = #{_parameter,jdbcType=VARCHAR};
                </when>
                <otherwise>
                        where parent_id is null;
                 </otherwise>
         </choose>
	</select>
		<!-- 根据资源id获取功能操作点-->
		<select id="queryOperationByRoleId" resultType="com.xinleju.platform.sys.res.dto.DataNodeDto" parameterType="java.lang.String">
		SELECT r.id,r.name,r.sort,r.parent_id as parentId from 
			 pt_sys_res_operation r,pt_sys_res_func_permission p
			where r.id=p.operation_id and r.is_valid=1 and p.role_id=#{roleId}
	</select>
	
	<!-- 根据资源id获取功能操作点(查询菜单下的一级按钮)-->
	<select id="queryOperationListRootByResourceId" resultType="com.xinleju.platform.sys.res.dto.DataNodeDto" parameterType="java.lang.String">
		 select id,name,sort,parent_id as 'parentId' from pt_sys_res_operation 
		  where delflag=0
		<choose>
                <when test="_parameter != null">
                        and  resource_id = #{_parameter,jdbcType=VARCHAR} 
                        AND
         				(parent_id is null OR parent_id ='')
                </when>
                <otherwise>
                        and resource_id is null 
                        AND
         				(parent_id is null OR parent_id ='')
                 </otherwise>
         </choose>
         
          
	</select>
	<!-- 根据资源id获取所有按钮-->
	<select id="queryOperationListAllByResourceId" resultType="com.xinleju.platform.sys.res.dto.DataNodeDto" parameterType="java.lang.String">
		 select id,name,sort,parent_id as 'parentId' from pt_sys_res_operation 
		 where delflag=0
		<choose>
                <when test="_parameter != null">
                        and resource_id = #{_parameter,jdbcType=VARCHAR};
                </when>
                <otherwise>
                        and resource_id is null;
                 </otherwise>
         </choose>
	</select>
	<!-- 获取列表根据条件查询 -->
	<select id="queryListByCondition" resultType="com.xinleju.platform.sys.res.dto.OperationDto" parameterType="java.util.HashMap">
		SELECT
			o.id AS id,
			o.concurrency_version AS concurrencyVersion,
			o.CODE AS CODE,
			o.NAME AS NAME,
			o.parent_id AS parentId,
			o.icon AS icon,
			o.app_id AS appId,
			o.resource_id AS resourceId,
			o.url AS url,
			o.sort AS sort,
			o.type AS type,
			o.is_valid AS isValid,
			o.remark AS remark,
			o.create_date AS createDate,
			o.update_date AS updateDate,
			o.create_person_id AS createPersonId,
			o.create_person_name AS createPersonName,
			o.update_person_id AS updatePersonId,
			o.update_person_name AS updatePersonName,
			o.create_org_id AS createOrgId,
			o.create_org_name AS createOrgName,
			o.create_company_id AS createCompanyId,
			o.create_company_name AS createCompanyName,
			o.delflag AS delflag,
		  oo.`name` as parentName,
		  r.`name` as resourceName,
		  app.`name` as appName
		FROM
			PT_SYS_RES_OPERATION o
		LEFT JOIN PT_SYS_RES_OPERATION oo ON o.parent_id = oo.id
		LEFT JOIN pt_sys_res_resource r ON o.resource_id = r.id
		LEFT JOIN pt_sys_res_app app ON o.app_id = app.id
		WHERE 1 = 1
		<if test="delflag != null and delflag != ''">
				and o.delflag = #{delflag} 
		</if>
		<if test="appId != null and appId != ''">
				and o.app_id = #{appId}
		</if>
		<if test="resourceId != null and resourceId != ''">
				and o.resource_id = #{resourceId}
		</if>
		<if test="id != null and id != ''">
				and o.id = #{id}
		</if>
		<if test="code != null and code != ''">
			and o.code = #{code}
		</if>
		ORDER BY app.id,r.id,
		case when o.sort is null then 1 else 0 end,	o.sort 
		<if test="start !=null and limit !=null and limit!=-1">
			 limit #{start},#{limit}
		 </if>
	</select>
	
	<!-- 校验编码重复 -->
	<select id="getCodeCount" parameterType="map" resultType="int">
		SELECT count(*) from pt_sys_res_operation t where t.`code` =#{code} and t.resource_id=#{menuId}  and t.delflag=0 
		<if test="id!=null">
			and t.id !=#{id}
		</if>
	</select>
	<!-- 判断菜单是否存在下级菜单或按钮 -->
	<select id="selectSonNum" parameterType="map" resultType="int">
			SELECT
				count(*)
			FROM
				pt_sys_res_operation o
			WHERE
				o.delflag=0 and 
				o.parent_id = #{buttonId}
	</select>
</mapper>