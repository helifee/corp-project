<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.flow.entity.InstanceGroup">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.flow.entity.InstanceGroup">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.flow.entity.InstanceGroup">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.flow.entity.InstanceGroup">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	
	<update id="updatePx">
		UPDATE pt_flow_instance_group SET px = #{px}
		<if test="proxy != null and proxy != ''">
			, proxy = #{proxy}
		</if>
		<if test="proxyType != null and proxyType != ''">
			, proxy_type = #{proxyType}
		</if>
		<if test="status != null and status != ''">
			, status = #{status}
		</if>
		WHERE id = #{id}
	</update>

	<!--查询实例所有环节审批人-->
	<select id="queryListByInstanceId" resultType="java.util.Map" parameterType="map">
		SELECT
			fp.id AS acPostId,
			fp.ac_id AS acId,
			fp.post_name AS postName,
			fp.post_id AS postId,
			fp. STATUS AS postStatus,
			fp.activate_date AS postActivateDate,
			fp.end_date AS postEndDate,
			fp.left_person AS leftPerson,
			fp.px AS postPx,
			fp.concurrency_version AS postVersion,

			fg.id AS id,
			fg.activate_date AS activateDate,
			fg.end_date AS endDate,
			fg.status AS status,
			fg.disable AS disable,
			fg.disable_type AS disableType,
			fg.parse_type AS parseType,
			fg.participant_name AS participantName,
			fg.participant_id AS participantId,
			/*IFNULL(
				concat(
					fp.post_id,
					'/',
					fg.participant_id
				),
				fp.post_id
			) AS participantId,*/
			fg.px AS px,
			fg.source_id AS sourceId,
			fg.source AS source,
			fg.auto_pass AS autoPass,
			fg.proxy AS proxy,
			fg.proxyed AS proxyed,
			fg.proxy_type AS proxyType,
			fg.concurrency_version AS concurrencyVersion,

			ft.id AS taskId,
			ft.`status` AS taskStatus,
			ft.group_id AS groupId,
			ft.msg_id AS msgId,
			ft.operation_name AS operationName,
			ft.operation_code AS operationCode,
			ft.user_note AS userNote,
			ft.relation_task_id AS relationTaskId,
			ft.relation_participant_id AS relationParticipantId,
			ft.relation_participant AS relationParticipant,
			ft.disable AS taskDisable,
			ft.disable_type AS taskDisableType,
			ft.source AS taskSource,
			ft.source_id AS taskSourceId,
			ft.type AS type,
			ft.approver_name AS approverName,
			ft.approver_id AS approverId,
			ft.activate_date AS taskActivateDate,
			ft.end_date AS taskEndTime,
			ft.concurrency_version AS taskVersion
		FROM
			pt_flow_instance_post fp
		LEFT JOIN pt_flow_instance_group fg ON (fg.ac_post_id = fp.id AND fg.delflag=0)
		LEFT JOIN pt_flow_instance_ac ta ON (fp.ac_id = ta.id AND  fp.delflag=0)
		LEFT JOIN pt_flow_instance_task ft ON (ft.group_id = fg.id AND ft.delflag=0)
		WHERE
			ta.fi_id = #{instanceId}
		AND (fg.delflag = '0' OR fg.delflag IS NULL)
		GROUP BY fp.id,fg.id
		ORDER BY fp.px ASC
	</select>
</mapper>