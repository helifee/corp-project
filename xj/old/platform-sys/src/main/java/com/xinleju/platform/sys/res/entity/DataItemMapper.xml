<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.sys.res.entity.DataItem">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.sys.res.entity.DataItem">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.sys.res.entity.DataItem">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.sys.res.entity.DataItem">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
   <!-- 根据数据控制对象获取数据对象控制项-->
		<select id="queryDataItemList" resultType="com.xinleju.platform.sys.res.dto.DataItemDto" parameterType="java.lang.String">
		 select 
			 id as id ,
           create_date as  createDate,
           update_date as updateDate,
           create_person_id as createPersonId,
           create_person_name as createPersonName,
           update_person_id as updatePersonId,
           update_person_name as updatePersonName,
            create_org_id as createOrgId,
            create_org_name as createOrgName,
            create_company_id as createCompanyId,
            create_company_name as createCompanyName,
            concurrency_version as concurrencyVersion,
          	delflag as delflag,
		     name as name,
		     code as code,
		     tend_id as tendId,
		     ctrl_id as ctrlId,
		     icon as icon,
		     type as type,
		     sort as sort
		  from pt_sys_res_data_item 
		<choose>
                <when test="_parameter != null">
                        where ctrl_id = #{_parameter,jdbcType=VARCHAR};
                </when>
                <otherwise>
                        where ctrl_id is null;
                 </otherwise>
         </choose>
	</select>
	
	<!-- 校验某系统下的作用域编码是否已存在 -->
	<select id="checkAppIdAndItemCode" parameterType="map" resultType="java.lang.Integer">
		select count(*) from pt_sys_res_data_item i 
		where i.app_id=#{appId} and i.item_code =#{itemCode} and i.delflag=0
		<if test="id !=null">
			and i.id !=#{id}
		</if>
	</select>
	
	<!-- 查询作用域业务对象和控制点 -->
	<select id="selectDataItemAndPointList" parameterType="map" resultType="map">
		SELECT 
			a.id appId,
			a.`name` appName,
			i.id id,
			i.ctrl_code ctrlCode,
			i.ctrl_name ctrlName,
			i.item_code itemCode,
			i.item_name itemName,
			i.remark remark,
			GROUP_CONCAT(p.id) pointIds,
			GROUP_CONCAT(p.`name`) pointNames
		from pt_sys_res_data_item i
		LEFT JOIN pt_sys_res_app a on a.id=i.app_id
		LEFT JOIN pt_sys_res_data_point p on p.item_id =i.id and p.delflag =0
			where 1=1 and a.delflag=0 and a.`status`=1  
			<if test="delflag !=null">
				and i.delflag=#{delflag}
			</if> 
			<if test="appId !=null">
				and i.app_id=#{appId}
			</if> 
			<if test="id !=null">
				and i.id=#{id}
			</if> 
			GROUP BY i.id
			ORDER BY a.sort,i.ctrl_code, i.item_code
	</select>
	<!-- 查询作用域业务对象  -->
	<select id="selectDataItem" parameterType="map" resultType="map">
		SELECT 
			a.id appId,
			a.`name` appName,
			i.id id,
			i.ctrl_code ctrlCode,
			i.ctrl_name ctrlName,
			i.item_code itemCode,
			i.item_name itemName,
			i.remark remark
		from pt_sys_res_data_item i
		LEFT JOIN pt_sys_res_app a on a.id=i.app_id
			where 1=1
			<if test="delflag !=null">
				and i.delflag=#{delflag}
			</if> 
			<if test="appId !=null">
				and i.app_id=#{appId}
			</if> 
			<if test="id !=null">
				and i.id=#{id}
			</if> 
			ORDER BY i.ctrl_code, i.item_code
	</select>
</mapper>