<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.flow.entity.Instance">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.flow.entity.Instance">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.flow.entity.Instance">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.flow.entity.Instance">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	
	<!-- 
		SELECT
			*
		FROM
			pt_flow_instance i
		WHERE
			i.business_id = #{businessId}
		AND i.fl_id = #{flId} 
		AND i.status = 4
		AND i.delflag = 0	
	 -->
	<!-- 根据流程模板ID及业务单据ID查询实例 -->
	<select id="queryInstanceByFlIdAndBusinessId" resultType="com.xinleju.platform.flow.entity.Instance" parameterType="java.util.HashMap">
		SELECT
			i.*
		FROM
			pt_flow_instance i
		WHERE
			i.business_id = #{businessId}
		AND i.fl_id in(select s.id from pt_flow_fl s where s.code=#{flCode} and s.delflag=0)
		AND i.status = 4
		AND i.delflag = 0
		ORDER by i.start_date desc limit 0,1
	</select>
	<select id="queryApprovalList" resultType="com.xinleju.platform.flow.dto.ApprovalList" parameterType="java.util.HashMap">
		SELECT
			i.app_id AS appId,
			i.fl_id AS flId,
			fl.code AS flCode,
			fl.retract AS flRetract,
			i.id AS instanceId,
			i.name AS instanceName,
			i.status AS instanceStatus,
			i.business_id AS businessId,
			b.pc_url AS pcUrl,
			ac.id AS acId,
			ac.code AS acCode,
			ac.name AS acName,
			ac.ac_type AS acType,
			ac.status AS acStatus,
			ac.activate_date AS acStartTime,
			ac.end_date AS acEndTime,
			ac.approve_type_id AS approvalTypeId,
			atype.name AS approvalType,
			ac.is_add_label AS isAddLabel,
			ac.approve_strategy AS multiPost,
			ac.post_multi_person AS multiPerson,
			ac.source AS source,
			ac.left_post AS leftPost,
			ac.px AS acPx,
			ac.return_px AS returnPx,
			ac.pre_ac_ids AS preAcIds,
			ac.next_ac_ids AS nextAcIds,
			ac.from_return AS fromReturn,
			ac.post_is_null AS postNull,
			ac.approval_person_is_null AS approverNull,
			GROUP_CONCAT(cs.participant_id) AS ccIds,
			GROUP_CONCAT(cs.participant_name) AS ccNames,			
			p.id AS acPostId,
			p.post_id AS postId,
			p.post_name AS postName,
			p.px AS postSeq,
			p.status AS postStatus,
			p.activate_date AS postStartTime,
			p.end_date AS postEndTime,
			p.left_person as leftPerson,
			g.id AS groupKey,
			g.ac_post_id AS acPostId,
			g.participant_id AS approverId,
			g.participant_name AS approverName,
			g.px AS approverSeq,
			g.auto_pass AS autoPass,
			g.proxy AS proxy,
			g.proxyed AS proxyed,
			g.proxy_type AS proxyType,	
			g.status AS approverStatus,		
			t.id AS taskId,
			t.type AS taskType,
			t.status AS taskStatus,
			t.activate_date AS taskStartTime,
			t.end_date AS taskEndTime,
			t.operation_code AS taskResult,
			t.operation_name AS taskResultName,
			t.user_note AS taskComments,
			t.relation_participant_id AS fromId,
			t.relation_participant AS fromName,
			t.msg_id AS msgId
		FROM
			pt_flow_instance_ac ac
		LEFT JOIN pt_flow_approve_type atype ON (
			ac.approve_type_id = atype. CODE
		)
		LEFT JOIN pt_flow_instance_post p ON (ac.id = p.ac_id AND p.delflag = 0)
		LEFT JOIN pt_flow_instance_group g ON (p.id = g.ac_post_id AND g.delflag = 0)
		LEFT JOIN pt_flow_instance_task t ON (g.id = t.group_id AND t.delflag = 0)
		LEFT JOIN pt_flow_instance i ON(ac.fi_id = i.id)
		LEFT JOIN pt_flow_fl fl on i.fl_id=fl.id
		LEFT JOIN pt_flow_instance_cs cs ON(cs.ac_id = ac.id AND cs.fi_id = ac.fi_id AND cs.delflag = 0)
		LEFT JOIN pt_flow_business_object b ON(b.id = i.business_object_id AND b.delflag = 0)
		WHERE
			ac.fi_id = #{instanceId}
			AND ac.delflag = 0 
		<if test="status != null">
			AND (t.status = #{status} OR ac.ac_type = '4' OR ac.ac_type = '5')
		</if>
		GROUP BY ac.id, p.id, g.id
		ORDER BY
			ac.px,
			p.px,
			g.px
	</select>
	
	<!-- 获取当前节点审批类型 -->
	<select id="selectApprovalTypeId" parameterType="map" resultType="String">
	SELECT  ac.approve_type_id AS approvalTypeId
		FROM pt_flow_instance_ac ac
		LEFT JOIN pt_flow_instance_post p ON (ac.id = p.ac_id AND p.delflag = 0)
		LEFT JOIN pt_flow_instance_group g ON (p.id = g.ac_post_id AND g.delflag = 0)
		LEFT JOIN pt_flow_instance_task t ON (g.id = t.group_id AND t.delflag = 0)
		WHERE ac.fi_id = #{instanceId} and t.`status`='2' and t.id=#{taskId}
	LIMIT 1
	</select>
	
	<select id="queryApprovalListExternal" resultType="com.xinleju.platform.flow.dto.ApprovalList" parameterType="java.util.HashMap">
		SELECT
			i.app_id AS appId,
			i.fl_id AS flId,
			fl.code AS flCode,
			fl.retract AS flRetract,
			i.id AS instanceId,
			i.status AS instanceStatus,
			i.name AS instanceName,
			i.business_id AS businessId,
			b.pc_url AS pcUrl,
			ac.id AS acId,
			ac. CODE AS acCode,
			ac. NAME AS acName,
			ac.ac_type AS acType,
			ac. STATUS AS acStatus,
			ac.activate_date AS acStartTime,
			ac.end_date AS acEndTime,
			ac.approve_type_id AS approvalTypeId,
			atype. NAME AS approvalType,
			ac.is_add_label AS isAddLabel,
			ac.approve_strategy AS multiPost,
			ac.post_multi_person AS multiPerson,
			ac.source AS source,
			ac.left_post AS leftPost,
			ac.px AS acPx,
			ac.pre_ac_ids AS preAcIds,
			ac.next_ac_ids AS nextAcIds,
			ac.post_is_null AS postNull,
			ac.approval_person_is_null AS approverNull,
			GROUP_CONCAT(cs.participant_id) AS ccIds,
			GROUP_CONCAT(cs.participant_name) AS ccNames,			
			p.id AS acPostId,
			p.post_id AS postId,
			p.post_name AS postName,
			p.px AS postSeq,
			p. STATUS AS postStatus,
			p.activate_date AS postStartTime,
			p.end_date AS postEndTime,
			p.left_person as leftPerson,
			g.id AS groupKey,
			g.ac_post_id AS acPostId,
			g.participant_id AS approverId,
			g.participant_name AS approverName,
			g.px AS approverSeq,
			g.auto_pass AS autoPass,
			g.proxy AS proxy,
			g.proxyed AS proxyed,
			g.proxy_type AS proxyType,	
			g.status AS approverStatus,		
			t.id AS taskId,
			t.type AS taskType,
			t. STATUS AS taskStatus,
			t.activate_date AS taskStartTime,
			t.end_date AS taskEndTime,
			t.operation_code AS taskResult,
			t.operation_name AS taskResultName,
			t.user_note AS taskComments,
			t.relation_participant_id AS fromId,
			t.relation_participant AS fromName,
			t.msg_id AS msgId
		FROM
			pt_flow_instance_ac ac
		LEFT JOIN pt_flow_approve_type atype ON (
			ac.approve_type_id = atype. CODE
		)
		LEFT JOIN pt_flow_instance_post p ON (ac.id = p.ac_id AND p.delflag = 0)
		LEFT JOIN pt_flow_instance_group g ON (p.id = g.ac_post_id AND g.delflag = 0)
		LEFT JOIN pt_flow_instance_task t ON (g.id = t.group_id AND t.delflag = 0)
		LEFT JOIN pt_flow_instance i ON(ac.fi_id = i.id)
		LEFT JOIN pt_flow_fl fl on i.fl_id=fl.id
		LEFT JOIN pt_flow_instance_cs cs ON(cs.ac_id = ac.id AND cs.fi_id = ac.fi_id AND cs.delflag = 0)
		LEFT JOIN pt_flow_business_object b ON(b.id = i.business_object_id AND b.delflag = 0)
		LEFT JOIN pt_sys_res_app a ON(a.id = i.app_id AND a.delflag = 0)
		WHERE
			i.business_id = #{businessId}
			AND i.status != '3'
			AND i.status != '4'
			AND i.status != '7'
			AND i.delflag = 0
			<if test="appCode != null and appCode != ''">
				AND a.code = #{appCode}
			</if>
			<if test="flCode != null and flCode != ''">
				AND fl.code = #{flCode}
			</if>
			AND ac.delflag = 0
		GROUP BY ac.id, p.id, g.id
		ORDER BY
			ac.px,
			p.px,
			g.px
	</select>
	
	<update id="changeStatus" parameterType="java.util.HashMap">
		UPDATE pt_flow_instance SET status = #{status} WHERE id = #{instanceId}
	</update>
	
	<select id="queryListByApproverParam" parameterType="java.util.HashMap" resultType="com.xinleju.platform.flow.dto.InstanceDto" >
		SELECT
			c.id,
			a. NAME,
			a.app_id appId,
			a.business_object_id businessObjectId,
			a.start_user_id startUserId,
			a.flow_business_company_id flowBusinessCompanyId,
			a.start_date startDate,
			c.post_id postId,
			c.participant_id participantId,
			a.current_approvers currentApprovers,
			a.start_user_name startUserName,
			a.flow_business_company_name flowBusinessCompanyName,
			a.id instanceId,
			d.status
		FROM
			pt_flow_instance_group c LEFT JOIN
			pt_flow_instance_ac b ON(b.id = c.ac_id AND b.delflag = 0) LEFT JOIN
			pt_flow_instance a ON(a.id = b.fi_id AND a.delflag = 0) LEFT JOIN
			pt_flow_instance_task d ON(d.group_id = c.id AND d.delflag = 0)
		WHERE
		c.delflag = 0
		AND a. STATUS = 1
		AND b.ac_type = '2'
		AND (d.`status` != '3' OR d.`status` is null)
		AND c.participant_id = #{participantId}
		AND c.post_id = #{postId}
		ORDER BY
			a.start_date DESC
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="queryListCountByApproveParam" parameterType="java.util.HashMap" resultType="java.lang.Integer" >
		SELECT
			count(c.id)
		FROM
			pt_flow_instance_group c LEFT JOIN
			pt_flow_instance_ac b ON(b.id = c.ac_id AND b.delflag = 0) LEFT JOIN
			pt_flow_instance a ON(a.id = b.fi_id AND a.delflag = 0) LEFT JOIN
			pt_flow_instance_task d ON(d.group_id = c.id AND d.delflag = 0)
		WHERE
		c.delflag = 0
		AND a. STATUS = 1
		AND b.ac_type = '2'
		AND (d.`status` != '3' OR d.`status` is null)
		AND c.participant_id = #{participantId}
		AND c.post_id = #{postId}
	</select>

	<select id="queryInstanceListByParam" parameterType="java.util.HashMap" resultType="com.xinleju.platform.flow.dto.InstanceDto" >
		SELECT a.id,a.code,a.name,a.status,a.app_id appId, app.`name` appName,a.business_object_id businessObjectId, b.name busiObjectName, 
		a.fl_id flId, a.start_date startDate, a.start_company_id startCompanyId, 
		a.create_date createDate, a.end_date endDate, 
		timestampdiff(HOUR, a.create_date, IFNULL( a.end_date, now())) hourSum,
		current_approvers currentApprovers, 
		u.real_name startUserName, flow_business_company_name flowBusinessCompanyName,
		business_object_code businessObjectCode, business_id businessId, custom_form_id customFormId 
		FROM pt_flow_instance a
		LEFT JOIN pt_flow_business_object b on a.business_object_id = b.id and b.delflag=0
		LEFT JOIN pt_sys_org_user u on u.id=a.start_user_id
		LEFT JOIN pt_sys_res_app app on a.app_id=app.id
		WHERE a.delflag=0 
		<if test="serialNo != null and serialNo != ''">
			AND  a.serial_no = #{serialNo}
		</if>
		<if test="appId != null and appId != '-1'">
			AND  a.app_id = #{appId}
		</if>
		<if test="orgId != null and orgId != '-1' and orgId != ''">
			AND ( a.flow_business_company_id in 
			     <foreach item="item" index="index" collection="orgId" open="(" separator="," close=")">  
	           		 #{item} 
	             </foreach>
			or flow_business_dept_id in 
				 <foreach item="item" index="index" collection="orgId" open="(" separator="," close=")">  
	           		 #{item} 
	             </foreach>
	        or flow_business_project_id in 
				 <foreach item="item" index="index" collection="orgId" open="(" separator="," close=")">  
	           		 #{item} 
	             </foreach>
	        or flow_business_project_branch_id in 
				 <foreach item="item" index="index" collection="orgId" open="(" separator="," close=")">  
	           		 #{item} 
	             </foreach>
	         )
		</if>
		<if test="busiObjectId != null and busiObjectId != '-1' and busiObjectId != ''">
			AND a.business_object_id = #{busiObjectId} 
		</if>
		<if test="busiObjectIdList != null">
			AND a.business_object_id IN
			<foreach collection="busiObjectIdList" item="businessObjectId" open="(" close=")" separator="," >
				#{businessObjectId}
			</foreach>
		</if>
		<if test="flowId != null and flowId != '-1' and flowId != ''">
			AND a.fl_id = #{flowId} 
		</if>
		<if test="code != null and code != ''">
			AND a.code LIKE concat('%',#{code},'%') 
		</if>
		<if test="name != null and name != ''">
			AND a.name LIKE concat('%',#{name},'%') 
		</if>
		
		<if test="startDate1 != null and startDate1 != ''">
			AND a.start_date &gt;= #{startDate1} 
		</if>
		<if test="endDate1 != null and endDate1 != ''">
			AND a.start_date &lt;= #{endDate1} 
		</if>
		
		<if test="startDate2 != null and startDate2 != ''">
			AND a.end_date &gt;= #{startDate2} 
		</if>
		
		<if test="endDate2 != null and endDate2 != ''">
			AND a.end_date &lt;= #{endDate2} 
		</if>
		<if test="status != null and status != '-1'">
			AND a.status = #{status} 
		</if>
		
		<if test="starterId != null and starterId != '-1' and starterId != ''">
			AND a.start_user_id in  
			<foreach item="item" index="index" collection="starterId" open="(" separator="," close=")">  
	           		 #{item} 
	        </foreach>
		</if>
		<if test="approverId != null and approverId != '-1' and approverId != ''">
	     AND ( a.id in (
	        select fi_id from (
	     	<if test=" approveStatus==-1 or approveStatus ==1 ">
				select ac.fi_id from pt_flow_instance_post pst, pt_flow_instance_ac ac, pt_flow_instance_group grp  
				LEFT JOIN pt_flow_instance_task tsk ON (grp.id = tsk.group_id AND tsk.delflag = 0 )
				WHERE grp.ac_post_id = pst.id AND pst.ac_id = ac.id AND grp.delflag=0 and pst.delflag=0 and ac.delflag=0 
				AND tsk.id is null AND grp.participant_id in 
				<foreach item="item" index="index" collection="approverId" open="(" separator="," close=")">  
	            	#{item} 
	        	</foreach>
	        </if>
	        <if test=" approveStatus==-1">union</if>
	        <if test=" approveStatus==-1 or approveStatus ==2 or approveStatus ==3 ">
	        	select  ac.fi_id from  pt_flow_instance_task tsk, pt_flow_instance_group grp , 
				pt_flow_instance_post pst, pt_flow_instance_ac ac WHERE tsk.group_id = grp.id 
				AND grp.ac_post_id = pst.id AND pst.ac_id = ac.id AND ac.ac_type>1  AND tsk.approver_id in 
				<foreach item="item" index="index" collection="approverId" open="(" separator="," close=")">  
	           		 #{item} 
	        	</foreach>
	        	 <if test='approveStatus==3'>
	        		AND tsk.status in (3,4)
   				 </if>
   				 <if test='approveStatus==2'>
	        		AND tsk.status = 2
   				 </if>
	        </if>
	        ) as tmp
	        )
	    )
		</if>
		 ORDER BY a.create_date DESC
		 limit #{start}, #{limit} 		
	</select>

	<select id="queryInstanceCountByParam" parameterType="java.util.HashMap"  resultType="java.lang.Integer" >
		SELECT count(a.id)
		FROM pt_flow_instance a
		WHERE a.delflag=0
		<if test="appId != null and appId != '-1'">
			AND  a.app_id = #{appId}
		</if>
		<if test="orgId != null and orgId != '-1' and orgId != ''">
			AND ( a.flow_business_company_id in 
			     <foreach item="item" index="index" collection="orgId" open="(" separator="," close=")">  
	           		 #{item} 
	             </foreach>
			or flow_business_dept_id in 
				 <foreach item="item" index="index" collection="orgId" open="(" separator="," close=")">  
	           		 #{item} 
	             </foreach>
	        or flow_business_project_id in 
				 <foreach item="item" index="index" collection="orgId" open="(" separator="," close=")">  
	           		 #{item} 
	             </foreach>
	        or flow_business_project_branch_id in 
				 <foreach item="item" index="index" collection="orgId" open="(" separator="," close=")">  
	           		 #{item} 
	             </foreach>
	         )
		</if>
		<if test="busiObjectId != null and busiObjectId != '-1' and busiObjectId != ''">
			AND a.business_object_id = #{busiObjectId} 
		</if>
		<if test="flowId != null and flowId != '-1' and flowId != ''">
			AND a.fl_id = #{flowId} 
		</if>
		<if test="busiObjectIdList != null">
			AND a.business_object_id IN
			<foreach collection="busiObjectIdList" item="businessObjectId" open="(" close=")" separator="," >
				#{businessObjectId}
			</foreach>
		</if>
		<if test="code != null and code != ''">
			AND a.code LIKE concat('%',#{code},'%') 
		</if>
		<if test="name != null and name != ''">
			AND a.name LIKE concat('%',#{name},'%') 
		</if>
		
		<if test="startDate1 != null and startDate1 != ''">
			AND a.start_date &gt;= #{startDate1} 
		</if>
		<if test="endDate1 != null and endDate1 != ''">
			AND a.start_date &lt;= #{endDate1} 
		</if>
		
		<if test="startDate2 != null and startDate2 != ''">
			AND a.end_date &gt;= #{startDate2} 
		</if>
		
		<if test="endDate2 != null and endDate2 != ''">
			AND a.end_date &lt;= #{endDate2} 
		</if>
		<if test="status != null and status != '-1'">
			AND a.status = #{status} 
		</if>
		
		<if test="starterId != null and starterId != '-1' and starterId != ''">
			AND a.start_user_id in  
			<foreach item="item" index="index" collection="starterId" open="(" separator="," close=")">  
	           		 #{item} 
	        </foreach>
		</if>
		<if test="approverId != null and approverId != '-1' and approverId != ''">
	     AND ( a.id in (
	         select fi_id from (
		     	<if test=" approveStatus==-1 or approveStatus ==1 ">
					select ac.fi_id from pt_flow_instance_post pst, pt_flow_instance_ac ac, pt_flow_instance_group grp  
					LEFT JOIN pt_flow_instance_task tsk ON (grp.id = tsk.group_id AND tsk.delflag = 0 )
					WHERE grp.ac_post_id = pst.id AND pst.ac_id = ac.id AND grp.delflag=0 and pst.delflag=0 and ac.delflag=0 
					AND tsk.id is null AND grp.participant_id in 
					<foreach item="item" index="index" collection="approverId" open="(" separator="," close=")">  
		            	#{item} 
		        	</foreach>
		        </if>
		        <if test=" approveStatus==-1">union</if>
		        <if test=" approveStatus==-1 or approveStatus ==2 or approveStatus ==3 ">
		        	select  ac.fi_id from  pt_flow_instance_task tsk, pt_flow_instance_group grp , 
					pt_flow_instance_post pst, pt_flow_instance_ac ac WHERE tsk.group_id = grp.id 
					AND grp.ac_post_id = pst.id AND pst.ac_id = ac.id AND ac.ac_type>1  AND tsk.approver_id in 
					<foreach item="item" index="index" collection="approverId" open="(" separator="," close=")">  
		           		 #{item} 
		        	</foreach>
		        	 <if test='approveStatus==3'>
		        		AND tsk.status in (3,4)
	   				 </if>
	   				 <if test='approveStatus==2'>
		        		AND tsk.status = 2
	   				 </if>
		        </if>
		      ) as tmp
	        )
	    )
		</if>
		 		
	</select>

	<update id="sync" parameterType="java.util.HashMap">
		UPDATE pt_flow_instance SET 
			status = #{status},
			end_date = #{endDate},
			current_approvers = #{currentApprovers},
			current_approver_ids = #{currentApproverIds}
			<if test="returnRepeatApproval != null and returnRepeatApproval != ''">
				,return_repeat_approval = #{returnRepeatApproval}
			</if>
			<if test="flUpdateDate != null">
				,fl_update_date = #{flUpdateDate,jdbcType=TIMESTAMP}
			</if>
		WHERE id = #{instanceId}
	</update>
	
	<!--
	<select id="personalQueryListByParam" parameterType="java.util.HashMap" resultType="com.xinleju.platform.flow.dto.InstanceDto" >
		SELECT
			a.id,
			a.code,
			a.name,
			a.status,
			b.name busiObjectName, 
			a.business_id businessId,
			fl.code flCode,
			a.start_date startDate,
			a.flow_business_company_id flowBusinessCompanyId,
			a.start_user_id startUserId,
			a.start_company_id startCompanyId,
			timestampdiff(HOUR, a.create_date, IFNULL( a.end_date, now())) hourSum,
			a.current_approvers currentApprovers,
			a.current_approver_ids currentApproverIds,  #{userId} currentUserId,
			u.real_name startUserName,
			a.flow_business_company_name flowBusinessCompanyName,
			b.pc_url AS pcUrl
		FROM pt_flow_instance a
		LEFT JOIN pt_flow_fl fl on fl.id=a.fl_id
		LEFT JOIN pt_flow_business_object b on b.id = a.business_object_id
		LEFT JOIN pt_sys_org_user u on u.id=a.start_user_id
		WHERE a.delflag = 0 
		<if test='timeType=="WEEK"'>  
   			AND a.start_date &gt;= date_sub(now(),interval 7 day)
		</if> 
		<if test='timeType=="MONTH"'>  
    		AND a.start_date &gt;= date_sub(now(),interval 30 day)
		</if> 
		<if test='timeType=="QUARTER"'>  
    		AND a.start_date &gt;= date_sub(now(),interval 90 day)
		</if>	
			
		<if test="appId != null and appId != '-1'">
			AND  a.app_id = #{appId}
		</if>
		 
		<if test="busiObjectId != null and busiObjectId != '-1'">
			AND a.business_object_id = #{busiObjectId} 
		</if>
		
		<if test="name != null and name != ''">
			AND a.name LIKE concat('%',#{name},'%') 
		</if>
		
		<if test="status != null and status != '-1'">
			AND a.status = #{status} 
		</if>
		<if test='queryType =="ALLTYPE"'>
        	AND exists (
        	    SELECT DISTINCT fia.fi_id instance_id FROM pt_flow_instance_accessible fia 
			    	WHERE fia.delflag=0 AND fia.accessible_id= #{userId} AND fia.fi_id = a.id
			    UNION ALL
			    SELECT DISTINCT instance_id FROM pt_flow_instance_operate_log 
					WHERE delflag=0  AND operator_ids = #{userId} AND instance_id = a.id
			)
        </if>
        
        <if test='queryType !="ALLTYPE" and queryType!="TO_DO" and queryType!="HAVE_DONE" '>
        	AND a.id in ( 
	        	    SELECT instance_id FROM pt_flow_instance_operate_log 
						WHERE delflag=0 AND operate_type = #{queryType} AND operator_ids = #{userId}
			)
        </if>
        <if test='queryType =="TO_DO"'>
        	AND a.id in ( 
        	    SELECT ac.fi_id from pt_flow_sys_notice_msg m
					LEFT JOIN pt_flow_instance_task t on m.id=t.msg_id
					LEFT JOIN pt_flow_instance_group g ON (g.id = t.group_id AND t.delflag = 0)
					LEFT JOIN pt_flow_instance_post p ON   (p.id = g.ac_post_id AND g.delflag = 0)
					LEFT JOIN pt_flow_instance_ac ac on(ac.id = p.ac_id AND p.delflag = 0) 
					WHERE m.user_id=#{userId} and m.op_type='DB' and m.delflag=0
			)
        </if>
        <if test='queryType =="HAVE_DONE"'>
        	AND a.id in ( 
        	    SELECT ac.fi_id from pt_flow_sys_notice_msg m
					LEFT JOIN pt_flow_instance_task t on m.id=t.msg_id
					LEFT JOIN pt_flow_instance_group g ON (g.id = t.group_id AND t.delflag = 0)
					LEFT JOIN pt_flow_instance_post p ON   (p.id = g.ac_post_id AND g.delflag = 0)
					LEFT JOIN pt_flow_instance_ac ac on(ac.id = p.ac_id AND p.delflag = 0) 
					WHERE m.user_id=#{userId} and m.op_type='YB' and m.delflag=0
			)
        </if>
		 ORDER BY a.create_date DESC
		 limit #{start}, #{limit} 
	</select>-->
	<select id="personalQueryListByParam"  statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.xinleju.platform.flow.dto.InstanceDto" >

			{ call PROC_PERSONAL_QUERY(
             #{userId,mode=IN,jdbcType=VARCHAR},
             #{start, mode=IN, jdbcType=VARCHAR},
             #{limit, mode=IN, jdbcType=VARCHAR},
             #{timeType, mode=IN, jdbcType=VARCHAR},
             #{appId, mode=IN, jdbcType=VARCHAR},
             #{busiObjectId, mode=IN, jdbcType=VARCHAR},
             #{name, mode=IN, jdbcType=VARCHAR},
             #{status, mode=IN, jdbcType=VARCHAR},
             #{queryType, mode=IN, jdbcType=VARCHAR}) }
	</select>

	
	<select id="personalQueryCountByParam" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		SELECT count(a.id)
		FROM pt_flow_instance a
		WHERE a.delflag = 0 
		<if test='timeType=="WEEK"'>  
   			AND a.start_date &gt;= date_sub(now(),interval 7 day)
		</if> 
		<if test='timeType=="MONTH"'>  
    		AND a.start_date &gt;= date_sub(now(),interval 30 day)
		</if> 
		<if test='timeType=="QUARTER"'>  
    		AND a.start_date &gt;= date_sub(now(),interval 90 day)
		</if>	
				
		<if test="appId != null and appId != '-1'">
			AND  a.app_id = #{appId}
		</if>
		 
		<if test="busiObjectId != null and busiObjectId != '-1'">
			AND a.business_object_id = #{busiObjectId} 
		</if>
		
		<if test="name != null and name != ''">
			AND a.name LIKE concat('%',#{name},'%') 
		</if>
		
		<if test="status != null and status != '-1'">
			AND a.status = #{status} 
		</if>
		
		<if test='queryType =="ALLTYPE"'>
        	AND exists (
        	    SELECT DISTINCT fia.fi_id instance_id FROM pt_flow_instance_accessible fia 
			    	WHERE fia.delflag=0 AND fia.accessible_id= #{userId} AND fia.fi_id = a.id
			    UNION ALL
			    SELECT DISTINCT instance_id FROM pt_flow_instance_operate_log 
					WHERE delflag=0  AND operator_ids = #{userId} AND instance_id = a.id
			)
        </if>
        
        <if test='queryType !="ALLTYPE" and queryType!="TO_DO" and queryType!="HAVE_DONE" '>
        	AND a.id in ( 
	        	    SELECT instance_id FROM pt_flow_instance_operate_log 
						WHERE delflag=0 AND operate_type = #{queryType} AND operator_ids = #{userId}
			)
        </if>
        <if test='queryType =="TO_DO"'>
        	AND a.id in ( 
        	    SELECT ac.fi_id from pt_flow_sys_notice_msg m
					LEFT JOIN pt_flow_instance_task t on m.id=t.msg_id
					LEFT JOIN pt_flow_instance_group g ON (g.id = t.group_id AND t.delflag = 0)
					LEFT JOIN pt_flow_instance_post p ON   (p.id = g.ac_post_id AND g.delflag = 0)
					LEFT JOIN pt_flow_instance_ac ac on(ac.id = p.ac_id AND p.delflag = 0) 
					WHERE m.user_id=#{userId} and m.op_type='DB' and m.delflag=0
			)
        </if>
        <if test='queryType =="HAVE_DONE"'>
        	AND a.id in ( 
        	    SELECT ac.fi_id from pt_flow_sys_notice_msg m
					LEFT JOIN pt_flow_instance_task t on m.id=t.msg_id
					LEFT JOIN pt_flow_instance_group g ON (g.id = t.group_id AND t.delflag = 0)
					LEFT JOIN pt_flow_instance_post p ON   (p.id = g.ac_post_id AND g.delflag = 0)
					LEFT JOIN pt_flow_instance_ac ac on(ac.id = p.ac_id AND p.delflag = 0) 
					WHERE m.user_id=#{userId} and m.op_type='YB' and m.delflag=0
			)
        </if>
   </select>
	
	<!-- 查询关联流程实例 -->
	<select id="getRelateInstances" parameterType="java.util.HashMap" resultType="com.xinleju.platform.flow.dto.InstanceDto" >
		SELECT
			b.id,
			b.name,
			fl.code AS flCode,
			b.business_id AS businessId
		FROM
			pt_flow_instance a,
			pt_flow_instance b,
			pt_flow_fl fl
		WHERE
			a.id = #{instanceId}
		AND FIND_IN_SET(b.id, a.relate_instance_ids)
		AND b.fl_id = fl.id	
	</select>
	
	<!-- 查询逾期环节 -->
	<select id="queryOverdueAc" resultType="com.xinleju.platform.flow.model.OverdueAc">
		SELECT
			ac.fi_id AS instanceId,
			i.`name` AS instanceName,
			i.business_id AS businessId,
			fl.code AS flCode,
			b.pc_url AS pcUrl,
			ac.id AS acId,
			ac.`name` AS acName,
			ac.activate_date AS startTime,
			hour(TIMEDIFF(NOW(),ac.activate_date)) AS duration,
			ac.overdue_time AS overdueTime,
			ac.overdue_handle AS overdueHandle,
			GROUP_CONCAT(g.participant_id) AS currentApproverIds,
			GROUP_CONCAT(g.participant_name) AS currentApproverNames
		FROM
			pt_flow_instance_ac ac,
			pt_flow_instance_post p,
			pt_flow_instance_group g,
			pt_flow_instance_task t,
			pt_flow_instance i,
			pt_flow_fl fl,
			pt_flow_business_object b
		WHERE
			ac.`status` = '2'
		AND ac.`status` != '3'
		AND ac.overdue_time > 0
		AND ac.delflag = 0
		AND ac.ac_type = '2'
		AND hour(TIMEDIFF(NOW(),ac.activate_date)) > ac.overdue_time
		AND ac.id = p.ac_id
		AND p.id = g.ac_post_id
		AND g.id = t.group_id
		AND t.`status` = '2' 
		AND i.id = ac.fi_id
		AND i.fl_id = fl.id
		AND fl.business_object_id = b.id
		GROUP BY ac.id
	</select>

	<select id="queryOverdueAcList" resultType="java.util.Map" >
		SELECT
			fi.id AS instanceId,
			fi.`status` AS instancStatus,
			fi.`name` AS instanceName,
			fi.app_id AS appId,
			fi.business_id AS businessId,
			fi.`status`,
			ac.id AS acId,
			ac. NAME AS acName,
			ac.`status` AS acStatus,
			ac.overdue_time AS overdueTime,
			ac.overdue_handle AS overdueHandle,
			fp.id AS acPostId,
			fp.`status` AS postStatus,
			fg.id AS groupId,
			fg.participant_id AS participantId,
			fg.participant_name AS participantName,
			fg.`status` AS groupStatus,
			ft.id AS taskId,
			ft.`status` AS taskStatus,
			ft.msg_id AS msgId,
			HOUR (
				TIMEDIFF(NOW(), ft.activate_date)
			) AS duration,
			ft.activate_date
		FROM
			pt_flow_instance fi
		LEFT JOIN pt_flow_instance_ac ac ON (ac.fi_id = fi.id AND ac.delflag=0)
		LEFT JOIN pt_flow_instance_post fp ON (fp.ac_id = ac.id AND fp.delflag=0)
		LEFT JOIN pt_flow_instance_group fg ON (fg.ac_post_id = fp.id AND fg.delflag=0)
		LEFT JOIN pt_flow_instance_task ft ON (ft.group_id = fg.id AND ft.delflag=0)
		WHERE
		fi.status='1'
		AND ac.`status` = '2'
		AND fp.`status` = '2'
		AND ft.`status` = '2'
		AND HOUR (
			TIMEDIFF(NOW(), ft.activate_date)
		) >= ac.overdue_time
		AND ac.overdue_time > 0
		GROUP BY
			fi.id,
			ac.id,
			fp.id,
			fg.id,
			ft.id
	</select>
	<!-- 批量查询流程实例的当前审批人 -->
	<select id="queryListByInstanceIds" resultType="com.xinleju.platform.flow.entity.Instance" parameterType="java.util.HashMap">
		SELECT
			a.id,
			a.code,
			a.name,
			a.business_id AS businessId,
			a.current_approver_ids AS currentApproverIds,
			a.current_approvers AS currentApprovers
		FROM
			pt_flow_instance a
		WHERE
			a.id IN 
		<foreach item="item" collection="instanceIds" open="(" separator="," close=")">
	    	#{item} 
	    </foreach>			
		AND a.delflag = 0;
	</select>
	
	<!-- 查询指定流程的当前节点信息 -->
	<select id="queryListByFlCodeAndBusinessIds" resultType="com.xinleju.platform.flow.entity.Instance" parameterType="java.util.HashMap">
		SELECT
			a.id,
			a.code,
			a.name,
			a.business_id AS businessId,
			a.current_approver_ids AS currentApproverIds,
			a.current_approvers AS currentApprovers
		FROM
			pt_flow_instance a,
			pt_flow_fl b
		WHERE
			a.fl_id = b.id
		AND b.code = #{flCode}
		AND a.business_id in 
		<foreach item="item" collection="businessIds" open="(" separator="," close=")">
			#{item} 
	    </foreach>
		AND a.delflag = 0;
	</select>
	
	<select id="queryCurrentNodeOf" resultType="com.xinleju.platform.flow.dto.InstanceAcDto" parameterType="java.util.HashMap">
		SELECT
			a.id,
			a.approve_type_id AS approveTypeId,
			GROUP_CONCAT(c.participant_id) AS currentApproverIds,
			GROUP_CONCAT(c.participant_name) AS currentApproverNames
		FROM
			pt_flow_instance_ac a,
			pt_flow_instance_post b,
			pt_flow_instance_group c,
			pt_flow_instance_task d
		WHERE
			a.fi_id = #{instanceId}
		AND a.status = '2'
		AND a.id = b.ac_id
		AND b.id = c.ac_post_id
		AND c.id = d.group_id
		AND c.delflag = 0
		AND d.`status` = '2'
		AND d.delflag = 0
		GROUP BY a.id		
	</select>

	<!-- 查找流程相关人员：发起人、审批人、转办/协办人、可阅人、传阅人、抄送人ID集合 -->
	<select id="queryFlowRelationUserIds" resultType="String" parameterType="String">
		-- 查找流程相关人员：发起人、审批人、转办/协办人、可阅人、传阅人、抄送人
		SELECT fg.participant_id AS userId FROM pt_flow_instance_group fg
		WHERE
			fg.ac_id IN (
				SELECT
					ta.id
				FROM
					pt_flow_instance_ac ta
				WHERE
					ta.fi_id = #{instanceId}
			)
		UNION
		-- 查找可阅人
		SELECT fa.accessible_id AS userId FROM pt_flow_instance_accessible fa WHERE fa.fi_id = #{instanceId} AND fa.delflag=0
		UNION
		-- 查找传阅人
		SELECT pr.transation_user_id AS userId FROM pt_flow_pass_read_record pr WHERE pr.fi_id = #{instanceId} AND pr.delflag=0
		UNION
		-- 查找抄送人
		SELECT fc.participant_id AS userId FROM pt_flow_instance_cs fc WHERE fc.fi_id = #{instanceId} AND fc.delflag=0;
	</select>

	<!-- 查询实例的所有开始节点对应的消息id，针对存在打回操作时，开始环节有多个的情况 -->
	<select id="getMsgIdsByInstanceId" parameterType="map" resultType="String">
		SELECT
			t.msg_id AS msgId
		FROM
			pt_flow_instance_ac ac

		LEFT JOIN pt_flow_instance_post p ON (
			ac.id = p.ac_id
			AND p.delflag = 0
		)
		LEFT JOIN pt_flow_instance_group g ON (
			p.id = g.ac_post_id
			AND g.delflag = 0
		)
		LEFT JOIN pt_flow_instance_task t ON (
			g.id = t.group_id
			AND t.delflag = 0
		)
		WHERE
		ac.fi_id = #{instanceId}
		AND ac.delflag = 0 and t.type ='1'
		GROUP BY
			ac.id,
			p.id,
			g.id
		ORDER BY
			ac.px,
			p.px,
			g.px
	</select>

	<!-- 扫描指定人的流程 -->
	<select id="scanFlowOf" resultType="java.util.HashMap" parameterType="list">
		SELECT
			a.id,
			a. NAME,
			a.start_date startDate,
			a.status,
			GROUP_CONCAT(d.participant_name) approver
		FROM
			pt_flow_instance a,
			pt_flow_instance_ac b,
			pt_flow_instance_post c,
			pt_flow_instance_group d,
			pt_sys_org_user e
		WHERE
			a.`status` != '2'
		AND a.delflag = 0
		AND a.id = b.fi_id
		AND b.delflag = 0
		AND b.id = c.ac_id
		AND c.delflag = 0
		AND c.id = d.ac_post_id
		AND d.delflag = 0
		AND d.participant_id = e.id
		AND e.real_name IN
		<foreach item="item" collection="list" open="(" separator="," close=")">
	    	#{item}
	    </foreach>
		GROUP BY a.id
		ORDER BY a.start_date desc;
	</select>

	<!-- 扫描指定人的流程 -->
	<select id="monitor1" resultType="java.util.HashMap" parameterType="string">
		SELECT
			SUBSTR(b.url FROM 43 FOR 32) instanceId,
			a.id taskId,
			b.id msgId,
			b.title,
			b.send_date,
			b.deal_date,
			b.user_name
		FROM
			pt_flow_instance_task a,
			pt_flow_sys_notice_msg b,
			pt_flow_instance c,
			pt_flow_instance_group d,
			pt_flow_instance_post e,
			pt_flow_instance_ac f
		WHERE
			a.msg_id = b.id
		AND a.delflag = 0
		AND b.delflag = 0
		AND a.`status` = '2'
		AND b.op_type = 'YB'
		and (b.manual_set=0 || b.manual_set is null)
		AND b.send_date > '2017-09-30 12:32:26'
		AND c.id = SUBSTR(b.url FROM 43 FOR 32)
		AND c. STATUS != '3'
		AND c.delflag = 0
		AND a.group_id = d.id
		AND d.ac_post_id = e.id
		AND e.ac_id = f.id
		AND (f. STATUS = '2' OR e. STATUS = '2')
	</select>
	<select id="monitor2" resultType="java.util.HashMap" parameterType="string">
		SELECT
		a.end_date,SUBSTR(b.url FROM 43 FOR 32) instanceId,
			b.*
		FROM
			pt_flow_instance_task a,
			pt_flow_sys_notice_msg b,
		pt_flow_instance_group c,
		pt_flow_instance_post d,
		pt_flow_instance_ac e,
		pt_flow_instance i
		WHERE
			a.msg_id = b.id
		AND i.id = e.fi_id
		and i.`status` != 3
		AND e.id = d.ac_id
		AND d.id = c.ac_post_id
		AND c.id = a.group_id
		AND a.delflag = 0
		AND b.delflag = 0
		AND b.op_type = 'DB'
		AND a.`status` = 3
		AND a.operation_code!='XB'
	</select>
	<select id="monitor3" resultType="java.util.HashMap" parameterType="string">
		SELECT
			DISTINCT
			e.fi_id instanceId
		FROM
			pt_flow_instance_task b,
			(
				SELECT
					a.group_id
				FROM
					pt_flow_instance_task a
				WHERE
					a.delflag = 0
				GROUP BY
					a.group_id
				HAVING
					COUNT(a.group_id) > 1
			) c, pt_flow_instance_group d, pt_flow_instance_ac e
		WHERE
			b.group_id = c.group_id
		AND b.`status` = '2'
		AND b.delflag = 0
		AND d.id = b.group_id
		AND d.ac_id = e.id
	</select>
	<select id="monitor4" resultType="java.util.HashMap" parameterType="string">
		SELECT
			a.id instanceId, a.*
		FROM
			pt_flow_instance a
		WHERE
			a.`status` = '1'
		AND a.delflag = 0
		AND NOT EXISTS (
			SELECT
				b.*
			FROM
				pt_flow_mobile_form b
			WHERE
				b.instance_id = a.id
		)
	</select>
	<select id="monitor5" resultType="java.util.HashMap" parameterType="string">
		SELECT
			c.fi_id instanceId, b.*
		FROM
			pt_flow_instance_group a,
			pt_flow_instance_task b,
			pt_flow_instance_ac c
		WHERE
			a.id = b.group_id
		AND a.delflag = 0
		AND b.delflag = 0
		AND a.participant_id != b.approver_id
		AND c.id = a.ac_id
	</select>
	<select id="monitor6" resultType="java.util.HashMap" parameterType="string">
		SELECT
			a.id instanceId,
			a.current_approver_ids,
			a.current_approvers,
			d.participant_id, d.participant_name
		FROM
			pt_flow_instance a, pt_flow_instance_ac b, pt_flow_instance_post c, pt_flow_instance_group d
		WHERE
			a.`status` = 1
		AND a.delflag = 0
		AND a.id = b.fi_id
		and b.id = c.ac_id
		AND c.id = d.ac_post_id
		AND c.`status` = 2
		AND b.`status` = 3
		and b.delflag = 0
		and c.delflag = 0
		AND d.delflag = 0
	</select>
	<select id="monitor7" resultType="java.util.HashMap" parameterType="string">
		SELECT
			DISTINCT
			d.fi_id instanceId, e.name 流程名称
		FROM
			pt_flow_instance_group a,
			pt_flow_instance_post c,
			pt_flow_instance_ac d,pt_flow_instance e
		WHERE
			a.delflag = 0
		AND c.delflag = 0
		AND d.delflag = 0
		and e.delflag = 0
		AND e.id = d.fi_id
		AND a.`status` = '1'
		AND a.ac_post_id = c.id
		AND c.`status` = '2'
		AND c.ac_id = d.id
		AND e.`status` != 7
		AND NOT EXISTS (
			SELECT
				b.*
			FROM
				pt_flow_instance_task b
			WHERE
				b.group_id = a.id
		)
	</select>
	<select id="monitor8" resultType="java.util.HashMap" parameterType="string">
		SELECT
			a.id instanceId, a.start_date, a.status
		FROM
			pt_flow_instance a
		WHERE
			((
				a.`status` = 1
				AND a.current_approver_ids = ''
			)
		OR
		(
			a.`status` = 2
			AND a.current_approver_ids != ''
		)
		or (
		a.`status` is null and a.delflag = 0
		))

		and a.start_date > '2017-11-07 13:44:50'
	</select>
	<select id="monitor9" resultType="java.util.HashMap" parameterType="string">
		SELECT
			DISTINCT
			d.fi_id instanceId, d.activate_date
		FROM
			pt_flow_instance_task a,
			pt_flow_instance_group c,
			pt_flow_instance_ac d,
			pt_flow_instance e
		WHERE
			a.delflag = 0
		AND a.`status` = 2
		AND a.group_id = c.id
		AND c.ac_id = d.id
		AND e.id = d.fi_id
		AND e.delflag = 0
		AND (
			a.msg_id IS NULL
			OR a.msg_id = ''
			OR NOT EXISTS (
				SELECT
					*
				FROM
					pt_flow_sys_notice_msg b
				WHERE
					b.id = a.msg_id
			)
		)
	</select>
	<select id="monitor10" resultType="java.util.HashMap" parameterType="string">
		SELECT
			i.id instanceId
		FROM
			pt_flow_instance i
		WHERE
			i.business_id IN (
				SELECT
					id
				FROM
					hr_sys_apply
				WHERE
					`status` = '1067100106'
				AND delflag = 0
			)
		AND i.`status` NOT IN (3, 4, 7)
		AND i.delflag = 0
		UNION ALL
			SELECT
				i.id instanceId
			FROM
				pt_flow_instance i
			WHERE
				i.id IN (
					SELECT
						instance_id
					FROM
						hr_sys_apply
					WHERE
						`status` = '1067100107'
					AND delflag = 0
				)
			AND i.`status` NOT IN (1, 9)
			AND i.delflag = 0
	</select>
	<select id="selectFeeFlowInstance" resultType="java.util.Map">
			SELECT
				ins.id as id,
				ins. NAME AS instanceName,
				ins.`status` as `status`,
				 ins.business_id AS businessId,
				ins.business_object_code as businessObjectCode,
				fl.code as flCode
				FROM
					pt_flow_instance ins
				LEFT JOIN
				pt_flow_fl fl
				on ins.fl_id = fl.id and fl.delflag=0
				WHERE
					ins.id IN (
				SELECT ef.instance_id from ex_pro.ex_fee_generalpayment  ef
				where ef.vapprovestatus = 1 and IFNULL(dr,0) = 0
				)
				AND ins.`status` NOT IN (1, 9)
				ORDER BY ins.end_date desc
	</select>
</mapper>