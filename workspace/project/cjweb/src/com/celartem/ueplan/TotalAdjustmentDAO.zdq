package com.celartem.ueplan;

import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.CallableStatementCallback;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.celartem.ueplan.bean.AmountAdjustLog;
import com.celartem.ueplan.bean.DeptAmountInfo;
import com.celartem.ueplan.bean.TotalAmountInfo;

/**
 * 总量调整DAO
 * 
 * @author zhangdaoqiang
 *
 */
@Repository
public class TotalAdjustmentDAO {

	@Resource
	private JdbcTemplate jdbcTemplate;	//jdbc操作
	
	/**
	 * 获得总用电量 
	 * 
	 * @param year ：当前年
	 * @return List<{日期, 上次总电量, 累计用量}>
	 */
	@SuppressWarnings("unchecked")
	public List<TotalAmountInfo> getUsedEle(final String year) {
		
		String procedure = "call sp_getusedele(?,?)";
		
		List<TotalAmountInfo> totalUsedEleList = (List<TotalAmountInfo>) jdbcTemplate.execute(procedure, 
				new CallableStatementCallback() {

					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException {
						
						//set parameter
						cs.setString(1, year);
						
						cs.registerOutParameter(2,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(2);
						List<TotalAmountInfo> result = null;
						if (rs != null) {
							result = new ArrayList<TotalAmountInfo>();
							while (rs.next()) {
								
								//取得查询值
								TotalAmountInfo info = new TotalAmountInfo();
								info.setDate(rs.getDate("day"));					// 日期
								info.setPlanAmount(rs.getDouble("planusage"));		// 上次总用量
								info.setActualAmount(rs.getDouble("leijiusage"));	// 累计用量
								
								result.add(info);
							}
						}
						rs.close();
						return result;
					}
				});
		
		return totalUsedEleList;
	}
	
	/**
	 * 获得总用水量 
	 * 
	 * @param year ：当前年
	 * @return List<{日期, 上次总水量, 累计用量}>
	 */
	@SuppressWarnings("unchecked")
	public List<TotalAmountInfo> getUsedWater(final String year) {
		
		String procedure = "call sp_getusedwater(?,?)";
		
		List<TotalAmountInfo> totalUsedWaterList = (List<TotalAmountInfo>) jdbcTemplate.execute(procedure, 
				new CallableStatementCallback() {

					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException {
						
						//set parameter
						cs.setString(1, year);
						
						cs.registerOutParameter(2,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(2);
						List<TotalAmountInfo> result = null;
						if (rs != null) {
							result = new ArrayList<TotalAmountInfo>();
							while (rs.next()) {

								//取得查询值
								TotalAmountInfo info = new TotalAmountInfo();
								info.setDate(rs.getDate("day"));					// 日期
								info.setPlanAmount(rs.getDouble("planusage"));		// 上次总用量
								info.setActualAmount(rs.getDouble("leijiusage"));	// 累计用量
								
								result.add(info);
							}
						}
						rs.close();
						return result;
					}
				});
		
		return totalUsedWaterList;
	}
	
	/**
	 * 修改原计划电量总量值
	 * @param date : 当前年月日
	 * @param newTotalAmount ： 新用电总量
	 */
	public void editPlanEle(Date date, double newTotalAmount) {
		//TODO
	}
	
	/**
	 * 修改原计划水量总量值
	 * @param date : 当前年月日
	 * @param newTotalAmount ： 新用水总量
	 */
	public void editPlanWater(Date date, double newTotalAmount) {
		//TODO
	}
	
	/**
	 * 获得各部门累计用电量, 剩余量, 计划总量
	 * @param year ：当前年
	 * @return ：List<{部门编号, 部门名称, 累计用电量, 计划用量 }>
	 */
	@SuppressWarnings("unchecked")
	public List<DeptAmountInfo> getDptUsedEle(final String year) {
		
		String procedure = "call sp_getdptusedele(?,?)";
		
		List<DeptAmountInfo> dptUsedEleList = (List<DeptAmountInfo>) jdbcTemplate.execute(procedure, 
				new CallableStatementCallback() {

					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException, DataAccessException {
						
						//set parameter
						cs.setString(1, year);
						
						cs.registerOutParameter(2,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(2);
						List<DeptAmountInfo> result = null;
						if (rs != null) {
							result = new ArrayList<DeptAmountInfo>();
							while (rs.next()) {
								
								//取得查询值
								DeptAmountInfo info = new DeptAmountInfo();
								info.setDeptId(rs.getInt("did"));					// 部门编号
								info.setDeptName(rs.getString("dname"));			// 部门名称
								info.setActualAmount(rs.getDouble("leijiusage"));	// 累计用量
								info.setPlanAmount(rs.getDouble("planusage"));		// 计划用量
								
								result.add(info);
							}
						}
						rs.close();
						return result;
					}
				});
		
		return dptUsedEleList;
	}
	
	/**
	 * 获得各部门累计用水量, 计划总量
	 * @param year ：当前年
	 * @return ：List<{部门编号, 部门名称, 累计用水量, 计划用量}>
	 */
	@SuppressWarnings("unchecked")
	public List<DeptAmountInfo> getDptUsedWater(final String year) {
		
		String procedure = "call sp_getdptusedwater(?,?)";
		
		List<DeptAmountInfo> dptUsedWaterList = (List<DeptAmountInfo>) jdbcTemplate.execute(procedure, 
				new CallableStatementCallback() {

					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException, DataAccessException {
						
						//set parameter
						cs.setString(1, year);
						
						cs.registerOutParameter(2,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(2);
						List<DeptAmountInfo> result = null;
						if (rs != null) {
							result = new ArrayList<DeptAmountInfo>();
							while (rs.next()) {
								
								//取得查询值
								DeptAmountInfo info = new DeptAmountInfo();
								info.setDeptId(rs.getInt("did"));					// 部门编号
								info.setDeptName(rs.getString("dname"));			// 部门名称
								info.setActualAmount(rs.getDouble("leijiusage"));	// 累计用量
								info.setPlanAmount(rs.getDouble("planusage"));		// 计划用量
								
								result.add(info);
							}
						}
						rs.close();
						return result;
					}
				});
		
		return dptUsedWaterList;
	}
	
	/**
	 * 取得修改电总量日志
	 * 
	 * @return ： List<{序号, 调整日期, 调整后总量}>
	 */
	@SuppressWarnings("unchecked")
	public List<AmountAdjustLog> getEleAmountModifyLog() {
		
		String procedure = "call sp_geteleremark(?)";
		
		List<AmountAdjustLog> eleLogList = (List<AmountAdjustLog>) jdbcTemplate.execute(procedure, 
				new CallableStatementCallback() {

					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException, DataAccessException {
						
						cs.registerOutParameter(1,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(1);
						List<AmountAdjustLog> result = null;
						if (rs != null) {
							result = new ArrayList<AmountAdjustLog>();
							while (rs.next()) {
								
								//取得查询值
								AmountAdjustLog log = new AmountAdjustLog();
								log.setId(rs.getInt("id"));						// 序号
								
								//日期格式调整
								Date date = rs.getDate("datetime");
								SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
								log.setDate(sdf.format(date));					// 调整日期
								log.setAdjustedAmount(rs.getDouble("usage"));	// 调整后总量
								
								result.add(log);
							}
						}
						rs.close();
						return result;
					}
				});
		
		return eleLogList;
	}
	
	/**
	 * 取得修改水总量日志
	 * @return ： List<{序号, 调整日期, 调整后总量}>
	 */
	@SuppressWarnings("unchecked")
	public List<AmountAdjustLog> getWaterAmountModifyLog() {
		
		String procedure = "call sp_getwaterremark(?)";
		
		List<AmountAdjustLog> waterLogList = (List<AmountAdjustLog>) jdbcTemplate.execute(procedure, 
				new CallableStatementCallback() {

					public Object doInCallableStatement(CallableStatement cs)
							throws SQLException, DataAccessException {
						
						cs.registerOutParameter(1,
								oracle.jdbc.driver.OracleTypes.CURSOR);
						cs.execute();
						ResultSet rs = (ResultSet) cs.getObject(1);
						List<AmountAdjustLog> result = null;
						if (rs != null) {
							result = new ArrayList<AmountAdjustLog>();
							while (rs.next()) {
								
								//取得查询值
								AmountAdjustLog log = new AmountAdjustLog();
								log.setId(rs.getInt("id"));						// 序号
								
								//日期格式调整
								Date date = rs.getDate("datetime");
								SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
								log.setDate(sdf.format(date));					// 调整日期
								log.setAdjustedAmount(rs.getDouble("usage"));	// 调整后总量
								
								result.add(log);
							}
						}
						rs.close();
						return result;
					}
				});
		
		return waterLogList;
	}
	
	/**
	 * 
	 * @return
	 */
	public double getElePrice() {
		//TODO
		return 0;
	}
	
	/**
	 * 
	 * @return
	 */
	public double getWaterPrice() {
		//TODO
		return 0;
	}
}
