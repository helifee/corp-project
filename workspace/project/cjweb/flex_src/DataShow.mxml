<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" initialize="initialHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.rpc.events.FaultEvent;

			protected function drawService_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RemoteObject destination="dataShowService" fault="faultHandler(event)"
						id="drawService" endpoint="/cjweb/messagebroker/amf">			
			<s:method name="getBaseInfo"			
					  result="getBaseInfoResult(event)"/>
			<s:method name="getBuildingDetail"			
					  result="getBuildingDetailResult(event)"/>
			<s:method name="getMeterDetail"			
					  result="getMeterDetailResult(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import flash.display.Graphics;
			import flash.geom.*;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.core.*;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			//基本元素的信息
			[Bindable]private var arrElementBaseInfo:ArrayCollection;
			//建筑物提示信息数据源
			[Bindable]private var arrBuildingDetailInfo:ArrayCollection;
			//表计提示信息数据源
			[Bindable]private var arrMeterDetailInfo:ArrayCollection;
			//初始化图片上的元素
			public function faultHandler(event:FaultEvent):void
			{
				Alert.show("请求数据错误!\n"+event.toString(),"提示");
			}
			public function initialHandler(event:FlexEvent):void
			{
				getBaseInfo();
			}
			public function getBaseInfo():void			
			{			
				drawService.getBaseInfo(); 			
			} 	
			private function getBaseInfoResult(event:ResultEvent):void			
			{			
				arrElementBaseInfo= event.result as ArrayCollection;	
				var id:String;
				var elementType:String;//建筑物or表计
				var x:Number;
				var y:Number;
				var color:uint;
				var type_code:String;//类型的代码
				var type_description:String;//类型的描述
				var elementName:String;//建筑物或表计的名称
				for(var i:int=0;i<arrElementBaseInfo.length;i++)
				{
					id=String(arrElementBaseInfo.getItemAt(i).id);
					elementType=String(arrElementBaseInfo.getItemAt(i).elementType);
					x=Number(arrElementBaseInfo.getItemAt(i).x);
					y=Number(arrElementBaseInfo.getItemAt(i).y);
					color=uint(arrElementBaseInfo.getItemAt(i).color);
					type_code=String(arrElementBaseInfo.getItemAt(i).type).substring(0,String(arrElementBaseInfo.getItemAt(i).type).indexOf('.'));;
					type_description=String(arrElementBaseInfo.getItemAt(i).type).substring(String(arrElementBaseInfo.getItemAt(i).type).indexOf('.')+1);
					elementName=String(arrElementBaseInfo.getItemAt(i).name);
					drawElement(id,elementType,x,y,color,type_code,type_description,elementName);
				}
			}
			
			
			//画图函数
			private var myShape:Shape;
			private var myUI:UIComponent;
			private var lblBuilding:Label;
			public function drawElement(id:String,elementType:String,x:Number,y:Number,
												  color:uint,type_code:String,type_description:String,elementName:String):void
			{
				if(elementType=="METER")
				{
					myShape=new Shape();
					myUI=new UIComponent();
					myShape.graphics.lineStyle(3,color);
					myShape.graphics.beginFill(color);
					myShape.graphics.drawCircle(x,y,10);
					myShape.graphics.endFill();
					myUI.addChild(myShape);
					//鼠标悬停时获得详细信息的参数：元素类型  ，详细类型， id
					myUI.id=elementType+";"+type_code+";"+id;
					myUI.addEventListener(MouseEvent.MOUSE_OVER,overMeterHandler);
					myUI.addEventListener(MouseEvent.MOUSE_OUT,outMeterHandler);
					RootContainer.addElement(myUI); //UI添加到舞台
				}else if(elementType=="BUILDING")
				{
					lblBuilding = new Label();
					lblBuilding.x=x;
					lblBuilding.y=y;
					lblBuilding.setStyle("backgroundColor",color);
					lblBuilding.text=elementName;
					lblBuilding.width=60;
					lblBuilding.height=20;
					lblBuilding.setStyle("textAlign","center");
					lblBuilding.setStyle("paddingTop",5);
					lblBuilding.id=elementType+";"+type_code+";"+id;
					lblBuilding.addEventListener(MouseEvent.MOUSE_OVER,overBuildingHandler);
					lblBuilding.addEventListener(MouseEvent.MOUSE_OUT,outBuildingHandler);
					RootContainer.addElement(lblBuilding);
				}

			}
			
			protected function bordercontainer1_mouseMoveHandler(event:MouseEvent):void
			{
				CoordLabel.text = event.stageX +","+event.stageY;
			}
			protected function overBuildingHandler(e:MouseEvent):void
			{
				var temp:String=e.target.id;
				drawService.getBuildingDetail(temp.substring(temp.lastIndexOf(';')+1));
				
				RootContainer.setElementIndex(dgBuildingTip,RootContainer.numElements-1);

				dgBuildingTip.x = e.stageX;
				dgBuildingTip.y = e.stageY;
				
				dgBuildingTip.visible = true;
			}
			protected function outBuildingHandler(e:MouseEvent):void
			{	
				//RootContainer.setElementIndex(dgBuildingTip,-1);
				dgBuildingTip.visible = false;
			}
			private function getBuildingDetailResult(event:ResultEvent):void{
				arrBuildingDetailInfo = event.result as ArrayCollection;	
			}
			
			protected function overMeterHandler(e:MouseEvent):void
			{
				var temp:String=e.target.id;
				drawService.getMeterDetail(temp.substring(temp.indexOf(';')+1,temp.lastIndexOf(';')),int(temp.substring(temp.lastIndexOf(';')+1)));
				RootContainer.setElementIndex(dgMeterTip,RootContainer.numElements-1);
				//Alert.show(e.target.id);
				
				dgMeterTip.x = e.stageX;
				dgMeterTip.y =   e.stageY;
				
				dgMeterTip.visible = true;
			}
			protected function outMeterHandler(e:MouseEvent):void
			{	
				//RootContainer.setElementIndex(dgBuildingTip,-1);
				dgMeterTip.visible = false;
			}
			private function getMeterDetailResult(event:ResultEvent):void{
				arrMeterDetailInfo = event.result as ArrayCollection;	
			}
			
			protected function WaterWatchClick(e:MouseEvent):void{
				ExternalInterface.call('window.open','b3watermeterinfo.jsp','','height=600,width=1200,top=0,left=0,toolbar=no,menubar=no,scrollbars=no,resizable=no,location=no,status=no');
			}
			protected function ElectricWatchClick(e:MouseEvent):void{
				ExternalInterface.call('window.open','b3electricmeterinfo.jsp','','height=600,width=1200,top=0,left=0,toolbar=no,menubar=no,scrollbars=no,resizable=no,location=no,status=no');
			}
			protected function HeatWatchClick(e:MouseEvent):void{
				ExternalInterface.call('window.open','b3heatmeterinfo.jsp','','height=600,width=1200,top=0,left=0,toolbar=no,menubar=no,scrollbars=no,resizable=no,location=no,status=no');
			}
			protected function onClick1(e:MouseEvent):void
			{	
				//RootContainer.setElementIndex(dgBuildingTip,-1);
				ExternalInterface.call('window.open','b2supplyenergybuilding.jsp','','height=600,width=1200,top=0,left=0,toolbar=no,menubar=no,scrollbars=no,resizable=no,location=no,status=no');
				//dgBuildingTip.visible = false;
			}
			protected function onClick2(e:MouseEvent):void
			{	
				//RootContainer.setElementIndex(dgBuildingTip,-1);
				ExternalInterface.call('window.open','b2wasteenergybuilding.jsp','','height=600,width=1200,top=0,left=0,toolbar=no,menubar=no,scrollbars=no,resizable=no,location=no,status=no');
				//dgBuildingTip.visible = false;
			}

			protected function C4_clickHandler(event:MouseEvent):void
			{
				ExternalInterface.call('window.open','b4switchroom.jsp','','height=600,width=1200,top=0,left=0,toolbar=no,menubar=no,scrollbars=no,resizable=no,location=no,status=no');
				
			}
			
			protected function getId(event:Event):void
			{
				Alert.show(event.target.id);
			}
			
		]]>
	</fx:Script>

	
	<s:BorderContainer id="RootContainer" width="1200" height="500"   backgroundImage="@Embed(source='pic/datashow.jpg')" mouseMove="bordercontainer1_mouseMoveHandler(event)" >
		<mx:DataGrid id="dgBuildingTip" x="0" y="0"  visible="false" width="250" dataProvider="{arrBuildingDetailInfo}">
			<mx:columns>
				<mx:DataGridColumn headerText=" "  dataField="descript" width="100"/>
				<mx:DataGridColumn headerText="用电" dataField="electric" width="50"/>
				<mx:DataGridColumn headerText="用热" dataField="heat" width="50"/>
				<mx:DataGridColumn headerText="用冷" dataField="cool" width="50"/>
				<mx:DataGridColumn headerText="热水" dataField="hotwater" width="50"/>
				<mx:DataGridColumn headerText="冷水" dataField="coldwater" width="50"/>

			</mx:columns>
		</mx:DataGrid>
		<mx:DataGrid id="dgMeterTip" x="0" y="0"  visible="false" width="150" dataProvider="{arrMeterDetailInfo}">
			<mx:columns>
				<mx:DataGridColumn headerText=" "  dataField="descript" width="100"/>
				<mx:DataGridColumn headerText="用量值" dataField="value" width="50"/>				
			</mx:columns>
		</mx:DataGrid>
		
		<s:Label x="0" y="0" id="CoordLabel" width="60" height="20" backgroundColor="#ffffff"/>
	</s:BorderContainer>
</s:Application>
