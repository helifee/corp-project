<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" width="1200"
			   minHeight="600" xmlns:B2SupplyBuilding="component.B2SupplyBuilding.*" 
			   xmlns:B3MeterInfo="component.B3MeterInfo.*" preinitialize="application1_preinitializeHandler(event)">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject destination="b2SupplyEnergyBuildingService" fault="faultHandler(event)"
						id="B2SupplyEnergyBuildingService" endpoint="/cjweb/messagebroker/amf">			
			<s:method name="getMeterName4CreateHeat"			
					  result="getMeterName4CreateHeatResult(event)"/>
			<s:method name="getMeterName4CreateCool"			
					  result="getMeterName4CreateCoolResult(event)"/>
			<s:method name="getMeterName4UseElectric"			
					  result="getMeterName4UseElectricResult(event)"/>
			<s:method name="getMeterName4UseWater"			
					  result="getMeterName4UseWaterResult(event)"/>
			
			<s:method name="getLinchartData4CreateHeat"			
					  result="getLinchartData4CreateHeatResult(event)"/>
			<s:method name="getLinchartData4CreateCool"			
					  result="getLinchartData4CreateCoolResult(event)"/>
			<s:method name="getLinchartData4UseElectric"			
					  result="getLinchartData4UseElectricResult(event)"/>
			<s:method name="getLinchartData4UseWater"			
					  result="getLinchartData4UseWaterResult(event)"/>

		</s:RemoteObject>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.display.Graphics;
			import flash.geom.*;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.core.*;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			//jsp页面出过来的建筑物id
			private var buildingId:String;
			protected function application1_preinitializeHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				buildingId=this.parameters.buildingId;
			}
			
			//制热量 表计名称数组
			[Bindable]private var arrMeterName4CreateHeat:Array = new Array("泳池机组","生活机组","空调机组","循环泵");
			[Bindable]private var arrMeterName4CreateCool:Array;
			[Bindable]private var arrMeterName4UseElectric:Array;
			[Bindable]private var arrMeterName4UseWater:Array;
			//制热量  曲线数组
			[Bindable]private var arrCreateHeat:ArrayCollection = new ArrayCollection( [
				{ Date: "1月",Sum:97, Unit1: 20, Unit2: 15,Unit3: 29, Unit4: 33},
				{ Date: "2月",Sum:107, Unit1: 25, Unit2: 16,Unit3: 40, Unit4: 32},
				{ Date: "3月",Sum:87, Unit1: 23, Unit2: 12,Unit3: 43, Unit4: 31},
				{ Date: "4月",Sum:98, Unit1: 21, Unit2: 15,Unit3: 41, Unit4: 35},
				{ Date: "5月",Sum:99, Unit1: 24, Unit2: 16,Unit3: 10, Unit4: 25},
				{ Date: "6月",Sum:87, Unit1: 43, Unit2: 9,Unit3: 10, Unit4: 14},
				{ Date: "7月",Sum:77, Unit1: 24, Unit2: 5,Unit3: 22, Unit4: 21},
				{ Date: "8月",Sum:89, Unit1: 33, Unit2: 3,Unit3: 21, Unit4: 32},
				{ Date: "9月",Sum:88, Unit1: 25, Unit2: 8,Unit3: 41, Unit4: 31},
				{ Date: "10月",Sum:87, Unit1: 24, Unit2: 9,Unit3: 26, Unit4: 11},
				{ Date: "11月",Sum:89, Unit1: 22, Unit2: 10,Unit3: 16, Unit4: 12},
				{ Date: "12月",Sum:95, Unit1: 24, Unit2: 16,Unit3: 10, Unit4: 13}]);
			[Bindable]private var arrCreateCool:ArrayCollection;
			[Bindable]private var arrUseElectric:ArrayCollection;
			[Bindable]private var arrUseWater:ArrayCollection;
			
			public function faultHandler(event:FaultEvent):void
			{
				Alert.show("请求数据错误!\n"+event.toString(),"提示");
			}
			  
			//制热表计
			public function getMeterName4CreateHeat():void			
			{			
				B2SupplyEnergyBuildingService.getMeterName4CreateHeat(buildingId,this.qcHeat.dfFrom.text,this.qcHeat.dfTo.text,this.qcHeat.dimensionGroup.selectedValue.toString()); 			
			}
			private function getMeterName4CreateHeatResult(event:ResultEvent):void
			{
				arrMeterName4CreateHeat= event.result as Array;
			}
			//制冷表计
			public function getMeterName4CreateCool():void			
			{			
				B2SupplyEnergyBuildingService.getMeterName4CreateCool(buildingId,this.qcCool.dfFrom.text,this.qcCool.dfTo.text,this.qcCool.dimensionGroup.selectedValue.toString()); 			
			}
			private function getMeterName4CreateCoolResult(event:ResultEvent):void
			{
				arrMeterName4CreateCool= event.result as Array;
			}
			//用电表计
			public function getMeterName4UseElectric():void			
			{			
				B2SupplyEnergyBuildingService.getMeterName4UseElectric(buildingId,this.qcElectric.dfFrom.text,this.qcElectric.dfTo.text,this.qcElectric.dimensionGroup.selectedValue.toString()); 			
			}
			private function getMeterName4UseElectricResult(event:ResultEvent):void
			{
				arrMeterName4UseElectric= event.result as Array;
			}
			//用水表计
			public function getMeterName4UseWater():void			
			{			
				B2SupplyEnergyBuildingService.getMeterName4UseWater(buildingId,this.qcWater.dfFrom.text,this.qcWater.dfTo.text,this.qcWater.dimensionGroup.selectedValue.toString()); 			
			}
			private function getMeterName4UseWaterResult(event:ResultEvent):void
			{
				arrMeterName4UseWater= event.result as Array;
			}
			
			//制热曲线 
			public function getLinchartData4CreateHeat():void			
			{			
				B2SupplyEnergyBuildingService.getLinchartData4CreateHeat(buildingId,this.qcHeat.dfFrom.text,this.qcHeat.dfTo.text,this.qcHeat.dimensionGroup.selectedValue.toString()); 			
			}
			private function getLinchartData4CreateHeatResult(event:ResultEvent):void
			{
				arrCreateHeat= event.result as ArrayCollection;
				
				ncCreateHeat.removeElement(b2compCreateHeat);
				b2compCreateHeat = new B2DrawMeterLineChart();
				b2compCreateHeat.arrMeterName=arrMeterName4CreateHeat;
				b2compCreateHeat.arrLineChartData=arrCreateHeat;
				b2compCreateHeat.strUnit="用量值（兆瓦时）";
				b2compCreateHeat.HorizontalField="Date";
				b2compCreateHeat.x=0;
				b2compCreateHeat.y=0;
				ncCreateHeat.addElement(b2compCreateHeat);
			}
			//制冷曲线  
			public function getLinchartData4CreateCool():void			
			{			
				B2SupplyEnergyBuildingService.getLinchartData4CreateCool(buildingId,this.qcCool.dfFrom.text,this.qcCool.dfTo.text,this.qcCool.dimensionGroup.selectedValue.toString()); 			
			}
			private function getLinchartData4CreateCoolResult(event:ResultEvent):void
			{
				arrCreateCool= event.result as ArrayCollection;
				
				ncCreateCool.removeElement(b2compCreateCool);
				b2compCreateCool = new B2DrawMeterLineChart();
				b2compCreateCool.arrMeterName=arrMeterName4CreateCool;
				b2compCreateCool.arrLineChartData=arrCreateCool;
				b2compCreateCool.strUnit="用量值（兆瓦时）";
				b2compCreateCool.HorizontalField="Date";
				b2compCreateCool.x=0;
				b2compCreateCool.y=0;
				ncCreateCool.addElement(b2compCreateCool);
			}
			//用电曲线  
			public function getLinchartData4UseElectric():void			
			{			
				B2SupplyEnergyBuildingService.getLinchartData4UseElectric(buildingId,this.qcElectric.dfFrom.text,this.qcElectric.dfTo.text,this.qcElectric.dimensionGroup.selectedValue.toString()); 			
			}
			private function getLinchartData4UseElectricResult(event:ResultEvent):void
			{
				arrUseElectric= event.result as ArrayCollection;
				
				ncUseElectric.removeElement(b2compUseElectric);
				b2compUseElectric = new B2DrawMeterLineChart();
				b2compUseElectric.arrMeterName=arrMeterName4UseElectric;
				b2compUseElectric.arrLineChartData=arrUseElectric;
				b2compUseElectric.strUnit="用量值（千瓦时）";
				b2compUseElectric.HorizontalField="Date";
				b2compUseElectric.x=0;
				b2compUseElectric.y=0;
				ncUseElectric.addElement(b2compUseElectric);
			}
			//用水曲线   
			public function getLinchartData4UseWater():void			
			{			
				B2SupplyEnergyBuildingService.getLinchartData4UseWater(buildingId,this.qcWater.dfFrom.text,this.qcWater.dfTo.text,this.qcWater.dimensionGroup.selectedValue.toString()); 			
			}
			private function getLinchartData4UseWaterResult(event:ResultEvent):void
			{
				arrUseWater= event.result as ArrayCollection;
				
				ncUseWater.removeElement(b2compUseWater);
				b2compUseWater = new B2DrawMeterLineChart();
				b2compUseWater.arrMeterName=arrMeterName4UseWater;
				b2compUseWater.arrLineChartData=arrUseWater;
				b2compUseWater.strUnit="用量值（立方米）";
				b2compUseWater.HorizontalField="Date";
				b2compUseWater.x=0;
				b2compUseWater.y=0;
				ncUseWater.addElement(b2compUseWater);
			}
			
			
			protected function btn4CreateHeat_clickHandler(event:MouseEvent):void
			{
				getMeterName4CreateHeat();
				getLinchartData4CreateHeat();
			}


			protected function btn4CreateCool_clickHandler(event:MouseEvent):void
			{
				getMeterName4CreateCool();
				getLinchartData4CreateCool();
			}


			protected function btn4UseElectric_clickHandler(event:MouseEvent):void
			{
				getMeterName4UseElectric();
				getLinchartData4UseElectric();
			}
			
			protected function btn4UseWater_clickHandler(event:MouseEvent):void
			{
				getMeterName4UseWater();
				getLinchartData4UseWater();
			}
			
			//制热tab页初始化完毕
			protected function ncCreateHeat_preinitializeHandler(event:FlexEvent):void
			{
				
			}

			//制冷tab页初始化完毕
			protected function ncCreateCool_preinitializeHandler(event:FlexEvent):void
			{
				
			}

			//用电tab页初始化完毕
			protected function ncUseElectric_preinitializeHandler(event:FlexEvent):void
			{
				
			}

			//用水tab页初始化完毕
			protected function ncUseWater_preinitializeHandler(event:FlexEvent):void
			{
				
			}

		]]>
	</fx:Script> 
	<mx:TabNavigator x="0" y="0" width="1200" height="100%">
		<s:NavigatorContent label="制热量" width="100%" height="100%" id="ncCreateHeat" preinitialize="ncCreateHeat_preinitializeHandler(event)">
			<B2SupplyBuilding:B2DrawMeterLineChart x="0" y="0" id="b2compCreateHeat"  arrMeterName="{arrMeterName4CreateHeat}" arrLineChartData="{arrCreateHeat}" strUnit="用量值（兆瓦时）" HorizontalField="Date"/>
			<B3MeterInfo:queryCondition x="10" y="10" id="qcHeat">
			</B3MeterInfo:queryCondition>
			<s:Button x="130" y="116" label="查询" id="btn4CreateHeat" click="btn4CreateHeat_clickHandler(event)"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="制冷量" width="100%" height="100%" id="ncCreateCool" preinitialize="ncCreateCool_preinitializeHandler(event)">
			<B2SupplyBuilding:B2DrawMeterLineChart x="0" y="0" id="b2compCreateCool" arrMeterName="{arrMeterName4CreateCool}" arrLineChartData="{arrCreateCool}" strUnit="用量值（兆瓦时）" HorizontalField="Date"/>
			<B3MeterInfo:queryCondition x="10" y="10" id="qcCool">
			</B3MeterInfo:queryCondition>
			<s:Button x="130" y="116" label="查询" id="btn4CreateCool" click="btn4CreateCool_clickHandler(event)"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="用电量" width="100%" height="100%" id="ncUseElectric" preinitialize="ncUseElectric_preinitializeHandler(event)">
			<B2SupplyBuilding:B2DrawMeterLineChart x="0" y="0" id="b2compUseElectric" arrMeterName="{arrMeterName4UseElectric}" arrLineChartData="{arrUseElectric}" strUnit="用量值（千瓦时）" HorizontalField="Date"/>
			<B3MeterInfo:queryCondition x="10" y="10" id="qcElectric">
			</B3MeterInfo:queryCondition>
			<s:Button x="130" y="116" label="查询" id="btn4UseElectric" click="btn4UseElectric_clickHandler(event)"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="用水量" width="100%" height="100%" id="ncUseWater" preinitialize="ncUseWater_preinitializeHandler(event)">
			<B2SupplyBuilding:B2DrawMeterLineChart x="0" y="0" id="b2compUseWater" arrMeterName="{arrMeterName4UseWater}" arrLineChartData="{arrUseWater}" strUnit="用量值（立方米）" HorizontalField="Date"/>
			<B3MeterInfo:queryCondition x="10" y="10" id="qcWater">
			</B3MeterInfo:queryCondition>
			<s:Button x="130" y="116" label="查询" id="btn4UseWater"  click="btn4UseWater_clickHandler(event)"/>
		</s:NavigatorContent>
	</mx:TabNavigator>
</s:Application>
