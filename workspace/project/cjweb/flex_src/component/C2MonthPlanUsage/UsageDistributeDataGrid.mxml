<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" >
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 分配量输入框 -->
		<fx:Component id="rdrUsageInput">  
			<mx:HBox>
				<s:Label text=""/>
				<mx:TextInput  width="90%"  id="txtValue"/>
			</mx:HBox>
		</fx:Component> 
		<!-- 已用量显示框 -->
		<fx:Component id="rdrUsed">  
			<mx:HBox>
				<s:Label text=""/>
				<mx:TextInput  width="90%"  id="txtUsed"  editable="false"/>
			</mx:HBox>
		</fx:Component> 
		<!-- 剩余量显示框 -->
		<fx:Component id="rdrLeft">  
			<mx:HBox>
				<s:Label text=""/>
				<mx:TextInput  width="90%"  id="txtLeft"  editable="false"/>
			</mx:HBox>
		</fx:Component> 
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.controls.TextInput;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.controls.dataGridClasses.DataGridItemRenderer;
			import mx.controls.listClasses.ListBaseContentHolder;
			import mx.events.FlexEvent;
			
			import spark.components.Button;
			import spark.components.Label; 
			
			//部门月度计划分配数据
			[Bindable]       
			private var data:ArrayCollection=new ArrayCollection([
				{department:"部门a1", month1:"123",month2:"20",month3:"20",month4:"20",month5:"20",used:"111",left:"11"},
				{department:"部门a2", month1:"213", month2:"21",month3:"20",month4:"20",month5:"20",used:"222",left:"22"},
				{department:"部门a3", month1:"333", month2:"23",month3:"20",month4:"20",month5:"20",used:"333",left:"33"},
				{department:"部门a4", month1:"987", month2:"23",month3:"20",month4:"20",month5:"20",used:"444",left:"44"},
				{department:"部门a5", month1:"146",month2:"22",month3:"20",month4:"20",month5:"20",used:"555",left:"55"},
				{department:"部门a6", month1:"345",month2:"11",month3:"20",month4:"20",month5:"20",used:"666",left:"66"},
				{department:"部门a7", month1:"345",month2:"11",month3:"20",month4:"20",month5:"20",used:"777",left:"77"},
				{department:"部门a8", month1:"345",month2:"11",month3:"20",month4:"20",month5:"20",used:"777",left:"77"}
				
			]);  
			
			//自定义表格控件
			private var dgDynamic:DataGrid;
			//分配数据提交按钮
			private var btnSubmit:Button;
			//清空数据按钮
			private var btnClear:Button;
			//单位标签
			private var lblUnit:Label;
			
			//单位描述
			private var _unit:String;
			//group宽度
			private var _myWidth:int;
			//group高度
			private var _myHeight:int;
			//要进行分配的月份和取得itemrenderer的控件所在数组的位置
			private var monthTag:int=1;
			
			public function set unit(value:String):void
			{
				if(_unit!=value)
				{
					_unit=value;
					this.invalidateProperties();
				}
			}
			public function get unit():String
			{
				return _unit;
			}
			
			public function set myWidth(value:int):void
			{
				if(_myWidth!=value)
				{
					_myWidth=value;
					this.invalidateProperties();
				}
			}
			public function get myWidth():int
			{
				return _myWidth;
			}
			
			public function set myHeight(value:int):void
			{
				if(_myHeight!=value)
				{
					_myHeight=value;
					this.invalidateProperties();
				}
			}
			public function get myHeight():int
			{
				return _myHeight;
			}
			
			override protected function createChildren():void
			{
				super.createChildren();
				lblUnit=new Label();
				this.addElement(lblUnit);
				dgDynamic=new DataGrid();
				dgDynamic.addEventListener(FlexEvent.CREATION_COMPLETE,dgCreationComplete);
				this.addElement(dgDynamic);
				
				btnSubmit=new Button();
				btnSubmit.addEventListener(MouseEvent.CLICK,submitValue);
				this.addElement(btnSubmit);
				
				btnClear=new Button();
				btnClear.addEventListener(MouseEvent.CLICK,clearValue);
				this.addElement(btnClear);
				
			}
			
			override protected function commitProperties():void
			{
				super.commitProperties(); 	
				dgDynamic.dataProvider=data;
				btnSubmit.label="提交";
				lblUnit.text="单位："+_unit;
				btnClear.label="清空";
				
				dgDynamic.rowCount=data.length;
				this.width=_myWidth;
				this.height=_myHeight;
				dgDynamic.width=this.width;
				
				
				var cols:Array=new Array();  
				
				var dgcDepartment:DataGridColumn = new DataGridColumn();
				dgcDepartment.dataField="department";
				dgcDepartment.width=100;
				dgcDepartment.headerText="部门 \\ 月份";
				cols.push(dgcDepartment);   
				
				var obj:Object;
				obj =data.getItemAt(0);
				
				var dgcMonth:DataGridColumn;
				
				
				if(obj.month1!=null)
				{ 
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month1";
					dgcMonth.headerText="1月";
					cols.push(dgcMonth);  
					monthTag+=1;
				}
				if(obj.month2!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month2";
					dgcMonth.headerText="2月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month3!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month3";
					dgcMonth.headerText="3月";
					cols.push(dgcMonth); 
					monthTag+=1;
				}
				if(obj.month4!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month4";
					dgcMonth.headerText="4月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month5!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month5";
					dgcMonth.headerText="5月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month6!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month6";
					dgcMonth.headerText="6月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month7!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month7";
					dgcMonth.headerText="7月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month8!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month8";
					dgcMonth.headerText="8月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month9!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month9";
					dgcMonth.headerText="9月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month10!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month10";
					dgcMonth.headerText="10月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month11!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month11";
					dgcMonth.headerText="11月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				if(obj.month12!=null)
				{
					dgcMonth= new DataGridColumn();
					dgcMonth.dataField="month12";
					dgcMonth.headerText="12月";
					cols.push(dgcMonth);   
					monthTag+=1;
				}
				
				
				var dgcDistributeInput:DataGridColumn=new DataGridColumn();  
				dgcDistributeInput.headerText=monthTag.toString()+"月";  
				dgcDistributeInput.itemRenderer = rdrUsageInput;  
				cols.push(dgcDistributeInput);   
				
				var dgcUsed:DataGridColumn = new DataGridColumn();
				dgcUsed.dataField="used";
				dgcUsed.headerText="已用量";
				dgcUsed.itemRenderer=rdrUsed;
				cols.push(dgcUsed); 
				
				var dgcLeft:DataGridColumn = new DataGridColumn();
				dgcLeft.dataField="left";
				dgcLeft.headerText="剩余量";
				dgcLeft.itemRenderer=rdrLeft;
				cols.push(dgcLeft); 

				dgDynamic.columns=cols;  
				
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				lblUnit.x=0;
				lblUnit.y=0;
				dgDynamic.x=0;
				dgDynamic.y=lblUnit.height;
				btnSubmit.x=dgDynamic.width-btnSubmit.width;
				btnSubmit.y=dgDynamic.y+dgDynamic.height+10;
				btnClear.x=dgDynamic.width-btnSubmit.width-btnClear.width-20;
				btnClear.y=dgDynamic.y+dgDynamic.height+10;
				
			}
			
			public function submitValue(event:Event):void{
				var iLen:int = this.dgDynamic.numChildren;
				
				var myHList:ListBaseContentHolder = this.dgDynamic.getChildAt(2) as ListBaseContentHolder; 
				var strValue:String="";
				for (var i:int=0;i<myHList.listItems.length;i++) { 
					var arrValue:Array = myHList.listItems[i] as Array;
					//是否对应部门id待定
					strValue=strValue+arrValue[monthTag].txtValue.text+",";
					
				} 
				
			}
			
			public function clearValue(event:Event):void{
				var iLen:int = this.dgDynamic.numChildren;
				
				var myHList:ListBaseContentHolder = this.dgDynamic.getChildAt(2) as ListBaseContentHolder; 
				var strValue:String="";
				for (var i:int=0;i<myHList.listItems.length;i++) { 
					ListBaseContentHolder(this.dgDynamic.getChildAt(2)).listItems[i][monthTag].txtValue.text="";
					this.invalidateDisplayList();
				} 
			}
			
			//datagrid绘制完成后填充已用量和剩余量
			public function dgCreationComplete(event:Event):void{
				var iLen:int = this.dgDynamic.numChildren;
				
				var myHList:ListBaseContentHolder = this.dgDynamic.getChildAt(2) as ListBaseContentHolder; 
				for (var i:int=0;i<myHList.listItems.length;i++) { 
					ListBaseContentHolder(this.dgDynamic.getChildAt(2)).listItems[i][monthTag+1].txtUsed.text=data.getItemAt(i).used;
					ListBaseContentHolder(this.dgDynamic.getChildAt(2)).listItems[i][monthTag+2].txtLeft.text=data.getItemAt(i).left;
					
					//为输入框增加键盘监听事件
					TextInput(ListBaseContentHolder(this.dgDynamic.getChildAt(2)).listItems[i][monthTag].txtValue).addEventListener(KeyboardEvent.KEY_UP,calculateLeftUsed);
				} 
			}
			
			public function calculateLeftUsed(event:Event):void{
				var iLen:int = this.dgDynamic.numChildren;
				var myHList:ListBaseContentHolder = this.dgDynamic.getChildAt(2) as ListBaseContentHolder; 
				var intInputValue:int;
				var intUsedValue:int;
				var intLeftValue:int;
				for (var i:int=0;i<myHList.listItems.length;i++) { 
					intInputValue=Number(ListBaseContentHolder(this.dgDynamic.getChildAt(2)).listItems[i][monthTag].txtValue.text);
					intUsedValue=Number(data.getItemAt(i).used);
					intLeftValue=Number(data.getItemAt(i).left);
					
					ListBaseContentHolder(this.dgDynamic.getChildAt(2)).listItems[i][monthTag+1].txtUsed.text=String(intUsedValue+intInputValue);
					ListBaseContentHolder(this.dgDynamic.getChildAt(2)).listItems[i][monthTag+2].txtLeft.text=String(intLeftValue-intInputValue);
					
				} 
			}

		]]>
	</fx:Script>
</s:Group>
