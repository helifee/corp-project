package com.sitech.oa.pars;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.sitech.oa.pars.node.Function;
import com.sitech.oa.pars.node.FunctionCall;
import com.sitech.oa.pars.node.NodeToken;
import com.sitech.oa.pars.node.Param;
import com.sitech.oa.pars.node.SqlStr;
import com.sitech.oa.pars.node.Visitor;

public class FunCallTree extends Visitor {
	public Map funMap;
	private FUNC fun;
	private int flag;
	public FunCallTree(){
		flag=0;
		funMap=new HashMap();
	}
	public Map getFunMap(){
		return funMap;
	}
	protected void visitNodeToken(NodeToken token){
		super.visitNodeToken(token);
		if(flag==1){
			fun.functionName=token.tokenString;
			fun.lineNum=token.lineNum;
			funMap.put(fun.functionName, fun);
		}else if(flag==2){
			fun.callList.add(token.tokenString);
		}else if(flag==3){
			fun.SqlList.add(token.tokenString.replaceAll("\\s{2,}", " "));
		}
		flag=0;
	}
	public void visitFunctionCall(FunctionCall f){
		flag=2;
		super.visitFunctionCall(f);
	}
	public void visitFunction(Function f){
		fun=new FUNC();
		flag=1;
		if(f.paramList.list.size()==1){
			Param p=(Param)f.paramList.list.getChild(0);
			if(p.typeDef.type.token.tokenString.equals("TPSVCINFO")){
				fun.isServer=true;
			}
		}
		super.visitFunction(f);
	}
	public void visitSqlStr(SqlStr s){
		flag=3;
		super.visitSqlStr(s);
	}
}
class FUNC{
	public String functionName;
	public boolean isServer=false;
	public int lineNum;
	public List callList=new ArrayList();
	public List SqlList=new ArrayList();
}
