package com.sitech.sql.parse;

import com.sitech.sql.parse.node.Delete;
import com.sitech.sql.parse.node.Insert;
import com.sitech.sql.parse.node.ParseSql;
import com.sitech.sql.parse.node.Select;
import com.sitech.sql.parse.node.Sql;
import com.sitech.sql.parse.node.Update;

public class ComplieSql {
	public static void parseSql(String sql,long moduleId){
		Scaner scanner=new Scaner(sql);
		ParseSql p=new ParseSql(scanner);
		
		SqlTree tree=new SqlTree();
		if(sql.toLowerCase().startsWith("select")){
			Select s=(Select)p.newSelect();
			tree.visitSelect(s);
		}else if(sql.toLowerCase().startsWith("update")){
			Update u=(Update)p.newUpdate();
			tree.visitUpdate(u);
		}else if(sql.toLowerCase().startsWith("delete")){
			Delete d=(Delete)p.newDelete();
			tree.visitDelete(d);
		}else if(sql.toLowerCase().startsWith("insert")){
			Insert i=(Insert)p.newInsert();
			tree.visitInsert(i);
		}
		tree.print(moduleId,sql);
	}
	public static CheckTree checkSql(String sql){
		Scaner scanner=new Scaner(sql);
		ParseSql p=new ParseSql(scanner);
		CheckTree tree=new CheckTree();
		Select s=(Select)p.newSelect();
		tree.visitSelect(s);
		return tree;
	}
	public static String formatXML(String sql){
		Scaner scanner=new Scaner(sql);
		ParseSql p=new ParseSql(scanner);
		ShowTree tree=new ShowTree();
		Sql s=(Sql)p.newSql();
		tree.visitSql(s);
		return tree.toString();
	}
	public static void main(String[] args){
		System.out.println(ComplieSql.formatXML(""));
	}
}
