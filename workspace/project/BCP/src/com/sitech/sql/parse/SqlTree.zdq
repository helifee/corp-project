package com.sitech.sql.parse;

import java.util.ArrayList;
import java.util.List;

import com.sitech.oa.pars.BCPConn;
import com.sitech.sql.parse.node.Delete;
import com.sitech.sql.parse.node.Insert;
import com.sitech.sql.parse.node.NodeToken;
import com.sitech.sql.parse.node.Select;
import com.sitech.sql.parse.node.Update;
import com.sitech.sql.parse.node.Visitor;

public class SqlTree extends Visitor {
	private int flag=0;
	private Tab tab;
	public void visitNodeToken(NodeToken token){
		switch(flag){
		case 1:
			tab.tableList.add(token.tokenString);
			tab.type="S";
			break;
		case 2:
			tab.tableList.add(token.tokenString);
			tab.type="U";
			break;
		case 3:
			tab.tableList.add(token.tokenString);
			tab.type="I";
			break;
		case 4:
			tab.tableList.add(token.tokenString);
			tab.type="D";
			break;
		}
	}
	public void visitSelect(Select s){
		flag=1;
		tab=new Tab();
		try{
			super.visitSelect(s);
		}catch(Exception e){System.out.println("SELECT ERROR!");}
	}
	public void visitUpdate(Update u){
		flag=2;
		tab=new Tab();
		try{
			super.visitUpdate(u);
		}catch(Exception e){System.out.println("UPDATE ERROR!");}
	}
	public void visitInsert(Insert i){
		flag=3;
		tab=new Tab();
		try{
			super.visitInsert(i);
		}catch(Exception e){System.out.println("INSERT ERROR!");}
	}
	public void visitDelete(Delete d){
		flag=4;
		tab=new Tab();
		try{
			super.visitDelete(d);
		}catch(Exception e){System.out.println("DELETE ERROR!");}
	}
	public void print(long moduleId,String sql){
		BCPConn conn=BCPConn.getIntance();
		long sqlId=conn.insertSql(moduleId, tab.type, sql);
		for(int i=0;i<tab.tableList.size();i+=1){
			String tabName=(String)tab.tableList.get(i);
			long tabId=conn.findTableName(tabName);
			if(tabId<0){
				tabId=conn.insertTable(tabName);
			}
			System.out.println(tab.tableList);
			System.out.println("insert tablemapping  "+sqlId+"   "+tabId+"   "+tabName);
			try{
				conn.insertTableMapping(sqlId, tabId);
			}catch(Exception ew){
				System.out.println("insert the same relation,do nothing!!");
			}
		}
		System.out.println(tab.type+"   "+tab.tableList);
	}
	class Tab{
		public String type;
		public List tableList=new ArrayList();
	}
}
