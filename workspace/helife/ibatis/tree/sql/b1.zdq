package helife.tree;

import java.util.ArrayList;
import java.util.List;

public class TreeUtil {
	public static Tree getTreeFrom() {
		
		Record r1 = new Record();
		r1.setId("001");
		r1.setTxt("aaa");
		r1.setCheck(0);
		r1.setDispSeq("0100000000");
		
		Record r2 = new Record();
		r2.setId("002");
		r2.setTxt("bbb");
		r2.setCheck(1);
		r2.setDispSeq("0102000000");
		
		Record r3 = new Record();
		r3.setId("003");
		r3.setTxt("ccc");
		r3.setCheck(0);
		r3.setDispSeq("0103000000");
		
		Record r4 = new Record();
		r4.setId("004");
		r4.setTxt("ddd");
		r4.setCheck(0);
		r4.setDispSeq("0200000000");
		
		Record r5 = new Record();
		r5.setId("005");
		r5.setTxt("eee");
		r5.setCheck(0);
		r5.setDispSeq("0201000000");
		
		Record r6 = new Record();
		r6.setId("006");
		r6.setTxt("fff");
		r6.setCheck(0);
		r6.setDispSeq("0202000000");
		
		Record r7 = new Record();
		r7.setId("007");
		r7.setTxt("ggg");
		r7.setCheck(0);
		r7.setDispSeq("0300000000");
		
		Record r8 = new Record();
		r8.setId("008");
		r8.setTxt("hhh");
		r8.setCheck(0);
		r8.setDispSeq("0301000000");
		
		Record r9 = new Record();
		r9.setId("009");
		r9.setTxt("iii");
		r9.setCheck(0);
		r9.setDispSeq("0302000000");
		
		List<Record> records = new ArrayList<Record>();
		records.add(r1);
		records.add(r2);
		records.add(r3);
		records.add(r4);
		records.add(r5);
		records.add(r6);
		records.add(r7);
		records.add(r8);
		records.add(r9);
		
		List<Tree> items = new ArrayList<Tree>();
		int unit = 2;
		Tree before = null;
		List<String> beforeGrades = null;
		for(int i=0; i<records.size(); i++) {
			Record r = records.get(i);
			String seq = r.getDispSeq();
			List<String> grades = getGrades(seq, unit);
//			for(int j=0; j<grades.size(); j++) {
//				System.out.print(grades.get(j) + "-");
//			}
//			System.out.println();
			
			int gradeNum = grades.size();
			if(gradeNum == 1) {
				
				//清空
				before = null;
				beforeGrades = null;
				
				Tree t1 = new Tree();
				t1.setId(r.getId());
				t1.setTxt(r.getTxt());
				t1.setCheck(r.getCheck());
				items.add(t1);
				
				//
				before = t1;
				beforeGrades = grades;
			} else {
				List<Tree> listBefore = null;
				if(grades.containsAll(beforeGrades)) {
					Tree t2 = new Tree();
					t2.setId(r.getId());
					t2.setTxt(r.getTxt());
					t2.setCheck(r.getCheck());
					listBefore = new ArrayList<Tree>();
					listBefore.add(t2);
					before.setItems(listBefore);
					
					//
					before = t2;
					beforeGrades = grades;
				} else {
					if(grades.size() == beforeGrades.size()) {
						Tree t3 = new Tree();
						t3.setId(r.getId());
						t3.setTxt(r.getTxt());
						t3.setCheck(r.getCheck());
						listBefore.add(t3);
						
						//
						before = t3;
						beforeGrades = grades;
					} else {
						
					}
				}
			}
			
		}
		
		//生成树
		Tree tree = new Tree();
		tree.setId("000");
		tree.setTxt("远东社内网");
		tree.setCheck(0);
		tree.setItems(items);
		
		return tree;
	}
	
	private static List<String> getGrades(String seq, int unit) {
		List<String> grades = new ArrayList<String>();
		
		int max = seq.length() / unit;
		int index = 0;		
		for(int i=0; i<max; i++) {
			String s = seq.substring(index, index + unit);
			if("00".equals(s)) {
				break;				
			} else {
				grades.add(s);
				index = index + unit;
			}
		}
		
		return grades;
	}
}
