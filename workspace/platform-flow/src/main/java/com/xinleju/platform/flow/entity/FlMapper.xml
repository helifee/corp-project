<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.flow.entity.Fl">
	
	<resultMap type="com.xinleju.platform.flow.entity.Fl" id="FlMap">
		<result column="id" property="id"/>
		<result column="code" property="code"/>
		<result column="name" property="name"/>
		<result column="use_status" property="useStatus"/>
		<result column="flow_title" property="flowTitle"/>
		<result column="business_object_id" property="businessObjectId"/>
	</resultMap>
	
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.flow.entity.Fl">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.flow.entity.Fl">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.flow.entity.Fl">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryFlCount" resultType="java.lang.Integer"  parameterType="java.util.HashMap">
		SELECT COUNT(DISTINCT CODE) FROM PT_FLOW_FL B
			LEFT JOIN pt_sys_org_user u on u.id=B.create_person_id
		<where> 
			B.delflag = 0
			<if test="appId != null and appId != ''">
				and B.app_id = #{appId}
			</if>
			<if test="businessObjectId != null and businessObjectId != ''">
				and B.business_object_id = #{businessObjectId}
			</if>
			<if test="useStatus != null and useStatus != ''">
				and B.use_status = #{useStatus}
			</if>
			<if test="creator != null and creator != ''">
				and (u.login_name like CONCAT('%', #{creator}, '%') or u.real_name like CONCAT('%', #{creator}, '%'))
			</if>
			<if test="startDate != null and startDate != ''">
				<![CDATA[ and DATE_FORMAT(B.update_date,'%Y-%m-%d') >= #{startDate,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[ and DATE_FORMAT(B.update_date,'%Y-%m-%d') <= #{endDate,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="code != null and code != ''">
				and B.code = #{code}
			</if>
		</where>
	</select>	
	<delete id="deleteByFlId"  parameterType="java.lang.String">
		delete from pt_flow_participant where fl_id = #{_parameter,jdbcType=VARCHAR};
		delete from pt_flow_step where fl_id = #{_parameter,jdbcType=VARCHAR};
		delete from pt_flow_ac where fl_id = #{_parameter,jdbcType=VARCHAR};
		delete from pt_flow_fl where id = #{_parameter,jdbcType=VARCHAR};
		
	</delete>
	<!-- 根据条件获取流程模板列表-->
	<select id="queryFlList" resultType="com.xinleju.platform.flow.dto.FlDto" parameterType="java.util.HashMap">
		SELECT
			A.id AS id,
			A.concurrency_version AS concurrencyVersion,
			A.CODE AS CODE,
			A.post_is_null AS postIsNull,
			A.approval_person_is_null AS approvalPersonIsNull,
			A.post_multi_person AS postMultiPerson,
			A.retract AS retract,
			A.use_status AS useStatus,
			A.remark AS remark,
			A.STATUS AS STATUS,
			A.NAME AS NAME,
			A.flow_title AS flowTitle,
			A.title_update AS titleUpdate,
			A.app_id AS appId,
			A.business_object_id AS businessObjectId,
			A.is_defualt AS isDefualt,
			A.version AS version,
			A.sort AS sort,
			A.approval_repeat AS approvalRepeat,
			A.disable_date AS disableDate,
			A.disable_person_id AS disablePersonId,
			A.disable_person_name AS disablePersonName,
			A.create_date AS createDate,
			A.update_date AS updateDate,
			A.create_person_id AS createPersonId,
			A.create_person_name AS createPersonName,
			A.update_person_id AS updatePersonId,
			A.update_person_name AS updatePersonName,
			A.create_org_id AS createOrgId,
			A.create_org_name AS createOrgName,
			A.create_company_id AS createCompanyId,
			A.create_company_name AS createCompanyName,
			A.delflag AS delflag,
			d.name businessObjectName
		FROM
			PT_FLOW_FL A,pt_flow_business_object d
		<where>
			A.delflag = 0 and a.business_object_id = d.id AND A.CODE IN (SELECT C.CODE FROM (SELECT DISTINCT B.CODE FROM PT_FLOW_FL B
																			LEFT JOIN pt_sys_org_user u on u.id=B.create_person_id
			<where> 
				B.delflag = 0
				<if test="appId != null and appId != ''">
					and B.app_id = #{appId}
				</if>
				<if test="businessObjectId != null and businessObjectId != ''">
					and B.business_object_id = #{businessObjectId}
				</if>
				<if test="useStatus != null and useStatus != ''">
					and B.use_status = #{useStatus}
				</if>
				<if test="creator != null and creator != ''">
					and (u.login_name like CONCAT('%', #{creator}, '%') or u.real_name like CONCAT('%', #{creator}, '%'))
				</if>
				<if test="startDate != null and startDate != ''">
					<![CDATA[ and DATE_FORMAT(B.update_date,'%Y-%m-%d') >= #{startDate,jdbcType=TIMESTAMP} ]]>
				</if>
				<if test="endDate != null and endDate != ''">
					<![CDATA[ and DATE_FORMAT(B.update_date,'%Y-%m-%d') <= #{endDate,jdbcType=TIMESTAMP} ]]>
				</if>
				<if test="code != null and code != ''">
					and B.code = #{code}
				</if>
			</where>
			ORDER BY B.version DESC
			<if test="start != null and limit != null">
				LIMIT #{start},#{limit}
			</if>
				) C
			)	
			<if test="startDate != null and startDate != ''">
				<![CDATA[ and DATE_FORMAT(A.update_date,'%Y-%m-%d') >= #{startDate,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[ and DATE_FORMAT(A.update_date,'%Y-%m-%d') <= #{endDate,jdbcType=TIMESTAMP} ]]>
			</if>					
		</where>
	ORDER BY A.version DESC	
	</select>	
	
	<select id="queryDefaultFlow" resultMap="FlMap" parameterType="java.lang.String">
		select * from pt_flow_fl where version = (
			SELECT
				MAX(version)
			FROM
				pt_flow_fl f,
				pt_flow_business_object b
			WHERE
				b.CODE = #{businessObjectCode}
			 AND b.id = f.business_object_id
			 AND f.status = '1'
			 AND f.is_defualt = 1
			 AND f.delflag = 0
			 AND b.delflag = 0
			);
	</select>
	
	<select id="getFlowRetractForInstance" resultType="map" parameterType="map">
		SELECT f.*,i.`status` incStatus,o.pc_url pcUrl  from pt_flow_fl f
			LEFT JOIN pt_flow_instance i on i.fl_id=f.id
			LEFT JOIN pt_flow_business_object o on o.id=f.business_object_id
			 WHERE i.id=#{instanceId}
	</select>
	
	<select id="queryReadyFlowBy" resultMap="FlMap" parameterType="java.lang.String">
		SELECT
			*
		FROM
			pt_flow_fl
		WHERE
			version = (
				SELECT
					MAX(version)
				FROM
					pt_flow_fl
				WHERE
					use_status = 1
				AND STATUS = 1
				AND CODE = #{flCode}
				AND delflag = 0
			)
		AND CODE = #{flCode}
	</select>
	
	<select id="queryListByApprover" resultType="com.xinleju.platform.flow.dto.FlDto" parameterType="java.util.HashMap">
		SELECT DISTINCT a.id, t.type, t.participant_id participantId, t.participant_scope participantScope, a.name, a.code, a.version, b.name as objectName 
		FROM view_flow_general aa, pt_flow_fl a, pt_flow_business_object b, pt_flow_participant t
		WHERE a.code = aa.code AND a.version = aa.version AND a.business_object_id = b.id 
		AND a.id = t.fl_id AND t.ac_id is not null AND b.delflag=0
		AND t.delflag = 0 AND a.delflag = 0 AND a.use_status=1 
		AND t.type=1 AND t.participant_type=#{type} AND t.participant_id = #{approverId}
	</select>
	
	<select id="queryViewList" resultType="com.xinleju.platform.flow.dto.FlDto" parameterType="java.util.HashMap">
		SELECT a.id, a.name, a.code, a.version FROM view_flow_general a
		WHERE a.delflag = 0 
		<if test="busiObjectId != null and busiObjectId != '-1'">
			AND a.business_object_id = #{busiObjectId}
		</if>
	</select>
	
	<select id="queryFlowBusiObjectList" resultType="com.xinleju.platform.flow.dto.FlDto" parameterType="java.util.HashMap">
		SELECT
			fl.id,
			fl.`code`,
			fl.`name`,
			b.`name` AS businessObjectName
		FROM
			pt_flow_fl fl,
			pt_flow_business_object b
		WHERE
			fl.delflag = 0
		AND fl.`status` = 1
		AND fl.use_status = 1
		AND fl.business_object_id = b.id
		AND b.delflag = 0
		<if test="flowKeyword != null and flowKeyword != ''">
			AND fl.name like CONCAT('%', #{flowKeyword}, '%')
		</if> 
		<if test="busiKeyword != null and busiKeyword != ''">
			AND b.name like CONCAT('%', #{busiKeyword}, '%')
		</if>
	</select>
	
	<select id="queryFlListByUserId" resultType="java.lang.String">
		SELECT
			DISTINCT fl.id
		FROM
			pt_flow_participant p
		LEFT JOIN pt_flow_fl fl ON (p.fl_id = fl.id)
		WHERE
			p.participant_id IN
			<foreach item="item" index="index" collection="list"
		        open="(" separator="," close=")">
		          #{item}
		    </foreach>	
		AND p.delflag = 0
		AND fl.delflag = 0
		AND p.type = 1;		
	</select>
	
	<!-- 根据条件查询符合条件的code -->
	<select id="selectCodeByQuery" resultType="String" parameterType="map">
		SELECT t1.`code` from (
			SELECT * from (
				SELECT f.id, f.app_id, f.`code`,f.`name`,f.use_status,f.version,f.delflag,f.update_date,f.business_object_id 
				from pt_flow_fl f ,pt_flow_business_object d
				where f.delflag = 0 and f.business_object_id = d.id 
				ORDER BY f.`code` , f.version desc
			) t
			GROUP BY t.`code`
		) t1
			WHERE t1.delflag=0
			<if test="useStatus != null and useStatus != ''">
				and t1.use_status = #{useStatus}
			</if>
			<if test="flName != null and flName != ''">
				and ( t1.`name` like CONCAT('%', #{flName}, '%') or t1.`code` like CONCAT('%', #{flName}, '%'))
			</if>
			<if test="startDate != null and startDate != ''">
				<![CDATA[ and  t1.update_date  >= #{startDate,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[ and  t1.update_date <= #{endDate,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="appId != null and appId != ''">
				and t1.app_id = #{appId}
			</if>
			<if test="businessObjectId != null and businessObjectId != ''">
				and t1.business_object_id = #{businessObjectId}
			</if>
			<if test="code != null and code != ''">
				and t1.code = #{code}
			</if>
			ORDER BY t1.update_date
			<if test="start != null and limit != null">
				LIMIT #{start},#{limit}
			</if>
	</select>
	<select id="selectCodeByQueryNew" resultType="String" parameterType="map">
		SELECT t1.`code` from (
			SELECT * from (
				SELECT f.id, f.app_id, f.`code`,f.`name`,f.use_status,f.version,f.delflag,f.update_date,f.business_object_id 
				from pt_flow_fl f ,pt_flow_business_object d
				where f.delflag = 0 and f.business_object_id = d.id and f.status=1
				ORDER BY f.`code` , f.version desc
			) t
			GROUP BY t.`code`  HAVING  max(t.version) 
		) t1
			WHERE t1.delflag=0
			<if test="useStatus != null and useStatus != ''">
				and t1.use_status = #{useStatus}
			</if>
			<if test="flName != null and flName != ''">
				and ( t1.`name` like CONCAT('%', #{flName}, '%') or t1.`code` like CONCAT('%', #{flName}, '%'))
			</if>
			<if test="startDate != null and startDate != ''">
				<![CDATA[ and  t1.update_date  >= #{startDate,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[ and  t1.update_date <= #{endDate,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="appId != null and appId != ''">
				and t1.app_id = #{appId}
			</if>
			<if test="businessObjectId != null and businessObjectId != ''">
				and t1.business_object_id = #{businessObjectId}
			</if>
			<if test="code != null and code != ''">
				and t1.code = #{code}
			</if>
			ORDER BY t1.update_date
			<if test="start != null and limit != null">
				LIMIT #{start},#{limit}
			</if>
	</select>
	<select id="selectCodeCount" resultType="java.lang.Integer" parameterType="map">
		SELECT count(t1.code) from (
			SELECT * from (
				SELECT f.id, f.app_id, f.`code`,f.`name`,f.use_status,f.version,f.delflag,f.update_date,f.business_object_id 
				from pt_flow_fl f ,pt_flow_business_object d
				where f.delflag = 0 and f.business_object_id = d.id and f.status=1
				ORDER BY f.`code` , f.version desc
			) t
			GROUP BY t.`code`  HAVING  max(t.version) 
		) t1
			WHERE t1.delflag=0
			<if test="useStatus != null and useStatus != ''">
				and t1.use_status = #{useStatus}
			</if>
			<if test="flName != null and flName != ''">
				and ( t1.`name` like CONCAT('%', #{flName}, '%') or t1.`code` like CONCAT('%', #{flName}, '%'))
			</if>
			<if test="startDate != null and startDate != ''">
				<![CDATA[ and  t1.update_date  >= #{startDate,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[ and  t1.update_date <= #{endDate,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="appId != null and appId != ''">
				and t1.app_id = #{appId}
			</if>
			<if test="businessObjectId != null and businessObjectId != ''">
				and t1.business_object_id = #{businessObjectId}
			</if>
			<if test="code != null and code != ''">
				and t1.code = #{code}
			</if>
	</select>
	
	<select id="selectFlsByQuery" resultType="com.xinleju.platform.flow.dto.FlDto" parameterType="java.util.HashMap">
	SELECT
			A.id AS id,
			A.concurrency_version AS concurrencyVersion,
			A.CODE AS CODE,
			A.post_is_null AS postIsNull,
			A.approval_person_is_null AS approvalPersonIsNull,
			A.post_multi_person AS postMultiPerson,
			A.retract AS retract,
			A.use_status AS useStatus,
			A.remark AS remark,
			A.STATUS AS STATUS,
			A.NAME AS NAME,
			A.flow_title AS flowTitle,
			A.title_update AS titleUpdate,
			A.app_id AS appId,
			A.business_object_id AS businessObjectId,
			A.is_defualt AS isDefualt,
			A.version AS version,
			A.sort AS sort,
			A.approval_repeat AS approvalRepeat,
			A.disable_date AS disableDate,
			A.disable_person_id AS disablePersonId,
			A.disable_person_name AS disablePersonName,
			A.create_date AS createDate,
			A.update_date AS updateDate,
			A.create_person_id AS createPersonId,
			A.create_person_name AS createPersonName,
			A.update_person_id AS updatePersonId,
			A.update_person_name AS updatePersonName,
			A.create_org_id AS createOrgId,
			A.create_org_name AS createOrgName,
			A.create_company_id AS createCompanyId,
			A.create_company_name AS createCompanyName,
			A.delflag AS delflag,
			d.name businessObjectName
		FROM
			PT_FLOW_FL A,pt_flow_business_object d
		where A.delflag = 0 and A.business_object_id = d.id 
		and A.code in 
		<foreach collection="codes" item="code" open="(" close=")" separator=",">
			#{code}
		</foreach>
			ORDER BY A.version DESC	
	</select>
</mapper>