package com.xinleju.platform.flow.dao.impl;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.xinleju.platform.base.dao.impl.BaseDaoImpl;
import com.xinleju.platform.flow.dao.AgentDao;
import com.xinleju.platform.flow.dto.AgentDto;
import com.xinleju.platform.flow.entity.Agent;

/**
 * @author admin
 * 
 * 
 */

@Repository
public class AgentDaoImpl extends BaseDaoImpl<String,Agent> implements AgentDao{

	public AgentDaoImpl() {
		super();
	}

	@Override
	public int deleteAllFlowDateByAgentId(String agentId) {
		String objectName = "com.xinleju.platform.flow.entity.Agent.deleteAllFlowDateByAgentId";
		return getSqlSession().update(objectName, agentId);
	}

	@Override
	public int deleteAllPostDateByAgentId(String agentId) {
		String objectName = "com.xinleju.platform.flow.entity.Agent.deleteAllPostDateByAgentId";
		return getSqlSession().update(objectName, agentId);
	}

	@Override
	public List<AgentDto> queryAgentInstanceList(Map<String, String> paramMap) {
		String appId = (String)paramMap.get("appId");
		if(appId == null || "-1".equals(appId) ){
			return new ArrayList();
		}
		return getSqlSession().selectList(Agent.class.getName()+".queryAgentInstanceList", paramMap);
	}

	@Override
	public List<Agent> queryAgentBy(String userId, Timestamp currentTime) {
		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("userId", userId);
		paramMap.put("currentTime", currentTime);
		return getSqlSession().selectList(Agent.class.getName()+".queryAgentByUserAndTime", paramMap);
	}

	
	
}
