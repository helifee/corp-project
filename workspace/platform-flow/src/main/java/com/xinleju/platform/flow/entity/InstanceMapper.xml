<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.flow.entity.Instance">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.flow.entity.Instance">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.flow.entity.Instance">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.flow.entity.Instance">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	
	<!-- 根据流程模板ID及业务单据ID查询实例 -->
	<select id="queryInstanceByFlIdAndBusinessId" resultType="com.xinleju.platform.flow.entity.Instance" parameterType="java.util.HashMap">
		SELECT
			*
		FROM
			pt_flow_instance i
		WHERE
			i.business_id = #{businessId}
		AND (i.fl_id = #{flId} OR i.status = 4)
		AND i.delflag = 0
	</select>
	<select id="queryApprovalList" resultType="com.xinleju.platform.flow.dto.ApprovalList" parameterType="java.util.HashMap">
		SELECT
			i.app_id AS appId,
			i.fl_id AS flId,
			fl.code AS flCode,
			fl.retract AS flRetract,
			i.id AS instanceId,
			i.name AS instanceName,
			b.pc_url AS pcUrl,
			ac.id AS acId,
			ac. CODE AS acCode,
			ac. NAME AS acName,
			ac.ac_type AS acType,
			ac. STATUS AS acStatus,
			ac.activate_date AS acStartTime,
			ac.end_date AS acEndTime,
			ac.approve_type_id AS approvalTypeId,
			atype. NAME AS approvalType,
			ac.is_add_label AS isAddLabel,
			ac.approve_strategy AS multiPost,
			ac.post_multi_person AS multiPerson,
			ac.source AS source,
			ac.left_post AS leftPost,
			ac.px AS acPx,
			ac.pre_ac_ids AS preAcIds,
			ac.next_ac_ids AS nextAcIds,
			ac.from_return AS fromReturn,		
			GROUP_CONCAT(cs.participant_id) AS ccIds,
			GROUP_CONCAT(cs.participant_name) AS ccNames,			
			p.id AS acPostId,
			p.post_id AS postId,
			p.post_name AS postName,
			p.px AS postSeq,
			p. STATUS AS postStatus,
			p.activate_date AS postStartTime,
			p.end_date AS postEndTime,
			p.left_person as leftPerson,
			g.id AS groupKey,
			g.ac_post_id AS acPostId,
			g.participant_id AS approverId,
			g.participant_name AS approverName,
			g.px AS approverSeq,
			g.auto_pass AS autoPass,
			g.proxy AS proxy,
			g.proxyed AS proxyed,
			g.proxy_type AS proxyType,	
			g.status AS approverStatus,		
			t.id AS taskId,
			t.type AS taskType,
			t. STATUS AS taskStatus,
			t.activate_date AS taskStartTime,
			t.end_date AS taskEndTime,
			t.operation_code AS taskResult,
			t.operation_name AS taskResultName,
			t.user_note AS taskComments,
			t.relation_participant_id AS fromId,
			t.relation_participant AS fromName,
			t.msg_id AS msgId
		FROM
			pt_flow_instance_ac ac
		LEFT JOIN pt_flow_approve_type atype ON (
			ac.approve_type_id = atype. CODE
		)
		LEFT JOIN pt_flow_instance_post p ON (ac.id = p.ac_id AND p.delflag = 0)
		LEFT JOIN pt_flow_instance_group g ON (p.id = g.ac_post_id AND g.delflag = 0)
		LEFT JOIN pt_flow_instance_task t ON (g.id = t.group_id AND t.delflag = 0)
		LEFT JOIN pt_flow_instance i ON(ac.fi_id = i.id)
		LEFT JOIN pt_flow_fl fl on i.fl_id=fl.id
		LEFT JOIN pt_flow_instance_cs cs ON(cs.ac_id = ac.id AND cs.fi_id = ac.fi_id AND cs.delflag = 0)
		LEFT JOIN pt_flow_business_object b ON(b.id = i.business_object_id AND b.delflag = 0)
		WHERE
			ac.fi_id = #{instanceId}
			AND ac.delflag = 0 
		<if test="status != null">
			AND t.status = #{status}
		</if>
		GROUP BY ac.id, p.id, g.id
		ORDER BY
			ac.px,
			p.px,
			g.px
	</select>
	
	<select id="queryApprovalListExternal" resultType="com.xinleju.platform.flow.dto.ApprovalList" parameterType="java.util.HashMap">
		SELECT
			i.app_id AS appId,
			i.fl_id AS flId,
			fl.code AS flCode,
			fl.retract AS flRetract,
			i.id AS instanceId,
			i.name AS instanceName,
			b.pc_url AS pcUrl,
			ac.id AS acId,
			ac. CODE AS acCode,
			ac. NAME AS acName,
			ac.ac_type AS acType,
			ac. STATUS AS acStatus,
			ac.activate_date AS acStartTime,
			ac.end_date AS acEndTime,
			ac.approve_type_id AS approvalTypeId,
			atype. NAME AS approvalType,
			ac.is_add_label AS isAddLabel,
			ac.approve_strategy AS multiPost,
			ac.post_multi_person AS multiPerson,
			ac.source AS source,
			ac.left_post AS leftPost,
			ac.px AS acPx,
			ac.pre_ac_ids AS preAcIds,
			ac.next_ac_ids AS nextAcIds,			
			GROUP_CONCAT(cs.participant_id) AS ccIds,
			GROUP_CONCAT(cs.participant_name) AS ccNames,			
			p.id AS acPostId,
			p.post_id AS postId,
			p.post_name AS postName,
			p.px AS postSeq,
			p. STATUS AS postStatus,
			p.activate_date AS postStartTime,
			p.end_date AS postEndTime,
			p.left_person as leftPerson,
			g.id AS groupKey,
			g.ac_post_id AS acPostId,
			g.participant_id AS approverId,
			g.participant_name AS approverName,
			g.px AS approverSeq,
			g.auto_pass AS autoPass,
			g.proxy AS proxy,
			g.proxyed AS proxyed,
			g.proxy_type AS proxyType,	
			g.status AS approverStatus,		
			t.id AS taskId,
			t.type AS taskType,
			t. STATUS AS taskStatus,
			t.activate_date AS taskStartTime,
			t.end_date AS taskEndTime,
			t.operation_code AS taskResult,
			t.operation_name AS taskResultName,
			t.user_note AS taskComments,
			t.relation_participant_id AS fromId,
			t.relation_participant AS fromName,
			t.msg_id AS msgId
		FROM
			pt_flow_instance_ac ac
		LEFT JOIN pt_flow_approve_type atype ON (
			ac.approve_type_id = atype. CODE
		)
		LEFT JOIN pt_flow_instance_post p ON (ac.id = p.ac_id AND p.delflag = 0)
		LEFT JOIN pt_flow_instance_group g ON (p.id = g.ac_post_id AND g.delflag = 0)
		LEFT JOIN pt_flow_instance_task t ON (g.id = t.group_id AND t.delflag = 0)
		LEFT JOIN pt_flow_instance i ON(ac.fi_id = i.id)
		LEFT JOIN pt_flow_fl fl on i.fl_id=fl.id
		LEFT JOIN pt_flow_instance_cs cs ON(cs.ac_id = ac.id AND cs.fi_id = ac.fi_id AND cs.delflag = 0)
		LEFT JOIN pt_flow_business_object b ON(b.id = i.business_object_id AND b.delflag = 0)
		LEFT JOIN pt_sys_res_app a ON(a.id = i.app_id AND a.delflag = 0)
		WHERE
			i.business_id = #{businessId}
			<if test="appCode != null and appCode != ''">
				AND a.code = #{appCode}
			</if>
			<if test="flCode != null and flCode != ''">
				AND fl.code = #{flCode}
			</if>
			AND ac.delflag = 0
		GROUP BY ac.id, p.id, g.id
		ORDER BY
			ac.px,
			p.px,
			g.px
	</select>
	
	<update id="changeStatus" parameterType="java.util.HashMap">
		UPDATE pt_flow_instance SET status = #{status} WHERE id = #{instanceId}
	</update>
	
	<select id="queryListByApprover" parameterType="java.util.HashMap"
	      resultType="com.xinleju.platform.flow.dto.InstanceDto" >
		SELECT c.id, a.name, a.app_id appId, a.business_object_id businessObjectId, 
		a.start_user_id startUserId, a.flow_business_company_id flowBusinessCompanyId, 
		a.start_date startDate, c.post_id postId, c.participant_id participantId, 
		a.current_approvers currentApprovers, 
		start_user_name startUserName, flow_business_company_name flowBusinessCompanyName  
		FROM pt_flow_instance a, pt_flow_instance_ac b, pt_flow_instance_group c
		WHERE a.id = b.fi_id AND b.id = c.ac_id AND c.source = 1 AND c.status = 1
		AND a.delflag = 0 AND b.delflag =0 AND c.delflag =0
		AND a.status = 1 AND b.status =	1 AND c.status=1
		AND c.participant_id = #{participantId} AND c.post_id =#{postId} 
	</select>
	
	<select id="queryInstanceBy" parameterType="java.util.HashMap"
	      resultType="com.xinleju.platform.flow.dto.InstanceDto" >
		SELECT a.id,a.code,a.name,a.status,a.app_id appId, a.business_object_id businessObjectId, b.name busiObjectName, 
		a.fl_id flId, a.start_date startDate, a.start_company_id startCompanyId, 
		a.create_date createDate, a.end_date endDate, 
		timestampdiff(HOUR, a.create_date, IFNULL( a.end_date, now())) hourSum,
		current_approvers currentApprovers, 
		u.real_name startUserName, flow_business_company_name flowBusinessCompanyName,
		business_object_code businessObjectCode, business_id businessId, custom_form_id customFormId 
		FROM pt_flow_instance a,  pt_flow_business_object b,pt_sys_org_user u  WHERE a.delflag=0 AND b.delflag=0
		AND a.business_object_id = b.id and u.id=a.start_user_id
		<if test="appId != null and appId != '-1'">
			AND  a.app_id = #{appId}
		</if>
		<if test="orgId != null and orgId != '-1' and orgId != ''">
			AND ( a.start_company_id in 
			     <foreach item="item" index="index" collection="orgId" open="(" separator="," close=")">  
	           		 #{item} 
	             </foreach>
			or flow_business_dept_id in 
				 <foreach item="item" index="index" collection="orgId" open="(" separator="," close=")">  
	           		 #{item} 
	             </foreach>
	         )
		</if>
		<if test="busiObjectId != null and busiObjectId != '-1' and busiObjectId != ''">
			AND a.business_object_id = #{busiObjectId} 
		</if>
		<if test="flowId != null and flowId != '-1' and flowId != ''">
			AND a.fl_id = #{flowId} 
		</if>
		<if test="code != null and code != ''">
			AND a.code LIKE concat('%',#{code},'%') 
		</if>
		<if test="name != null and name != ''">
			AND a.name LIKE concat('%',#{name},'%') 
		</if>
		
		<if test="startDate1 != null and startDate1 != ''">
			AND a.start_date &gt;= #{startDate1} 
		</if>
		<if test="endDate1 != null and endDate1 != ''">
			AND a.start_date &lt;= #{endDate1} 
		</if>
		
		<if test="startDate2 != null and startDate2 != ''">
			AND a.end_date &gt;= #{startDate2} 
		</if>
		
		<if test="endDate2 != null and endDate2 != ''">
			AND a.end_date &lt;= #{endDate2} 
		</if>
		<if test="status != null and status != '-1'">
			AND a.status = #{status} 
		</if>
		
		<if test="starterId != null and starterId != '-1' and starterId != ''">
			AND a.start_user_id in  
			<foreach item="item" index="index" collection="starterId" open="(" separator="," close=")">  
	           		 #{item} 
	        </foreach>
		</if>
		<if test="approverId != null and approverId != '-1' and approverId != ''">
	     AND ( a.id in (
	     	<if test=" approveStatus==-1 or approveStatus ==1 ">
				select ac.fi_id from pt_flow_instance_post pst, pt_flow_instance_ac ac, pt_flow_instance_group grp  
				LEFT JOIN pt_flow_instance_task tsk ON (grp.id = tsk.group_id AND tsk.delflag = 0 )
				WHERE grp.ac_post_id = pst.id AND pst.ac_id = ac.id AND grp.delflag=0 and pst.delflag=0 and ac.delflag=0 
				AND tsk.id is null AND grp.participant_id in 
				<foreach item="item" index="index" collection="approverId" open="(" separator="," close=")">  
	            	#{item} 
	        	</foreach>
	        </if>
	        
	        <if test=" approveStatus==-1">union</if>
	        
	        <if test=" approveStatus==-1 or approveStatus ==2 or approveStatus ==3 ">
	        	select  ac.fi_id from  pt_flow_instance_task tsk, pt_flow_instance_group grp , 
				pt_flow_instance_post pst, pt_flow_instance_ac ac WHERE tsk.group_id = grp.id 
				AND grp.ac_post_id = pst.id AND pst.ac_id = ac.id AND ac.ac_type>1  AND tsk.approver_id in 
				<foreach item="item" index="index" collection="approverId" open="(" separator="," close=")">  
	           		 #{item} 
	        	</foreach>
	        	 <if test='approveStatus==3'>
	        		AND tsk.status in (3,4)
   				 </if>
   				 <if test='approveStatus==2'>
	        		AND tsk.status = 2
   				 </if>
	        </if>
	        )
	    )
		</if>
		 ORDER BY a.create_date DESC 		
	</select>
	
	<update id="sync" parameterType="java.util.HashMap">
		UPDATE pt_flow_instance SET 
			status = #{status},
			end_date = #{endDate},
			current_approvers = #{currentApprovers},
			current_approver_ids = #{currentApproverIds}
		WHERE id = #{instanceId}
	</update>
	
	
	<select id="personalQueryList" parameterType="java.util.HashMap" resultType="com.xinleju.platform.flow.dto.InstanceDto" >
		SELECT
			a.id,
			a. CODE,
			a. NAME,
			a. STATUS,
			a.app_id appId,
			a.business_object_id businessObjectId, b.name busiObjectName, 
			a.business_id businessId,
			a.fl_id flId, fl.code flCode,
			a.start_date startDate,
			a.flow_business_company_id flowBusinessCompanyId,
			a.start_user_id startUserId,
			a.start_company_id startCompanyId,
			a.create_date createDate, a.end_date endDate, now() serverDate,
			timestampdiff(HOUR, a.create_date, IFNULL( a.end_date, now())) hourSum,
			a.current_approvers currentApprovers,
			a.current_approver_ids currentApproverIds,  #{userId} currentUserId,
			u.real_name startUserName,
			a.flow_business_company_name flowBusinessCompanyName,
			b.pc_url AS pcUrl
		FROM
			pt_flow_instance a, pt_flow_fl fl,
			pt_flow_business_object b,pt_sys_org_user u
		WHERE
			a.delflag = 0 and fl.id=a.fl_id 
		AND b.id = a.business_object_id and u.id=a.start_user_id
		<if test="appId != null and appId != '-1'">
			AND  a.app_id = #{appId}
		</if>
		 
		<if test="busiObjectId != null and busiObjectId != '-1'">
			AND a.business_object_id = #{busiObjectId} 
		</if>
		
		<if test="name != null and name != ''">
			AND a.name LIKE concat('%',#{name},'%') 
		</if>
		
		<if test="status != null and status != '-1'">
			AND a.status = #{status} 
		</if>
		
		<!-- <if test="parentId!=0">  
             parentTypeId=#{parentId}  
          </if>  
          <if test="parentId==0">  
            parentTypeId is null  
        </if> -->
        <if test='queryType =="ALLTYPE"'>
        	AND a.id in (SELECT DISTINCT fia.fi_id FROM pt_flow_instance_accessible fia 
			    WHERE fia.delflag=0 AND fia.accessible_id= #{userId} UNION
			    SELECT DISTINCT instance_id FROM pt_flow_instance_operate_log 
				WHERE delflag=0 AND operator_ids = #{userId} 
				<if test='timeType=="WEEK"'>  
	    			AND operate_time &gt;= date_sub(now(),interval 7 day)
				</if> 
				<if test='timeType=="MONTH"'>  
		    		AND operate_time &gt;= date_sub(now(),interval 30 day)
				</if> 
				<if test='timeType=="QUARTER"'>  
		    		AND operate_time &gt;= date_sub(now(),interval 90 day)
				</if>
			)
        </if>
        
        <if test='queryType !="ALLTYPE"'>
        	AND a.id in ( SELECT DISTINCT instance_id FROM pt_flow_instance_operate_log 
				WHERE delflag=0 AND operate_type = #{queryType} AND operator_ids = #{userId}
				<if test='timeType=="WEEK"'>  
	    			AND operate_time &gt;= date_sub(now(),interval 7 day)
				</if>   
				<if test='timeType=="MONTH"'>  
		    		AND operate_time &gt;= date_sub(now(),interval 30 day)
				</if> 
				<if test='timeType=="QUARTER"'>  
		    		AND operate_time &gt;= date_sub(now(),interval 90 day)
				</if>
			)
        </if>
		 ORDER BY a.create_date DESC
	</select>
	
	<!-- 查询关联流程实例 -->
	<select id="getRelateInstances" parameterType="java.util.HashMap" resultType="com.xinleju.platform.flow.dto.InstanceDto" >
		SELECT
			b.id,
			b.name,
			fl.code AS flCode,
			b.business_id AS businessId
		FROM
			pt_flow_instance a,
			pt_flow_instance b,
			pt_flow_fl fl
		WHERE
			a.id = #{instanceId}
		AND FIND_IN_SET(b.id, a.relate_instance_ids)
		AND b.fl_id = fl.id	
	</select>
	
	<!-- 查询逾期环节 -->
	<select id="queryOverdueAc" resultType="com.xinleju.platform.flow.model.OverdueAc">
		SELECT
			ac.fi_id AS instanceId,
			i.`name` AS instanceName,
			i.business_id AS businessId,
			fl.code AS flCode,
			b.pc_url AS pcUrl,
			ac.id AS acId,
			ac.`name` AS acName,
			ac.activate_date AS startTime,
			hour(TIMEDIFF(NOW(),ac.activate_date)) AS duration,
			ac.overdue_time AS overdueTime,
			ac.overdue_handle AS overdueHandle,
			GROUP_CONCAT(g.participant_id) AS currentApproverIds,
			GROUP_CONCAT(g.participant_name) AS currentApproverNames
		FROM
			pt_flow_instance_ac ac,
			pt_flow_instance_post p,
			pt_flow_instance_group g,
			pt_flow_instance_task t,
			pt_flow_instance i,
			pt_flow_fl fl,
			pt_flow_business_object b
		WHERE
			ac.`status` = '2'
		AND ac.`status` != '3'
		AND ac.overdue_time > 0
		AND ac.delflag = 0
		AND ac.ac_type = '2'
		AND hour(TIMEDIFF(NOW(),ac.activate_date)) > ac.overdue_time
		AND ac.id = p.ac_id
		AND p.id = g.ac_post_id
		AND g.id = t.group_id
		AND t.`status` = '2' 
		AND i.id = ac.fi_id
		AND i.fl_id = fl.id
		AND fl.business_object_id = b.id
		GROUP BY ac.id
	</select>
</mapper>