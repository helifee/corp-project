package com.xinleju.cloud.oa.util;

import com.xinleju.platform.tools.data.JacksonUtils;

import java.util.Map;
import java.util.Set;

/**
 * Created by luoro on 2017/7/12.
 */
public class XssUtil {
    /**
     * 特殊字符参数转义
     * @param param
     * @return
     */
   public static Map xssEncode(Map param){
       Set<String> keys = param.keySet ();
       for(String key:keys){
           param.put (key,xssEncode(String.valueOf (param.get(key))));
       }
       return param;
   }

    /**
     * 对象特殊字符回转
     * @param obj
     * @return
     */
   public static Map xssDecode(Object obj){
       Map param = JacksonUtils.fromJson (JacksonUtils.toJson (obj),Map.class);
       Set<String> keys = param.keySet ();
       for(String key:keys){
           param.put (key,xssDecode(String.valueOf (param.get(key))));
       }
       return param;
   }
    /**
     * 将特殊字符替换为全角
     * @param s
     * @return
     */
    public static   String xssEncode(String s) {

        if (s == null || s.isEmpty()) {
            return s;
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            switch (c) {
//                case '>':
//                    sb.append('＞');// 全角大于号
//                    break;
//                case '<':
//                    sb.append('＜');// 全角小于号
//                    break;
//                case '\'':
//                    sb.append('‘');// 全角单引号
//                    break;
//                case '\"':
//                    sb.append('“');// 全角双引号
//                    break;
//                case '&':
//                    sb.append('＆');// 全角＆
//                    break;
                case '\\':
                    sb.append('＼');// 全角斜线
                    break;
//                case '/':
//                    sb.append('／');// 全角斜线
//                    break;
//                case '#':
//                    sb.append('＃');// 全角井号
//                    break;
//                case '(':
//                    sb.append('（');// 全角(号
//                    break;
//                case ')':
//                    sb.append('）');// 全角)号
//                    break;
                default:
                    sb.append(c);
                    break;
            }
        }
        return sb.toString();
    }

    /**
     * 将全角字符替换为半角
     * @param s
     * @return
     */
    public static   String xssDecode(String s) {

        if (s == null || s.isEmpty()) {
            return s;
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            switch (c) {
//                case '＞':
//                    sb.append('>');// 全角大于号
//                    break;
//                case '＜':
//                    sb.append('<');// 全角小于号
//                    break;
//                case '‘':
//                    sb.append('\'');// 全角单引号
//                    break;
//                case '“':
//                    sb.append('\"');// 全角双引号
//                    break;
//                case '＆':
//                    sb.append('&');// 全角＆
//                    break;
                case '＼':
                    sb.append('\\');// 全角斜线
                    break;
//                case '／':
//                    sb.append('/');// 全角斜线
//                    break;
//                case '＃':
//                    sb.append('#');// 全角井号
//                    break;
//                case '（' :
//                    sb.append('(');// 全角(号
//                    break;
//                case '）':
//                    sb.append(')');// 全角)号
//                    break;
                default:
                    sb.append(c);
                    break;
            }
        }
        return sb.toString();
    }
}
