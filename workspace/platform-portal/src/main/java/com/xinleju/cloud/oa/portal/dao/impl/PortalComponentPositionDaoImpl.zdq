package com.xinleju.cloud.oa.portal.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.springframework.dao.DataAccessException;
import org.springframework.stereotype.Repository;

import com.xinleju.cloud.oa.portal.dao.PortalComponentPositionDao;
import com.xinleju.cloud.oa.portal.entity.PortalComponentPosition;
import com.xinleju.platform.base.dao.impl.BaseDaoImpl;
import com.xinleju.platform.tools.data.JacksonUtils;

/**
 * @author admin
 * 
 * 
 */

@Repository
public class PortalComponentPositionDaoImpl extends BaseDaoImpl<String,PortalComponentPosition> implements PortalComponentPositionDao{

	public PortalComponentPositionDaoImpl() {
		super();
	}


	@Override
	public List<Map<String, Object>> findComponentsByPortalId(String portalPageId) {
		SqlSession sqlSession = this.getSqlSession();
        List<Map<String,Object>> list = sqlSession.selectList(
                "com.xinleju.cloud.oa.portal.entity.PortalComponentPosition.queryComponentsByPortalId",
                portalPageId
        );


		return list;
	}

    /**
     * 重写批量保存方法
     * @param objectList
     * @return
     * @throws DataAccessException
     */
	@Override
	public int saveBatch(List<PortalComponentPosition> objectList) throws DataAccessException {
        int num = 0;
        for (PortalComponentPosition portalPosition:objectList) {
            PortalComponentPosition oldPortalPosition = this.getObjectById(portalPosition.getId());
            if (oldPortalPosition != null) {
                String json = JacksonUtils.toJson(portalPosition);
                String oldJson = JacksonUtils.toJson(oldPortalPosition);
                Map<String, Object> map = JacksonUtils.fromJson(json, HashMap.class);
                Map<String, Object> oldMap = JacksonUtils.fromJson(oldJson, HashMap.class);
                oldMap.putAll(map);

                String updateJson = JacksonUtils.toJson(oldMap);

                PortalComponentPosition updatePortalPosition = JacksonUtils.fromJson(updateJson, PortalComponentPosition.class);
                int result = this.update(updatePortalPosition);
                num += result;
            } else {
                int result = this.save(portalPosition);
                num += result;
            }
        }
        return num;
	}


	@Override
	public int saveBatchSuper(List<PortalComponentPosition> objectList){
		
		return super.saveBatch(objectList);
	}


	@Override
	public List<PortalComponentPosition> queryComponentPositionList(
			Map<String, Object> paramMap) {
		return this.getSqlSession().selectList("com.xinleju.cloud.oa.portal.entity.PortalComponentPosition.queryComponentPositionList", paramMap);
	}
    
}
