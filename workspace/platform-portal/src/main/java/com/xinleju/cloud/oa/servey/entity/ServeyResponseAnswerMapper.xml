<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.cloud.oa.servey.entity.ServeyResponseAnswer">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.cloud.oa.servey.entity.ServeyResponseAnswer">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.cloud.oa.servey.entity.ServeyResponseAnswer">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.cloud.oa.servey.entity.ServeyResponseAnswer">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	
	<delete id="deleteServeyResponseAnswerByServeyResponseId" parameterType="java.util.Map">
        delete from oa_servey_response_answer where 
        <choose>
                <when test="serveyResponseId != null and serveyResponseId !=''">
                     servey_response_id = #{serveyResponseId,jdbcType=VARCHAR}
                </when>
        </choose> 
    </delete>
    
    
     <!-- 根据问卷id和题目id在调查反馈表中查询有多少人做过反馈 -->
    <select id="getResponseAnswerByQuestionId" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        t.id,
        t.create_person_id as createPersonId,
        t.create_person_name as createPersonName,
        t.create_org_id as createOrgId,
        t.create_org_name as createOrgName,
        t.create_company_id as createCompanyId,
        t.create_company_name as createCompanyName,
        t.create_date as createDate,
        t.update_person_id as updatePersonId,
        t.update_person_name as updatePersonName,
        t.update_date as updateDate,
        t.delflag as delflag,
        t.tend_id as tendId,
        t.concurrency_version as concurrencyVersion,
        s.user_name as userName,
        s.servey_id as serveyId,
        s.user_id as userId,
        s.resonse_date as resonseDate,
        t.servey_response_id as serveyResponseId,
        t.sub_question_id as subQuestionId,
        t.option_id as optionId,
        t.text_response as textResponse,
        t.answer_date as answerDate
        FROM
        oa_servey_response s left join oa_servey_response_answer t on s.id = t.servey_response_id where 1=1
        
         <if test="serveyId != null and serveyId !='' ">
            AND s.servey_id = #{serveyId}
        </if>
        <if test="questionId != null and questionId !='' ">
            AND t.question_id = #{questionId}
        </if>
       
    </select>
    
    <select id="getCountResponseAnswerByQuestionId" resultType="java.util.Map" parameterType="java.util.Map">
       SELECT
			t.id as id
		FROM
			oa_servey_response s
		LEFT JOIN oa_servey_response_answer t ON s.id = t.servey_response_id
		LEFT JOIN oa_servey_question q ON q.id = t.question_id
		WHERE
			1 = 1
		<if test="serveyId != null and serveyId !='' ">
            AND s.servey_id = #{serveyId}
        </if>
        <if test="questionId != null and questionId !='' ">
            AND t.question_id = #{questionId}
        </if>
        <if test="optionId != null and optionId !='' ">
            and (t.option_id is not null and t.option_id != '')
        </if>
         <if test="textResponse != null and textResponse !='' ">
            and (t.text_response is not null and t.text_response != '')
        </if>
        group by s.user_id
    </select>
    
    <select id="getCountAnswerByQuestionId" resultType="java.util.Map" parameterType="java.util.Map">
        select 
        	count(s.id) as count,
        	a.description as description,
        	a.id as id
        from oa_survey_question_option a 
	    left join oa_servey_response_answer s on a.id=s.option_id 
		WHERE
			1 = 1
        <if test="questionId != null and questionId !='' ">
            AND a.question_id = #{questionId}
        </if>
        GROUP BY a.id
        order by a.sequence_num
    </select>
    
    <select id="getCountSubAnswerByQuestionId" resultType="java.util.Map" parameterType="java.util.Map">
      	select 
      		a.id as id,
      		b.id as optionId,
	      	b.description as description,
	      	a.question_content as questionContent,
	      	count(c.id) as count 
      	from oa_servey_sub_question a
		left JOIN oa_survey_question_option b on a.question_id=b.question_id 
		LEFT JOIN oa_servey_response_answer c on a.id=c.sub_question_id and b.id=c.option_id
		WHERE
			1 = 1
        <if test="questionId != null and questionId !='' ">
            AND a.question_id = #{questionId}
        </if>
        GROUP BY b.id,a.id
        order by a.question_code,b.sequence_num
    </select>
    
</mapper>