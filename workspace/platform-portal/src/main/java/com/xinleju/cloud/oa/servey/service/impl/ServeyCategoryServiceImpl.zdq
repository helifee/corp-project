package com.xinleju.cloud.oa.servey.service.impl;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xinleju.cloud.oa.servey.dao.ServeyCategoryDao;
import com.xinleju.cloud.oa.servey.dao.ServeyDao;
import com.xinleju.cloud.oa.servey.entity.Servey;
import com.xinleju.cloud.oa.servey.entity.ServeyCategory;
import com.xinleju.cloud.oa.servey.service.ServeyCategoryService;
import com.xinleju.platform.base.service.impl.BaseServiceImpl;
import com.xinleju.platform.base.utils.Page;

/**
 * @author admin
 */

@Service
public class ServeyCategoryServiceImpl extends BaseServiceImpl<String, ServeyCategory> implements ServeyCategoryService {


    @Autowired
    private ServeyCategoryDao serveyCategoryDao;
    
    @Autowired
    private ServeyDao serveyDao;

    @Override
    public Page getContentTypeByPage(Map map) throws Exception {
        // TODO Auto-generated method stub
        Page page = this.serveyCategoryDao.queryObjectsByPage(map);
        return page;
    }

	@SuppressWarnings("unchecked")
	@Override
	public Page getServeyCategoryByPage(Map map) throws Exception {
		Page page=new Page();
		map.put("parentIdIsNull", "1");
		List<Map<String,Object>> list = serveyCategoryDao.getServeyCategoryPage(map);
		map.remove("parentIdIsNull");
		map.put("parentIdIsNotNull", "1");
		List<Map<String,Object>> list1 = serveyCategoryDao.getServeyCategoryPage(map);
		map.remove("parentIdIsNotNull");
		List<Map<String,Object>> serveyCategoryList = serveyCategorySort(list,list1);
		Integer count = serveyCategoryDao.getServeyCategoryPageCount(map);
		page.setLimit((Integer) map.get("limit") );
		page.setList(serveyCategoryList);
		page.setStart((Integer) map.get("start"));
		page.setTotal(count);
		return page;
	}
	
	@Override
	public int deleteServeyCategoryByParentId(Map map) throws Exception {
		 List<String> list=Arrays.asList(map.get("id").toString().split(","));
		 List<String> idList = new ArrayList<String>();
		 idList.addAll(list);
		 Map<String,Object> queryMap = new HashMap<String, Object>();
		 List<ServeyCategory> serveyList = serveyCategoryDao.queryList(queryMap);
		 getServeyIdList(list, idList, serveyList);
		 boolean flag = true;
		 Map<String,Object> strmap = new HashMap<String, Object>();
		 for(int i = 0; i < idList.size();i++){
		   strmap.put("serveyCategoryId", idList.get(i));
		   List<Servey> serveys = serveyDao.queryList(strmap);
		   if(serveys.size() > 0){
			   flag = false;
			   break;
		   }
		 }
		 if(flag){
			 serveyCategoryDao.deleteAllObjectByIds(idList); 
			 return 1;
		 }else{
			 return 0;
		 }
		 
		
	}
	
	public void getServeyIdList(List<String> strList,List<String> idList,List<ServeyCategory> serveyList){
		List<String> parentIdList = new ArrayList<String>();
		if(strList != null && strList.size() > 0){
			if(serveyList != null && serveyList.size() > 0){
				for(int i = 0; i < serveyList.size(); i++){
					ServeyCategory serveyCategory = serveyList.get(i);
					for(int j = 0; j < strList.size();j++){
						if(serveyCategory.getParentId().equals(strList.get(j))){
							parentIdList.add(serveyCategory.getId());
							idList.add(serveyCategory.getId());
						}
					}
				}
			}
			getServeyIdList(parentIdList, idList, serveyList);
		}
	}
	
	@Override
	public List<Map<String, Object>> getServeyCategoryById(Map map) {
		return serveyCategoryDao.getServeyCategoryById(map);
	}
	
	public List<Map<String,Object>> serveyCategorySort(List<Map<String,Object>> list,List<Map<String,Object>> list1){
		List<Map<String,Object>> objList = new ArrayList<Map<String,Object>>();
		for(int i = 0; i < list.size(); i++){
			objList.add(list.get(i));
			getObj(list.get(i).get("id"), objList, list1);
		}
		return objList;
	}
	
	public void getObj(Object id,List<Map<String,Object>> objList,List<Map<String,Object>> list){
		for(int j = 0;j < list.size(); j++){
			if(id.equals(list.get(j).get("parentId"))){
				objList.add(list.get(j));
				getObj(list.get(j).get("id"), objList, list);
			}
		}
	}

}
