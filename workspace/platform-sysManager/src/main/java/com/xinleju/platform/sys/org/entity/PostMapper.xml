<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.sys.org.entity.Post">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.sys.org.entity.Post">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.sys.org.entity.Post">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.sys.org.entity.Post">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	
	<!-- 根据用户ID，查询用户的所有岗位 -->
	<select id="queryPostListByUserId" resultType="com.xinleju.platform.sys.org.dto.PostQueryDto" parameterType="java.lang.String">
		SELECT
			t.id AS id,
			t. CODE AS CODE,
			t.type AS type,
			t.sort AS sort,
			t.role_id AS roleId,
			t.ref_id AS refId,
			o.prefix_name AS prefixName,
			r.name AS NAME
		FROM
			pt_sys_org_post t,
			pt_sys_org_standard_role r,
			pt_sys_org_orgnazation o
		WHERE
			t.role_id = r.id
		AND
  			t.delflag = 0	
  		AND
			t.ref_id = o.id
		AND t.id IN (
			SELECT
				post_id
			FROM
				pt_sys_org_post_user
			WHERE
				user_id = #{_parameter,jdbcType=VARCHAR}
		);
	</select>
	
	<!-- 根据用户ID，查询用户的所有岗位和虚拟角色 -->
	<select id="queryPostRoleListByUserId" resultType="map" parameterType="map">
		SELECT
			pu.id id,
			p.id tragtId,
			p.ref_id refId,
			p.leader_id leaderId,
			CONCAT(ooo.prefix_name, '/', rr. NAME) leaderName,
			r.`status`,
			r.id roleId,
			r.`name` roleName,
			r.type roleTypeId,
			pu.is_default isDefault,
			oo.prefix_name prefixName,
			GROUP_CONCAT(s.ref_id) orgIds,
			GROUP_CONCAT(o.`name`) orgNames
		FROM
			pt_sys_org_post_user pu
		LEFT JOIN pt_sys_org_post p ON p.id = pu.post_id
		LEFT JOIN pt_sys_org_standard_role r ON p.role_id = r.id
		LEFT JOIN pt_sys_org_post pp ON p.leader_id = pp.id
		LEFT JOIN pt_sys_org_standard_role rr ON pp.role_id = rr.id
		LEFT JOIN pt_sys_org_orgnazation ooo ON ooo.id = pp.ref_id AND ooo.delflag = 0
		LEFT JOIN pt_sys_org_user_post_scope s ON s.post_user_id = pu.id
		LEFT JOIN pt_sys_org_orgnazation o ON o.id = s.ref_id
		LEFT JOIN pt_sys_org_orgnazation oo ON oo.id = p.ref_id
			WHERE
				pu.user_id = #{userId}
			AND 
				pu.delflag = 0 and p.delflag=0 
				and r.delflag=0  
				<if test="postQueryKey != null ">
					and r.`name` like CONCAT('%',#{postQueryKey},'%')
				</if>
			GROUP BY pu.id
			ORDER BY pu.is_default desc
	</select>
<!-- 	<select id="queryPostRoleListByUserId" resultType="map" parameterType="map">
		SELECT
			pu.id id,
			p.id tragtId,
			p.ref_id refId,
			p.leader_id leaderId,
			CONCAT(ooo.prefix_name, '/', rr. NAME) leaderName,
			r.`status`,
			r.id roleId,
			r.`name` roleName,
			r.type roleTypeId,
			pu.is_default isDefault,
			oo.prefix_name prefixName,
			GROUP_CONCAT(s.ref_id) orgIds,
			GROUP_CONCAT(o.`name`) orgNames
		FROM
			pt_sys_org_post_user pu
		LEFT JOIN pt_sys_org_post p ON p.id = pu.post_id
		LEFT JOIN pt_sys_org_standard_role r ON p.role_id = r.id
		LEFT JOIN pt_sys_org_post pp ON p.leader_id = pp.id
		LEFT JOIN pt_sys_org_standard_role rr ON pp.role_id = rr.id
		LEFT JOIN pt_sys_org_orgnazation ooo ON ooo.id = pp.ref_id AND ooo.delflag = 0
		LEFT JOIN pt_sys_org_user_post_scope s ON s.post_user_id = pu.id
		LEFT JOIN pt_sys_org_orgnazation o ON o.id = s.ref_id
		LEFT JOIN pt_sys_org_orgnazation oo ON oo.id = p.ref_id
			WHERE
				pu.user_id = #{userId}
			AND 
				pu.delflag = 0 and p.delflag=0 
				and r.delflag=0  
				<if test="postQueryKey != null ">
					and r.`name` like CONCAT('%',#{postQueryKey},'%')
				</if>
			GROUP BY pu.id
			UNION
			SELECT
				ru.id id,
				r.id tragtId,
				'' refId,'' leaderId,'' leaderName,r.`status`,
				r.id roleId,
				r.`name` roleName,
				r.type roleTypeId,
				0 isDefault,
				'' prefixName,
				'' orgIds,
				'' orgNames
			FROM
				pt_sys_org_role_user ru
			LEFT JOIN pt_sys_org_standard_role r on ru.role_id=r.id
			WHERE ru.delflag = 0 and r.delflag=0 and 
				ru.user_id = #{userId} 
				<if test="postQueryKey != null ">
					and r.`name` like CONCAT('%',#{postQueryKey},'%')
				</if>
	</select> -->
	
	<!-- 根据组织结构查询岗位列表 -->
	<select id="queryPostListByOrgId" resultType="com.xinleju.platform.sys.org.dto.PostQueryDto">
		
			SELECT
						post.id,
						post.code,
						role.name,
						post.type,
						post.role_id AS roleId,
						post.ref_id AS refId,
						org.prefix_name AS prefixName,
						role.prefix_name as rolePrefixName,
						post.leader_id AS leaderId,
						CONCAT(oo.prefix_name,'/',rr.name) AS leaderName,
						oo.prefix_name leaderPrefixName,
						post.sort
					FROM pt_sys_org_post post
				LEFT JOIN pt_sys_org_standard_role role ON post.role_id = role.id
				LEFT JOIN pt_sys_org_orgnazation org ON post.ref_id = org.id
				<if test="ifDownPost !=null and ifDownPost == 1">
					LEFT JOIN pt_sys_org_orgnazation f on org.prefix_id like CONCAT(f.prefix_id,'/%') or org.prefix_id = f.prefix_id
				</if>
				LEFT JOIN pt_sys_org_post pp  ON  pp.id = post.leader_id 
				LEFT JOIN pt_sys_org_standard_role rr ON pp.role_id = rr.id and rr.delflag=0
				LEFT JOIN pt_sys_org_orgnazation oo on oo.id=pp.ref_id and oo.delflag=0
					WHERE
			  			post.delflag = 0	
					<if test="ifDownPost !=null and ifDownPost == 0">
						AND org.id=#{orgId}
					</if>
					<if test="ifDownPost !=null and ifDownPost == 1">
						AND f.id=#{orgId}
					</if>
					<if test="orgPostQueryKey !=null and orgPostQueryKey != ''">
						and role.name like concat('%',#{orgPostQueryKey},'%')
					</if>
				ORDER BY  post.create_date desc
	</select>	
	<!-- 根据角色查询岗位列表 -->
	<select id="queryPostListByRoleId" resultType="com.xinleju.platform.sys.org.dto.PostQueryDto">
		SELECT
			post.id,
			post.code,
			role.name,
			post.type,
			post.role_id AS roleId,
			post.ref_id AS refId,
			org.name AS refName,
			org.prefix_name AS prefixName,
		    post.leader_id AS leaderId,
			rr.name AS leaderName,
			post.sort
		FROM
			pt_sys_org_post post
		LEFT JOIN 
			pt_sys_org_standard_role role ON post.role_id = role.id
		LEFT JOIN 
			pt_sys_org_orgnazation org ON post.ref_id = org.id
		LEFT JOIN 
			pt_sys_org_post pp  ON  pp.id = post.leader_id 
		LEFT JOIN
			pt_sys_org_standard_role rr ON pp.role_id = rr.id
		WHERE
  			post.delflag = 0
		AND
		    (role.id = #{_parameter,jdbcType=VARCHAR} 
		    	or role.catalog_id in (
						SELECT t.id
					 from  pt_sys_org_role_catalog t,pt_sys_org_role_catalog top 
					where  top.id = #{_parameter,jdbcType=VARCHAR}
					and t.delflag=0
					and t.prefix_id like concat(top.prefix_id,'%') ))
		ORDER BY role.prefix_sort, post.create_date
	</select>	
	
	<!-- 查询所有岗位-->
	<select id="queryAllPostList" resultType="com.xinleju.platform.sys.org.dto.OrgnazationNodeDto" parameterType="map">
		SELECT
			post.id as id,
			role.name as name,
			'post' as type,
			post.ref_id as parentId,
			org.prefix_id AS prefixId ,
			org.prefix_name AS prefixName,
			post.sort as sort
		FROM
			pt_sys_org_post post,
			pt_sys_org_standard_role role,
			pt_sys_org_orgnazation org
		WHERE
			post.role_id = role.id
		AND
			post.ref_id = org.id
		<if test="postStatus !=null">
			and post.`status` =#{postStatus}
		</if>
		<if test="postDelFlag !=null">
			and post.delflag=#{postDelFlag}
		</if>
		ORDER BY
		    post.sort;
	</select>
	
	<!-- 根据IDs查询结果集-->
	<select id="queryPostsByIds" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT
			post.id as id,
			role.name as name,
			'post' as type,
			CONCAT(o.prefix_name,'/',role.name) prefixName, 
			if(role.`status`=0 || o.`status` =0 ,0,1) `status`
		FROM
			pt_sys_org_post post,
			pt_sys_org_standard_role role,pt_sys_org_orgnazation o 
		WHERE
			post.role_id = role.id and o.id=post.ref_id
		    <if test="ids != null ">
				and post.id IN
				<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
		            #{item} 
		        </foreach>
			</if>
	</select>
	
	<!-- 根据用户查询用户所有岗位（认证信息）-->
	<select id="queryAuthPostListByUserId" resultType="com.xinleju.platform.sys.org.dto.PostDto" parameterType="map">
		SELECT
			p.id AS id,
			p.concurrency_version AS concurrencyVersion,
			p.CODE AS CODE,
			p.type AS type,
			p.ref_id AS refId,
			p.role_id AS roleId,
			p.sort AS sort,
			p.incon AS incon,
			p.STATUS AS STATUS,
			p.leader_id AS leaderId,
			p.tend_id AS tendId,
			p.create_date AS createDate,
			p.update_date AS updateDate,
			p.create_person_id AS createPersonId,
			p.create_person_name AS createPersonName,
			p.update_person_id AS updatePersonId,
			p.update_person_name AS updatePersonName,
			p.create_org_id AS createOrgId,
			p.create_org_name AS createOrgName,
			p.create_company_id AS createCompanyId,
			p.create_company_name AS createCompanyName,
			oo.prefix_id orgPrefixId,
			oo.prefix_name orgPrefixName,
			pu.is_default isDefault,
			r.name as name,
			p.delflag AS delflag
		FROM
			PT_SYS_ORG_POST p ,pt_sys_org_standard_role r ,pt_sys_org_post_user pu , pt_sys_org_orgnazation oo 
		where r.id = p.role_id  and oo.id = p.ref_id and p.delflag = 0  and r.delflag = 0 and r.`status` = 1
		and p.id = pu.post_id and pu.user_id = #{userId} and pu.delflag = 0
	</select>
	
	<!-- 查询用户主岗组织 -->
	<select id="getDefaultPostOrg" resultType="String" parameterType="map">
		SELECT p.ref_id from pt_sys_org_post p  
		LEFT JOIN pt_sys_org_post_user pu on p.id=pu.post_id
		WHERE
			pu.user_id =#{userId}
		AND pu.is_default = 1 and p.delflag=0 and pu.delflag=0
	</select>
	
	<!-- 获取组织下岗位 -->
	<select id="selectPostDtoListByOrgId" parameterType="map" resultType="com.xinleju.platform.sys.org.dto.PostDto">
		SELECT * from view_post_dto t WHERE 1=1
		<if test="orgId !=null ">
			and t.refId = #{orgId}
		</if>
		<if test="orgIds !=null ">
			and t.refId in
			<foreach collection="orgIds" item="orgId" open="(" close=")" separator=",">
				#{orgId}
			</foreach>
		</if>
	</select>
	<!-- 获取用户下岗位 -->
	<select id="selectPostDtoListByUserId" parameterType="map" resultType="com.xinleju.platform.sys.org.dto.PostDto">
		SELECT t.*,IFNULL(pu.is_default,0) isDefault from view_post_dto t  
			LEFT JOIN pt_sys_org_post_user pu on t.id=pu.post_id
			WHERE pu.delflag=0 
		<if test="userId !=null ">
			and pu.user_id = #{userId}
		</if>
	</select>
	
	<!-- 批量设置领导岗位 -->
	<update id="updateBatchLeaderId" parameterType="map" >
		<foreach collection="list" item="post" separator=";">
			UPDATE pt_sys_org_post set leader_id=#{post.leaderId} WHERE id=#{post.id}
		</foreach>
	</update>
	
	<!-- 查询组织及其下级是否存在岗位 -->
	<select id="selectSonRefCount" parameterType="map" resultType="int">
		SELECT count(*) FROM
			pt_sys_org_post p
		LEFT JOIN pt_sys_org_orgnazation s on s.id=p.ref_id
		LEFT JOIN pt_sys_org_orgnazation f on s.prefix_id like CONCAT('',f.prefix_id,'%')
		WHERE p.delflag=#{delflag} and  f.id =#{orgId}
	</select>
	
</mapper>