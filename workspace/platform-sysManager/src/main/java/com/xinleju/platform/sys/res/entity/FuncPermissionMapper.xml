<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.sys.res.entity.FuncPermission">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.sys.res.entity.FuncPermission">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.sys.res.entity.FuncPermission">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.sys.res.entity.FuncPermission">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	<!-- 根据系统ids查询按钮结果集（认证时不传递系统Id）-->
	<select id="queryAuthorizationListByAppIds" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select * from  (
		select DISTINCT c.id,'' as parentId,'' AS pId ,c.name,c.icon,c.code,c.openmode,c.url,c.status,'APPSystem' as type,c.prefix_id,c.prefix_sort,c.prefix_name,c.delflag ,c.id as app_id ,''  as reousce_id,'' resouce_delflag ,p.delflag p_delflag,p.isextsys isextsys from pt_sys_res_app c ,pt_sys_res_app p  where c.prefix_sort like concat(p.prefix_sort,'%')
		union 
		select DISTINCT c.id,c.parent_id AS parentId,c.app_id AS pId ,c.name,c.icon,c.code,c.openmode,c.url,c.status,'RESOURCE' as type ,c.prefix_id,c.prefix_sort,c.prefix_name,c.delflag,c.app_id as app_id ,c.id as reousce_id,c.delflag resouce_delflag ,p.delflag p_delflag,'' isextsys from pt_sys_res_resource c ,pt_sys_res_app p  where c.prefix_sort like concat(p.prefix_sort,'%')
		) dd where dd.resouce_delflag!=1 and dd.p_delflag!=1 and dd.delflag!=1 and dd.`status` = 1
		    <if test="ids != null ">
				and dd.app_id IN
				<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
		            #{item} 
		        </foreach>
			</if>
		ORDER BY dd.prefix_sort 
	</select>
	
	<!-- 根据系统ids查询按钮结果集（认证时不传递系统Id）-->
	<select id="queryAuthorizationListByAppIdsPermission" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select * from  (
		select DISTINCT c.id,'' as parentId,'' AS pId ,c.name,c.icon,c.code,c.openmode,c.url,c.status,'APPSystem' as type,c.prefix_id,c.prefix_sort,c.prefix_name,c.delflag ,c.id as app_id ,''  as reousce_id,'' resouce_delflag ,p.delflag p_delflag from pt_sys_res_app c ,pt_sys_res_app p  where c.prefix_sort like concat(p.prefix_sort,'%')
		union 
		select DISTINCT c.id,c.parent_id AS parentId,c.app_id AS pId ,c.name,c.icon,c.code,c.openmode,c.url,c.status,'RESOURCE' as type ,c.prefix_id,c.prefix_sort,c.prefix_name,c.delflag,c.app_id as app_id ,c.id as reousce_id,c.delflag resouce_delflag ,p.delflag p_delflag from pt_sys_res_resource c ,pt_sys_res_app p  where c.prefix_sort like concat(p.prefix_sort,'%')
		union 
		select DISTINCT c.id,c.parent_id as parentId,c.resource_id AS pId ,c.name,c.icon,c.code,'' openmode,c.url,'1' as status,'OPERATION' as type ,c.prefix_id,c.prefix_sort,c.prefix_name,c.delflag,c.app_id as app_id ,o.id as reousce_id,o.delflag resouce_delflag,p.delflag p_delflag from pt_sys_res_resource o ,pt_sys_res_app p,pt_sys_res_operation c  
		where o.app_id = p.id and c.resource_id = o.id and o.`status` = 1 and c.prefix_sort like concat(o.prefix_sort,'%')
		and c.prefix_sort like concat(p.prefix_sort,'%') 
		and exists (select 1 from pt_sys_res_resource r where  c.prefix_sort like concat(r.prefix_sort,'%') and o.prefix_sort =r.prefix_sort order by r.prefix_sort desc limit 1 )
		) dd where dd.resouce_delflag!=1 and dd.p_delflag!=1 and dd.delflag!=1 and dd.`status` = 1
		    <if test="ids != null ">
				and dd.app_id IN
				<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
		            #{item} 
		        </foreach>
			</if>
		ORDER BY dd.prefix_sort 
	</select>
	
	<!-- 
	
	<select id="queryAuthorizationListByAppIds" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select * from  (
		select DISTINCT c.id,'' as parentId,'' AS pId ,c.name,c.icon,c.code,c.openmode,c.url,c.status,'APPSystem' as type,c.prefix_id,c.prefix_sort,c.prefix_name,c.delflag ,c.id as app_id ,''  as reousce_id,'' resouce_delflag ,p.delflag p_delflag from pt_sys_res_app c ,pt_sys_res_app p  where c.prefix_sort like concat(p.prefix_sort,'%')
		union 
		select DISTINCT c.id,c.parent_id AS parentId,c.app_id AS pId ,c.name,c.icon,c.code,c.openmode,c.url,c.status,'RESOURCE' as type ,c.prefix_id,c.prefix_sort,c.prefix_name,c.delflag,c.app_id as app_id ,c.id as reousce_id,c.delflag resouce_delflag ,p.delflag p_delflag from pt_sys_res_resource c ,pt_sys_res_app p  where c.prefix_sort like concat(p.prefix_sort,'%')
		union 
		select DISTINCT c.id,c.parent_id as parentId,c.resource_id AS pId ,c.name,c.icon,c.code,'' openmode,c.url,'1' as status,'OPERATION' as type ,c.prefix_id,c.prefix_sort,c.prefix_name,c.delflag,c.app_id as app_id ,o.id as reousce_id,o.delflag resouce_delflag,p.delflag p_delflag from pt_sys_res_resource o ,pt_sys_res_app p,pt_sys_res_operation c  where c.prefix_sort like concat(o.prefix_sort,'%')
		and c.prefix_sort like concat(p.prefix_sort,'%') 
		and o.prefix_sort =(select r.prefix_sort from pt_sys_res_resource r where  c.prefix_sort like concat(r.prefix_sort,'%') order by r.prefix_sort desc limit 1 )
		) dd where dd.resouce_delflag!=1 and dd.p_delflag!=1 and dd.delflag!=1 and dd.`status` = 1
		    <if test="ids != null ">
				and dd.app_id IN
				<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
		            #{item} 
		        </foreach>
			</if>
		ORDER BY dd.prefix_sort 
	</select>
	 -->
	
	<!-- 根据系统和角色查询已授权数据（认证时不传递系统ID）-->
	<select id="queryAuthDataByappIdsAndroleIds" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select func.*,o.prefix_id,o.prefix_sort 
		from pt_sys_res_func_permission func
		LEFT JOIN pt_sys_res_operation o 
		ON func.operation_id = o.id
		where 1=1
		and o.delflag !=1
		<if test="roleIds != null ">
			and func.role_id IN
			<foreach item="item" index="index" collection="roleIds" open="(" separator="," close=")">  
	            #{item} 
	        </foreach>
		</if>
		<if test="appIds != null ">
			and o.app_id IN
			<foreach item="item" index="index" collection="appIds" open="(" separator="," close=")">  
	            #{item} 
	        </foreach>
		</if>
	</select>
	
		<!-- 查询角色树(标准岗位)（动作点-角色）-->
	<select id="queryAuthorizationListAllRoles" resultType="java.util.HashMap">
		select * from (
			select id,name,sort,prefix_id,'cata' as type ,prefix_name,prefix_sort,delflag,status,parent_id as parentId,t.type as spostandroletype  from pt_sys_org_role_catalog t where t.type = 1
			UNION 
			select id,name,sort,prefix_id,'role' as tyope,prefix_name,prefix_sort,delflag,status,catalog_id as parentId,t.type as spostandroletype  from pt_sys_org_standard_role t where t.type = 1
		) tt where tt.delflag = 0 and status=1 ORDER BY tt.prefix_sort
	</select>
	
	
		<!-- 查询角色树（通用角色）（动作点-角色）-->
	<select id="queryAuthorizationListAllCurrencyRoles" resultType="java.util.HashMap">
		select * from (
			select id,name,sort,prefix_id,'cata' as type ,prefix_name,prefix_sort,delflag,status,parent_id as parentId,t.type as spostandroletype  from pt_sys_org_role_catalog t where t.type = 0
			UNION 
			select id,name,sort,prefix_id,'role' as tyope,prefix_name,prefix_sort,delflag,status,catalog_id as parentId,t.type as spostandroletype  from pt_sys_org_standard_role t where t.type = 0
		) tt where tt.delflag = 0 and status=1 ORDER BY tt.prefix_sort
	</select>
		<!-- 查询对象树（岗位）（动作点-角色）-->
	<select id="queryAuthorizationListAllPost" resultType="java.util.HashMap">
		select id,name,sort,prefix_id,type,prefix_name,delflag,status,parentId  from (
			select id,name,sort,prefix_id,type,prefix_name,delflag,status,parent_id  as parentId
			from pt_sys_org_orgnazation t where `status` = 1 and delflag = 0
		UNION 
			select t.id,tt.name,tt.sort, CONCAT(ttt.prefix_id,"/",t.id) prefix_id,'post' as type,CONCAT(ttt.prefix_name,"/",tt.name) prefix_name,'' delflag,'' status,t.ref_id as parentId 
			from pt_sys_org_post t ,pt_sys_org_standard_role tt,pt_sys_org_orgnazation ttt  where t.role_id = tt.id and t.ref_id = ttt.id and ttt.`status` = 1 and ttt.delflag = 0
		) a where ifnull(a.prefix_id,'') !='' ORDER BY a.prefix_id 
	</select>
		<!-- 查询对象树（人员）（动作点-角色）-->
	<select id="queryAuthorizationListAllUser" resultType="java.util.HashMap">
		select id,name,sort,prefix_id,type,prefix_name,delflag,status,parentId  from (
			select id,name,sort,prefix_id,type,prefix_name,delflag,status,parent_id  as parentId
			from pt_sys_org_orgnazation t where `status` = 1 and delflag = 0
		UNION 
			select t.id,t.real_name,t.sort, CONCAT(ttt.prefix_id,"/",t.id) prefix_id,'user' as type,CONCAT(ttt.prefix_name,"/",t.real_name) prefix_name,t.delflag delflag,t.`status` status,t.belong_org_id as parentId 
			from pt_sys_org_user t ,pt_sys_org_orgnazation ttt  where t.delflag = 0 and t.`status` = 1 and t.belong_org_id = ttt.id and ttt.`status` = 1 and ttt.delflag = 0
		) a where ifnull(a.prefix_id,'') !='' ORDER BY a.prefix_id 
	</select>
	
	<!-- 根据系统和角色查询已授权数据-->
	<select id="queryAuthDataByOperationIds" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select func.*,o.prefix_id,o.prefix_sort 
		from pt_sys_res_func_permission func
		LEFT JOIN pt_sys_org_standard_role o 
		ON func.role_id = o.id
		where 1=1 and ifnull(o.prefix_id,'') !=''
		<if test="operationIds != null ">
			and func.operation_id IN
			<foreach item="item" index="index" collection="operationIds" open="(" separator="," close=")">  
	            #{item} 
	        </foreach>
		</if>
	</select>
	
	<!-- 查询角色授权控制点编码 -->
	<select id="selectUserRoleAuthDataCode" parameterType="map" resultType="String">
		SELECT GROUP_CONCAT(po.`code`) from pt_sys_res_data_permission p 
			LEFT JOIN pt_sys_res_data_point po on po.id=data_point_id
			LEFT JOIN pt_sys_res_data_item i on i.id=po.item_id
		WHERE i.item_code=#{itemCode}  and po.delflag=0 and i.delflag=0
		<if test="appId !=null">
			and i.app_id=#{appId}
		</if>
		<if test="roleIds !=null">
			and p.role_id in
			<foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
				#{roleId}
			</foreach>
		</if>
	</select>
	
	<!-- 查询授权值 -->
	<select id="selectAuthValIds" parameterType="map" resultType="String">
		SELECT v.val from pt_sys_res_data_permission p 
		 LEFT JOIN pt_sys_res_data_point po on po.id=p.data_point_id
		 LEFT JOIN pt_sys_res_data_item i on i.id=po.item_id
		 LEFT JOIN  pt_sys_res_data_point_permission_val v on p.id=v.data_permission_id
		 WHERE i.item_code=#{itemCode} and i.app_id=#{appId} and po.type=2 and po.delflag=0 and i.delflag=0 and p.role_id in 
		 <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
		 	#{roleId}
		 </foreach> 
	</select>
	
	<!-- 根据用户登录账号和系统code和菜单code获取有权限的按钮-->
	<select id="getFuncButtonAuthByUserLoginNameAndAppCodeAndMenuCode" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select DISTINCT t.id id,t.`code` code ,t.`name` name,t.url url  ,tt.`name` appName,tt.`code` appCode,ttt.`name` menuName,ttt.`code` menuCode
		from pt_sys_res_operation t 
		LEFT JOIN pt_sys_res_func_permission f on t.id = f.operation_id 
		LEFT JOIN pt_sys_res_app tt on t.app_id = tt.id 
		LEFT JOIN pt_sys_res_resource ttt on t.resource_id = ttt.id 
		where 
		t.delflag = '0'
		and tt.`status` = '1' and tt.delflag = '0'
		and ttt.`status` = '1' and ttt.delflag ='0'
		<if test="ids != null ">
			and f.role_id IN
			<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
	            #{item} 
	        </foreach>
		</if>
		<if test="appCode !=null">
			and tt.`code` = #{appCode}
		</if>
		<if test="menuCode !=null">
			and ttt.`code` = #{menuCode}
		</if>
	</select>
	
	<!-- 获取有权限的菜单(根据用户账号和系统code)-->
	<select id="getFuncMenuAuthByUserLoginNameAndAppCode" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select DISTINCT t.id id ,t.code code ,t.name name ,t.url url ,a.code appCode ,a.`name` appName
		from pt_sys_res_resource t 
		LEFT JOIN pt_sys_res_operation o ON t.id = o.resource_id
		LEFT JOIN  pt_sys_res_func_permission f on o.id = f.operation_id 
		LEFT JOIN pt_sys_res_app a on t.app_id = a.id
		where 
		o.delflag = '0'
		and t.`status` = '1' and t.delflag = '0'
		and a.`status` = '1' and a.delflag ='0'
		<if test="ids != null ">
			and f.role_id IN
			<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
	            #{item} 
	        </foreach>
		</if>
		<if test="appCode !=null">
			and a.`code` = #{appCode}
		</if>
	</select>
	<!-- 查询用户四种授权id：用户，标准岗位，岗位，通用角色-->
	<select id="selectAuthTypeId" parameterType="map" resultType="String">
		SELECT u.id from pt_sys_org_user u WHERE u.id=#{userId}
		UNION
		SELECT t.id from pt_sys_org_standard_role t 
		LEFT JOIN pt_sys_org_post p on p.role_id=t.id
		LEFT JOIN pt_sys_org_post_user pu on pu.post_id=p.id
		WHERE pu.user_id=#{userId} and t.delflag=0 and t.`status`=1
		UNION 
		SELECT p.id from pt_sys_org_post p 
		LEFT JOIN pt_sys_org_post_user pu on pu.post_id=p.id
		WHERE pu.user_id=#{userId} and p.delflag=0
		UNION
		SELECT r.id from pt_sys_org_standard_role r
		LEFT JOIN pt_sys_org_role_user ru on ru.role_id=r.id 
		WHERE ru.user_id=#{userId} and r.delflag=0 and r.`status`=1 
		UNION
		SELECT r.id from pt_sys_org_standard_role r
		LEFT JOIN pt_sys_org_role_user ru on ru.role_id=r.id
		LEFT JOIN pt_sys_org_post p on p.id=ru.post_id AND IFNULL(ru.user_id,'')=''
		LEFT JOIN pt_sys_org_post_user pu on pu.post_id=p.id
		WHERE pu.user_id=#{userId} and p.delflag=0
	</select>
</mapper>