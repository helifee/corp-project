<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.sys.org.entity.User">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.sys.org.entity.User">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.sys.org.entity.User">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.sys.org.entity.User">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	
	<!-- 根据组织机构ID，查询下面所有用户 -->
	<select id="queryUserListByOrgId" resultType="com.xinleju.platform.sys.org.dto.UserDto" parameterType="java.lang.String">
		SELECT
			id AS id,
			concurrency_version AS version,
			job_number AS jobNumber,
			real_name AS realName,
			is_male AS isMale,
			login_name AS loginName,
			PASSWORD AS PASSWORD,
			contact_phone AS contactPhone,
			work_phone AS workPhone,
			type AS type,
			email AS email,
			birthday AS birthday,
			age AS age,
			entry_date AS entryDate,
			leave_date AS leaveDate,
			mobile AS mobile,
			remark AS remark,
			STATUS AS STATUS,
			create_date AS createDate,
			update_date AS updateDate,
			create_person_id AS createPersonId,
			create_person_name AS createPersonName,
			update_person_id AS updatePersonId,
			update_person_name AS updatePersonName,
			create_org_id AS createOrgId,
			create_org_name AS createOrgName,
			create_company_id AS createCompanyId,
			create_company_name AS createCompanyName,
			delflag AS delflag,
			belong_org_id AS belongOrgId,
			worktime AS workTime,
			disabletime AS disableTime,
			wechat AS weChat,
			sort AS sort,
			disabled_id AS disabledId
		FROM
			pt_sys_org_user
		WHERE
			id IN (
				SELECT
					user_id
				FROM
					pt_sys_org_post_user
				WHERE
					post_id IN (
						SELECT
							id
						FROM
							pt_sys_org_post
						WHERE
							ref_id = #{_parameter,jdbcType=VARCHAR}
					)
			);
	</select>
	
		<!-- 根据组织机构ID，直接进行查询查询下面所有用户 -->
	<select id="queryUserListByOrgIdDirect" resultType="com.xinleju.platform.sys.org.dto.UserDto" parameterType="map">
		SELECT
			u.id AS id,
			u.concurrency_version AS version,
			u.job_number AS jobNumber,
			u.real_name AS realName,
			u.is_male AS isMale,
			u.login_name AS loginName,
			u.PASSWORD AS PASSWORD,
			u.contact_phone AS contactPhone,
			u.work_phone AS workPhone,
			u.type AS type,
			u.email AS email,
			u.birthday AS birthday,
			u.age AS age,
			u.entry_date AS entryDate,
			u.leave_date AS leaveDate,
			u.mobile AS mobile,
			u.remark AS remark,
			u.STATUS AS STATUS,
			u.create_date AS createDate,
			u.update_date AS updateDate,
			u.create_person_id AS createPersonId,
			u.create_person_name AS createPersonName,
			u.update_person_id AS updatePersonId,
			u.update_person_name AS updatePersonName,
			u.create_org_id AS createOrgId,
			u.create_org_name AS createOrgName,
			u.create_company_id AS createCompanyId,
			u.create_company_name AS createCompanyName,
			u.delflag AS delflag,
			u.belong_org_id AS belongOrgId,
			o.name as belongOrgName,
			o.prefix_name AS prefixName,
			u.worktime AS workTime,
			u.disabletime AS disableTime,
			u.wechat AS weChat,
			u.sort AS sort,
			u.disabled_id AS disabledId
		FROM
			pt_sys_org_user u,pt_sys_org_orgnazation o
		WHERE
			u.belong_org_id = o.id AND
			u.delflag =0 
			<if test="orgId !=null and orgId !='' ">
				and u.belong_org_id = #{orgId}
			</if>
			<if test="userQueryKey !=null">
				and (u.real_name like CONCAT('%',#{userQueryKey},'%') 
						or u.login_name like CONCAT('%',#{userQueryKey},'%'))
			</if>
			<if test="userStatus !=null">
				and u.`status` =#{userStatus}
			</if>
			<if test="noPost !=null">
				and not EXISTS (
					select 1 from (
						SELECT DISTINCT
							pu.user_id userId
						FROM
							pt_sys_org_post_user pu,
							pt_sys_org_standard_role r,
							pt_sys_org_post p
						WHERE
							pu.post_id = p.id
						AND p.role_id = r.id
						AND p.delflag = 0
						AND r.delflag = 0
						AND r.`status` = 1
						union
						SELECT DISTINCT
							ru.user_id userId
						FROM
							pt_sys_org_role_user ru,
							pt_sys_org_standard_role r
						WHERE
							ru.role_id=r.id
						AND r.delflag = 0
						AND r.`status` = 1
					) t where t.userId= u.id
				)
			</if>
		order by 
			case when o.sort is null then 1 else 0 end, o.sort,
			case when u.sort is null then 1 else 0 end, u.sort;
	</select>
	
	<!-- 根据岗位查询用户列表 -->
	<select id="queryUserListByPostId" resultType="com.xinleju.platform.sys.org.dto.UserDto">
		SELECT
			u.id AS id,
			u.concurrency_version AS version,
			u.job_number AS jobNumber,
			u.real_name AS realName,
			u.is_male AS isMale,
			u.login_name AS loginName,
			u.PASSWORD AS PASSWORD,
			u.contact_phone AS contactPhone,
			u.work_phone AS workPhone,
			u.type AS type,
			u.email AS email,
			u.birthday AS birthday,
			u.age AS age,
			u.entry_date AS entryDate,
			u.leave_date AS leaveDate,
			u.mobile AS mobile,
			u.remark AS remark,
			u.STATUS AS STATUS,
			u.create_date AS createDate,
			u.update_date AS updateDate,
			u.create_person_id AS createPersonId,
			u.create_person_name AS createPersonName,
			u.update_person_id AS updatePersonId,
			u.update_person_name AS updatePersonName,
			u.create_org_id AS createOrgId,
			u.create_org_name AS createOrgName,
			u.create_company_id AS createCompanyId,
			u.create_company_name AS createCompanyName,
			u.delflag AS delflag,
			u.belong_org_id AS belongOrgId,
			o.name as belongOrgName,
			o.prefix_name AS prefixName,
			u.worktime AS workTime,
			u.disabletime AS disableTime,
			u.wechat AS weChat,
			u.sort AS sort,
			u.disabled_id AS disabledId
		
		FROM
			pt_sys_org_user u,pt_sys_org_orgnazation o
		WHERE
			u.belong_org_id = o.id and u.delflag=0
	   AND
			u.id IN (
				SELECT
					user_id
				FROM
					pt_sys_org_post_user
				WHERE
					delflag = 0 and 
					post_id = #{_parameter,jdbcType=VARCHAR} 
			)
		ORDER BY
			u.belong_org_id,
			u.sort;
	</select>
		
	<!-- 根据角色查询用户列表 -->
	<select id="queryUserListByRoleId" resultType="com.xinleju.platform.sys.org.dto.UserDto">
		SELECT
			u.id AS id,
			u.concurrency_version AS version,
			u.job_number AS jobNumber,
			u.real_name AS realName,
			u.is_male AS isMale,
			u.login_name AS loginName,
			u.PASSWORD AS PASSWORD,
			u.contact_phone AS contactPhone,
			u.work_phone AS workPhone,
			u.type AS type,
			u.email AS email,
			u.birthday AS birthday,
			u.age AS age,
			u.entry_date AS entryDate,
			u.leave_date AS leaveDate,
			u.mobile AS mobile,
			u.remark AS remark,
			u.STATUS AS STATUS,
			u.create_date AS createDate,
			u.update_date AS updateDate,
			u.create_person_id AS createPersonId,
			u.create_person_name AS createPersonName,
			u.update_person_id AS updatePersonId,
			u.update_person_name AS updatePersonName,
			u.create_org_id AS createOrgId,
			u.create_org_name AS createOrgName,
			u.create_company_id AS createCompanyId,
			u.create_company_name AS createCompanyName,
			u.delflag AS delflag,
			u.belong_org_id AS belongOrgId,
			o.name as belongOrgName,
			o.prefix_name AS prefixName,
			u.worktime AS workTime,
			u.disabletime AS disableTime,
			u.wechat AS weChat,
			u.sort AS sort,
			u.disabled_id AS disabledId
		FROM
			pt_sys_org_user u,pt_sys_org_orgnazation o
		WHERE
			u.belong_org_id = o.id
	    AND
			u.id IN (
				SELECT
					user_id
				FROM
					pt_sys_org_post_user
				WHERE
					post_id IN (
								SELECT
									post.id
								FROM
									pt_sys_org_post post
								WHERE
									post.role_id  = #{_parameter,jdbcType=VARCHAR}
							  )
			)
		ORDER BY
			u.belong_org_id,
			u.sort;
	</select>	
	
	<!-- 根据虚拟角色查询用户列表 -->
	<select id="queryRoleUserByRoleId" resultType="com.xinleju.platform.sys.org.dto.UserDto" parameterType="map">
		SELECT u.id AS id,
			u.concurrency_version AS version,
			u.job_number AS jobNumber,
			u.real_name AS realName,
			u.is_male AS isMale,
			u.login_name AS loginName,
			u.PASSWORD AS PASSWORD,
			u.contact_phone AS contactPhone,
			u.work_phone AS workPhone,
			u.type AS type,
			u.email AS email,
			u.birthday AS birthday,
			u.age AS age,
			u.entry_date AS entryDate,
			u.leave_date AS leaveDate,
			u.mobile AS mobile,
			u.remark AS remark,
			u.STATUS AS STATUS,
			u.create_date AS createDate,
			u.update_date AS updateDate,
			u.create_person_id AS createPersonId,
			u.create_person_name AS createPersonName,
			u.update_person_id AS updatePersonId,
			u.update_person_name AS updatePersonName,
			u.create_org_id AS createOrgId,
			u.create_org_name AS createOrgName,
			u.create_company_id AS createCompanyId,
			u.create_company_name AS createCompanyName,
			u.delflag AS delflag,
			u.belong_org_id AS belongOrgId,
			o.name as belongOrgName,
			o.prefix_name AS prefixName,
			u.worktime AS workTime,
			u.disabletime AS disableTime,
			u.wechat AS weChat,
			u.sort AS sort,
			u.disabled_id AS disabledId 
		from pt_sys_org_role_user ru
		LEFT JOIN pt_sys_org_user u on ru.user_id=u.id
		LEFT JOIN pt_sys_org_orgnazation o on o.id=u.belong_org_id
		where ru.role_id =#{roleId} and u.delflag=0
	</select>	
	
<!-- 	<select id="queryAllUserList" resultType="com.xinleju.platform.sys.org.dto.OrgnazationNodeDto" parameterType="map">
		SELECT
			u.id AS id,
			u.real_name AS NAME,
			'user' AS type,
			u.belong_org_id AS parentId,
			org.prefix_id AS prefixId ,
			org.prefix_name AS prefixName,
			u.sort AS sort,
			u.login_name AS loginName
		FROM
			pt_sys_org_user u,
			pt_sys_org_orgnazation org
		WHERE
			u.belong_org_id = org.id
			<if test="userStatus !=null">
				and u.`status` =#{userStatus}
			</if>
			<if test="userDelFlag !=null">
				and u.delflag=#{userDelFlag}
			</if> 
		ORDER BY
			u.belong_org_id,
			u.sort;
	</select> -->
	<!-- 查询所有用户，返回组织机构节点DTO，com.xinleju.platform.sys.org.dto.OrgnazationNodeDto-->
	<select id="queryAllUserList" resultType="com.xinleju.platform.sys.org.dto.OrgnazationNodeDto" parameterType="map">
		SELECT DISTINCT
			u.id AS id,
			u.real_name AS NAME,
			'user' AS type,
			u.belong_org_id AS parentId,
			org.prefix_id AS prefixId ,
			org.prefix_name AS prefixName,
			org.`name` orgName,
			r.`name` mainPostName,
			p.id mainPostId,
			u.sort AS sort,
			u.login_name AS loginName
		FROM
			pt_sys_org_user u
			LEFT JOIN pt_sys_org_orgnazation org on u.belong_org_id = org.id 
			LEFT JOIN pt_sys_org_post_user pu on  pu.user_id=u.id and pu.is_default=1
			LEFT JOIN pt_sys_org_post p on pu.post_id=p.id
			LEFT JOIN pt_sys_org_standard_role r on r.id =p.role_id
			WHERE org.delflag =0 
			<if test="userStatus !=null">
				and u.`status` =#{userStatus}
			</if>
			<if test="userDelFlag !=null">
				and u.delflag=#{userDelFlag}
			</if> 
		ORDER BY
			u.belong_org_id,
			u.sort;
	</select>
	
	<!-- 查询所有用户，返回com.xinleju.platform.sys.org.dto.UserDto-->
	<select id="queryAllUserListReturnUser" resultType="com.xinleju.platform.sys.org.dto.UserDto">
		SELECT
			u.id AS id,
			u.concurrency_version AS version,
			u.job_number AS jobNumber,
			u.real_name AS realName,
			u.is_male AS isMale,
			u.login_name AS loginName,
			u.PASSWORD AS PASSWORD,
			u.contact_phone AS contactPhone,
			u.work_phone AS workPhone,
			u.type AS type,
			u.email AS email,
			u.birthday AS birthday,
			u.age AS age,
			u.entry_date AS entryDate,
			u.leave_date AS leaveDate,
			u.mobile AS mobile,
			u.remark AS remark,
			u.STATUS AS STATUS,
			u.create_date AS createDate,
			u.update_date AS updateDate,
			u.create_person_id AS createPersonId,
			u.create_person_name AS createPersonName,
			u.update_person_id AS updatePersonId,
			u.update_person_name AS updatePersonName,
			u.create_org_id AS createOrgId,
			u.create_org_name AS createOrgName,
			u.create_company_id AS createCompanyId,
			u.create_company_name AS createCompanyName,
			u.delflag AS delflag,
			u.belong_org_id AS belongOrgId,
			o.name as belongOrgName,
			o.prefix_name AS prefixName,
			u.worktime AS workTime,
			u.disabletime AS disableTime,
			u.wechat AS weChat,
			u.sort AS sort,
			u.disabled_id AS disabledId
		FROM
			pt_sys_org_user u,pt_sys_org_orgnazation o
		WHERE
			u.belong_org_id = o.id
			and u.delflag =0 
			<if test="userQueryKey !=null">
				and (u.real_name like CONCAT('%',#{userQueryKey},'%') 
						or u.login_name like CONCAT('%',#{userQueryKey},'%'))
			</if>
			<if test="userStatus !=null">
				and u.`status` =#{userStatus}
			</if>
			<if test="noPost !=null">
				and not EXISTS (
					select 1 from (
						SELECT DISTINCT
							pu.user_id userId
						FROM
							pt_sys_org_post_user pu,
							pt_sys_org_standard_role r,
							pt_sys_org_post p
						WHERE
							pu.post_id = p.id
						AND p.role_id = r.id
						AND p.delflag = 0
						AND r.delflag = 0
						AND r.`status` = 1
						union
						SELECT DISTINCT
							ru.user_id userId
						FROM
							pt_sys_org_role_user ru,
							pt_sys_org_standard_role r
						WHERE
							ru.role_id=r.id
						AND r.delflag = 0
						AND r.`status` = 1
					) t where t.userId= u.id
				)
			</if>
		ORDER BY
			u.belong_org_id,
			case when u.sort is null then 1 else 0 end, u.sort;
	</select>
	
	<!-- 根据IDs查询结果集-->
	<select id="queryUsersByIds" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT
			u.id AS id,
			u.real_name as name,
			'user' as type,
			u.email AS email,
			u.mobile AS mobile
		FROM
			pt_sys_org_user u
		WHERE
		    1=1
		    <if test="ids != null ">
				and u.id in 
				<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
		            #{item} 
		        </foreach>
			</if>
	</select>
	<!-- 根据pus查询结果集-->
	<select id="queryPostUsersByIds" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT
			u.id AS id,
			u.real_name as name,
			'user' as type,
			u.email AS email,
			u.mobile AS mobile,
			CONCAT(o.prefix_name,'/',r.`name`,'/',u.real_name) prefixName,u.`status`
		FROM
			pt_sys_org_user u
			LEFT JOIN pt_sys_org_post_user pu on pu.user_id=u.id
			LEFT JOIN pt_sys_org_post p on p.id=pu.post_id 
			LEFT JOIN pt_sys_org_orgnazation o on p.ref_id=o.id
			LEFT JOIN pt_sys_org_standard_role r on r.id=p.role_id
		WHERE
		    1=1
		    <if test="ids != null ">
				and pu.id in 
				<foreach item="item" index="index" collection="puIds" open="(" separator="," close=")">  
		            #{item} 
		        </foreach>
			</if>
	</select>
	
	<!-- 批量保存用户排序号 -->
	<update id="saveUsersSort" parameterType="map">
		<foreach collection="users" item="user" separator=";">
			update  pt_sys_org_user SET sort=#{user.sort} WHERE id=#{user.id}
		</foreach>
	</update>
	
	<!-- 查询用户详情 -->
	<select id="selectUserInfoById" parameterType="map" resultType="com.xinleju.platform.sys.org.dto.UserDto">
		SELECT
			u.id AS id,
			u.concurrency_version AS version,
			u.job_number AS jobNumber,
			u.real_name AS realName,
			u.is_male AS isMale,
			u.login_name AS loginName,
			u.PASSWORD AS PASSWORD,
			u.contact_phone AS contactPhone,
			u.work_phone AS workPhone,
			u.type AS type,
			u.email AS email,
			u.birthday AS birthday,
			u.age AS age,
			u.entry_date AS entryDate,
			u.leave_date AS leaveDate,
			u.mobile AS mobile,
			u.remark AS remark,
			u.STATUS AS STATUS,
			u.create_date AS createDate,
			u.update_date AS updateDate,
			u.create_person_id AS createPersonId,
			u.create_person_name AS createPersonName,
			u.update_person_id AS updatePersonId,
			u.update_person_name AS updatePersonName,
			u.create_org_id AS createOrgId,
			u.create_org_name AS createOrgName,
			u.create_company_id AS createCompanyId,
			u.create_company_name AS createCompanyName,
			u.delflag AS delflag,
			u.belong_org_id AS belongOrgId,
			o.name as belongOrgName,
			o.prefix_name AS prefixName,
			u.worktime AS workTime,
			u.disabletime AS disableTime,
			u.wechat AS weChat,
			u.sort AS sort,
			u.disabled_id AS disabledId,
			u.email_pwd emailPwd
		FROM pt_sys_org_user u
		LEFT JOIN pt_sys_org_orgnazation o on u.belong_org_id = o.id 
		WHERE  u.delflag=0
			<if test="userId !=null and userId !='' ">
				and u.id=#{userId}
			</if>
			<if test="userLoginName !=null and userLoginName !='' ">
				and u.login_name=#{userLoginName}
			</if>
	</select>
	
	<!-- 校验登录名是否重复 -->
	<select id="checkLoginName" parameterType="map" resultType="int">
		SELECT count(*) from pt_sys_org_user t WHERE t.delflag=0 and t.login_name=#{loginName} 
		<if test="id != null">
			and t.id !=#{id}
		</if>
	</select>
	
	<!-- 根据IDs获取人员DTO -->
	<select id="getUserByUserIds" resultType="com.xinleju.platform.sys.org.dto.UserDto" parameterType="java.util.HashMap">
		SELECT
			u.id AS id,
			u.concurrency_version AS version,
			u.job_number AS jobNumber,
			u.real_name AS realName,
			u.is_male AS isMale,
			u.login_name AS loginName,
			u.contact_phone AS contactPhone,
			u.work_phone AS workPhone,
			u.type AS type,
			u.email AS email,
			u.birthday AS birthday,
			u.age AS age,
			u.entry_date AS entryDate,
			u.leave_date AS leaveDate,
			u.mobile AS mobile,
			u.remark AS remark,
			u.STATUS AS STATUS,
			u.create_date AS createDate,
			u.update_date AS updateDate,
			u.create_person_id AS createPersonId,
			u.create_person_name AS createPersonName,
			u.update_person_id AS updatePersonId,
			u.update_person_name AS updatePersonName,
			u.create_org_id AS createOrgId,
			u.create_org_name AS createOrgName,
			u.create_company_id AS createCompanyId,
			u.create_company_name AS createCompanyName,
			u.delflag AS delflag,
			u.belong_org_id AS belongOrgId,
			o.name as belongOrgName,
			o.prefix_name AS prefixName,
			u.worktime AS workTime,
			u.disabletime AS disableTime,
			u.wechat AS weChat,
			u.sort AS sort,
			u.disabled_id AS disabledId
		FROM
			pt_sys_org_user u,pt_sys_org_orgnazation o 
		WHERE
			u.belong_org_id = o.id
		    <if test="ids != null ">
				and u.id in 
				<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
		            #{item} 
		        </foreach>
			</if>
	</select>
	
	<!-- 根据人员名称获取人员DTO -->
	<select id="getUserByUserName" resultType="com.xinleju.platform.sys.org.dto.UserDto" parameterType="java.util.HashMap">
		SELECT
			u.id AS id,
			u.real_name AS realName,
			u.is_male AS isMale,
			u.login_name AS loginName,
			u.remark AS remark,
			u.STATUS AS STATUS,
			u.delflag AS delflag,
			u.belong_org_id AS belongOrgId,
			o.name as belongOrgName,
			o.prefix_name AS prefixName
		FROM
			pt_sys_org_user u ,pt_sys_org_orgnazation o 
		WHERE
		    u.belong_org_id = o.id
		    <if test="userName !=null and userName !='' ">
				and u.real_name like CONCAT('%',#{userName},'%') 
			</if>
	</select>
	
	<!-- 根据loginNames获取人员DTO -->
	<select id="getUserByUserLoginNames" resultType="com.xinleju.platform.sys.org.dto.UserDto" parameterType="java.util.HashMap">
		SELECT
			u.id AS id,
			u.concurrency_version AS version,
			u.job_number AS jobNumber,
			u.real_name AS realName,
			u.is_male AS isMale,
			u.login_name AS loginName,
			u.PASSWORD AS PASSWORD,
			u.contact_phone AS contactPhone,
			u.work_phone AS workPhone,
			u.type AS type,
			u.email AS email,
			u.birthday AS birthday,
			u.age AS age,
			u.entry_date AS entryDate,
			u.leave_date AS leaveDate,
			u.mobile AS mobile,
			u.remark AS remark,
			u.STATUS AS STATUS,
			u.create_date AS createDate,
			u.update_date AS updateDate,
			u.create_person_id AS createPersonId,
			u.create_person_name AS createPersonName,
			u.update_person_id AS updatePersonId,
			u.update_person_name AS updatePersonName,
			u.create_org_id AS createOrgId,
			u.create_org_name AS createOrgName,
			u.create_company_id AS createCompanyId,
			u.create_company_name AS createCompanyName,
			u.delflag AS delflag,
			u.belong_org_id AS belongOrgId,
			o.name as belongOrgName,
			o.prefix_name AS prefixName,
			u.worktime AS workTime,
			u.disabletime AS disableTime,
			u.wechat AS weChat,
			u.sort AS sort,
			u.disabled_id AS disabledId
		FROM
			pt_sys_org_user u,pt_sys_org_orgnazation o 
		WHERE
		    u.belong_org_id = o.id
		    <if test="loginNames != null ">
				and u.login_name in 
				<foreach item="item" index="index" collection="loginNames" open="(" separator="," close=")">  
		            #{item} 
		        </foreach>
			</if>
	</select>
	
	<!-- 查询用户及其岗位 -->
	<select id="queryUserAndPostsByUname" resultType="map" parameterType="map">
		SELECT u.id uId,u.login_name loginName,u.real_name realName,u.`status` uStatus,GROUP_CONCAT(p.id) pId,GROUP_CONCAT(r.`name`) pName from pt_sys_org_user u 
			LEFT JOIN pt_sys_org_orgnazation o on o.id=u.belong_org_id
			LEFT JOIN pt_sys_org_post_user pu on pu.user_id=u.id
			LEFT JOIN pt_sys_org_post p on p.id=pu.post_id and p.delflag=0 and p.`status`=1
			LEFT JOIN pt_sys_org_standard_role r on p.role_id=r.id  
		WHERE u.delflag =0 and u.`status`=1 and o.delflag=0 
			<if test="keyword !=null">
				and (u.real_name like CONCAT('%',#{keyword},'%')  or u.login_name like CONCAT('%',#{keyword},'%'))
			</if>
		GROUP BY u.id 
	</select>
	
	<!-- 查询组织及其下级是否存在岗位 -->
	<select id="selectSonRefCount" parameterType="map" resultType="int">
		SELECT count(*) FROM
			pt_sys_org_user u
		LEFT JOIN pt_sys_org_orgnazation s on s.id=u.belong_org_id
		LEFT JOIN pt_sys_org_orgnazation f on s.prefix_id like CONCAT('',f.prefix_id,'%')
		WHERE u.delflag=#{delflag} and  f.id =#{orgId}
	</select>
	
	<!-- 查询pu集合 -->
	<select id="selectPuIds" parameterType="map" resultType="String">
		<foreach collection="pus" item="pu" separator="UNION all ">
			SELECT pu.id from pt_sys_org_post_user pu WHERE pu.user_id=#{pu.userId} and pu.post_id=#{pu.postId}
		</foreach>
	</select>
</mapper>