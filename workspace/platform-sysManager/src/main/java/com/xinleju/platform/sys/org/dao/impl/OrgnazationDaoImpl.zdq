package com.xinleju.platform.sys.org.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.xinleju.platform.base.dao.impl.BaseDaoImpl;
import com.xinleju.platform.sys.org.dao.OrgnazationDao;
import com.xinleju.platform.sys.org.dto.OrgnazationDto;
import com.xinleju.platform.sys.org.dto.OrgnazationNodeDto;
import com.xinleju.platform.sys.org.entity.Orgnazation;

/**
 * @author admin
 * 
 * 
 */

@Repository
public class OrgnazationDaoImpl extends BaseDaoImpl<String,Orgnazation> implements OrgnazationDao{

	public OrgnazationDaoImpl() {
		super();
	}

	@Override
	public List<OrgnazationNodeDto> queryOrgListRoot(String rootId) throws Exception {
		List<OrgnazationNodeDto> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryOrgRootList", rootId);
		return list;
		
	}
	
	@Override
	public List<Orgnazation> queryOrgListRootReturnOrg(String rootId) throws Exception {
		List<Orgnazation> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryOrgListRootReturnOrg", rootId);
		return list;
		
	}
	
	@Override
	public List<Orgnazation> queryOrgListRootReturnOrg(String rootId,Long sort) throws Exception {
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("rootId", rootId);
		map.put("sort", sort);
		List<Orgnazation> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryOrgListRootReturnOrgAfterSort", map);
		return list;
		
	}
	
	@Override
	public List<OrgnazationNodeDto> queryOrgList(String parentId) throws Exception {
		List<OrgnazationNodeDto> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryOrgList", parentId);
		return list;
		
	}
	
	@Override
	public List<OrgnazationNodeDto> queryAllOrgList(Map<String,Object> map) throws Exception {
		List<OrgnazationNodeDto> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryAllOrgList",map);
		return list;
		
	}
	
	@Override
	public List<Orgnazation> queryAllOrgListReturnOrg() throws Exception {
		List<Orgnazation> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryAllOrgListReturnOrg");
		return list;
		
	}
	
	@Override
	public List<Orgnazation> queryOrgListReturnOrg(String parentId) throws Exception {
		List<Orgnazation> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryOrgListReturnOrg", parentId);
		return list;
		
	}
	
	@Override
	public List<Orgnazation> queryOrgListReturnOrg(String parentId,Long sort) throws Exception {
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("parentId", parentId);
		map.put("sort", sort);
		List<Orgnazation> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryOrgListReturnOrgAfterSort", map);
		return list;
		
	}

	@Override
	public List<Map<String, Object>> queryListCompany(Map map) {
		List<Map<String, Object>> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryListCompany", map);
		return list;
	}
	
	@Override
	public List<Map<String,String>> queryOrgsByIds(Map map)throws Exception{
		List<Map<String, String>> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryOrgsByIds", map);
		return list;
	}
	
	@Override
	public Integer updatePrefix(Map map)throws Exception{
		int result = getSqlSession().update("com.xinleju.platform.sys.org.entity.Orgnazation.updatePrefix", map);
		return result;
	}
	
	/**
	 * 禁用组织
	 * @param paramater
	 * @return
	 */
	public Integer lockOrg(Map map)throws Exception{
		return getSqlSession().update("com.xinleju.platform.sys.org.entity.Orgnazation.lockOrg", map);
	}
	
	/**
	 * 启用组织
	 * @param paramater
	 * @return
	 */
	public Integer unLockOrg(Map map)throws Exception{
		return getSqlSession().update("com.xinleju.platform.sys.org.entity.Orgnazation.unLockOrg", map);
	}
	
	/**
	 * 根据组织机构Id查询以上级别的组织机构（当前用户）
	 * @param paramater
	 * @return
	 */
	@Override
	public List<OrgnazationDto> queryAuthOrgListByOrgId(Map<String, Object> paramater)  throws Exception{
		List<OrgnazationDto> list =  getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryAuthOrgListByOrgId", paramater);
		return list;
	}

	/* (non-Javadoc)
	 * @see com.xinleju.platform.sys.org.dao.OrgnazationDao#getCompanyOrgId()
	 */
	@Override
	public List<String> getCompanyOrgId() {
		List<String> list = getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryListCompanyAndZB");
		return list;
	}
	
	/**
	 * 查询组织详情
	 * @param paramater
	 * @return
	 * @throws Exception
	 */
	public OrgnazationDto getOrgById(Map<String, Object> paramater)throws Exception{
		return getSqlSession().selectOne("com.xinleju.platform.sys.org.entity.Orgnazation.getOrgById", paramater);
	}

	@Override
	public List<OrgnazationDto> selectUserAllOrgs(Map<String, Object> paramater) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectUserAllOrgs", paramater);
	}

	@Override
	public List<Map<String,Object>> getDeptOrBranch(Map<String, Object> paramater) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectDeptOrBranch", paramater);
	}

	@Override
	public List<OrgnazationDto> getAllOrgListDto(Map<String, Object> paramater) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectAllOrgListDto", paramater);
	}

	@Override
	public List<OrgnazationDto> selectChildOrgList(Map<String, Object> paramater) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectChildOrgList", paramater);
	}
	@Override
	public List<OrgnazationDto> selectChildBranchList(Map<String, Object> paramater)throws Exception{
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectChildBranchList", paramater);
	}
	@Override
	public String selectChildIds(Map<String, Object> paramater) throws Exception {
		return getSqlSession().selectOne("com.xinleju.platform.sys.org.entity.Orgnazation.selectChildIds", paramater);
	}
	@Override
	public List<String> selectUserPostOrgIds(Map<String, Object> paramater) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectUserPostOrgIds", paramater);
	}
	@Override
	public List<Map<String,Object>> selectUserOrgnazationList(Map<String, Object> paramater) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectUserOrgnazationList", paramater);
	}
	@Override
	public List<OrgnazationDto> selectOrgDtoByOrgIds(Map<String, Object> paramater) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectOrgDtoByOrgIds", paramater);
	}
	@Override
	public List<Map<String,Object>> selectParentOrgByOrgId(Map<String, Object> paramater) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectParentOrgByOrgId", paramater);
	}

	/* (non-Javadoc)
	 * @see com.xinleju.platform.sys.org.dao.OrgnazationDao#queryListCompanyAndZb()
	 */
	@Override
	public List<Orgnazation> queryListCompanyAndZb() throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.queryListCompanyAndZb");
	}

	@Override
	public List<String> getAuthOrgIds(Map<String, Object> paramater) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.getAuthOrgIds",paramater);
	}
	
	/**
	 * 查询下级组织结构
	 * @return
	 */
	public List<Orgnazation> selectSunOrgByOrgId(Map<String, Object> paramater) throws Exception{
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectSunOrgByOrgId",paramater);
	}

	@Override
	public List<Map<String, Object>> getSubOrgByComId(Map<String, Object> param) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.getSubOrgByComId",param);
	}
	@Override
	public List<Map<String, Object>> getSubBranchByComId(Map<String, Object> param) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.getSubBranchByComId",param);
	}
	@Override
	public List<Map<String, Object>> getSubUserByComId(Map<String, Object> param) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.getSubUserByComId",param);
	}
	/**
	 * 根据组织ids获取他们的顶级部门和顶级公司
	 * add by gyh 2017-7-14
	 * @param orgIds：多个组织id
	 */
	public List<Map<String,Object>> selectTopDeptAnaTopCom(Map<String, Object> param)throws Exception{
		return getSqlSession().selectList("com.xinleju.platform.sys.org.entity.Orgnazation.selectTopDeptAnaTopCom",param);
	}
}
