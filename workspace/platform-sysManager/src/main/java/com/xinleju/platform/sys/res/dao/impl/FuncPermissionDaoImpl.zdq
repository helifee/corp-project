package com.xinleju.platform.sys.res.dao.impl;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.xinleju.platform.base.dao.impl.BaseDaoImpl;
import com.xinleju.platform.sys.res.dao.FuncPermissionDao;
import com.xinleju.platform.sys.res.entity.FuncPermission;

/**
 * @author admin
 * 
 * 
 */

@Repository
public class FuncPermissionDaoImpl extends BaseDaoImpl<String,FuncPermission> implements FuncPermissionDao{

	public FuncPermissionDaoImpl() {
		super();
	}

	@Override
	public List<Map<String, Object>> querySystemListByRole(String roleId) {
		return getSqlSession().selectList("querySystemListByRole", roleId);
	}

	@Override
	public List<Map<String, Object>> queryAuthorizationListByAppIds(Map<String,Object> map) {
		
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.queryAuthorizationListByAppIds", map);
	}
	
	@Override
	public List<Map<String, Object>> queryAuthorizationListByAppIdsPermission(Map<String,Object> map) {
		
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.queryAuthorizationListByAppIdsPermission", map);
	}
	
	@Override
	public List<Map<String, Object>> queryAuthorizationListAllRoles() {
		
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.queryAuthorizationListAllRoles");
	}
	
	@Override
	public List<Map<String, Object>> queryAuthorizationListAllCurrencyRoles() {
		
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.queryAuthorizationListAllCurrencyRoles");
	}
	
	@Override
	public List<Map<String, Object>> queryAuthorizationListAllPost() {
		
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.queryAuthorizationListAllPost");
	}
	
	@Override
	public List<Map<String, Object>> queryAuthorizationListAllUser() {
		
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.queryAuthorizationListAllUser");
	}
	
	@Override
	public List<Map<String, Object>> queryAuthDataByappIdsAndroleIds(Map<String,Object> map) {
		
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.queryAuthDataByappIdsAndroleIds", map);
	}
	
	@Override
	public List<Map<String, Object>> queryAuthDataByOperationIds(Map<String,Object> map) {
		
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.queryAuthDataByOperationIds", map);
	}

	@Override
	public String selectUserRoleAuthDataCode(Map<String, Object> map) throws Exception {
		return getSqlSession().selectOne("com.xinleju.platform.sys.res.entity.FuncPermission.selectUserRoleAuthDataCode", map);
	}

	@Override
	public List<String> selectAuthValIds(Map<String, Object> map) throws Exception {
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.selectAuthValIds", map);
	}
	
	@Override
	public List<Map<String, Object>> getFuncButtonAuthByUserLoginNameAndAppCodeAndMenuCode(Map<String,Object> map) {
		
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.getFuncButtonAuthByUserLoginNameAndAppCodeAndMenuCode", map);
	}
	
	@Override
	public List<Map<String, Object>> getFuncMenuAuthByUserLoginNameAndAppCode(Map<String,Object> map) {
		
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.getFuncMenuAuthByUserLoginNameAndAppCode", map);
	}
	@Override
	public List<String> selectAuthTypeId(Map<String,Object> map) throws Exception{
		return getSqlSession().selectList("com.xinleju.platform.sys.res.entity.FuncPermission.selectAuthTypeId", map);
	}
	
}
