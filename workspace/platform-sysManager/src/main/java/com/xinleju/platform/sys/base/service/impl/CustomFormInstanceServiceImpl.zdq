package com.xinleju.platform.sys.base.service.impl;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xinleju.platform.base.service.impl.BaseServiceImpl;
import com.xinleju.platform.base.utils.AttachmentDto;
import com.xinleju.platform.base.utils.DubboServiceResultInfo;
import com.xinleju.platform.base.utils.Page;
import com.xinleju.platform.base.utils.SecurityUserBeanInfo;
import com.xinleju.platform.sys.base.dao.CustomFormDao;
import com.xinleju.platform.sys.base.dao.CustomFormInstanceDao;
import com.xinleju.platform.sys.base.dto.CustomFormInstanceDto;
import com.xinleju.platform.sys.base.entity.CustomForm;
import com.xinleju.platform.sys.base.entity.CustomFormInstance;
import com.xinleju.platform.sys.base.service.CustomFormInstanceService;
import com.xinleju.platform.sys.org.service.OrgnazationService;
import com.xinleju.platform.sys.org.service.UserService;
import com.xinleju.platform.sys.security.dto.AuthenticationDto;
import com.xinleju.platform.tools.data.JacksonUtils;
import com.xinleju.platform.univ.attachment.dto.service.AttachmentDtoServiceCustomer;
import com.xinleju.platform.utils.Common;

/**
 * @author admin
 * 
 * 
 */

@Service
public class CustomFormInstanceServiceImpl extends  BaseServiceImpl<String,CustomFormInstance> implements CustomFormInstanceService{
	

	@Autowired
	private CustomFormInstanceDao customFormInstanceDao;

	@Autowired
	private CustomFormDao customFormDao;

	@Autowired
	private UserService userService;
	
	@Autowired
	private OrgnazationService orgnazationService;
	

	@Autowired
	private AttachmentDtoServiceCustomer attachmentDtoServiceCustomer;
	
	@Override
	public Page getPageForForm(Map<String, Object> map) {
		// 分页显示
		Page page=new Page();
		// 获取分页list 数据
		List<Map<String,Object>> list = customFormInstanceDao.getPageSort(map);
		// 获取条件的总数据量
		Integer count = customFormInstanceDao.getPageSortCount(map);
		page.setLimit((Integer) map.get("limit") );
		page.setList(list);
		page.setStart((Integer) map.get("start"));
		page.setTotal(count);
		//封装成page对象 传到前台
		return page;
	}

	@Override
	public String getInstanceByFormId(String userInfo, String jsonStr) {
		// TODO Auto-generated method stub
		DubboServiceResultInfo info=new DubboServiceResultInfo();
		try {
			SecurityUserBeanInfo securityUserBeanInfo = JacksonUtils.fromJson(userInfo, SecurityUserBeanInfo.class);
			
			CustomFormInstanceDto customFormInstanceDto = new CustomFormInstanceDto();
			CustomFormInstance customFormInstanceBack=new CustomFormInstance();
			CustomFormInstance customFormInstance=JacksonUtils.fromJson(jsonStr, CustomFormInstance.class);
			CustomForm customForm=customFormDao.getObjectById(customFormInstance.getCustomFormId());
			if(customForm!=null){
				customFormInstanceBack.setFormFormatJson(customForm.getFormFormatJson());
				
				customFormInstance = customFormInstanceDao.getObjectById(customFormInstance.getId());
				if(customFormInstance==null){
					customFormInstance=customFormInstanceBack;
				}else{
					customFormInstance.setFormFormatJson(customFormInstanceBack.getFormFormatJson());
				}
			}
			BeanUtils.copyProperties(customFormInstance, customFormInstanceDto);
			if(customForm!=null){
				customFormInstanceDto.setCode(customForm.getCode());
				customFormInstanceDto.setFlowVariable(customForm.getFlowVariable());
			}
			customFormInstanceDto.setUpdatePersonId(securityUserBeanInfo.getSecurityUserDto().getId());
			customFormInstanceDto.setUpdatePersonName(securityUserBeanInfo.getSecurityUserDto().getRealName());
			customFormInstanceDto.setUpdateDate(new Timestamp(System.currentTimeMillis()));
			//新增表单时经办人经办部门取当前登陆人信息
			if(customFormInstanceDto.getId()==null || "".equals(customFormInstanceDto.getId())){
				customFormInstanceDto.setOperatorId(securityUserBeanInfo.getSecurityUserDto().getId());
				customFormInstanceDto.setOperatorName(securityUserBeanInfo.getSecurityUserDto().getRealName());
				customFormInstanceDto.setOperateDepartmentId(securityUserBeanInfo.getSecurityTopDeptDto()!=null?securityUserBeanInfo.getSecurityTopDeptDto().getId():null);
				customFormInstanceDto.setOperateDepartmentName(securityUserBeanInfo.getSecurityTopDeptDto()!=null?securityUserBeanInfo.getSecurityTopDeptDto().getName():null);
				customFormInstanceDto.setOperateCompanyId(securityUserBeanInfo.getSecurityTopCompanyDto()!=null?securityUserBeanInfo.getSecurityTopCompanyDto().getId():null);
				customFormInstanceDto.setOperateCompanyName(securityUserBeanInfo.getSecurityTopCompanyDto()!=null?securityUserBeanInfo.getSecurityTopCompanyDto().getName():null);
				customFormInstanceDto.setOperateProjectId(securityUserBeanInfo.getSecurityGroupDto()!=null?securityUserBeanInfo.getSecurityGroupDto().getId():null);
				customFormInstanceDto.setOperateProjectName(securityUserBeanInfo.getSecurityGroupDto()!=null?securityUserBeanInfo.getSecurityGroupDto().getName():null);
				customFormInstanceDto.setOperateQiId(securityUserBeanInfo.getSecurityBranchDto()!=null?securityUserBeanInfo.getSecurityBranchDto().getId():null);
				customFormInstanceDto.setOperateQiName(securityUserBeanInfo.getSecurityBranchDto()!=null?securityUserBeanInfo.getSecurityBranchDto().getName():null);
				
				//设置制单人、制单时间
				customFormInstanceDto.setCreatePersonId(securityUserBeanInfo.getSecurityUserDto().getId());
				customFormInstanceDto.setCreatePersonName(securityUserBeanInfo.getSecurityUserDto().getRealName());
				customFormInstanceDto.setCreateDate(new Timestamp(System.currentTimeMillis()));
				customFormInstanceDto.setUpdatePersonId(null);
				customFormInstanceDto.setUpdatePersonName(null);
				customFormInstanceDto.setUpdateDate(null);
			}
			info.setResult(JacksonUtils.toJson(customFormInstanceDto));
		    info.setSucess(true);
		    info.setMsg("获取对象成功!");
		} catch (Exception e) {
			 info.setSucess(false);
			 info.setMsg("获取对象失败!");
			 info.setExceptionMsg(e.getMessage());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String getVariableById(String userInfo, String idJson) {
		// TODO Auto-generated method stub
		DubboServiceResultInfo info=new DubboServiceResultInfo();
		SecurityUserBeanInfo securityUserBeanInfo = JacksonUtils.fromJson(userInfo, SecurityUserBeanInfo.class);
		try {
			CustomFormInstanceDto customFormInstanceDto=JacksonUtils.fromJson(idJson, CustomFormInstanceDto.class);
			CustomFormInstance	result = customFormInstanceDao.getObjectById(customFormInstanceDto.getBusinessId());
			Map<String, Object> map=JacksonUtils.fromJson(result.getFormFlowVariableValue(), HashMap.class);
			
			//移动表单处理
			Map<String, Object> paramMap = new HashMap<String, Object>();
			List<Map<String, Object>> mobileArrachmentValueList = new ArrayList<Map<String, Object>>();
			Map<String, List<Map<String, Object>>> mobileFormat=new HashMap<String, List<Map<String, Object>>>();
			List<Map<String, Object>> mobileFormValueList=JacksonUtils.fromJson(result.getFormMobileValueJson(), ArrayList.class);
			if(mobileFormValueList!=null && mobileFormValueList.size()>0){
				for(int i=0;i<mobileFormValueList.size();i++){
					Map<String, Object> remap=mobileFormValueList.get(i);
					if(remap!=null){
						remap.remove("type");
					}
				}
			}
			mobileFormat.put("dataList", mobileFormValueList);
			
			//移动表单附件处理
			Map<String, Object> resultArrachMap = new HashMap<String, Object>();
			String[] stringArray = {customFormInstanceDto.getBusinessId()};  
			paramMap.put("businessId",stringArray);
    		String dubboResultInfo = attachmentDtoServiceCustomer.queryListByObject(userInfo, JacksonUtils.toJson(paramMap));
    		DubboServiceResultInfo dubboServiceResultInfo = JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
            if (dubboServiceResultInfo.isSucess()) {
                String resultInfo = dubboServiceResultInfo.getResult();
                List<AttachmentDto> list = JacksonUtils.fromJson(resultInfo, ArrayList.class, AttachmentDto.class);
                if(list.size() > 0){
                 	for (AttachmentDto attachmentDto : list) {
                 		resultArrachMap = new HashMap<String, Object>();
                 		resultArrachMap.put("filename", attachmentDto.getFullName());
                 		resultArrachMap.put("url", attachmentDto.getUrl());
                 		mobileArrachmentValueList.add(resultArrachMap);
					}
                 	mobileFormat.put("uploadEntityList",mobileArrachmentValueList);
                }
            }
			
			Map<String, Object> dataMap = new HashMap<String, Object>();
			this.dealFlowBusiness(dataMap,securityUserBeanInfo,result);
			Map<String, Object> resultMap = new HashMap<String, Object>();
			resultMap.put("flow_phone_data", mobileFormat);
			if(map!=null && map.size()>0){
				dataMap.putAll(map);
			}
			resultMap.put("flow_business_variable_data", dataMap);
			resultMap.put("flow_business_data", mobileFormat);
			
			info.setResult(JacksonUtils.toJson(resultMap));
		    info.setSucess(true);
		    info.setMsg("获取对象成功!");
		} catch (Exception e) {
			 info.setSucess(false);
			 info.setMsg("获取对象失败!");
			 info.setExceptionMsg(e.getMessage());
		}
		return JacksonUtils.toJson(info);
	}

	/**
	  * @Description:处理流程变量取值
	  * @author:zhangfangzhi
	  * @date 2017年4月20日 下午3:48:22
	  * @version V1.0
	 */
	private void dealFlowBusiness(Map<String, Object> dataMap, SecurityUserBeanInfo securityUserBeanInfo,CustomFormInstance customFormInstance) {
		Map<String,Object> mapParam = new HashMap<String,Object>();
		try {
			if(customFormInstance!=null){
//				if (customFormInstance.getOperateDepartmentId() != null) {
//					mapParam.put("post_orgId", customFormInstance.getOperateDepartmentId());
//				}else {
//					mapParam.put("post_orgId", securityUserBeanInfo.getSecurityDirectDeptDto().getId());
//				}
//				mapParam.put("searchType", "Org");
//				AuthenticationDto authenticationDto = orgnazationService.getUserRPOMInfoByUserId(mapParam);
//				if(authenticationDto!=null){
//					dealForm(dataMap, authenticationDto);
//				}
				//修改获取流程所需的经办部门公司项目分期数据的取数逻辑20170524zfz
				dataMap.put("flow_business_company_id", customFormInstance.getOperateCompanyId());
				dataMap.put("flow_business_company_name", customFormInstance.getOperateCompanyName());
				dataMap.put("flow_business_dept_id", customFormInstance.getOperateDepartmentId());
				dataMap.put("flow_business_dept_name", customFormInstance.getOperateDepartmentName());
				dataMap.put("flow_business_project_id", customFormInstance.getOperateProjectId());
				dataMap.put("flow_business_project_name", customFormInstance.getOperateProjectName());
				dataMap.put("flow_business_project_branch_id", customFormInstance.getOperateQiId());
				dataMap.put("flow_business_project_branch_name", customFormInstance.getOperateQiName());
				
				if(customFormInstance.getOperatorId()!=null && !"".equals(customFormInstance.getOperatorId())){
					dataMap.put("start_user_id", customFormInstance.getOperatorId());
					dataMap.put("start_user_name", customFormInstance.getOperatorName());
				}else{
					dataMap.put("start_user_id", securityUserBeanInfo.getSecurityUserDto().getId());
					dataMap.put("start_user_name", securityUserBeanInfo.getSecurityUserDto().getRealName());
				}
			}
		} catch (Exception e) {
			//e.printStackTrace();
		}
	}

	/**
	  * @Description:变量赋值
	  * @author:zhangfangzhi
	  * @date 2017年5月2日 上午10:12:59
	  * @version V1.0
	 */
	private void dealForm(Map<String, Object> dataMap, AuthenticationDto authenticationDto) {
		dataMap.put("flow_business_company_id", authenticationDto.getDirectCompanyDto()!=null?authenticationDto.getDirectCompanyDto().getId():null);
		dataMap.put("flow_business_company_name", authenticationDto.getDirectCompanyDto()!=null?authenticationDto.getDirectCompanyDto().getName():null);
		dataMap.put("flow_business_dept_id", authenticationDto.getDirectDeptDto()!=null?authenticationDto.getDirectDeptDto().getId():null);
		dataMap.put("flow_business_dept_name", authenticationDto.getDirectDeptDto()!=null?authenticationDto.getDirectDeptDto().getName():null);
		dataMap.put("flow_business_project_id", authenticationDto.getGroupDto()!=null?authenticationDto.getGroupDto().getId():null);
		dataMap.put("flow_business_project_name", authenticationDto.getGroupDto()!=null?authenticationDto.getGroupDto().getName():null);
		dataMap.put("flow_business_project_branch_id", authenticationDto.getBranchDto()!=null?authenticationDto.getBranchDto().getId():null);
		dataMap.put("flow_business_project_branch_name", authenticationDto.getBranchDto()!=null?authenticationDto.getBranchDto().getName():null);
	}

	@Override
	public int updateStatus(CustomFormInstance customFormInstance) {
		return customFormInstanceDao.updateStatus(customFormInstance);
	}

	@Override
	public int updateStatusForCustomForm(String updateJson) {
		CustomFormInstance customFormInstance=new CustomFormInstance();
		Map<String,String> paramMap=JacksonUtils.fromJson(updateJson, HashMap.class);
		String id=paramMap.get("id");
		String status=paramMap.get("status");
		String instanceId=paramMap.get("instanceId");
		String endStatus=paramMap.get("endStatus");
		customFormInstance.setId(id);
		customFormInstance.setInstanceId(instanceId);
		
		if (status!=null && Common.SH_SHZ_STATE.equals(status)) {
			customFormInstance.setStatus(Common.SH_SHZ_STATE);
        } else if (status!=null && Common.SH_SHWC_STATE.equals(status) && endStatus!=null && "1".equals(endStatus)) {
        	customFormInstance.setStatus(Common.SH_SHWC_STATE);
        } else {
        	customFormInstance.setStatus(Common.SH_WSH_STATE);
        }
		return customFormInstanceDao.updateStatus(customFormInstance);
	}
	

}
