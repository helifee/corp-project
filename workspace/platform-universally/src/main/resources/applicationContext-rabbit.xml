<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/rabbit
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!--<util:properties id="configuration" location="classpath:configuration.properties"/>-->


	<bean class="com.xinleju.platform.univ.mq.utils.DynamicBeanMain"/>

	<!--配置connection-factory，指定连接rabbit server参数 -->
	<rabbit:connection-factory id="rabitConnectionFactory"
							   username="#{configuration['rabbit.username']}"
							   password="#{configuration['rabbit.password']}"
							   host="#{configuration['rabbit.host']}"
							   port="#{configuration['rabbit.port']}" />



	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin connection-factory="rabitConnectionFactory" />
	
	<!-- 消息对象json转换类 -->
	<bean id="rabbitjsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />


    
        <!-- 
        监听配置
        queues：监听的队列，多个的话用逗号（,）分隔 
        ref：监听器
    -->
    <!-- <rabbit:listener-container connection-factory="rabitConnectionFactory" acknowledge="auto">
        <rabbit:listener queues="Queue__mytopic" ref="queueListenter"/>
    </rabbit:listener-container> 
    
    <bean id="queueListenter" class="com.xinleju.platform.univ.mq.listenter.QueueListenter " />  -->
    <!-- spring template声明-->
    <!-- <rabbit:template id="amqpTemplate"  connection-factory="rabitConnectionFactory"  message-converter="rabbitjsonMessageConverter"/> -->
	
	
	


	<!-- 声明消息容器的监听-->
	<!-- <dubbo:service interface="com.xinleju.platform.middeleware.message.plugins.interfaces.SimpleMessageListenerContainerMonitor" ref="simpleMessageListenerContainerMonitor" />
	<bean id="simpleMessageListenerContainerMonitor" class="com.xinleju.platform.middeleware.message.plugins.impl.SimpleMessageListenerContainerMonitorImpl"></bean> -->


	 <!-- <bean id="commonConsumer" class="com.xinleju.platform.univ.mq.utils.CommonConsumer"></bean>  -->


	<!--&lt;!&ndash;以下定义消费者 &ndash;&gt;-->
	<!-- <bean id="systemConsumer" class="com.xinleju.platform.middeleware.message.plugins.impl.DemoRabbitMsgConsumer"></bean> -->

	<!-- mqTopicDtoServiceCustomer:消息主题管理 -->
	  <!-- <dubbo:reference id="topicDtoServiceCustomer" interface="com.xinleju.platform.univ.mq.dto.service.TopicDtoServiceCustomer"   />   -->
	<!-- mqMessageDtoServiceCustomer:消息管理 -->
	 <!-- <dubbo:reference id="messageDtoServiceCustomer" interface="com.xinleju.platform.middeleware.message.dto.service.MqMessageDtoServiceCustomer" />  -->


	<!--  -->
	 <!-- <dubbo:reference id="DemoRabbitMsgConsumer" interface="com.xinleju.platform.middeleware.message.plugins.interfaces.ConsumerMsgInterface" />  -->

</beans>