package com.xinleju.erp.finance.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.data.cache.api.MDFinanceCacheService;
import com.xinleju.erp.data.cache.dto.FinanceLegalPersonDTO;
import com.xinleju.erp.finance.dao.FiAccountSetDao;
import com.xinleju.erp.finance.models.FiAccountSet;
import com.xinleju.erp.finance.models.FiAccountSetData;
import com.xinleju.erp.flow.flowutils.bean.FlowResult;
import com.xinleju.erp.frame.dto.PayUnitDTO;
import com.xinleju.erp.frame.models.Company;

/**
 * 账套
 * 
 * @author songjunjie
 */
@Service
public class FiAccountSetService extends BaseService {
	@Autowired
	private FiAccountSetDao fiAccountSetDao;
	

	public List<Company> getCompanyList() {
		return this.getDao().findAll(Company.class);
	}

	/**
	 * 查询出所有账套
	 * 
	 * @return
	 */
	public List<FiAccountSet> getFiAccountSetList() {
		return this.getDao().findAll(FiAccountSet.class);
	}

	public List<FiAccountSet> getFiAccountSetByCompanyId(Long companyId) {
		String hql = "FROM FiAccountSet WHERE company_id = ?";
		List<FiAccountSet> list = this.getDao().findByHQL(FiAccountSet.class, hql, companyId);
		return list;
	}
	
	
	public FiAccountSet getFiAccountSetByCompanyCode(String companyCode) {
		String hql = "FROM FiAccountSet WHERE companyCode = ?";
		FiAccountSet accountSet = this.getDao().findFirstByHQL(FiAccountSet.class, hql, companyCode);
		return accountSet;
	}

	/**
	 * 根据公司id和账套状态获得账套信息
	 * 
	 * @param companyId
	 * @param status
	 * @return
	 */
	public List<FiAccountSet> getFiAccountSetList(long companyId, String status) {
		return fiAccountSetDao.getFiAccountSetList(companyId, status);
	}
	
	/**
	 * 根据公司id和账套状态获得账套信息
	 * 
	 * @param fiSysId
	 *        财务系统ID
	 * @param status
	 * @return
	 */
	public List<FiAccountSet> getFiAccountSetsBySysId(long fiSysId, String status) {
		return fiAccountSetDao.getFiAccountSetsByFiSysId(fiSysId, status);
	}

	/**
	 * 保存账套
	 * 
	 * @param f
	 */
	public void save(FiAccountSet f) {
		fiAccountSetDao.saveFiAccountSet(f);
	}

	/**
	 * 删除账套
	 * 
	 * @param id
	 */
	public void delete(Long id) {
		fiAccountSetDao.deleteFiAccountSet(id);

	}

	/**
	 * 根据id查找FiAccountSet加
	 */
	public FiAccountSet findFiAccountSetById(Long id) {
		FiAccountSet fi = fiAccountSetDao.findFiAccountSetById(id);
		return fi;
	}
	
	

	/**
	 * 根据账套的id获得相对应的项目分期然后获得项目的id
	 * 
	 * @param accountSetId
	 * @return
	 */
	public List<Long> getProjectIdListByAccountSetId(Long accountSetId) {
		List<FiAccountSetData> accountSetDataList = getDao().findByHQL(FiAccountSetData.class, "from FiAccountSetData where accountSetId=?", accountSetId);
		if (accountSetDataList.size() > 0) {
			List<Long> projectIdList = new ArrayList<Long>(accountSetDataList.size());
			for (FiAccountSetData data : accountSetDataList) {
				if (!projectIdList.contains(data.getProjectBranchId())) {
					projectIdList.add(data.getProjectBranchId());
				}
			}
			return projectIdList;
		} else {
			return new ArrayList<Long>(0);
		}
	}
	

	public FiAccountSet getFiAccountSetById(Long accountSetId) {
		return getDao().getById(FiAccountSet.class, accountSetId);
	}
}
