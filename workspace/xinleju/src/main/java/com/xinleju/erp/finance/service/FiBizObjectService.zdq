package com.xinleju.erp.finance.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;

import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.finance.models.FiBizObject;
import com.xinleju.erp.finance.models.FiBoFieldsinfo;
import com.xinleju.erp.finance.models.FiBusinessobject;
import com.xinleju.erp.frame.models.BaseEntity;
import com.xinleju.erp.frame.models.BusinessObject;

/**
 * 业务对象服务类
 * 
 * @author songjunjie ztl
 */
@Service
public class FiBizObjectService extends BaseService {

	/**
	 * 返回所有未删除的业务对象
	 * @return
	 */
	public List<FiBusinessobject> findAll() {
		String hql = "from FiBusinessobject where status=0";
		List<FiBusinessobject> list = this.getDao().findByHQL(FiBusinessobject.class, hql);
		return list;
	}

	/**
	 * 根据id查询出业务对象
	 * @param id
	 * @return
	 */
	public FiBusinessobject getFiBusinessobjectById(Long id) {
		FiBusinessobject businessobject = this.getDao().getById(FiBusinessobject.class, id);
		return businessobject;
	}
	
	/**
	 * 根据注册的类查询出注册对象获取注册对象
	 * @param id
	 * @return
	 */
	public FiBusinessobject getFiBusinessobjectByRegisClass(String resName,String sysCode) {
		//String hql = "from FiBusinessobject where vfetchdataclass = '"+resName+"'";
		String hql = "from FiBusinessobject where btype = '"+resName+"' and vsyscode = '"+sysCode+"'";
		FiBusinessobject businessobject = this.getDao().findFirstByHQL(FiBusinessobject.class, hql);
		return businessobject;
	}
	
	/**
	 * 根据业务对象查询出业务对象的字段列表
	 * @param boid
	 * @return
	 */
	public List<FiBoFieldsinfo> getAllBoField(Long boid){
		String hql = "from FiBoFieldsinfo where pid=?"; 
		List<FiBoFieldsinfo> list = this.getDao().findByHQL(FiBoFieldsinfo.class, hql, boid);
		return list;
	}
	
	/**
	 * 保存或者更新业务对象信息
	 * @param bo
	 * @param fieldList
	 */
	public void saveOrUpdate(FiBusinessobject bo ,List<FiBoFieldsinfo> fieldList){
		this.getDao().saveOrUpdate(bo);
		this.getDao().execute("delete from FiBoFieldsinfo where pid=? ", bo.getId());
		for(FiBoFieldsinfo f: fieldList){
			f.setPid(bo.getId());
			this.getDao().saveOrUpdate(f);
		}
		
	}
	
	/**
	 * 根据给定的业务类型返回业务对象。
	 * @param type 业务类型。 1 基本档案；2业务表单
	 * @return
	 */
	public List<FiBusinessobject> findBizObjectByType(int type){
		String hql = "FROM " + FiBusinessobject.class.getSimpleName();
		if(type==1){
			hql += " WHERE bdobject='true'";
		}else if(type==2){
			hql += " WHERE formobject='true'";
		}else{
			return null;
		}
		List<FiBusinessobject> list = this.getDao().findByHQL(FiBusinessobject.class, hql);
		return list;
	}
	
	/**
	 * 根据给定的业务类型返回业务对象。
	 * @param type 业务类型。 1 基本档案；2业务表单
	 * @return
	 */
	public List<FiBusinessobject> findBizObjectByType(String type,String sysId){
		String hql = "FROM " + FiBusinessobject.class.getSimpleName();
		/*if(type=="1"){
			hql += " WHERE bdobject='true'";
		}else if(type=="2"){
			hql += " WHERE formobject='true'";
		}else{
			return null;
		}*/
		hql += " WHERE vtype="+type;
		
		hql += " AND vsyscode='"+sysId+"'";
		List<FiBusinessobject> list = this.getDao().findByHQL(FiBusinessobject.class, hql);
		return list;
	}
	
	
	/**
	 * 删除业务对象信息。包括业务对象的字段信息
	 * @param idAry 要删除的业务对象的id列表
	 */
	public void delete(Long[] idAry) {
		String hql = "delete FiBoFieldsinfo s where s.pid = ?";
		for(Long id : idAry){
			FiBusinessobject bo = this.getDao().getById(FiBusinessobject.class, id);
			this.getDao().execute(hql, bo.getId());//删除业务对象的字段信息
			this.getDao().delete(bo);
		}
	}
	
	/**
	 * 设置业务对象的启用状态
	 * @param ids 业务对象id列表
	 * @param status 启用状态. 0 启用 1停用
	 */
	public void setBizObjectStatus(Long[] ids,int status){
		String hql = "update FiBusinessobject set status = ? where id = ?";
		for(Long id : ids){
			this.getDao().execute(hql, status,id);
		}
	}
	
	public List<FiBizObject> getFibObjects(String type,String sysCode){
		List<FiBizObject> fibs = new ArrayList<FiBizObject>();
		List<FiBusinessobject> bos = this.findBizObjectByType(type,sysCode);
		
		FiBizObject fbo = null;
		String sysName = "";
		if(sysCode.equals("1")){
			sysName = "销售系统";
		}else if(sysCode.equals("2")){
			sysName = "成本系统";
		}else{
			sysName = "费用系统";
		}
		
		for(FiBusinessobject bo:bos){
			fbo = new FiBizObject();
			fbo.setSysCode(Integer.parseInt(sysCode));
			fbo.setObjectId(bo.getVfetchdataclass());
			fbo.setSysName(sysName);
			fbo.setObjectName(bo.getVobject());
			
			fibs.add(fbo);
		}
		
		
		return fibs;
		
	}
	
//	public Map<Long,String> queryBdBOMap(){
//		Map<Long,String> map = new HashMap<Long,String>();
//		List<BusinessObject> list = fiBusinessDao.findByHQL(BusinessObject.class, "FROM " +BusinessObject.class.getSimpleName()+ " t WHERE t.bdobject = 'true'");
//		for(BusinessObject bo : list )
//			map.put(bo.getId(),bo.getVobject());
//	
//		return map;
//	} 
}
