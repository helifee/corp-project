package com.xinleju.erp.flow.action;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.flow.service.TodoFiService;
import com.xinleju.erp.flow.service.api.extend.dto.UserDTO;
import com.xinleju.erp.flow.utils.LoginInfoUtils;
import com.xinleju.erp.frame.models.Msg;
import com.xinleju.erp.frame.service.MsgService;
import com.xinleju.erp.frame.service.extend.dto.MsgDto;

/**
 * 
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 * 移动oa嵌入页面
 * @author   jun
 * @version  $Id$
 * @since
 * @see
 */
public class PhoneUIAction extends BaseAction {
    
    /**
     * 每页限制
     */
    private static int pageLimit = 6;
    
    private MsgDto msgDto;
    
    @Autowired
    private MsgService msgService;
    
    @Autowired
    private TodoFiService todoFiService;
    
    public String index(){
    	return "index";
    }
    public String toDo() {
		response.setHeader("Cache-Control", "no-cache, no-store,  must-revalidate");
	    response.setHeader("Pragma", "no-cache");
	    response.setDateHeader("Expires", 0L);
	    request.setAttribute("dyCount", msgService.getDBMsgCount(Msg.OP_TYPE_WD, LoginInfoUtils.getLoginInfoUserLogName(request)));
    	return "toDo";
    }
    
    public void queryUnReadMsgCount4Jsion() throws Exception {
    	JSONObject data = new JSONObject();
    	int db_count = msgService.getDBMsgCount(Msg.OP_TYPE_DB, LoginInfoUtils.getLoginInfoUserLogName(request));
    	int dy_count = msgService.getDBMsgCount(Msg.OP_TYPE_WD, LoginInfoUtils.getLoginInfoUserLogName(request));
    	data.put("unReadMsgCount", db_count + dy_count);
    	renderJson(data.toString());
    }
    /**
     * 待办消息
     * @author jun
     * @return 页面
     */
    public String desktop1() {
        request.setAttribute("dbCount", msgService.getDBMsgCount(Msg.OP_TYPE_DB, LoginInfoUtils.getLoginInfoUserLogName(request)));
        msgDto = new MsgDto();
        msgDto.setOpType(Msg.OP_TYPE_DB);
        msgDto.setLoginName(LoginInfoUtils.getLoginInfoUserLogName(request));
        page = msgService.getMsgList(msgDto, start, pageLimit);
        return "desktop1";
    }

    /**
     * 待阅消息
     * @author jun
     * @return 页面
     */
    public String desktop2() {
        request.setAttribute("dyCount", msgService.getDBMsgCount(Msg.OP_TYPE_WD, LoginInfoUtils.getLoginInfoUserLogName(request)));
        msgDto = new MsgDto();
        msgDto.setOpType(Msg.OP_TYPE_WD);
        msgDto.setLoginName(LoginInfoUtils.getLoginInfoUserLogName(request));
        page = msgService.getMsgList(msgDto, start, pageLimit);
        return "desktop2";
    }

    /**
     * 已办
     * @author jun
     * @return 页面
     */
    public String desktop3() {
        msgDto = new MsgDto();
        msgDto.setOpType(Msg.OP_TYPE_YB);
        msgDto.setLoginName(LoginInfoUtils.getLoginInfoUserLogName(request));
        page = msgService.getMsgList(msgDto, start, pageLimit);
        return "desktop3";
    }

    /**
     * 我发起的流程
     * @author jun
     * @return 页面
     */
    public String desktop4() {
        String startUserIdLimitSql = "";
        UserDTO userDto = LoginInfoUtils.getLoginInfo(request).getUserDTO();
        Long userId = null != userDto && null != userDto.getId() ? userDto.getId() : 0L;
        startUserIdLimitSql = " fi.start_user_id = " + userId;
        page = todoFiService.getTodoFiPageBySql(null, startUserIdLimitSql, userId, start, pageLimit);
        return "desktop4";
    }
    
}
