package com.xinleju.erp.flow.action;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.flow.frameapi.domain.User;
import com.xinleju.erp.flow.models.UserNote;
import com.xinleju.erp.flow.service.IUserNoteService;
import com.xinleju.erp.flow.service.api.OrgnAPIService;
import com.xinleju.erp.flow.service.api.extend.dto.UserDTO;
import com.xinleju.erp.flow.utils.LoginInfoUtils;


/**
 * 
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 * iUserReadService
 * @author   zhongjun
 * @version  $Id$
 * @since
 * @see
 */
public class UserNoteAction extends BaseAction {
    
    /**
     * 自定义审批常用语接口
     */
    @Autowired
    private IUserNoteService userNoteService;
    
    /**
     * 自定义审批常用语
     */
    private List<UserNote> userNotes;
    
    /**
     * 组织架构Service
     */
    @Autowired
    private OrgnAPIService orgnAPIService;
    
    /**
     * 常用语列表
     * @author jun
     * @return 常用语列表
     */
    public String list() {
        Long userId = getParameterLong("userId");
        if (null == userId){
            //当前操作人的IdName对象
            UserDTO userDto = LoginInfoUtils.getLoginInfo(request).getUserDTO();
            userId = userDto.getId();
        }
        userNotes = userNoteService.getUserNoteListByUserId(userId);
        return "list";
    }

    /***
     * 保存
     */
    public void save() {
        Map<String, Object> result = new HashMap<String, Object>();
        try{
            User user = null;
            Long userId = getParameterLong("userId");
            if (null != userId){
                user = orgnAPIService.getUserByUserId(userId);
            } else {
                //当前操作人的IdName对象
                UserDTO userDto = LoginInfoUtils.getLoginInfo(request).getUserDTO();
                user = new User(userDto.getId(), userDto.getLoginName(), userDto.getRealName());
            }
            userNoteService.saveUserNotes(userNotes, user);
            result.put("success", "true");
        }catch (Exception e){
            result.put("success", "false");
        }
        renderJson(result);
    }
    /**
     * 得到审批常用语
     * @author jun
     */
    public void getUserSpNotes(){
        Long userId = getParameterLong("userId");
        User user = null;
        if (null != userId){
            user = orgnAPIService.getUserByUserId(userId);
        } else {
            //当前操作人的IdName对象
            UserDTO userDto = LoginInfoUtils.getLoginInfo(request).getUserDTO();
            user = new User(userDto.getId(), userDto.getLoginName(), userDto.getRealName());
        }
        List<UserNote> list = userNoteService.getUserNoteListByUserId(null != userId ? userId : user.getUserId());
        List<Map<String, Object>> result = new ArrayList<Map<String, Object>>();
        if (list != null) {
            Map<String, Object> data = null;
            for (UserNote sn : list) {
                data = new HashMap<String, Object>();
                data.put("id", sn.getId());
                data.put("note", sn.getNote());
                result.add(data);
            }
        }
        renderJson(result);
    }

    public List<UserNote> getUserNotes() {
        return userNotes;
    }

    public void setUserNotes(List<UserNote> userNotes) {
        this.userNotes = userNotes;
    }
}
