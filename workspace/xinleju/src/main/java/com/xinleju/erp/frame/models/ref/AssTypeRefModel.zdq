package com.xinleju.erp.frame.models.ref;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.bean.Page;
import com.xinleju.erp.base.app.config.App;
import com.xinleju.erp.frame.dao.FiBusinessDao;
import com.xinleju.erp.frame.itf.IRefModel;
import com.xinleju.erp.frame.service.FiSysDataService;
import com.xinleju.erp.frame.utils.BeanUtil;

public class AssTypeRefModel implements IRefModel {
	@Autowired
	FiBusinessDao fibusinessDao;
	@Autowired
	private FiSysDataService fiSysDataService;
	
	private Long fisysinfoid;
	
	private String targsyscorpid;
	
	public AssTypeRefModel(Long fisysinfoid,String targsyscorpid){
		this.fisysinfoid = fisysinfoid;
		this.targsyscorpid = targsyscorpid;
	}
	
	
	@Override
	public Page getData(int start,int limit,String keywords) {
		fiSysDataService = App.getBean(FiSysDataService.class);
		Page page = new Page();
		List<Map<String,Object>> items  = null;
		if(fisysinfoid != null && targsyscorpid != null){
			items= transfrom(fiSysDataService.queryAssTypes(fisysinfoid, targsyscorpid));
		}else{
			items = new ArrayList<Map<String,Object>>();
		}
		page.setItems(items);
		page.setTotal(items.size());
		return page;
	}
	
	private List<Map<String,Object>> transfrom(List<?> list){
		List<Map<String,Object>> transList = new ArrayList<Map<String,Object>>();
		if(list == null)
			return transList;
		for(Object obj : list){
			transList.add(transform(obj));
		}
		return transList;
	}
	
	private Map<String,Object> transform(Object entity){
		Map<String,Object> map = new HashMap<String,Object>();
		map.put(getKeyField(), BeanUtil.getAttribute(getKeyField(),entity));
		map.put(getNameField(), BeanUtil.getAttribute(getNameField(),entity));
		for(String field : getShowFields()){
			Object value =  BeanUtil.getAttribute(field,entity);
			map.put(field, value);
		}
		return map;
	}

	@Override
	public String getKeyField() {
		return "id";
	}

	@Override
	public String getNameField() {
		return "assname";
	}

	@Override
	public String[] getShowFields() {
		return new String[]{"assname","asscode"};
	}
	
	@Override
	public String[] getShowNames() {
		return new String[]{"辅助核算编码","辅助核算名称"};
	}

	@Override
	public String getTitle() {
		return "辅助核算";
	}

	@Override
	public Boolean isMutil() {
		return false;
	}
	
	@Override
	public String getCodeField() {
		return "asscode";
	}
}
