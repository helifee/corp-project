package com.xinleju.erp.frame.models.ref;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.xinleju.erp.base.app.bean.Page;
import com.xinleju.erp.frame.dao.AppDao;
import com.xinleju.erp.frame.dao.FiBusinessDao;
import com.xinleju.erp.frame.itf.IRefModel;
import com.xinleju.erp.frame.models.App;
import com.xinleju.erp.frame.models.BaseEntity;
import com.xinleju.erp.frame.models.BusinessObject;

@Component
public class BORefModel implements IRefModel {
	@Autowired
	FiBusinessDao fibusinessDao;
	@Autowired
	private AppDao appDao;
	@Override
	public Page getData(int start,int limit,String keywords) {
		DetachedCriteria dc = DetachedCriteria.forClass(BusinessObject.class);
		dc.add(Restrictions.eqOrIsNull("status", 0));
		dc.add(Restrictions.eq("bdobject", "true"));
		
		if (StringUtils.isNotBlank(keywords)) {
			dc.add(Restrictions.like("vobject", keywords, MatchMode.ANYWHERE));
		}
		Page page = fibusinessDao.getDao().findPage(dc, start, limit);
		List<Map<String,Object>> resList = new ArrayList<Map<String,Object>>();
		for(Object entity : page.getItems()){
			if(entity instanceof BaseEntity)
				resList.add( transform((BaseEntity)entity));
		}	
		page.setItems(resList);
		return page;
	}
	
	private Map<String,Object> transform(BaseEntity entity){
		Map<String,Object> map = new HashMap<String,Object>();
		map.put(getKeyField(), entity.getAttribute(getKeyField()));
		map.put(getNameField(), entity.getAttribute(getNameField()));
		Map<String,App> appMap = appDao.getAppMap();
		for(String field : getShowFields()){
			Object value =  entity.getAttribute(field);
			if("vsyscode".equals(field)){
				App app = appMap.get(value);
				value = app == null ? value : appMap.get(value).getName();
			}
			map.put(field, value);
		}
		return map;
	}

	@Override
	public String getKeyField() {
		return "id";
	}

	@Override
	public String getNameField() {
		return "vobject";
	}
	
	

	@Override
	public String[] getShowFields() {
		return new String[]{"vsyscode","vobject","vdesc"};
	}
	
	@Override
	public String[] getShowNames() {
		return new String[]{"系统编码","对象名称","描述"};
	}

	@Override
	public String getTitle() {
		return "业务对象";
	}

	@Override
	public Boolean isMutil() {
		return false;
	}

	@Override
	public String getCodeField() {
		return "";
	}
}
