package com.xinleju.erp.frame.utils;

import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

public class BeanUtil {
	public static void setAttribute(String name, Object value, Object entity) {
		if (name == null || name.length() == 0)
			return;
		Class<?> clazz = entity.getClass();
		String methodName = "set" + name.substring(0, 1).toUpperCase()
				+ name.substring(1);
		try {
			Method method = clazz.getMethod(methodName, value.getClass());
			method.invoke(entity, value);
		} catch (Exception e) {

		}
	}
	
	public static String getterMethodName(String name,Object entity){
		if (name == null || name.length() == 0)
			return null;
		Class<?> clazz = entity.getClass();
		String prefix = "get";
		try {
			Field field = clazz.getDeclaredField(name);
			if (field.getType().isAssignableFrom(boolean.class))
				prefix = "is";
		} catch (Exception e) {

		}
		String methodName = prefix + name.substring(0, 1).toUpperCase()
				+ name.substring(1);
		return methodName;
	}

	public static Object getAttribute(String name, Object entity) {
		try {
			String methodName = getterMethodName(name, entity);
			Class<?> clazz = entity.getClass();
			Method method = null;
			method = clazz.getMethod(methodName);
			return method.invoke(entity);
		} catch (Exception e) {
			return null;
		}
	}
	
	public static Object getAttribute(String name, Object entity ,Object... params ) {
		try {
			String methodName = getterMethodName(name, entity);
			Class<?> clazz = entity.getClass();
			Method method = null;
			List<Class<?>> classList = new ArrayList<Class<?>>();
			if(params != null && params.length > 0 )
				for(Object param : params){
					if(param == null)
						classList.add(Object.class);
					else
						classList.add(param.getClass());
				}
			method = clazz.getMethod(methodName,classList.toArray(new Class<?>[0]));
			return method.invoke(entity,params);
		} catch (Exception e) {
			return null;
		}
	}
}
