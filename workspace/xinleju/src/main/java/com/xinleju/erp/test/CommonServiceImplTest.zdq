package com.xinleju.erp.test;


import org.junit.Before;
import org.junit.Test;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.xinleju.erp.data.cache.api.BaseExtendAPI;
import com.xinleju.erp.flow.flowutils.bean.FlowResult;
import com.xinleju.erp.flow.service.api.extend.BaseAPI;
import com.xinleju.erp.flow.service.api.extend.CommonService;
import com.xinleju.erp.flow.service.api.extend.FlowService;
import com.xinleju.erp.flow.service.api.extend.OrgnService;
import com.xinleju.erp.flow.service.api.extend.UserSerivce;

public class CommonServiceImplTest {
	
	//private BaseExtendAPI baseExtendAPI;
	private BaseAPI baseAPI;
	private OrgnService orgnService;
	private UserSerivce userService;
	private FlowService flowService;
	private CommonService commonService;
	
	

  @Before
  public void beforeClass() {
	  ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(new String[] {"test-dubbo.xml"});
      context.start();
     // baseExtendAPI = (BaseExtendAPI)context.getBean("exBaseAPIService");
      baseAPI = (BaseAPI)context.getBean("baseAPIService");
      
      orgnService = (OrgnService)context.getBean("orgnServiceCustmer");
      userService = (UserSerivce)context.getBean("userServiceCustmer");
      flowService = (FlowService)context.getBean("flowServiceCustmer");
      commonService = (CommonService)context.getBean("commonServiceCustmer");
  }

  @Test
  public void getMaxBizCode() {
	  
	  FlowResult<String> fr = commonService.getMaxBizCode("PL");
	  System.out.println("--getMaxBizCode------"+ fr.getResult());
  }

  @Test
  public void getNextBizCode() {
	  FlowResult<String> fr = commonService.getNextBizCode("PL");
	  System.out.println("--getNextBizCode------"+ fr.getResult());
  }

  @Test
  public void isStored() {
	  
	 
  }

  @Test
  public void sendMsg() {
	  FlowResult<Boolean> fr = commonService.sendMsg("PL","290923","", "",null,"YD", "", "zzchenxi", null);
	  
	  System.out.println("--sendMsg------"+ fr.getResult());
  }

  @Test
  public void store() {
  }

  @Test
  public void unstore() {
  }
}
