package com.xinleju.erp.flow.dao.impl;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.xinleju.erp.flow.flowutils.bean.GvBean;
import com.xinleju.erp.flow.flowutils.bean.Gvs;
import com.xinleju.erp.flow.models.Gv;
import com.xinleju.erp.flow.utils.GvUtils;

/**
 * 
 * 
 * <p>
 * </p>
 * <p>
 * </p>
 * 
 * @author 孙朝辉
 * @version $Id: GvDAO.java 740 2014-06-30 03:38:39Z sunchaohui $
 * @since
 * 
 */
@Repository
public class GvDAO extends BaseDAO {

    /**
     * 
     * <p>
     * 批量插入全局变量
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param fiId
     *            流程实例ID
     * @param gvs
     *            全局变量集合
     */
    public void putGvs(Long fiId, Gvs gvs) {
        if (gvs != null) {
            for (GvBean gv : gvs.asList()) {
                putGv(fiId, gv.getCode(), gv.getVal(), gv.getName());
            }
        }
    }

    /**
     * 
     * <p>
     * 插入一个全局变量
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param fiId
     *            流程实例ID
     * @param k
     *            键
     * @param v
     *            值
     * @param name
     *            民称
     */
    public void putGv(Long fiId, String k, Object v, String name) {
        if (v != null) {
            String type = GvUtils.getType(v);
            Gv gv = getGv(fiId, k);
            if (gv == null) {
                gv = new Gv();
            }
            gv.setFiId(fiId);
            gv.setName(k);
            gv.setDisplayName(name);
            gv.setType(type);
            gv.setVal(String.valueOf(v));

            getDao().saveOrUpdate(gv);
        }
    }

    /**
     * 
     * <p>
     * 查询一个全局变量
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param fiId
     *            流程实例ID
     * @param k
     *            键
     * @return 全局变量
     */
    private Gv getGv(Long fiId, String k) {

        return getDao().findFirst(Gv.class, "name = ? and fiId = ?", new Object[] { k, fiId });
    }

    /**
     * 
     * <p>
     * 查询全局变量值,带类型
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param fiId
     *            流程实例ID
     * @param k
     *            键
     * @return 值
     */
    public Object getGValue(Long fiId, String k) {
        Gv gv = getDao().findFirst(Gv.class, "fiId = ? and name = ?", new Object[] { fiId, k });
        Object v = GvUtils.getVal(gv.getType(), gv.getVal());
        return v;
    }

    /**
     * 
     * <p>
     * 查询所有全局变量
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param fiId
     *            流程实例ID
     * @return 全局变量集合
     */
    public Gvs getGvs(Long fiId) {
        List<Gv> gvList = getDao().findByHQL(Gv.class, "from Gv where fiId= ? and val is not null", fiId);
        Gvs gvs = Gvs.create();
        for (Gv gv : gvList) {
            gvs.add(new GvBean(gv.getName(), GvUtils.getVal(gv.getType(), gv.getVal()), gv.getDisplayName()));
        }
        return gvs;
    }

}
