package com.xinleju.erp.frame.enums;

import java.util.HashMap;
import java.util.Map;

import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Restrictions;

import com.xinleju.erp.frame.models.BOFieldInfo;
import com.xinleju.erp.frame.models.BaseEntity;
import com.xinleju.erp.frame.models.BusinessObject;
import com.xinleju.erp.frame.models.FiSysInfo;

/**
 * @author kangss
 *
 */
public enum FiDataSetEnum {
		FI_SYSINFO(FiSysInfo.class,"id","vtargetsysname",Restrictions.eqOrIsNull("status", 0)),
		FI_BUSINESSOBJECT(BusinessObject.class,"id","vobject",Restrictions.eqOrIsNull("status", 0)),
		FI_FIELDINFO(BOFieldInfo.class,"fieldkey","fieldname",Restrictions.eqOrIsNull("status", 0));
		private static Map<Class<?>,FiDataSetEnum> map;
		private DetachedCriteria dc;
		private Class<?> clazz;
		private String keyfield,valuefield;
		private FiDataSetEnum(Class<? extends BaseEntity> clazz ,String keyfield,String valuefield,Criterion... criterions){
			dc = DetachedCriteria.forClass(clazz);
			if(criterions != null)
				for(Criterion criterion: criterions){
					dc.add(criterion);
				}
			this.clazz = clazz;
			this.keyfield = keyfield;
			this.valuefield = valuefield;
		}
		
		public String getKeyfield(){
			return keyfield;
		}
		
		public String getValuefield(){
			return valuefield;
		}
		
		public static FiDataSetEnum get(Class<?> clazz){
			return getMap().get(clazz);
		}
		
		public DetachedCriteria getValue() {
			return dc;
		}

		public Class<?> getKey() {
			return clazz;
		}
		
		private static Map<Class<?>,FiDataSetEnum> getMap(){
			if(map == null){
				map = new HashMap<Class<?>,FiDataSetEnum>();
				for(FiDataSetEnum data : values()){
					map.put(data.getKey(),data);
				}
			}
			return map;
		}
}
