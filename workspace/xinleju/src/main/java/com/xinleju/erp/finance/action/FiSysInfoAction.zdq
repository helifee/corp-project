package com.xinleju.erp.finance.action;

import java.lang.reflect.Field;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import net.sf.json.JSONObject;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.annotation.PageField;
import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.base.utils.JsonUtils;
import com.xinleju.erp.finance.models.FiSysinfo;
import com.xinleju.erp.finance.service.FiSysInfoService;
import com.xinleju.erp.flow.utils.LoginInfoUtils;
import com.xinleju.erp.frame.enums.FiSysTypeEnum;
import com.xinleju.erp.frame.models.BaseEntity;
import com.xinleju.erp.frame.models.BusinessObject;
import com.xinleju.erp.frame.models.FiSysInfo;
import com.xinleju.erp.frame.service.FiBusinessService;
import com.xinleju.erp.frame.utils.CommonUtil;

public class FiSysInfoAction extends BaseAction {
	private static final Log log = LogFactory.getLog(FiSysInfoAction.class);
	private FiSysinfo fiSysInfo;
	@Autowired
	private FiBusinessService fiBusinessService;
	@Autowired
	private FiSysInfoService fiSysInfoService;
	private Map<String,Map<String,Object>> pageFiledMap;
	/**
	 * 系统注册列表页
	 * @return
	 */
	public String list() {
		try {
			request.setAttribute("statusMap", FiSysInfo.getStatusMap());
			request.setAttribute("sysTypeMap", FiSysTypeEnum.getMap());
			request.setAttribute("vtype_ref", CommonUtil.transRef( FiSysTypeEnum.getMap()).toString());
			Map<String,String> jsMap = new HashMap<String,String>();
			//系统状态列表
			jsMap.put("status_ref", CommonUtil.transRef(BusinessObject.getStatusMap()).toString());
			//系统接口类型
			jsMap.put("vtype_ref", CommonUtil.transRef(FiSysTypeEnum.getMap()).toString());
			request.setAttribute("refs", jsMap);
		} catch (Exception e) {
			log.error("",e);
		}
		return "list";
	}
	
	/**
	 * 查询(加载)系统数据
	 */
	public void loadlist(){
		String keyword = request.getParameter("keyword");
		String sta = request.getParameter("status");
		DetachedCriteria dc = DetachedCriteria.forClass(FiSysinfo.class);
		if (StringUtils.isNotBlank(keyword)) {
			dc.add(Restrictions.like("fiSysName", keyword, MatchMode.ANYWHERE));
		}

		if (StringUtils.isNotBlank(sta)) {
			Integer status = Integer.valueOf(sta);
			dc.add(Restrictions.eq("status", status));
			request.setAttribute("status", status);
		}
		page = getCommonService().findPage(dc, start, limit);
		JSONObject jobj = CommonUtil.transListResult(page.getTotal(), page.getItems());
		renderJson(jobj.toString());
	}

	public Map<String, Map<String, Object>> getPageFiledMap(Class<? extends BaseEntity> clazz) {
		if(pageFiledMap == null){
			pageFiledMap = new HashMap<String,Map<String,Object>>();
			Field[] fields = clazz.getDeclaredFields();
			for(Field field : fields){
				PageField pageField = field.getAnnotation(PageField.class);
				Map<String,Object> map = new HashMap<String,Object>();
				map.put("showname", pageField.showname());
				map.put("must", pageField.must());
				map.put("show", pageField.show());
				map.put("type", pageField.type());
				map.put("unique", pageField.unique());
				map.put("valuemap", pageField.valuemap());
				map.put("refmodel", pageField.refmodel());
				pageFiledMap.put(field.getName(), map);
			}
		}
		return pageFiledMap;
	}

	public FiBusinessService getFiBusinessService() {
		return fiBusinessService;
	}

	public void setFiBusinessService(FiBusinessService fiBusinessService) {
		this.fiBusinessService = fiBusinessService;
	}


	/**
	 * 编辑页面
	 * 
	 * @return
	 */
	public String edit() throws Exception {
//		Long id = getParameterLong("id");
//		if (id != null) {
//			FiAggDTO aggDTO = fiBusinessService.queryAggById(
//					FiSysInfo.class, id);
//			fiSysInfo = (FiSysInfo) aggDTO.getParent();
//		}
//		request.setAttribute("statusMap", FiSysInfo.getStatusMap());
//		request.setAttribute("sysTypeMap", FiSysTypeEnum.getMap());
//		Map<String,String> jsMap = new HashMap<String,String>();
//		jsMap.put("status_ref", CommonUtil.transRef(BusinessObject.getStatusMap()).toString());
//		jsMap.put("vtype_ref", CommonUtil.transRef( FiSysTypeEnum.getMap()).toString());
//		request.setAttribute("refs", jsMap);
		return "edit";
	}

	/**
	 * 根据id查出 财务系统信息
	 */
	public void getFiSysinfo(){
		Long id = this.getParameterLong("id");
		FiSysinfo sysinfo = this.fiSysInfoService.getFiSysinfoById(id);
		this.renderJson(sysinfo);
	}
	
	/**
	 * 保存对象
	 */
	public void saveFiSysinfo() throws Exception {
		Map<String, Object> result = new HashMap<String, Object>();
		if (fiSysInfo.getId() != null) {
			fiSysInfo.setEditDate(new Date());
			fiSysInfo.setEditUserId(LoginInfoUtils.getLoginInfoUserDtoId(request));
		} else {
			fiSysInfo.setCreateDate(new Date());
			fiSysInfo.setStatus(0);
			fiSysInfo.setCreateUserId(LoginInfoUtils.getLoginInfoUserDtoId(request));
		}
		
		try {
			this.fiSysInfoService.saveOrUpdate(fiSysInfo);
//			FiAggDTO aggDTO = new FiAggDTO();
//			aggDTO.setParent(fiSysInfo);
//			ValidateCheckUtil.checkValidate(aggDTO);
//			fiBusinessService.saveOrUpdate(aggDTO);
			
			result.put("success", true);
			result.put("msg", "保存成功");
			String json = JsonUtils.toJSONString(result);	
			render(json, "text/html;charset=UTF-8");
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
			log.error("",e);
			String json = JsonUtils.toJSONString(result);	
			render(json, "text/html;charset=UTF-8");
		}
	}

	/**
	 * 启用
	 */
	public void enable() {
		Map<String, Object> result = new HashMap<String, Object>();
		try {
			String ids = request.getParameter("id");
			if (ids != null) {
				String[] idAry = ids.split(";");
				fiBusinessService.batchUpdateStatus(FiSysInfo.class,
						CommonUtil.transformIds(idAry), Integer.valueOf(0));
			}
			result.put("success", true);
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
		}
		renderJson(result);
	}

	/**
	 * 删除 
	 */
	public void delete() {
		Map<String, Object> result = new HashMap<String, Object>();
		try {
			String ids = request.getParameter("id");
			if (ids != null) {
				Long[] idAry = CommonUtil.transformIds(ids.split(";"));
				this.fiSysInfoService.delete(idAry);
			}
			result.put("success", true);
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
			log.error("",e);
		}
		renderJson(result);
	}


	/**
	 * 禁用
	 */
	public void unable() {
		Map<String, Object> result = new HashMap<String, Object>();
		try {
			String ids = request.getParameter("id");
			if (ids != null) {
				String[] idAry = ids.split(";");
				fiBusinessService.batchUpdateStatus(FiSysInfo.class,
						CommonUtil.transformIds(idAry), Integer.valueOf(1));
			}
			result.put("success", true);
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
		}
		renderJson(result);
	}

	public String loadFields() {
		return "fieldsInfo";
	}
	
	public FiSysinfo getFiSysInfo() {
		return fiSysInfo;
	}

	public void setFiSysInfo(FiSysinfo fiSysInfo) {
		this.fiSysInfo = fiSysInfo;
	}

}
