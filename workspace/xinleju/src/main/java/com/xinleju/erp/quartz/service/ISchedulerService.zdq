package com.xinleju.erp.quartz.service;

import java.util.Date;
import java.util.Map;

import org.quartz.Trigger;


public interface ISchedulerService {
	/**
	 * 根据 Quartz Cron Expression 调试任务
	 * @param cronExpression  Quartz Cron 表达式，如 "0/10 * * ? * * *"等
	 */
	void schedule(String jobDetail,String cronExpression,Map<String,Object> triggerMap);
	
	/**
	 * 根据 Quartz Cron Expression 调试任务
	 * @param name  Quartz CronTrigger名称
	 * @param cronExpression Quartz Cron 表达式，如 "0/10 * * ? * * *"等
	 */
	void schedule(String jobDetail,String name,String cronExpression,Map<String,Object> triggerMap);
	
	
	
	/**
	 * 在startTime时执行调试一次
	 * @param startTime 调度开始时间
	 */
	void schedule(String jobDetail,Date startTime,Map<String,Object> triggerMap);	
	
	/**
	 * 在startTime时执行调试一次
	 * @param name Quartz SimpleTrigger 名称
	 * @param startTime 调度开始时间
	 */
	void schedule(String jobDetail,String name,Date startTime,Map<String,Object> triggerMap);
	
	/**
	 * 在startTime时执行调试，endTime结束执行调度
	 * @param startTime 调度开始时间
	 * @param endTime 调度结束时间
	 */
	void schedule(String jobDetail,Date startTime,Date endTime,Map<String,Object> triggerMap);	
	
	/**
	 * 在startTime时执行调试，endTime结束执行调度
	 * @param name Quartz SimpleTrigger 名称
	 * @param startTime 调度开始时间
	 * @param endTime 调度结束时间
	 */
	void schedule(String jobDetail,String name,Date startTime,Date endTime,Map<String,Object> triggerMap);
	
	/**
	 * 在startTime时执行调试，endTime结束执行调度，重复执行repeatCount次
	 * @param startTime 调度开始时间
	 * @param endTime 调度结束时间
	 * @param repeatCount 重复执行次数
	 */
	void schedule(String jobDetail,Date startTime,Date endTime,int repeatCount,Map<String,Object> triggerMap);	
	
	/**
	 * 在startTime时执行调试，endTime结束执行调度，重复执行repeatCount次
	 * @param name Quartz SimpleTrigger 名称
	 * @param startTime 调度开始时间
	 * @param endTime 调度结束时间
	 * @param repeatCount 重复执行次数
	 */
	void schedule(String jobDetail,String name,Date startTime,Date endTime,int repeatCount,Map<String,Object> triggerMap);
	
	/**
	 * 在startTime时执行调试，endTime结束执行调度，重复执行repeatCount次，每隔repeatInterval秒执行一次
	 * @param startTime 调度开始时间
	 * @param endTime 调度结束时间
	 * @param repeatCount 重复执行次数
	 * @param repeatInterval 执行时间隔间
	 */
	void schedule(String jobDetail,Date startTime,Date endTime,int repeatCount,int repeatInterval,Map<String,Object> triggerMap) ;
	
	/**
	 * 在startTime时执行调试，endTime结束执行调度，重复执行repeatCount次，每隔repeatInterval秒执行一次
	 * @param name Quartz SimpleTrigger 名称
	 * @param startTime 调度开始时间
	 * @param endTime 调度结束时间
	 * @param repeatCount 重复执行次数
	 * @param repeatInterval 执行时间隔间
	 */
	void schedule(String jobDetail,String name,Date startTime,Date endTime,int repeatCount,int repeatInterval,Map<String,Object> triggerMap);
	
	
	/**
	 * 根据名称和组别暂停Tigger
	 * @param triggerName
	 * @param group
	 */
	void pauseTrigger(String triggerName,String group);
	
	/**
	 * 恢复Trigger
	 * @param triggerName
	 * @param group
	 */
	void resumeTrigger(String triggerName,String group);
	
	/**
	 * 删除Trigger
	 * @param triggerName
	 * @param group
	 */
	boolean removeTrigdger(String triggerName,String group);
	
	
	/**
	 * 构建CronTrigger
	 * @param jobDetail
	 * @param name
	 * @param cronExpression
	 * @param triggerMap
	 * @return
	 */
	Trigger buildCronTrigger(String jobDetail,String name, String cronExpression,Map<String,Object> triggerMap);
	
	Trigger buildSimpleTrigger(String jobDetail, String name,Date startTime,Date endTime,Integer repeatCount, Integer repeatInterval, Map<String, Object> triggerMap);
}
