package com.xinleju.erp.flow.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.base.utils.CollectionUtils;
import com.xinleju.erp.flow.dao.impl.TrDAO;
import com.xinleju.erp.flow.flowutils.bean.Gvs;
import com.xinleju.erp.flow.models.Tr;
import com.xinleju.erp.flow.utils.CondUtils;

/**
 * 
 * 
 * <p>
 * </p>
 * <p>
 * </p>
 * 
 * @author 孙朝辉
 * @version $Id: TrService.java 740 2014-06-30 03:38:39Z sunchaohui $
 * @since
 * 
 */
@Service
public class TrService extends BaseService {

    @Autowired
    private TrDAO trDAO;
    
    /**
     * 
     * <p>
     * 流转是否可通行
     * </p>
     * <p>
     * 一般的,trs是fomr-to之间的一组Tr,一般trs.size == 0,只要有一个Tr可以通过,则表示这2个节点可以通过
     * </p>
     * 
     * @author 孙朝辉
     * @param trs
     *            流转集合
     * @param data
     *            计算参数集合
     * @return 是否能够通过
     */
    public boolean canPassTo(List<Tr> trs, Gvs data) {

        for (Tr tr : trs) {
            String condTr = tr.getCond4Parse();
            boolean isTrue = CondUtils.parseCond(condTr, data);
            if (isTrue) {
                return true;
            }
        }

        return false;
    }
    /**
     * 获取
     * @param flowCode
     * @param flowVersion
     * @return
     */
    public List<String> getCondNameListBy(String flowCode, String flowVersion){
        List<String> condNameList = new ArrayList<String>();
        List<Tr> trList = trDAO.getListByFlowCodeAndFlowVersion(flowCode, flowVersion);
        for (Tr tr : trList){
            condNameList.addAll(CondUtils.parseNames(tr.getCond4Parse()));
        }
        condNameList = CollectionUtils.distinct(condNameList);
        return condNameList;
    }
    
}
