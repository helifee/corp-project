package com.xinleju.erp.frame.service;


import java.util.List;

import java.util.Map;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.xinleju.erp.base.app.bean.Page;
import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.flow.flowutils.bean.MsgDTO;
import com.xinleju.erp.flow.flowutils.bean.PageBean;
import com.xinleju.erp.flow.service.api.extend.dto.UserDTO;
import com.xinleju.erp.flow.service.api.utils.MsgUtils;
import com.xinleju.erp.flow.service.api.utils.UserUtils;
import com.xinleju.erp.frame.dao.MsgDao;
import com.xinleju.erp.frame.models.Msg;
import com.xinleju.erp.frame.service.extend.dto.MsgDto;


/**
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司 消息Service <详细描述>
 * 
 * @author zhengxj
 * @version $Id: MsgService.java 9078 2016-02-18 01:25:14Z yuanzhanpeng $
 * @since
 * @see
 */
@Service
@Transactional(readOnly = true)
public class MsgService extends BaseService {

    /**
     * 消息DAO
     */
    @Autowired
    private MsgDao msgDao;

    /**
     * 消息列表 〈详细描述〉
     * 
     * @author zhengxj
     * @param msgDto 查询参数
     * @param start 分页开始数
     * @param limit 每页条数
     * @return page
     */
    public Page getMsgList(MsgDto msgDto, int start, int limit) {
        return msgDao.getMsgList(msgDto, start, limit);
    }
    
    /**
     * 待办消息列表 〈详细描述〉
     * 
     * @author zhengxj
     * @param msgDto 查询参数
     * @param start 分页开始数
     * @param limit 每页条数
     * @return page
     */
    public Page getDbMsgList(MsgDto msgDto, int start, int limit) {
        return msgDao.getDbMsgList(msgDto, start, limit);
    }

    /**
     * 获取待办数量
     * 
     * @author zhengxj
     * @param opType 消息操作类型
     * @return
     */
    public int getDBMsgCount(String opType) {
        return msgDao.getDBMsgCount(opType);
    }

    /**
     * 〈简述〉 〈详细描述〉
     * 
     * @author jun
     * @param opType
     * @param loginName
     * @return
     */
    public int getDBMsgCount(String opType, String loginName) {
        return msgDao.getDBMsgCount(opType, loginName);
    }

    /**
     * 获取通知数量
     * 
     * @author zhengxj
     * @param msgType 消息类型
     * @return
     */
    public int getTZMsgCount(Integer msgType) {
        return msgDao.getTZMsgCount(msgType);
    }

    /**
     * 获取通知数量
     * @author zhongjun
     * @param msgType 消息类型
     * @param loginName 操作人
     * @return
     */
    public int getTZMsgCount(Integer msgType, String loginName) {
        return msgDao.getTZMsgCount(msgType, loginName);
    }
    
    /**
     * 获取消息数量
     * @author jun
     * @param msgDTO
     * @return
     */
    public int getMsgCount(MsgDTO msgDTO) {
        return msgDao.getMsgCount(MsgUtils.fixMsgDTOtoMsgDto(msgDTO));
    }
    /**
     * 获取消息的分类
     * @author jun
     * @param msgDTO 消息信息（）
     * @param start 数据查询的开始位置
     * @param limit 每页数据条数
     * @return
     */
    @SuppressWarnings("unchecked")
    public PageBean<MsgDTO> getMsgList(MsgDTO msgDTO, int start, int limit){
        Page page = msgDao.getMsgList(MsgUtils.fixMsgDTOtoMsgDto(msgDTO), start, limit);
        List<MsgDTO> msgs = MsgUtils.buildMsgDTOList(page.getItems());
        return new PageBean<MsgDTO>(start, limit, page.getTotal(), msgs);
    }
    
    @SuppressWarnings("unchecked")
    public PageBean<Object[]> getGroupLoginNameMsgDTO(MsgDTO msgDTO, int start, int limit){
    	PageBean<Object[]> page = msgDao.getGroupLoginNameMsgDTO(MsgUtils.fixMsgDTOtoMsgDto(msgDTO), start, limit);
        return page;
    }
    
    @Transactional
    public Msg saveMsg(String moduleCode, String msgId, String title, String url, String typedDate,
            String opType, String msgType, String loginName, Map<String,Object> params){
    	return msgDao.saveMsg(moduleCode, msgId, title, url, typedDate, opType, msgType, loginName, params);
    }
}
