package com.xinleju.erp.frame.models.helper;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.xinleju.erp.base.app.config.App;
import com.xinleju.erp.frame.dto.FiBillDTO;
import com.xinleju.erp.frame.itf.IFetchBillData;
import com.xinleju.erp.frame.models.BOFieldInfo;
import com.xinleju.erp.frame.models.BusinessObject;
import com.xinleju.erp.frame.service.FiBusinessService;
import com.xinleju.erp.frame.service.extend.dto.FiAggDTO;
import com.xinleju.erp.frame.utils.BODataHelperUtil;
import com.xinleju.erp.frame.utils.BillImplProxy;

public class BODataTempCache {
	private Map<Long, List<BODataHelper>> helperMap;
	private Map<Long, BOFieldHelper> fieldMap;
	private FiBusinessService fiBusinessService;
	public BODataTempCache(Long[] boids){
		helperMap = new HashMap<Long,List<BODataHelper>>();
		fieldMap = new HashMap<Long,BOFieldHelper>();
		FiAggDTO[] dtos = getFiBusinessService().queryAggByIds(BusinessObject.class, boids);
		for(FiAggDTO dto : dtos){
			initBOData(dto);
		}
	}
	
	public BODataTempCache(){
		helperMap = new HashMap<Long,List<BODataHelper>>();
		fieldMap = new HashMap<Long,BOFieldHelper>();
	}
	
	
	private FiBusinessService getFiBusinessService(){
		if(fiBusinessService == null)
			fiBusinessService = App.getBean(FiBusinessService.class);
		return fiBusinessService;
	}
	
	public List<BODataHelper> getDatas(Long boid){
		initBOData(boid);
		return helperMap.get(boid);
	}
	
	public  BOFieldHelper getBOFieldHelper(Long boid){
		initBOData(boid);
		return fieldMap.get(boid);
	}
	
	public Object getBONameByKey(Long boid,Object key){
		BOFieldHelper helper = getBOFieldHelper(boid);
		return getBONameBy( boid, helper.getKeyfield().getFieldkey(), key , helper.getNamefield().getFieldkey());
	}
	
	public BODataHelper getBODataHelperByKey(Long boid,Object value){
		List<BODataHelper> list = getDatas(boid);
		BOFieldHelper fieldHelper = getBOFieldHelper(boid);
		if(list == null || fieldHelper == null || value == null)
			return null;
		for(BODataHelper dto : list){
			Object keyvalue = dto.getAttribute(fieldHelper.getKeyfield().getFieldkey());
			if(!value.toString().equals(keyvalue == null ? "" :keyvalue.toString()))
				continue;
			return dto;
		}
		return null;
	}
	
	public Object getBONameBy(Long boid,String field,Object value, String findfield){
		List<BODataHelper> list = getDatas(boid);
		BOFieldHelper fieldHelper = getBOFieldHelper(boid);
		if(list == null || fieldHelper == null || value == null)
			return null;
		for(BODataHelper dto : list){
			Object keyvalue = dto.getAttribute(field);
			if(!value.toString().equals(keyvalue == null ? "" :keyvalue.toString()))
				continue;
			return dto.getAttribute(findfield);
		}
		return null;
	}
	
	private void initBOData(Long boid){
		if(helperMap.get(boid) != null )
			return;
		FiAggDTO dto = getFiBusinessService().queryAggById(BusinessObject.class, boid);
		initBOData(dto);
	}
	
	private  void initBOData(FiAggDTO dto){
//		if(dto == null || dto.getParent() == null)
//			return;
//		BusinessObject bo = (BusinessObject)dto.getParent();
//		@SuppressWarnings("unchecked")
//		List<BOFieldInfo> fieldInfoList = (List<BOFieldInfo>) dto.getChildren(BOFieldInfo.class);
//		BOFieldHelper helper = fieldMap.get(bo.getId());
//		if(helper == null){
//			if(fieldInfoList != null){
//				helper = new BOFieldHelper(fieldInfoList);
//				fieldMap.put(bo.getId(),helper);
//			}
//		}
//		List<BODataHelper> dataList = helperMap.get(bo.getId());
//		if(dataList == null){
//			 IFetchBillData fetcher =BillImplProxy.getFetchVoucherDataImpl(bo.getVfetchdataclass());
//			 if(fetcher != null){
//				 List<FiBillDTO> dtoList = fetcher.fetchVoucherData();
//				 if(dtoList != null)
//					 helperMap.put(bo.getId(),BODataHelperUtil.trans(dtoList.toArray(new FiBillDTO[0]),null, fieldInfoList));
//			 }
//		}
	}
	
}
