package com.xinleju.erp.flow.action;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Restrictions;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.flow.models.BizParticipant;
import com.xinleju.erp.flow.service.extend.dto.BizParticipantDto;
import com.xinleju.erp.flow.service.extend.dto.FiOpDto;

/**
 * 
 * 
 * <p>
 * 业务参与人维护
 * </p>
 * <p>
 * 
 * </p>
 * 
 * @author 孙朝辉
 * @version $Id: BizParticipantAction.java 583 2014-06-13 09:38:22Z sunchaohui $
 * @since
 * 
 */
public class BizParticipantAction extends BaseAction {

    /**
     * 
     */
    private BizParticipantDto bizParticipantDto;
    
    /**
     * 模型对象:业务参与人
     */
    private BizParticipant bizParticipant;

    /**
     * 
     * 业务参与人列表
     * 
     * @author 孙朝辉
     * @param
     * @return String
     * 
     */
    public String list() {
        Map<String, String> statusMap = new HashMap<String,String>();
        statusMap.put(FiOpDto.IS_DISABLED_N, "启用");
        statusMap.put(FiOpDto.IS_DISABLED_Y, "禁用");
        request.setAttribute("statusMap", statusMap);
        DetachedCriteria dc = DetachedCriteria.forClass(BizParticipant.class);
        if (null != bizParticipantDto){
            if (StringUtils.isNotEmpty(bizParticipantDto.getKeyword())) {
                dc.add(Restrictions.or(Restrictions.ilike("name", "%" + bizParticipantDto.getKeyword().trim() + "%"), Restrictions.ilike("code", "%" + bizParticipantDto.getKeyword().trim() + "%")));
            }
            if ("1".equals(bizParticipantDto.getStatus())) {
                dc.add(Restrictions.eq("isDisabled", 1));
            } else if ("0".equals(bizParticipantDto.getStatus())) {
                dc.add(Restrictions.or(new Criterion[] { Restrictions.eq("isDisabled", 0), Restrictions.isNull("isDisabled") }));
            }
        }
        page = getCommonService().findPage(dc, start, limit);
        return "list";
    }

    /**
     * 
     * 业务参与人编辑
     * 
     * @author 孙朝辉
     * @param
     * @return String
     * 
     */
    public String edit() {

        bizParticipant = super.edit(BizParticipant.class);

        return "edit";
    }

    /**
     * 
     * 〈简述〉 〈详细描述〉
     * 
     * @author Administrator
     *  [参考的 类、类#方法、类#成员]
     */
    public void save() {
        getCommonService().saveOrUpdate(bizParticipant);
        redirect("BizParticipant!list.do", "isDisabled", "name");
    }
    
    public void updateOp(){
        Map<String,Object> result = new HashMap<String,Object>();
        try{
            String ids = getParameter("ids");
            Integer isdisabled = getParameterInt("isdisabled");
            if (null == isdisabled){
                isdisabled = 0;
            }
            if(StringUtils.isNotBlank(ids)) {
                String[] idAry = ids.split(";");
                for(String id : idAry) {
                    getCommonService().execute("update BizParticipant set isDisabled = ? where id = ?", isdisabled, Long.valueOf(id));
                }
            }
            result.put("success", true);
        }catch(Exception e){
            result.put("success", false);
            result.put("msg", e.getMessage());
        }
        renderJson(result);
    }
    
    /**
     * 
     * 业务参与人禁用
     * 
     * @author 孙朝辉
     * @param
     * 
     */
    public void delete() {

        if (ids != null) {
            for (Long id : ids) {
                getCommonService().execute("update BizParticipant set isDisabled = 1 where id = ?", id);
            }
        }
        redirect("BizParticipant!list.do", "isDisabled", "name");
    }

    /**
     * 
     * 业务参与人解禁
     * 
     * @author 孙朝辉
     * @param
     * 
     */
    public void unDelete() {

        if (ids != null) {
            for (Long id : ids) {
                getCommonService().execute("update BizParticipant set isDisabled = 0 where id = ?", id);
            }
        }
        redirect("BizParticipant!list.do", "isDisabled", "name");
    }

    public BizParticipant getBizParticipant() {
        return bizParticipant;
    }

    public void setBizParticipant(BizParticipant bizParticipant) {
        this.bizParticipant = bizParticipant;
    }

    public BizParticipantDto getBizParticipantDto() {
        return bizParticipantDto;
    }

    public void setBizParticipantDto(BizParticipantDto bizParticipantDto) {
        this.bizParticipantDto = bizParticipantDto;
    }
}
