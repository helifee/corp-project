package com.xinleju.erp.thirdparty.service.impl;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Service;

import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.thirdparty.dto.EmployeeDTO;
import com.xinleju.erp.thirdparty.service.EmployeeService;

@Service
public class EmployeeServiceImpl extends BaseService implements EmployeeService {

	@Autowired
	private JdbcTemplate jt;

	@Override
	public List<EmployeeDTO> getEmployeeList() {
		// TODO Auto-generated method stub
		String sqlStr = "select u.main_role_id,u.id,u.loginname,u.real_name,(CASE WHEN d.ref_id IS NULL THEN 8 ELSE d.ref_id END) ref_id,'' duty,u.position,(CASE u.status WHEN '0' THEN '1' ELSE '0' END) status,u.email,u.is_male, u.Mobile, u.birthday, u.employ_start_date,	u.hire_date,	u.dismiss_date, u.is_local from sm_user u LEFT JOIN sm_party_entity r on r.ref_id = u.main_role_id and party_type_id='5' LEFT JOIN sm_party_struct s on s.child_entity_id = r.id  LEFT JOIN sm_party_entity d on d.id = s.parent_entity_id";

		List<EmployeeDTO> employeeList = jt.query(sqlStr, new EmployeeMapeer());
		return employeeList;
	}

	public class EmployeeMapeer implements RowMapper<EmployeeDTO> {

		@Override
		public EmployeeDTO mapRow(ResultSet arg0, int arg1) throws SQLException {
			// TODO Auto-generated method stub
			EmployeeDTO empl = new EmployeeDTO();

			empl.setEmployeeID(Long.toString(arg0.getLong("id")));
			empl.setUsercode(arg0.getString("loginname"));
			empl.setName(arg0.getString("real_name"));
			empl.setDeptID(Long.toString(arg0.getLong("ref_id")));
			empl.setDuty(arg0.getString("duty"));
			empl.setTitle(arg0.getString("position"));
			empl.setStatus(arg0.getString("status"));
			empl.setEmail(arg0.getString("email"));
			empl.setIsLocal(arg0.getString("is_male"));
			empl.setMobile(arg0.getString("Mobile"));
			empl.setBirthday(arg0.getDate("birthday") == null ? "" : arg0.getDate("birthday").toString());
			empl.setEmployStartDate(arg0.getDate("employ_start_date") == null ? "" : arg0.getDate("employ_start_date").toString());
			empl.setHireDate(arg0.getDate("hire_date") == null ? "" : arg0.getDate("hire_date").toString());
			empl.setDismissDate(arg0.getDate("dismiss_date") == null ? "" : arg0.getDate("dismiss_date").toString());
			empl.setIsLocal(String.valueOf(arg0.getInt("is_local")));

			return empl;
		}

	}

}
