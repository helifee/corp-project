package com.xinleju.erp.flow.service.api.utils;

import java.util.ArrayList;
import java.util.List;

import com.xinleju.erp.flow.service.api.extend.dto.FuncDTO;
import com.xinleju.erp.flow.service.api.extend.dto.OpDTO;
import com.xinleju.erp.frame.models.FuncButton;
import com.xinleju.erp.frame.models.FuncModule;

public class FuncUtils {

    
    /**
     * 构建FuncDtoList
     * @author hongbin
     * @param funcs
     * @return
     */
    public static List<FuncDTO> buildFuncDtoList(List<FuncModule> funcs) {
        List<FuncDTO> funcDtos = new ArrayList<FuncDTO>();
        if(funcs != null && !funcs.isEmpty()){
            FuncDTO dto = null;
            for(FuncModule func : funcs){
                dto =  buildFuncDto(func);
                if(dto != null) {
                    funcDtos.add(dto);
                }
            }
        }
        return funcDtos;
    }
    
    /**
     * 构建 FuncDTO
     * @author hongbin
     * @param func
     * @return
     */
    public static FuncDTO buildFuncDto(FuncModule func) {
        FuncDTO funcDto = null;
        if(func != null){
            funcDto = new FuncDTO();
            funcDto.setId(func.getId());
            funcDto.setCode(func.getCode());
            funcDto.setName(func.getName());
            
            funcDto.setUrl(func.getFuncUrl());
            funcDto.setParentId(func.getParentId());
            funcDto.setSystemCode(func.getSystemCode());
            
        }
        return funcDto;
    }
    
    
    /**
     * 构建OpDtoList
     * @author hongbin
     * @param funcBtns
     * @return
     */
    public static List<OpDTO> buildOpDtoList(List<FuncButton> funcBtns) {
        List<OpDTO> opDtos = new ArrayList<OpDTO>();
        if(funcBtns != null && !funcBtns.isEmpty()){
            OpDTO dto = null;
            for(FuncButton fb : funcBtns){
                dto =  buildOpDto(fb);
                if(dto != null) {
                    opDtos.add(dto);
                }
            }
        }
        return opDtos;
    }
    
    
    /**
     * 构建 OpDTO
     * @author hongbin
     * @param funcBtn
     * @return
     */
    public static OpDTO buildOpDto(FuncButton funcBtn) {
        OpDTO opDto = null;
        if(funcBtn != null){
            opDto = new OpDTO();
            opDto.setCode(funcBtn.getCode());
            opDto.setName(funcBtn.getName());
            opDto.setFuncModuleId(funcBtn.getFuncModuleId());
            opDto.setButtonUrl(funcBtn.getButtonUrl());
        }
        return opDto;
    }

}
