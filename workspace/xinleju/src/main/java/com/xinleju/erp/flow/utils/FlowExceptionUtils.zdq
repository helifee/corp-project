package com.xinleju.erp.flow.utils;

import java.io.PrintWriter;
import java.io.StringWriter;

import org.apache.commons.lang3.StringUtils;

import com.xinleju.erp.base.utils.CollectionUtils;
import com.xinleju.erp.flow.flowutils.bean.DebugInfo;

/**
 * 流程异常工具类
 * @author jun
 *
 */
public class FlowExceptionUtils {
    
    /**
     * 
     * Description: 获得详细异常信息<br>
     * @param ex
     * @return 
     * @see
     */
    public static String getExceptionMsg(Throwable ex){
        StringWriter sw = new StringWriter();
        ex.printStackTrace(new PrintWriter(sw));
        return dealMsg(sw.toString());
    }
    
    
    /**
     *〈从debugInfo中解析异常信息〉
     * @author hongbin
     * @param debugInfo
     * @return
     */
    public static String getExceptionMsg(DebugInfo debugInfo) {
        StringBuffer sb = new StringBuffer();
        if(debugInfo != null){
            if(debugInfo.getFuncDesc() != null && debugInfo.getFuncDesc().size() > 0){
                sb.append("" + CollectionUtils.collectAsString(debugInfo.getFuncDesc(), ","));
            }
            if(debugInfo.getErrDesc() != null && debugInfo.getErrDesc().size() > 0){
                sb.append("" + CollectionUtils.collectAsString(debugInfo.getErrDesc(), ","));
            }
        }
        return dealMsg(sb.toString());
    }
    
    private static String dealMsg(String msg){
        int maxLength = 2000;
        if (StringUtils.isNotBlank(msg) && msg.length() > maxLength){
            msg = msg.substring(0, maxLength - 3) + "...";
        }
        return msg;
    }
}
