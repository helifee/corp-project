package com.xinleju.erp.finance.action;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONArray;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;

import com.opensymphony.xwork2.ModelDriven;
import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.base.utils.JsonUtils;
import com.xinleju.erp.finance.models.FiBudgetCap;
import com.xinleju.erp.finance.models.FiCashFlowCase;
import com.xinleju.erp.finance.service.FiAccountSetService;
import com.xinleju.erp.finance.service.FiCashFlowCaseService;
import com.xinleju.erp.flow.utils.LoginInfoUtils;
import com.xinleju.erp.frame.dto.FiCashFlowCaseDTO;
import com.xinleju.erp.frame.dto.JsonTreeTableTemplete;
import com.xinleju.erp.frame.models.extender.FiCashFlowCaseComboTreeExtender;
import com.xinleju.erp.frame.utils.CommonUtil;

public class FiCashFlowCaseAction extends BaseAction implements ModelDriven<FiCashFlowCase>{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@Autowired
	private FiCashFlowCaseService fiCashFlowCaseService;
	@Autowired
	private FiAccountSetService fiAccountSetService;
	
	private FiCashFlowCase fiCashFlowCase = new FiCashFlowCase();

	/**
	 * 列表
	 * 
	 * @return
	 */
	public String list() {
		Long accountSetId = getParameterLong("accountSetId");
		String accountSetCode = request.getParameter("accountSetCode");
		Long sysId = getParameterLong("sysId");
		request.setAttribute("accountSetId", accountSetId);
		request.setAttribute("accountSetCode", accountSetCode);
		request.setAttribute("sysId", sysId);
		
		return "list";
	}
	
	/**
	 * 加载现金流量项目的treeGrid的json数据
	 */
	public void loadTreeGrid() {
		Long accountSetId = getParameterLong("accountSetId");
		String accountSetCode = request.getParameter("accountSetCode");
		Long sysId = getParameterLong("sysId");
		String status = "1";
		List<FiCashFlowCaseDTO> cashFlowCaseDTOList = null;
		if (StringUtils.isNotBlank(accountSetCode))
			cashFlowCaseDTOList = fiCashFlowCaseService.getCashFlowCaseDTOList(status, accountSetId, sysId);
		else
			cashFlowCaseDTOList = new ArrayList<FiCashFlowCaseDTO>();
		JsonTreeTableTemplete jttt = new JsonTreeTableTemplete("id", "pid", FiCashFlowCaseDTO.class, FiCashFlowCaseComboTreeExtender.class);
		JSONArray jsonTree = CommonUtil.transTree(cashFlowCaseDTOList, jttt);
		renderJson(jsonTree.toString());
	}

	public void loadComboTree() {
		Long accountSetId = getParameterLong("accountSetId");
		String status = "1";
		Long sysId = getParameterLong("sysId");
		String accountSetCode = request.getParameter("accountSetCode");
		List<FiCashFlowCaseDTO> cashFlowCaseDTOList = null;
		if (StringUtils.isNotBlank(accountSetCode))
			cashFlowCaseDTOList = fiCashFlowCaseService.getCashFlowCaseDTOList(status, accountSetId, sysId);
		else
			cashFlowCaseDTOList = new ArrayList<FiCashFlowCaseDTO>();
		JsonTreeTableTemplete jttt = new JsonTreeTableTemplete("id", "pid", FiCashFlowCaseDTO.class, FiCashFlowCaseComboTreeExtender.class);
		JSONArray jsonTree = CommonUtil.transTree(cashFlowCaseDTOList, jttt);
		//System.out.println("loadComboTree====="+jsonTree.toString());
		renderJson(jsonTree.toString());
	}

	/**
	 * 保存或者更新
	 */
	public void saveOrUpdate() {
		Map<String, Object> result = new HashMap<String, Object>();
		if (fiCashFlowCase.getId() != null) {
			fiCashFlowCase.setEditDate(new Date());
			fiCashFlowCase.setStatus(1);
			fiCashFlowCase.setEditUserId(LoginInfoUtils.getLoginInfoUserDtoId(request));
		} else {
			fiCashFlowCase.setCreateDate(new Date());
			fiCashFlowCase.setStatus(1);
			fiCashFlowCase.setCreateUserId(LoginInfoUtils.getLoginInfoUserDtoId(request));
		}

		try {
			fiCashFlowCaseService.saveOrUpdate(fiCashFlowCase);
			result.put("success", true);
			result.put("msg", "操作成功");
			renderHtml(JsonUtils.toJSONString(result));
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
			renderHtml(JsonUtils.toJSONString(result));
		}
	}

	public void delete() {
		Long id = getParameterLong("id");
		fiCashFlowCase.setId(id);
		Map<String, Object> result = new HashMap<String, Object>();
		try {
			fiCashFlowCaseService.delete(fiCashFlowCase);
			result.put("success", true);
			renderHtml(JsonUtils.toJSONString(result));
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
			renderHtml(JsonUtils.toJSONString(result));
		}
	}

	public FiCashFlowCase getFiCashFlowCase() {
		return fiCashFlowCase;
	}

	public void setFiCashFlowCase(FiCashFlowCase fiCashFlowCase) {
		this.fiCashFlowCase = fiCashFlowCase;
	}


	public FiCashFlowCase getModel() {
		return fiCashFlowCase;
	}
	

}
