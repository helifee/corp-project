package com.xinleju.erp.flow.interceptor;

import java.util.Date;
import java.util.Locale;

import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.ResponseBuilder;
import javax.ws.rs.ext.ExceptionMapper;
import javax.ws.rs.ext.Provider;

import org.apache.commons.lang3.StringUtils;

import com.xinleju.erp.base.app.utils.ExUtils;
import com.xinleju.erp.base.utils.DateUtils;
import com.xinleju.erp.flow.flowutils.bean.FlowResult;
import com.xinleju.erp.flow.flowutils.bean.SimpleResult;

/**
 * 
 * <p>
 * 异常处理
 * </p>
 * <p>
 * </p>
 * 
 * @author Administrator
 * @version $Id: InvokeFaultExceptionMapper.java 1100 2014-07-25 09:06:50Z sunchaohui $
 * @since
 * @see
 */
@Provider
public class InvokeFaultExceptionMapper implements ExceptionMapper {

    @Override
    public Response toResponse(Throwable ex) {

        FlowResult<SimpleResult> result = new FlowResult<SimpleResult>(SimpleResult.class);
        result.faliure();

        result.getDebugInfo().setCompleteAt(DateUtils.formatDate(new Date(), "yyyy-MM-dd HH:mm:ss"));
        result.getDebugInfo().addErrDesc("异常:" + (StringUtils.isEmpty(ex.getMessage()) ? "" : ex.getMessage()));
        result.getDebugInfo().addErrDesc("异常类:" + ex.getClass().getName());
        result.getDebugInfo().addErrDesc("异常堆栈:" + ExUtils.getStackMsg(ex));
        ResponseBuilder rb = Response.status(Response.Status.INTERNAL_SERVER_ERROR);

        rb.type("application/json;charset=UTF-8");
        rb.entity(result);
        rb.language(Locale.SIMPLIFIED_CHINESE);
        Response r = rb.build();
        ex.printStackTrace();
        return r;
    }

}
