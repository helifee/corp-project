package com.xinleju.erp.flow.service;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.flow.dao.impl.OpDAO;
import com.xinleju.erp.flow.dao.impl.OpGroupDAO;
import com.xinleju.erp.flow.dao.impl.OpRelationDAO;
import com.xinleju.erp.flow.models.Op;
import com.xinleju.erp.flow.models.OpGroup;
import com.xinleju.erp.flow.models.OpRelation;

/**
 * 工作组service
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 * <简述>
 * <详细描述>
 * @author   jun
 * @version  $Id$
 * @since
 * @see
 */
@Service
public class OpRelationService extends BaseService {
    
    /**
     * 操作组DAO
     */
    @Autowired
    private OpDAO opDAO;
    
    /**
     * 操作组关联DAO
     */
    @Autowired
    private OpRelationDAO opRelationDAO;
    
    /**
     * 操作DAO
     */
    @Autowired
    private OpGroupDAO opGroupDAO;
    
    /**
     * 根据类型查询操作列表
     * @author jun
     * @param type 类型
     * @return 操作
     */
    public List<Op> findOpListByType(String type){
        return opDAO.findOpList();
    }
    /**
     * 操作组
     * @author jun
     * @param opGroupId 操作组id
     * @param opUserType 用户类型
     * @return 操作组
     */
    public List<OpRelation> getOpRelationList(Long opGroupId, String opUserType) {
        return opRelationDAO.getOpRelationList(opGroupId, opUserType);
    }
    
    /**
     * 更新操作组
     * @author jun
     * @param opGroup 操作组
     * @param qcrOpRelationList 起草人
     * @param clrOpRelationList 处理人
     * @param xbrOpRelationList 协办人
     */
    public void dealOpGroup(OpGroup opGroup, List<OpRelation> qcrOpRelationList, List<OpRelation> clrOpRelationList, List<OpRelation> xbrOpRelationList){
        if (null != opGroup && null != opGroup.getId()){
            getDao().execute("update OpGroup set code = ?,name = ?,canWithdraw = ? where id = ?", StringUtils.isNotBlank(opGroup.getCode()) ? opGroup.getCode() : "",StringUtils.isNotBlank(opGroup.getName()) ? opGroup.getName() : "", opGroup.getCanWithdraw() != null ? opGroup.getCanWithdraw() : 0, opGroup.getId());
            getDao().execute("update OpRelation set isDisabled = ? where opGroupId = ?", 1, opGroup.getId());
        } else {
            opGroup.setIsDisabled(0);
            getDao().save(opGroup);
        }
        this.dealOpGroup(qcrOpRelationList, opGroup.getId(), OpRelation.OP_USER_TYPE_QCR);
        this.dealOpGroup(clrOpRelationList, opGroup.getId(), OpRelation.OP_USER_TYPE_CLR);
        this.dealOpGroup(xbrOpRelationList, opGroup.getId(), OpRelation.OP_USER_TYPE_XBR);
    }
    /**
     * 更新操作组
     * @author jun
     * @param opRelationList 操作组
     * @param opGroupId  操作组id
     * @param opUserType 操作类型
     */
    private void dealOpGroup(List<OpRelation> opRelationList, Long opGroupId, String opUserType){
        if (opRelationList != null){
            for (OpRelation opRelation : opRelationList) {
                this.dealOpGroup(opRelation, opGroupId, opUserType);
            }
        }
    }
    /**
     * 更新操作组
     * @author jun
     * @param opRelation 操作组
     * @param opGroupId  操作组id
     * @param opUserType 操作类型
     */
    private void dealOpGroup(OpRelation opRelation, Long opGroupId, String opUserType){
        OpRelation opRelationTemp = opRelationDAO.getOpRelation(opGroupId, opRelation.getOpId(), opUserType);
        if (null == opRelationTemp){
            opRelationTemp = new OpRelation();
        }
        opRelationTemp.setOpGroupId(opGroupId);
        opRelationTemp.setIsDisabled(0);
        opRelationTemp.setName(opRelation.getName());
        opRelationTemp.setOpId(opRelation.getOpId());
        opRelationTemp.setSort(opRelation.getSort());
        opRelationTemp.setShowType(opRelation.getShowType());
        //显示类型默认为待办显示
        if (StringUtils.isBlank(opRelationTemp.getShowType())){
            opRelationTemp.setShowType(OpRelation.SHOW_TYPE_DB);
        }
        opRelationTemp.setOpUserType(opUserType);
        getDao().saveOrUpdate(opRelationTemp);
    }
}
