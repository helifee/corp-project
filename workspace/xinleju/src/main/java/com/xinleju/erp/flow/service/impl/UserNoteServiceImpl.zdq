package com.xinleju.erp.flow.service.impl;


import java.util.List;

import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.flow.frameapi.domain.User;
import com.xinleju.erp.flow.models.UserNote;
import com.xinleju.erp.flow.service.IUserNoteService;


/**
 * 
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 * 自定义审批常用语
 * @author   zhongjun
 * @version  $Id: SpNoteServiceImpl.java 55748 2015-01-19 05:28:58Z zhongjun $
 * @since
 * @see
 */
@Service
@Transactional
public class UserNoteServiceImpl extends BaseService implements IUserNoteService {

    /**
     * 
     * @see com.xinleju.erp.flow.service.IUserNoteService#saveUserNotes(java.util.List, com.xinleju.erp.flow.frameapi.domain.User)
     */
    @Override
    public void saveUserNotes(List<UserNote> userNotes, User user) {
        if (null != user && null != user.getUserId()){
            getDao().executeSQL("delete from tf_user_note where user_id = ?", user.getUserId());
            if (null != userNotes && userNotes.size() > 0){
                UserNote userNote = null;
                for (int i = 0 ; i < userNotes.size(); i++){
                    userNote = userNotes.get(i);
                    userNote.setUserId(user.getUserId());
                    userNote.setUserLoginName(user.getLoginName());
                    userNote.setUserName(user.getUserName());
                    userNote.setSort(i + 1);
                    getDao().saveOrUpdate(userNote);
                }
            }
        }
    }
    /**
     * 
     * @see com.xinleju.erp.flow.service.IUserNoteService#getUserNoteListByUserId(java.lang.Long)
     */
    @Override
    public List<UserNote> getUserNoteListByUserId(Long userId) {
        DetachedCriteria dc = DetachedCriteria.forClass(UserNote.class);
        dc.add(Restrictions.eq("userId", userId));
        dc.addOrder(Order.asc("sort"));
        dc.addOrder(Order.desc("id"));
        return getDao().findByCriteria(dc);
    }

}
