package com.xinleju.erp.frame.service;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.frame.models.Setting;

@Service
@Transactional
public class SettingService extends BaseService{
	
	public static Logger LOG = Logger.getLogger(SettingService.class);
	public static Map<String,String> settingMap = new HashMap<String, String>();
	public Integer[] PAGE_SELECT = new Integer[]{5,10,15,20,25,30};
	
	public Map<String,String> reload(){
		List<Setting> settings = getDao().findByHQL(Setting.class,"from Setting");
		settingMap = new HashMap<String, String>();
		for(Setting s : settings){
			settingMap.put(s.getCode(), s.getValue());
		}
		return settingMap;
	}
	
	public Setting getSetting(String code){
		return getDao().getByProperty(Setting.class, "code", code);
	}
	
	public Integer getIntValue(String code){
		String value = settingMap.get(code);
		return value ==null?null:Integer.valueOf(value);
	}
	
	public Double getDoubleValue(String code){
		String value = settingMap.get(code);
		return value ==null?null:Double.valueOf(value);
	}
	
	public BigDecimal getBigDecimalValue(String code){
		String value = settingMap.get(code);
		return value ==null?null:new BigDecimal(value);
	}
	
	public String getSettingValue(String code){
		if(settingMap.keySet().size()==0){
			this.reload();
		}
		return settingMap.get(code);
	}
    
    public void updateSetting(String code,String value,String name, String note){
        settingMap.put(code, value);
        if(0 == getDao().execute("update Setting set value = ?,name = ?,note = ? where code = ?", value, name, note, code)){
            Setting s = new Setting();
            s.setCode(code);
            s.setValue(value);
            s.setName(name);
            s.setNote(note);
            getDao().save(s);
        }
    }
    
	
	public void updateSetting(String code,String value){
	    this.updateSetting(code, value, "", "");
	}
	
	public Integer[] getPageSelect(){
        List<Integer> result = new ArrayList<Integer>();
        Setting setting = this.getSetting("pagesize_select");
        if(setting != null && StringUtils.isNotBlank(setting.getValue())){
            String[] pStrAry = setting.getValue().split(",");
            for(String str : pStrAry){
                if(StringUtils.isNotBlank(str)){
                    try{
                        result.add(Integer.valueOf(str));
                    }catch(Exception e){}
                }
            }
        }
        if(result != null && result.size()>0) {
            return result.toArray(new Integer[result.size()]);
        }else{
            return this.PAGE_SELECT;
        }
    }
}
