package com.xinleju.erp.finance.action;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONArray;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;

import com.opensymphony.xwork2.ModelDriven;
import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.base.utils.JsonUtils;
import com.xinleju.erp.finance.models.FiAccountCaption;
import com.xinleju.erp.finance.models.FiBudgetCap;
import com.xinleju.erp.finance.models.FiCashFlowCase;
import com.xinleju.erp.finance.service.FiAccountCaptionService;
import com.xinleju.erp.finance.service.FiBudgetCapService;
import com.xinleju.erp.finance.service.FiCashFlowCaseService;
import com.xinleju.erp.flow.utils.LoginInfoUtils;
import com.xinleju.erp.frame.dto.FiBudgetCapDTO;
import com.xinleju.erp.frame.dto.JsonTreeTableTemplete;
import com.xinleju.erp.frame.models.extender.FiBudgetCapComboTreeExtender;
import com.xinleju.erp.frame.utils.CommonUtil;

/**
 * 预算科目 ACTION
 * @author ztl
 *
 */
public class FiBudgetCapAction extends BaseAction implements ModelDriven<FiBudgetCap>{
	
	@Autowired
	private FiBudgetCapService fiBudgetCapService;
	@Autowired
	private FiAccountCaptionService fiAccountCaptionService;
	@Autowired
	private FiCashFlowCaseService fiCashFlowCaseService;
	private FiBudgetCap fiBudgetCap = new FiBudgetCap();
	
	/**
	 * 列表
	 * 
	 * @return
	 */
	public String list() {
		Long accountSetId = getParameterLong("accountSetId");
		//Long fisysinfoid = getParameterLong("fisysinfoid");
		String accountSetCode = request.getParameter("accountSetCode");
		Long sysId = getParameterLong("sysId");
		request.setAttribute("accountSetCode", accountSetCode);
		request.setAttribute("sysId", sysId);
		request.setAttribute("accountSetId", accountSetId);
		return "list";
	}

	
	/**
	 * 加载预算科目的treeGrid的json数据
	 */
	public void loadTreeGrid() {
		try{
		Long accountSetId = getParameterLong("accountSetId");
		String accountSetCode = request.getParameter("accountSetCode");
		Long sysId = getParameterLong("sysId");
		String status = "1";
		List<FiBudgetCapDTO> fiBudgetCapDTOs = null;
		if (StringUtils.isNotBlank(accountSetCode))
			//System.out.println();
			fiBudgetCapDTOs = fiBudgetCapService.getFiBudgetCapDTOList(accountSetId, status,sysId);
		else
			fiBudgetCapDTOs = new ArrayList<FiBudgetCapDTO>();
		JsonTreeTableTemplete jttt = new JsonTreeTableTemplete("id", "pid", FiBudgetCapDTO.class, FiBudgetCapComboTreeExtender.class);
		JSONArray jsonTree = CommonUtil.transTree(fiBudgetCapDTOs, jttt);
		renderJson(jsonTree.toString());
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	
	public void loadComboTree() {
		Long accountSetId = getParameterLong("accountSetId");
		String accountSetCode = request.getParameter("accountSetCode");
		Long sysId = getParameterLong("sysId");
		//sysId = 2l;
		String status = "1";
		List<FiBudgetCapDTO> fiBudgetCapDTOList = null;
		if (StringUtils.isNotBlank(accountSetCode))
			fiBudgetCapDTOList = fiBudgetCapService.getFiBudgetCapDTOList(accountSetId, status,sysId);
		else
			fiBudgetCapDTOList = new ArrayList<FiBudgetCapDTO>();
		JsonTreeTableTemplete jttt = new JsonTreeTableTemplete("id", "pid", FiBudgetCapDTO.class, FiBudgetCapComboTreeExtender.class);
		JSONArray jsonTree = CommonUtil.transTree(fiBudgetCapDTOList, jttt);
		renderJson(jsonTree.toString());
	}

	
	/**
	 * 保存或者更新会计科目
	 */
	public void saveOrUpdate() {
		Long accountCapId = getParameterLong("parentAcId");
		Long clId = getParameterLong("parentClId");
		FiAccountCaption fac = fiAccountCaptionService.getFiAccountCaptionById(accountCapId);
		FiCashFlowCase fiCashFlowCase = fiCashFlowCaseService.getFiCashFlowCaseById(clId);
		if(fac != null){
			fiBudgetCap.setAccountCapCode(fac.getCode());
			fiBudgetCap.setAccountCapName(fac.getName());
			fiBudgetCap.setAccountCapId(accountCapId);
		}
		if(fiCashFlowCase != null){
			fiBudgetCap.setCashFlowCode(fiCashFlowCase.getCode());
			fiBudgetCap.setCashFlowName(fiCashFlowCase.getName());
		}
		
		Map<String, Object> result = new HashMap<String, Object>();
		if (fiBudgetCap.getId() != null) {
			fiBudgetCap.setEditDate(new Date());
			fiBudgetCap.setStatus(1);
			fiBudgetCap.setEditUserId(LoginInfoUtils.getLoginInfoUserDtoId(request));
		} else {
			fiBudgetCap.setCreateDate(new Date());
			fiBudgetCap.setStatus(1);
			fiBudgetCap.setCreateUserId(LoginInfoUtils.getLoginInfoUserDtoId(request));
		}

		try {
			fiBudgetCapService.saveOrUpdate(fiBudgetCap);
			result.put("success", true);
			result.put("msg", "操作成功");
			renderHtml(JsonUtils.toJSONString(result));
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
			renderHtml(JsonUtils.toJSONString(result));
		}
	}

	public void delete() {
		Map<String, Object> result = new HashMap<String, Object>();
		try {
			fiBudgetCapService.delete(fiBudgetCap);
			result.put("success", true);
			renderHtml(JsonUtils.toJSONString(result));
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
			renderHtml(JsonUtils.toJSONString(result));
		}
	}
	
	
	

	public FiBudgetCap getModel() {
		return fiBudgetCap;
	}


	public FiBudgetCap getFiBudgetCap() {
		return fiBudgetCap;
	}


	public void setFiBudgetCap(FiBudgetCap fiBudgetCap) {
		this.fiBudgetCap = fiBudgetCap;
	}

    
	

}
