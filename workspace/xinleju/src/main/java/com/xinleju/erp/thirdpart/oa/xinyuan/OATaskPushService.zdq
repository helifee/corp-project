/*
 * 文件名：OAExecTaskService.java
 * 版权：Copyright by www.tele-hot.com
 * 描述：
 * 修改人：zhengxj
 * 修改时间：2014-6-10
 * 跟踪单号：
 * 修改单号：
 * 修改内容：
 */
package com.xinleju.erp.thirdpart.oa.xinyuan;

import com.xinleju.erp.thirdpart.oa.xinyuan.api.NotifyTodoAppResult;

/**
 * OA任务推送接口
 * 发送待办接口、删除待办接口、设为已办接口、获取待办接口
 * @author zhengxj
 * @version 2014-6-10
 * @see OATaskPushService
 * @since
 */
public interface OATaskPushService {

    /**
     * 发送待办接口
     * @param appName    待办来源           (标识待办来源的系统)
     * @param modelName  模块名                (标识待办来源的模块)
     * @param modelId    待办唯一标识 (标识待办在原系统唯一标识)
     * @param subject    标题                     (待办标题)
     * @param link       链接                     (对应待办的链接地址(全路径))
     * @param type       待办类型           (1、表示审批类待办 2、表示为通知类待办)
     * @param targets    待办所属对象 (待办对应接收人)
     * @return            NotifyTodoAppResult (
     *                                          returnState:返回状态    0:未操作
                                                                     1:失败
                                                                     2:成功
                                                ,                     
                                                message    :返回信息    0:返回空
                                                                     1:返回错误信息。
                                                                     2:返回空
                           )
     */
    NotifyTodoAppResult sendTodo(String appName, String modelName, String modelId, String subject, String link, int type, String targets,String param1,String param2) throws Exception;

    /**
     * 删除待办接口
     * @param appName    待办来源           (标识待办来源的系统)
     * @param modelName  模块名                (标识待办来源的模块)
     * @param modelId    待办唯一标识 (标识待办在原系统唯一标识)
     * @param optType    操作类型            1:删除待办操作
                                     2:删除指定待办所属人操作
     * @param targets    待办所属对象 (待办对应接收人)
     * @return           NotifyTodoAppResult (
     *                                             returnState:返回状态    0:未操作
                                                                         1:失败
                                                                         2:成功
                                                    ,                     
                                                    message    :返回信息    0:返回空
                                                                         1:返回错误信息。
                                                                         2:返回空
                                              )
     */
    NotifyTodoAppResult deleteTodo(String appName, String modelName, String modelId, int optType, String targets,String param1,String param2) throws Exception;

    /**
     * 设为已办接口
     * @param appName    待办来源           (标识待办来源的系统)
     * @param modelName  模块名                (标识待办来源的模块)
     * @param modelId    待办唯一标识 (标识待办在原系统唯一标识)
     * @param optType    操作类型            1:表示设待办为已办操作
                                     2:表示设置目标待办所属人为已办操作
     * @param targets    待办所属对象 (待办对应接收人)
     * @return           NotifyTodoAppResult (
     *                                             returnState:返回状态    0:未操作
                                                                         1:失败
                                                                         2:成功
                                                    ,                     
                                                    message    :返回信息    0:返回空
                                                                         1:返回错误信息。
                                                                         2:返回空
                                              )
     */    
    NotifyTodoAppResult setTodoDone(String appName, String modelName, String modelId, int optType, String targets,String param1,String param2) throws Exception;

    /**
     * 获取待办接口
     * @param targets 待办所属对象
     * @param type    待办类型
     * @param rowSize 分页大小
     * @param pageNo  页码
     * @return           NotifyTodoAppResult (
     *                                          returnState:返回状态    0:未操作
                                                                     1:失败
                                                                     2:成功
                                                ,                     
                                                message    :返回信息    0:返回空
                                                                     1:返回错误信息。
                                                                     2:返回空
                         )
     * @see
     */
    NotifyTodoAppResult getTodo(String targets, int type, int rowSize, int pageNo,String param1,String param2) throws Exception;
}
