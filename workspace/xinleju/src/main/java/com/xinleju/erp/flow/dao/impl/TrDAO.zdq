package com.xinleju.erp.flow.dao.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Repository;

import com.xinleju.erp.base.utils.StringHelper;
import com.xinleju.erp.flow.models.Tr;

/**
 * 
 * 
 * <p>
 * </p>
 * <p>
 * </p>
 * 
 * @author 孙朝辉
 * @version $Id: TrDAO.java 583 2014-06-13 09:38:22Z sunchaohui $
 * @since
 * 
 */
@Repository
public class TrDAO extends BaseDAO {

    /**
     * 
     * <p>
     * 获取节点from-to之间流转(tr)
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param flowCode
     *            流程编码
     * @param flowVersion
     *            流程版本
     * @param source
     *            开始环节nodeId
     * @param target
     *            目的环节nodeId
     * @return 流转(Tr)
     */
    public List<Tr> getTrs(String flowCode, String flowVersion, String source, String target) {
        List<Tr> trs = getDao().findAll(Tr.class, "flowCode = ? and flowVersion = ? and source =? and target=?",
                new Object[] { flowCode, flowVersion, source, target });
        return trs;
    }

    /**
     * 
     * <p>
     * 依据trId,获取指定trId的流转(Tr)
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param flowCode
     *            流程编码
     * @param flowVersion
     *            流程版本
     * @param trIds
     *            流转TrId
     * @return 流转
     */
    public List<Tr> getListByTrIds(String flowCode, String flowVersion, String trIds) {
        List<Tr> trList = new ArrayList<Tr>();
        if (StringUtils.isNotEmpty(trIds)) {
            List<String> trIdList = StringHelper.splitAsStringList(trIds, "-");
            String whereClaus = "flowCode = ? and flowVersion = ? and trId in (" + StringHelper.join(trIdList, ",", "'") + ")";
            trList = getDao().findAll(Tr.class, whereClaus, new Object[] { flowCode, flowVersion });
        }
        return trList;
    }
    /**
     * 获取所有分支条件
     * @param flowCode
     * @param flowVersion
     * @return
     */
    public List<Tr> getListByFlowCodeAndFlowVersion(String flowCode, String flowVersion){
        List<Tr> trList = new ArrayList<Tr>();
        if (StringUtils.isNotBlank(flowCode) && StringUtils.isNotBlank(flowVersion)) {
            String whereClaus = "flowCode = ? and flowVersion = ?";
            trList.addAll(getDao().findAll(Tr.class, whereClaus, new Object[] { flowCode, flowVersion }));
        }
        return trList;
    }
}
