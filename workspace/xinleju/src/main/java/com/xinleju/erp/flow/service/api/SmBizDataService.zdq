package com.xinleju.erp.flow.service.api;

import java.math.BigDecimal;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xinleju.erp.base.app.config.App;
import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.com.service.IMyDubboService;
import com.xinleju.erp.com.service.base.IBaseBizDataService;
import com.xinleju.erp.flow.dao.impl.FlDAO;
import com.xinleju.erp.flow.flowutils.bean.BizDataDTO;
import com.xinleju.erp.flow.models.Fl;

/**
 * 业务数据查询接口
 * @author jun
 *
 */
@Service
public class SmBizDataService extends BaseService {
	
	/**
     * 流程DAO
     */
    @Autowired
    private FlDAO flDAO;
	
	/**
     * 业务数据查询接口
     * @author jun
     * @param flowCode 流程编码
     * @param bizId 业务id
     * @return 业务数据以map形式存放 value暂时只支持简单的数据类型如String、Long等
     */
    public List<BizDataDTO> queryBizData(String flowCode, String bizId, String dataVersion){
    	String appCode = "";
		String soCode = "";
		if (StringUtils.isNotBlank(flowCode)){
			Fl fl = flDAO.getFl(flowCode);
			if (null != fl){
				appCode = fl.getAppCode();
				soCode = null != fl.getServiceObjectDefine() ? fl.getServiceObjectDefine().getCode() : "";
			}
		}
		List<BizDataDTO> bizDataDataList = new ArrayList<BizDataDTO>();
		try {
			bizDataDataList.addAll(this.queryBizData(appCode, soCode, bizId, dataVersion));
		} catch (Exception e){
			/*BizDataDTO bizDataDTO = new BizDataDTO();
			bizDataDTO.setDataName("测试字段名01");
			bizDataDTO.setDataType(BizDataDTO.DATA_TYPE_BIZ);
			bizDataDTO.setDataValue("测试字段值01");
			bizDataDTO.setDataVersion(dataVersion);
			bizDataDataList.add(bizDataDTO);
			bizDataDTO = new BizDataDTO();
			bizDataDTO.setDataName("测试字段名02");
			bizDataDTO.setDataType(BizDataDTO.DATA_TYPE_BIZ);
			bizDataDTO.setDataValue(new BigDecimal("110000.00"));
			bizDataDTO.setDataVersion(dataVersion);
			bizDataDataList.add(bizDataDTO);*/
		}
		return bizDataDataList;
    }
    
    /**
     * 业务数据查询接口
     * @author jun
     * @param soCode 业务对象编码
     * @param bizId 业务id
     * @return 业务数据以map形式存放 value暂时只支持简单的数据类型如String、Long等
     */
    public List<BizDataDTO> queryBizData(String appCode, String soCode, String bizId, String dataVersion){
    	List<BizDataDTO> bizDataList = new ArrayList<BizDataDTO>();
		if (StringUtils.isNotBlank(appCode) && StringUtils.isNotBlank(soCode) && StringUtils.isNotBlank(bizId)){
			List<BizDataDTO> bizDataListRemote=this.invokeQueryBizData(appCode, soCode, bizId, dataVersion);
			if(bizDataListRemote!=null&&bizDataListRemote.size()>0){
				for(BizDataDTO bizDataDTO :bizDataListRemote){
					bizDataDTO.setDisplayDataName( ( bizDataDTO.getDisplayDataName()!=null && !"".equals(bizDataDTO.getDisplayDataName()) ) ? bizDataDTO.getDisplayDataName() : bizDataDTO.getDataName());
					bizDataList.add(bizDataDTO);
				}
			}
		
		}
		return bizDataList;
    }
    
    /**
	 * 抓取业务数据
	 * @param flowcode 流程编码
	 * @param bizid 业务id
	 * @return 业务数据以map形式存放 value暂时只支持简单的数据类型如String、Long等
	 */
    public List<BizDataDTO> invokeQueryBizData(String appCode, String soCode, String bizId, String dataVersion){
    	List<BizDataDTO> bizDataList = new ArrayList<BizDataDTO>();
		String serviceId = "i" + (appCode.substring(0,1) + appCode.substring(1).toLowerCase()) + "BaseBizDataService";
		IBaseBizDataService iBaseBizDataService = App.getBean(IMyDubboService.class).getBaseBizDataService(serviceId);
		bizDataList.addAll(iBaseBizDataService.queryBizData(soCode, bizId));
		return bizDataList;
    }
}
