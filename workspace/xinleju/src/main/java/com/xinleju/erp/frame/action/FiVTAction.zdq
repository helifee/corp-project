package com.xinleju.erp.frame.action;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.bean.Page;
import com.xinleju.erp.base.utils.JsonUtils;
import com.xinleju.erp.frame.exception.ValidateException;
import com.xinleju.erp.frame.models.BaseEntity;
import com.xinleju.erp.frame.models.EntityExtender;
import com.xinleju.erp.frame.models.VoucherEntry;
import com.xinleju.erp.frame.models.VoucherTemplate;
import com.xinleju.erp.frame.models.extender.FiVEExtender;
import com.xinleju.erp.frame.models.extender.FiVTExtender;
import com.xinleju.erp.frame.service.FiBusinessService;
import com.xinleju.erp.frame.service.FiVTService;
import com.xinleju.erp.frame.service.extend.dto.FiAggDTO;
import com.xinleju.erp.frame.utils.CommonUtil;
import com.xinleju.erp.frame.utils.ValidateCheckUtil;

/**
 * 凭证模板
 */
public class FiVTAction extends FiBaseAction {
	@Autowired
	private FiBusinessService fiBusinessService;
	@Autowired
	private FiVTService fiVTService;
	private VoucherTemplate voucherTemplate;
	

	@Override
	protected Class<? extends EntityExtender> getExtender() {
		return FiVTExtender.class;
	}

	public void edit(){
		Long bmid  = getParameterLong("bmid");//业务类型模板类型id
		JSONObject jobj = new JSONObject();
		if(bmid == null){
			renderJson("业务类型不存在");
			return;
		}
		FiAggDTO dto = fiVTService.queryFiAggDTO(bmid);
		if(dto == null || dto.getParent() == null){
			voucherTemplate = new VoucherTemplate();
			voucherTemplate.setBmid(bmid);
		}else{
			voucherTemplate =(VoucherTemplate)dto.getParent();
		}
		jobj.put("voucherTemplate", CommonUtil.transEx(voucherTemplate, new FiVTExtender()));
		if(dto != null)
			jobj.put("voucherEntryList", CommonUtil.transListEx(dto.getChildren(VoucherEntry.class),new FiVEExtender( bmid)));
		renderJson(jobj.toString());
	}
	
	public String list() {
		/*Map<String, String> appMap = new HashMap<String,String>();
		for(App app : appDao.getAppMap().values()){
			appMap.put(app.getCode(), app.getName());
		}
		request.setAttribute("appMap", appMap);
		request.setAttribute("botypeMap", FiBusinessTypeEnum.getMap());//业务类型
		request.setAttribute("statusMap", FiBusinessobject.getStatusMap());//启用状态
		Map<String,String> jsMap = new HashMap<String,String>();
		jsMap.put("vsyscode_ref", CommonUtil.transRef(appMap).toString());
		jsMap.put("status_ref", CommonUtil.transRef(BusinessObject.getStatusMap()).toString());
		request.setAttribute("refs", jsMap);*/
		return "list";
	}
	
	
	@Override
	protected Page loaddata() {
		return null;
	}
	
	/**
	 * 保存对象
	 */
	public void save() throws Exception {
		Map<String, Object> result = new HashMap<String, Object>();
		try {
			FiAggDTO aggDTO = new FiAggDTO();
			if (voucherTemplate.getId() != null) {
				voucherTemplate.setEditDate(new Date());
			} else {
				voucherTemplate.setCreateDate(new Date());
				voucherTemplate.setStatus(0);
			}
			List<VoucherEntry> boFieldInfoList = JsonUtils.parseArray(getParameter("boFieldInfoList"), VoucherEntry.class);
			List<VoucherEntry> boFieldInfoList_delete = JsonUtils.parseArray(getParameter("boFieldInfoList_delete"), VoucherEntry.class);
			if(boFieldInfoList_delete != null)
				for(VoucherEntry entry : boFieldInfoList_delete){
					entry.setState(BaseEntity.DELETE);
					boFieldInfoList.add(entry);
				}
			aggDTO.setParent(voucherTemplate);
			aggDTO.addChildren(VoucherEntry.class,boFieldInfoList);
			ValidateCheckUtil.checkValidate(aggDTO);
			fiBusinessService.saveOrUpdate(aggDTO);
			result.put("success", true);
			result.put("msg", "保存成功");
			renderJson(result);
		} catch (ValidateException e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
			renderJson(result);	
		}
	}
	
	@Override
	protected Class<? extends BaseEntity> getMainClass() {
		return VoucherTemplate.class;
	}

	public VoucherTemplate getVoucherTemplate() {
		return voucherTemplate;
	}

	public void setVoucherTemplate(VoucherTemplate voucherTemplate) {
		this.voucherTemplate = voucherTemplate;
	}
	

}
