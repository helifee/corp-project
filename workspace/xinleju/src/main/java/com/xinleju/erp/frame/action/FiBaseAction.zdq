package com.xinleju.erp.frame.action;

import java.util.HashMap;
import java.util.Map;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.base.app.bean.Page;
import com.xinleju.erp.frame.models.BaseEntity;
import com.xinleju.erp.frame.models.EntityExtender;
import com.xinleju.erp.frame.service.FiBusinessService;
import com.xinleju.erp.frame.utils.CommonUtil;

public abstract class FiBaseAction extends BaseAction {

	@Autowired
	private FiBusinessService fiBusinessService;
	
	/**
	 * 列表
	 * 
	 * @return
	 */
	public String list() {
		return "list";
	}
	
	public void loadlist(){
		limit = getParameter("rows") == null ? Integer.MAX_VALUE:getParameterInt("rows");
		start = getParameter("page") == null ? 0 :  (getParameterInt("page") - 1)*limit;
		page = loaddata();
		JSONObject jobj = CommonUtil.transListResult(page.getTotal(), page.getItems(),getExtender());
		renderJson(jobj.toString());
	}
	
	protected abstract  Class<? extends EntityExtender> getExtender();
	
	protected abstract Page loaddata();


	public FiBusinessService getFiBusinessService() {
		return fiBusinessService;
	}

	public void setFiBusinessService(FiBusinessService fiBusinessService) {
		this.fiBusinessService = fiBusinessService;
	}
	
	protected abstract Class<? extends BaseEntity> getMainClass();

	/**
	 * 启用
	 */
	public void enable() {
		if(getMainClass() == null)
			return;
		Map<String, Object> result = new HashMap<String, Object>();
		try {
			String ids = request.getParameter("id");
			if (ids != null) {
				String[] idAry = ids.split(";");
				fiBusinessService.batchUpdateStatus(getMainClass(),
						CommonUtil.transformIds(idAry), Integer.valueOf(0));
			}
			result.put("success", true);
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
		}
		renderJson(result);
	}

	/**
	 *  
	 */
	public void delete() {
		Map<String, Object> result = new HashMap<String, Object>();
		try {
			String ids = request.getParameter("id");
			if (ids != null) {
				Long[] idAry = CommonUtil.transformIds(ids.split(";"));
				fiBusinessService.delete(getMainClass(), idAry);
			}
			result.put("success", true);
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
		}
		renderJson(result);
	}	

	/**
	 * 禁用
	 */
	public void unable() {
		if(getMainClass() == null)
			return;
		Map<String, Object> result = new HashMap<String, Object>();
		try {
			String ids = request.getParameter("id");
			if (ids != null) {
				String[] idAry = ids.split(";");
				fiBusinessService.batchUpdateStatus(getMainClass(),
						CommonUtil.transformIds(idAry), Integer.valueOf(1));
			}
			result.put("success", true);
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
		}
		renderJson(result);
	}
	
	protected void addRefs(String label,Map<?,?> ref){
		@SuppressWarnings("unchecked")
		Map<String,String> refs =(Map<String,String>) request.getAttribute("refs");
		if(refs == null){
			refs = new HashMap<String, String>();
			request.setAttribute("refs", refs);
		}
		refs.put(label,CommonUtil.transRef(ref).toString());
	}
	
	protected void renderError(String message){
		JSONObject res = new JSONObject();
		res.put("success", false);
		res.put("msg", message);
		renderJson(res.toString());
	}
}
