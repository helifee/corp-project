package com.xinleju.erp.finance.dao;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.xinleju.erp.base.app.bean.Page;
import com.xinleju.erp.finance.models.FiVoucherData;
import com.xinleju.erp.finance.models.params.VoucherParams;
import com.xinleju.erp.finance.utils.QMap;
import com.xinleju.erp.finance.utils.SmartJdbcTemplate;
import com.xinleju.erp.flow.dao.impl.BaseDAO;

/**
 * 凭证的dao
 * 
 * @author walden
 * 
 */
@Repository
public class FiVoucherDataDao extends BaseDAO {

	@Autowired
	private SmartJdbcTemplate smartJdbcTemplate;

	/**
	 * 获得凭证id的流水号
	 * 
	 * @param prefix
	 *            yyyyMM
	 * 
	 * @return yyyyMM0001
	 */

	public String getVoucherSerialNumber(String prefix) {
		int serialNumber = 0;
		String hql = "select max(v.voucherNo) from FiVoucherData v where v.voucherNo like ?";
		String voucherNumber = getDao().findString(hql, prefix + "%");
		if (voucherNumber != null) {
			serialNumber = Integer.parseInt(voucherNumber.replace(prefix, "")) + 1;

		} else {
			serialNumber = 1;
		}
		return String.format("%s%03d", prefix, serialNumber);
	}

	/**
	 * 通过凭证的查询参数获得数据库分页列表
	 * 
	 * @param voucherParams
	 * @return page(start,limit,items<VoucherData>)
	 */
	public Page getVoucherPageByParams(VoucherParams params) {
		QMap paramMap = new QMap();
		StringBuilder sql = new StringBuilder("select * from fi_voucher_data vd where 1=1");
		// 此处开始拼接SQL
		if (StringUtils.isNotBlank(params.getSendStatus())) {
			sql.append(" and vd.send_status = :sendStatus");
			paramMap.add("sendStatus", params.getSendStatus());
		}
		if (StringUtils.isNotBlank(params.getCreateDateBegin())) {
			sql.append(" and vd.create_data >= :createStatusBegin");
			paramMap.add("createStatusBegin", params.getCreateDateBegin());
		}
		if (StringUtils.isNotBlank(params.getCreateDateEnd())) {
			sql.append(" and vd.create_date <= :createStatusEnd");
			paramMap.add("createStatusEnd", params.getCreateDateEnd());
		}
		// 查询分页列表
		List<FiVoucherData> items = smartJdbcTemplate.findPageList(sql, paramMap, params.getStart(), params.getPageSize(), FiVoucherData.class);
		// 查询分页数据条数
		int totalCount = smartJdbcTemplate.getTotalCount(sql, paramMap);
		return new Page(params.getStart(), params.getPageSize(), totalCount, items);

	}
}
