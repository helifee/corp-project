package com.xinleju.erp.frame.action;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.bean.Page;
import com.xinleju.erp.frame.dto.JsonTreeTableTemplete;
import com.xinleju.erp.frame.exception.ValidateException;
import com.xinleju.erp.frame.models.BaseEntity;
import com.xinleju.erp.frame.models.BusinessMold;
import com.xinleju.erp.frame.models.EntityExtender;
import com.xinleju.erp.frame.models.extender.FiBMExtender;
import com.xinleju.erp.frame.service.FiBusinessService;
import com.xinleju.erp.frame.service.extend.dto.FiAggDTO;
import com.xinleju.erp.frame.utils.CommonUtil;
import com.xinleju.erp.frame.utils.ValidateCheckUtil;

public class FiBMAction extends FiBaseAction {
	@Autowired
	private FiBusinessService fiBusinessService;
	private BusinessMold businessMold;
	
	/**
	 * 根据fisysinfoid(财务系统id)和targsyscorpid(财务系统公司id)查询出业务类型.
	 * 返回的数据格式为{id:xx,name:xxx,children[{}]}
	 */
	public void load(){
		Long fisysinfoid = getParameterLong("fisysinfoid");
		String targsyscorpid = getParameter("targsyscorpid");
		if(fisysinfoid == null || targsyscorpid ==null){
			renderError("请选择财务系统和财务公司");
			return;
		}
		List<BusinessMold> bmList = fiBusinessService.findByHQL(BusinessMold.class, " FROM BusinessMold t WHERE  fisysinfoid = ? and targsyscorpid = ?",fisysinfoid,targsyscorpid);
		JsonTreeTableTemplete jttt = new JsonTreeTableTemplete("id", "pid", BusinessMold.class, FiBMExtender.class);
		JSONArray jarray= CommonUtil.transTree(bmList, jttt);
		JSONObject root = new JSONObject();
		root.put("id", -1);
		root.put("text", "业务类型");
		root.put("children", jarray);
		JSONArray tree = new JSONArray();
		tree.add(root);
		renderJson(tree.toString());
	}
	
	public void add(){
		Long pid = getParameterLong("pid");
		Long fisysinfoid = getParameterLong("fisysinfoid");
		String targsyscorpid = getParameter("targsyscorpid");
		if(fisysinfoid == null || targsyscorpid == null){
			renderError ("请选择财务系统和财务公司");
		}
		BusinessMold bm = new BusinessMold();
		bm.setPid(pid);
		bm.setFisysinfoid(fisysinfoid);
		bm.setTargsyscorpid(targsyscorpid);
		bm.setName("默认分类");
		fiBusinessService.getDao().save(bm);
		renderJson(CommonUtil.transEx(bm,new FiBMExtender()).toString());
	}
	
	/**
	 * 编辑业务类型
	 * 修改时参数：id 
	 * 新增时参数：fisysinfoid， targsyscorpid
	 * @return
	 * @throws ValidateException
	 */
	public String edit() throws ValidateException{
		Long id = getParameterLong("id");
		Long fisysinfoid = getParameterLong("fisysinfoid");
		String targsyscorpid = getParameter("targsyscorpid");
		if(id == null || Long.valueOf(-1l).equals(id)){
			businessMold = new BusinessMold();
			if(fisysinfoid == null || targsyscorpid == null){
				throw new ValidateException ("请选择财务系统和财务公司");
			}
			businessMold.setFisysinfoid(fisysinfoid);
			businessMold.setTargsyscorpid(targsyscorpid);
		}else
			businessMold = fiBusinessService.getDao().getById(BusinessMold.class, id);
		return "edit";
	}
	
	/**
	 * 保存业务对象
	 */
	public void save(){
		Map<String, Object> result = new HashMap<String, Object>();
		businessMold = (BusinessMold)JSONObject.toBean(JSONObject.fromObject(getParameter("businessMold")), BusinessMold.class);
		if (businessMold.getId() != null) {
			businessMold.setEditDate(new Date());
		} else {
			businessMold.setCreateDate(new Date());
			businessMold.setStatus(0);
		}
		try {
			FiAggDTO aggDTO = new FiAggDTO();
			aggDTO.setParent(businessMold);
			ValidateCheckUtil.checkValidate(aggDTO);
			fiBusinessService.saveOrUpdate(aggDTO);
			result.put("success", true);
			result.put("msg", "保存成功");
			renderJson(result);
		} catch (ValidateException e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
			renderJson(result);	
		}
	}

	@Override
	protected Class<? extends EntityExtender> getExtender() {
		return null;
	}

	@Override
	protected Page loaddata() {
		return null;
	}

	@Override
	protected Class<? extends BaseEntity> getMainClass() {
		return BusinessMold.class;
	}
}
