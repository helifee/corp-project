package com.xinleju.erp.flow.action;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.flow.models.Op;
import com.xinleju.erp.flow.models.OpGroup;
import com.xinleju.erp.flow.models.OpRelation;
import com.xinleju.erp.flow.service.OpRelationService;
import com.xinleju.erp.flow.service.extend.dto.FiOpDto;
import com.xinleju.erp.flow.service.extend.dto.FiOpGroupDto;

/**
 * 操作组维护 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司 
 * 
 * @author jun
 * @version $Id$
 * @since
 * @see
 */
public class OpGroupAction extends BaseAction {

    /**
     * 模型对象:操作
     */
    private OpGroup opGroup;
    
    private FiOpGroupDto fiOpGroupDto;

    /**
     * 起草人可选操作
     */
    private List<Op> qcrOpList;
    
    /**
     * 处理人可选操作
     */
    private List<Op> clrOpList;
    
    /**
     * 协办人可选操作
     */
    private List<Op> xbrOpList;
    
    /**
     * 起草人已选操作
     */
    private List<OpRelation> qcrOpRelationList;
    
    /**
     * 处理人已选操作
     */
    private List<OpRelation> clrOpRelationList;
    
    /**
     * 协办人已选操作
     */
    private List<OpRelation> xbrOpRelationList;
    
    /**
     * 操作组关联service
     */
    @Autowired
    private OpRelationService opRelationService;
    
    /**
     * 操作组列表
     * @author jun
     * @return 返回页面
     */
    public String list() {
        Map<String, String> statusMap = new HashMap<String,String>();
        statusMap.put(FiOpDto.IS_DISABLED_N, "启用");
        statusMap.put(FiOpDto.IS_DISABLED_Y, "禁用");
        request.setAttribute("statusMap", statusMap);
        DetachedCriteria dc = DetachedCriteria.forClass(OpGroup.class);
        if (null != fiOpGroupDto){
            if (StringUtils.isNotEmpty(fiOpGroupDto.getKeyword())) {
                dc.add(Restrictions.ilike("name", "%" + fiOpGroupDto.getKeyword() + "%"));
            }
            if ("1".equals(fiOpGroupDto.getStatus())) {
                dc.add(Restrictions.eq("isDisabled", 1));
            } else if ("0".equals(fiOpGroupDto.getStatus())) {
                dc.add(Restrictions.or(new Criterion[] { Restrictions.eq("isDisabled", 0), Restrictions.isNull("isDisabled") }));
            }
        }
        page = getCommonService().findPage(dc, start, limit);

        return "list";
    }

    /**
     * 操作组编辑
     * @author jun
     * @return 返回页面
     */
    public String edit() {
        qcrOpList = opRelationService.findOpListByType(OpRelation.OP_USER_TYPE_QCR);
        clrOpList = opRelationService.findOpListByType(OpRelation.OP_USER_TYPE_CLR);
        xbrOpList = opRelationService.findOpListByType(OpRelation.OP_USER_TYPE_XBR);
        if (null != id) {
            opGroup = getCommonService().getById(OpGroup.class, id);
            qcrOpRelationList = opRelationService.getOpRelationList(id, OpRelation.OP_USER_TYPE_QCR);
            clrOpRelationList = opRelationService.getOpRelationList(id, OpRelation.OP_USER_TYPE_CLR);
            xbrOpRelationList = opRelationService.getOpRelationList(id, OpRelation.OP_USER_TYPE_XBR);
        } else {
            opGroup = new OpGroup();
        }
        return "edit";
    }

    /**
     * 保存工作组
     * @author jun
     */
    public void save() {
        opRelationService.dealOpGroup(opGroup, qcrOpRelationList, clrOpRelationList, xbrOpRelationList);
        renderJson("{\"success\":true,\"msg\":\"保存成功。\"}");
    }
    
    public void updateOpGroup(){
        Map<String,Object> result = new HashMap<String,Object>();
        try{
            String ids = getParameter("ids");
            Integer isdisabled = getParameterInt("isdisabled");
            if (null == isdisabled){
                isdisabled = 0;
            }
            if(StringUtils.isNotBlank(ids)) {
                String[] idAry = ids.split(";");
                for(String id : idAry) {
                    getCommonService().execute("update OpGroup set isDisabled = ? where id = ?", isdisabled, Long.valueOf(id));
                }
            }
            result.put("success", true);
        }catch(Exception e){
            result.put("success", false);
            result.put("msg", e.getMessage());
        }
        renderJson(result);
    }
    /**
     * 操作组禁用
     * @author jun
     */
    public void delete() {
        if (ids != null) {
            for (Long id : ids) {
                getCommonService().execute("update OpGroup set isDisabled = 1 where id = ?", id);
            }
        }
        redirect("OpGroup!list.do", "isDisabled", "name");
    }

    /**
     * 操作组解禁
     * @author jun
     */
    public void unDelete() {

        if (ids != null) {
            for (Long id : ids) {
                getCommonService().execute("update OpGroup set isDisabled = 0 where id = ?", id);
            }
        }
        redirect("OpGroup!list.do", "isDisabled", "name");
    }
    
    /**
     * 得到所有的操作记录
     * @author jun
     */
    public void getAllOpRelation(){
        String opGroupHtml = "<table width=\"100%\" border=\"0\" cellpadding=\"1\" cellspacing=\"1\" class=\"wd_tablelist01_2\">";
        if (null != id) {
            opGroup = getCommonService().getById(OpGroup.class, id);
            clrOpRelationList = opRelationService.getOpRelationList(id, OpRelation.OP_USER_TYPE_CLR);
            qcrOpRelationList = opRelationService.getOpRelationList(id, OpRelation.OP_USER_TYPE_QCR);
        }
        opGroupHtml += "<tr>"
                            + "<td align=\"left\" class=\"sd\" width=\"25%\">流程操作组名称:</td>"
                            + "<td>" + (null != opGroup ? opGroup.getName() : "") + "</td>"
                        + "</tr>";
        opGroupHtml += "<tr>";
        opGroupHtml += "<td align=\"left\" class=\"sd\" width=\"20%\">经办人:<br />注：流程流转到当前节点时，<br />经办人可执行的操作。";
        opGroupHtml += "</td>";
        opGroupHtml += "<td>";
        opGroupHtml += "<table width=\"100%\" cellpadding=\"0\" cellspacing=\"1\" class=\"wd_tablelist01_2\" id=\"qcrTable\">";
        opGroupHtml += "<tr id=\"qcr_title_row\"><th width=\"200px\">操作类型</th><th>操作名称</th></tr>";
        for (OpRelation op : qcrOpRelationList) {
            opGroupHtml += "<tr class=\"qcr_row\"><td>" + op.getOp().getName() + "</td><td>" + op.getName() + "</td></tr>";
        }
        opGroupHtml += "</table>";
        opGroupHtml += "</td>";
        opGroupHtml += "</tr>";
        opGroupHtml += "<tr>";
        opGroupHtml += "<td align=\"left\" class=\"sd\" width=\"20%\">处理人:<br />注：流程流转到当前节点时，<br />当前处理人可执行的操作。";
        opGroupHtml += "</td>";
        opGroupHtml += "<td>";
        opGroupHtml += "<table width=\"100%\" cellpadding=\"0\" cellspacing=\"1\" class=\"wd_tablelist01_2\" id=\"clrTable\">";
        opGroupHtml += "<tr id=\"clr_title_row\"><th width=\"200px\">操作类型</th><th>操作名称</th></tr>";
        for (OpRelation op : clrOpRelationList) {
            opGroupHtml += "<tr class=\"clr_row\"><td>" + op.getOp().getName() + "</td><td>" + op.getName() + "</td></tr>";
        }
        opGroupHtml += "</table>";
        opGroupHtml += "</td>";
        opGroupHtml += "</tr>";
        opGroupHtml += "<tr>";
        opGroupHtml += "<td align=\"left\" class=\"sd\" width=\"20%\">协办人:<br />注：流程流转到当前节点时，<br />当前协办人可执行的操作。";
        opGroupHtml += "</td>";
        opGroupHtml += "<td>";
        opGroupHtml += "<table width=\"100%\" cellpadding=\"0\" cellspacing=\"1\" class=\"wd_tablelist01_2\" id=\"xbrTable\">";
        opGroupHtml += "<tr id=\"xbr_title_row\"><th width=\"200px\">操作类型</th><th>操作名称</th></tr>";
        for (OpRelation op : xbrOpRelationList) {
            opGroupHtml += "<tr class=\"xbr_row\"><td>" + op.getOp().getName() + "</td><td>" + op.getName() + "</td></tr>";
        }
        opGroupHtml += "</table>";
        opGroupHtml += "</td>";
        opGroupHtml += "</tr>";
        opGroupHtml += "</table>";
        renderJson(opGroupHtml);
    }
    
    public OpGroup getOpGroup() {
        return opGroup;
    }

    public void setOpGroup(OpGroup opGroup) {
        this.opGroup = opGroup;
    }

    public List<Op> getQcrOpList() {
        return qcrOpList;
    }

    public void setQcrOpList(List<Op> qcrOpList) {
        this.qcrOpList = qcrOpList;
    }

    public List<Op> getClrOpList() {
        return clrOpList;
    }

    public void setClrOpList(List<Op> clrOpList) {
        this.clrOpList = clrOpList;
    }

    public List<OpRelation> getQcrOpRelationList() {
        return qcrOpRelationList;
    }

    public void setQcrOpRelationList(List<OpRelation> qcrOpRelationList) {
        this.qcrOpRelationList = qcrOpRelationList;
    }

    public List<OpRelation> getClrOpRelationList() {
        return clrOpRelationList;
    }

    public void setClrOpRelationList(List<OpRelation> clrOpRelationList) {
        this.clrOpRelationList = clrOpRelationList;
    }

    public List<Op> getXbrOpList() {
        return xbrOpList;
    }

    public void setXbrOpList(List<Op> xbrOpList) {
        this.xbrOpList = xbrOpList;
    }

    public List<OpRelation> getXbrOpRelationList() {
        return xbrOpRelationList;
    }

    public void setXbrOpRelationList(List<OpRelation> xbrOpRelationList) {
        this.xbrOpRelationList = xbrOpRelationList;
    }

    public FiOpGroupDto getFiOpGroupDto() {
        return fiOpGroupDto;
    }

    public void setFiOpGroupDto(FiOpGroupDto fiOpGroupDto) {
        this.fiOpGroupDto = fiOpGroupDto;
    }

}
