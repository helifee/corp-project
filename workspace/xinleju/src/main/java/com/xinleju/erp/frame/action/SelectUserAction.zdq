package com.xinleju.erp.frame.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.flow.service.api.ApiConstant;
import com.xinleju.erp.flow.service.api.extend.BaseAPI;
import com.xinleju.erp.flow.service.api.extend.dto.OrgnDTO;
import com.xinleju.erp.flow.utils.LoginInfoUtils;
import com.xinleju.erp.frame.service.UserService;

public class SelectUserAction extends BaseAction {

	@Autowired
	@Qualifier(ApiConstant.BEAN_CODE)
	private BaseAPI baseAPI;
	
	@Autowired
	private UserService userService;
	
	public String test(){
		return "test";
	}

	public String index() {
		String userLogInName =LoginInfoUtils.getLoginInfoUserLogName(request);
		page = userService.getDeptUsersByloginName(userLogInName, 0, Integer.MAX_VALUE);
		return "index";
	}

	/**
	 * 人员树
	 */
	public void getUserTree() {
		String includeTypes[] = new String[] { "zb", "company", "department", "group", "role", "user" };
		String dId = request.getParameter("id");
		List<OrgnDTO> result = null;
		if (StringUtils.isBlank(dId)) {
			result = baseAPI.findRootOrgns(includeTypes).getResult();
		} else {
			result = baseAPI.findSubOrgns(Long.valueOf(dId), includeTypes).getResult();
		}
		renderJson(buildTreeData(result, dId));
	}

	private List<Map<String, Object>> buildTreeData(List<OrgnDTO> orgnDtos, String id) {
		List<Map<String, Object>> result = new ArrayList<Map<String, Object>>();
		Map<String, Object> row = null;
		if (orgnDtos != null && !orgnDtos.isEmpty()) {
			for (OrgnDTO orgnDto : orgnDtos) {
				row = new HashMap<String, Object>();
				row.put("id", orgnDto.getId());
				row.put("pId", orgnDto.getParentId());
				row.put("name", StringUtils.isNotBlank(orgnDto.getName()) && orgnDto.getName().length() > 20 ? orgnDto.getName().substring(0,10) + "..." : orgnDto.getName());
				row.put("refId", orgnDto.getRefId());
				row.put("nodeType", orgnDto.getNodeType());
				row.put("isParent", orgnDto.getSubCount() > 0 ? true : false);
				result.add(row);
			}
		}
		return result;
	}
}
