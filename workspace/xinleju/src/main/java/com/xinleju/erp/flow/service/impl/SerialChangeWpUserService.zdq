package com.xinleju.erp.flow.service.impl;

import org.springframework.stereotype.Service;

import com.xinleju.erp.flow.flowutils.utils.WsConstant;
import com.xinleju.erp.flow.models.Wi;
import com.xinleju.erp.flow.models.Wp;
import com.xinleju.erp.flow.utils.WpUsersChangeTypeConstant;

/**
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 * 修改流程参与人service-串行
 * @author   zhongjun
 * @version  $Id: SerialChangeWpUserService.java 2309 2015-01-09 03:23:33Z zhongjun $
 * @since
 * @see
 */
@Service
public class SerialChangeWpUserService extends AbstractChangeWpUserService {
    
    /**
     * 是否可以修改参与人
     * @author jun
     * @param opWiId 修改参与人的任务id
     * @param wpId 需要修改参与人的节点id
     * @param subWpId 需要修改参与人的子节点id
     * @param wiId 需要修改参与人的任务id
     * @param userId 需要修改参与人的用户id
     * @return 是否可以修改参与人
     */
    @Override
    public Object[] canChangeWpUser(Long opWiId, Long wpId, Long subWpId, Long wiId, Long userId){
        Object[] canChangeWpUserArray = new Object[]{true, ""};
        if (null != opWiId && opWiId.intValue() > 0){
            canChangeWpUserArray[0] = super.canChangeWpUsersByAcSet(opWiId, wpId);
        }
        if ((Boolean) canChangeWpUserArray[0]){
            int wpUserChangeType = super.fixWpUserChangeType(wpId, subWpId, wiId, userId);
            switch (wpUserChangeType) {
                case WpUsersChangeTypeConstant.CHANGE_WP_USERS_WP_WI:{
                    canChangeWpUserArray = this.canChangeWpUserByPx(wpId, subWpId, wiId, userId);
                    break;
                }
                case WpUsersChangeTypeConstant.CHANGE_WP_USERS_WP_USER:{
                    canChangeWpUserArray = this.canChangeWpUserByPx(wpId, subWpId, wiId, userId);
                    break;
                }
                case WpUsersChangeTypeConstant.CHANGE_WP_USERS_SUBWP:{
                    canChangeWpUserArray = this.canChangeWpUserByPx(wpId, subWpId, wiId, userId);
                    break;
                }
                case WpUsersChangeTypeConstant.CHANGE_WP_USERS_WP:{
                    canChangeWpUserArray = this.canChangeWpUserByPx(wpId, subWpId, wiId, userId);
                    break;
                }
                default:{
                    canChangeWpUserArray[0] = false;
                    canChangeWpUserArray[1] = WpUsersChangeTypeConstant.CAN_NOT_CHANGE_NO_CASE;
                    break;
                }
            }
        } else {
            canChangeWpUserArray[1] = WpUsersChangeTypeConstant.CAN_NOT_CHANGE_NO_SET;
        }
        return canChangeWpUserArray;
    }
    @Override
    public Object[] canChangeWpUserByPx(Long wpId, Long subWpId, Long wiId, Long userId) {
        Object[] canChangeWpUserByPx = super.canChangeWpUserByWpStatus(wpId, subWpId, wiId, userId);
        if ((Boolean) canChangeWpUserByPx[0]){
            //添加子wp
            if (null != subWpId && subWpId.intValue() > 0){
                canChangeWpUserByPx[0] = getDao().isExist(Wp.class, " id = ? and (subPx >= parentWp.currentSubPx or ai.status = ?) "
                        , subWpId, WsConstant.STATUS_CREATED);
                if (!(Boolean) canChangeWpUserByPx[0]){
                    canChangeWpUserByPx[1] = WpUsersChangeTypeConstant.CAN_NOT_CHANGE_NEXT_SUBWP_START;
                }
            //添加wi
            } else if (null != wiId && wiId.intValue() > 0){
                int runningWiPx = getDao().findIntBySQL("select max(px) from tf_wi where wp_id = ? and is_effect_flow = 1"
                        + " and status = ? ", wpId, Wi.STATUS_RUNNING);
                canChangeWpUserByPx[0] = getDao().isExist(Wi.class, " id = ? and px >= ? ", wiId, runningWiPx);
                if (!(Boolean) canChangeWpUserByPx[0]){
                    canChangeWpUserByPx[1] = WpUsersChangeTypeConstant.CAN_NOT_CHANGE_NEXT_WI_START;
                }
            }
        }
        return canChangeWpUserByPx;
    }
    @Override
    public Object[] changeWpUser(Long opWiId, Long wpId, Long subWpId, Long wiId, Long userId, String paticipantString) {
        //判断是不是可以添加
        Object[] changeWpUser = this.canChangeWpUser(opWiId, wpId, subWpId, wiId, userId);
        if ((Boolean) changeWpUser[0]){
            super.dealChangeUser(opWiId, wpId, subWpId, wiId, userId, paticipantString);
        }
        return changeWpUser;
    }
}
