package com.xinleju.erp.frame.dao;

import java.util.List;
import java.util.Map;

import org.apache.commons.collections.map.LinkedMap;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Repository;

import com.xinleju.erp.base.utils.CollectionUtils;
import com.xinleju.erp.flow.dao.impl.BaseDAO;
import com.xinleju.erp.flow.utils.FlowConstant;
import com.xinleju.erp.frame.models.AdminLog;
import com.xinleju.erp.frame.models.App;
import com.xinleju.erp.frame.models.LogRecord;

@Repository
public class AppDao extends BaseDAO {
	
	/**
	 * 获得App的Map
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public Map<String,App> getAppMap(){
		List<App> apps = getDao().findByHQL(App.class, "from App a where (a.status is null or a.status = ?) order by sort asc", App.STATUS_ENABLE);
		Map<String,App> appMap = new LinkedMap();
		for (App app : apps){
			appMap.put(app.getCode(), app);
		}
		return appMap;
	}
	/**
     * 获得App的Map
     * @return
     */
    public Map<String,App> getAllAppMap(){
        List<App> apps = getDao().findByHQL(App.class, "from App a order by sort asc");
        return CollectionUtils.collectAsMap(apps, "code");
    }
    
    /**
     * 根据名称取到App对象信息
     * @param name
     * @return
     */
    public App getAppByName(String name){
        List<App> apps = getDao().findByHQL(App.class, "from App where name='"+name+"'");
    	if(apps!=null&&apps.size()>0)
    		return apps.get(0);
    	else
    		return null;
    }
    
    public String getAppNameByCode(String appCode){
        String appName = "";
        if (StringUtils.isNotBlank(appCode)){
            appName = getDao().findString("select min(a.name) from  App a where a.code = ? ", appCode);
        }
        return appName;
    }
    public App getPtApp(){
        return this.getAppByCode(FlowConstant.APP_CODE_PT);
    }
    public App getAppByCode(String appCode){
        App app = null;
        if (StringUtils.isNotBlank(appCode)){
            app = getDao().findFirstByHQL(App.class, "from  App a where a.code = ? order by sort asc", appCode);
        }
        if (null == app){
            app = new App();
            app.setName("");
            app.setDepUrl("");
        }
        return app;
    }
    
    //普通用户日志
    public void saveLogRecord(LogRecord lr){
    	getDao().save(lr);
    }
    //保存管理员操作日志
    public void saveAdminLog(AdminLog adminLog){
    	getDao().save(adminLog);
    }
}
