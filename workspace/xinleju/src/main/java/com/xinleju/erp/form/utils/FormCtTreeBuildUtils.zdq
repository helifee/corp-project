package com.xinleju.erp.form.utils;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.xinleju.erp.form.models.FormCt;
import com.xinleju.erp.form.service.FormService;
import com.xinleju.erp.frame.models.NoticeType;

@Component
public class FormCtTreeBuildUtils {
	
	@Autowired
	private FormService formService;
	
	private static FormCtTreeBuildUtils formCtTreeBuildUtils;
	
	@PostConstruct
	public void init() {
		formCtTreeBuildUtils = this;
		formCtTreeBuildUtils.formService = this.formService;
	}
	
	
	/**
	 * 构建单一对象结构
	 * @param formCt
	 * @param includeDisabled
	 * @return
	 */
	public static Map<String,Object> buildFormCtTree(FormCt formCt,boolean includeDisabled) {
		if(formCt != null) {
			Map<String,Object> result = new HashMap<String, Object>();
			result.put("id", formCt.getId());
			Long childCount = formCtTreeBuildUtils.formService.getChildFormCtCount(formCt.getId(), includeDisabled);
			result.put("leaf", childCount > 0 ? false : true);
			if(formCt.getStatus() == NoticeType.STATUS_DISABLE) {
				result.put("text", "<s style='color:red'>"+formCt.getName()+"</s>");
			}else{
				result.put("text",formCt.getName());
			}
			return result;
		}
		return null;
	}
	
	
	/**
	 * 构建集合
	 * @param formCts
	 * @param includeDisabled
	 * @return
	 */
	public static List<Map<String,Object>> buildFormCtTree(List<FormCt> formCts,boolean includeDisabled) {
		List<Map<String,Object>> result = new ArrayList<Map<String,Object>>();
		if(formCts != null && !formCts.isEmpty()) {
			for(FormCt fc : formCts) {
				result.add(buildFormCtTree(fc, includeDisabled));
			}
		}
		return result;
	}
	
}
