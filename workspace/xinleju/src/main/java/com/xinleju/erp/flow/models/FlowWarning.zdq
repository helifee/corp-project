package com.xinleju.erp.flow.models;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.xinleju.erp.base.app.models.IdEntity;

/**
 * 流程预警设置
 * 
 * @author zhengxj
 */
@Entity
@Table(name = "tf_flow_warning")
public class FlowWarning extends IdEntity {

    /**
     * 序列化ID
     */
    private static final long serialVersionUID = 1170902230977237440L;

    /**
     * 不包涵非工作日
     */
    public static final int NON_WORK_DAY = 0;
    
    /**
     * 包涵工作日
     */
    public static final int WORK_DAY = 1;
    
    /**
     * 通知本人
     */
    public static int NOTICE_SELF = 1;
    
    /**
     * 通知领导
     */
    public static int NOTICE_LEADER = 2;
    
    /**
     * 通知标准角色/岗位/用户
     */
    public static int NOTICE_OTHERS = 3;
    

    /**
     * 通知类型:不通知
     */
    public static final int NOTICE_TYPE_NON = 1;

    /**
     * 通知类型:发送消息
     */
    public static final int NOTICE_TYPE_SMG = 2;

    /**
     * 通知类型:发送短信
     */
    public static final int NOTICE_TYPE_SMS = 3;

    /**
     * 通知类型:发送邮件
     */
    public static final int NOTICE_TYPE_EMAIL = 4;
    
    public static final int MINUTES = 60;

    /**
     * 标准审批时间(指审批人从收到待办开始到提交时间)
     */
    private Double standardSpTimeRange;

    /**
     * 是否包含非工作日
     */
    private Integer isWorkDays;

    /**
     * 通知方式-本人
     */
    private Integer noticeType4Self;

    /**
     * 通知本人时间间隔
     */
    private Double noticeInterval4Self;

    /**
     * 在逾期规定小时后,针对上级领导设置
     */
    private Double overdue4Leader;

    /**
     * 通知方式-领导
     */
    private Integer noticeType4Leader;

    /**
     * 通知领导时间间隔
     */
    private Double noticeInterval4Leader;

    /**
     * 在逾期规定小时后,针对标准角色/岗位/用户设置
     */
    private Double overdue4Others;
    
    /**
     * 标准角色/岗位/用户
     */
    @Column(length = 4000)
    private String noticeUsers;
    
    /**
     * 例外用户
     */
    @Column(length = 4000)
    private String noNoticeUsers;

    /**
     * 通知方式-标准角色/岗位/用户
     */
    private Integer noticeType4Others;

    /**
     * 通知标准角色/岗位/用户时间间隔
     */
    private Double noticeInterval4Others;

    /**
     * 创建时间
     */
    @Temporal(TemporalType.TIMESTAMP)
    private Date createTime;
    
    /**
     * 更新时间
     */
    @Temporal(TemporalType.TIMESTAMP)
    private Date updateTime;

    public FlowWarning() {
        super();
    }


    public Integer getIsWorkDays() {
        return isWorkDays;
    }

    public void setIsWorkDays(Integer isWorkDays) {
        this.isWorkDays = isWorkDays;
    }

    public Integer getNoticeType4Self() {
        return noticeType4Self;
    }

    public void setNoticeType4Self(Integer noticeType4Self) {
        this.noticeType4Self = noticeType4Self;
    }

    public Double getNoticeInterval4Self() {
        return noticeInterval4Self;
    }

    public void setNoticeInterval4Self(Double noticeInterval4Self) {
        this.noticeInterval4Self = noticeInterval4Self;
    }


    public Integer getNoticeType4Leader() {
        return noticeType4Leader;
    }

    public void setNoticeType4Leader(Integer noticeType4Leader) {
        this.noticeType4Leader = noticeType4Leader;
    }

    public Double getNoticeInterval4Leader() {
        return noticeInterval4Leader;
    }

    public void setNoticeInterval4Leader(Double noticeInterval4Leader) {
        this.noticeInterval4Leader = noticeInterval4Leader;
    }

    public Integer getNoticeType4Others() {
        return noticeType4Others;
    }

    public void setNoticeType4Others(Integer noticeType4Others) {
        this.noticeType4Others = noticeType4Others;
    }

    public Double getNoticeInterval4Others() {
        return noticeInterval4Others;
    }

    public void setNoticeInterval4Others(Double noticeInterval4Others) {
        this.noticeInterval4Others = noticeInterval4Others;
    }

    public Date getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    public Date getUpdateTime() {
        return updateTime;
    }

    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    public String getNoticeUsers() {
        return noticeUsers;
    }

    public void setNoticeUsers(String noticeUsers) {
        this.noticeUsers = noticeUsers;
    }

    public String getNoNoticeUsers() {
        return noNoticeUsers;
    }

    public void setNoNoticeUsers(String noNoticeUsers) {
        this.noNoticeUsers = noNoticeUsers;
    }


	public Double getStandardSpTimeRange() {
		return standardSpTimeRange;
	}


	public void setStandardSpTimeRange(Double standardSpTimeRange) {
		this.standardSpTimeRange = standardSpTimeRange;
	}


	public Double getOverdue4Leader() {
		return overdue4Leader;
	}


	public void setOverdue4Leader(Double overdue4Leader) {
		this.overdue4Leader = overdue4Leader;
	}


	public Double getOverdue4Others() {
		return overdue4Others;
	}


	public void setOverdue4Others(Double overdue4Others) {
		this.overdue4Others = overdue4Others;
	}
}
