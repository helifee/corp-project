package com.xinleju.erp.quartz.action;

import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.base.utils.DateUtils;
import com.xinleju.erp.frame.dao.AppDao;
import com.xinleju.erp.frame.models.App;
import com.xinleju.erp.quartz.dto.TaskInsQueryDTO;
import com.xinleju.erp.quartz.model.TaskIns;

/**
 * 任务实例
 * @author chenhb
 *
 */
public class TaskInsAction extends BaseAction {
	
	
	private TaskInsQueryDTO taskInsDto;
	
	@Autowired
	private AppDao appDao;
	
	  /**
     * 是否显示更多
     */
    private Integer ifShowMore;
	
	/**
	 * 任务实例列表
	 * @return
	 */
	public String list() {
	
		DetachedCriteria dc = DetachedCriteria.forClass(TaskIns.class);
		if(taskInsDto != null) {
			if(StringUtils.isNotBlank(taskInsDto.getKeyword())) {
				dc.add(Restrictions.or(Restrictions.like("name", taskInsDto.getKeyword().trim(), MatchMode.ANYWHERE),
									Restrictions.like("code", taskInsDto.getKeyword().trim(), MatchMode.ANYWHERE)));
			}
			if(StringUtils.isNotBlank(taskInsDto.getModuleCode())) {
				dc.add(Restrictions.eq("moduleCode", taskInsDto.getModuleCode()));
			}
			if(StringUtils.isNotBlank(taskInsDto.getServiceId())) {
                dc.add(Restrictions.eq("serviceId", taskInsDto.getServiceId()));
            }
			if(taskInsDto.getStatus() != null) {
				dc.add(Restrictions.eq("status", taskInsDto.getStatus()));
			}
			if(StringUtils.isNotBlank(taskInsDto.getCreateAtBegin())) {
				dc.add(Restrictions.ge("createAt", DateUtils.str2Date(taskInsDto.getCreateAtBegin().trim().concat(" 00:00:00"), "yyyy-MM-dd HH:mm:ss")));
			}
			
			if(StringUtils.isNotBlank(taskInsDto.getCreateAtEnd())) {
				dc.add(Restrictions.le("createAt", DateUtils.str2Date(taskInsDto.getCreateAtEnd().trim().concat(" 23:59:59"), "yyyy-MM-dd HH:mm:ss")));
			}
			
			if(StringUtils.isNotBlank(taskInsDto.getStartAtBegin())) {
				dc.add(Restrictions.ge("startAt", DateUtils.str2Date(taskInsDto.getStartAtBegin().trim().concat(" 00:00:00"), "yyyy-MM-dd HH:mm:ss")));
			}
			
			
			if(StringUtils.isNotBlank(taskInsDto.getStartAtEnd())) {
				dc.add(Restrictions.le("startAt", DateUtils.str2Date(taskInsDto.getStartAtEnd().trim().concat(" 23:59:59"), "yyyy-MM-dd HH:mm:ss")));
			}
		}
		//按照时间倒序
		dc.addOrder(Order.desc("createAt"));
		
    	page = getCommonService().findPage(dc, start, limit);
    	
    	request.setAttribute("statusMap", TaskIns.getStatusMap());
    	
    	Map<String,App> appMap = appDao.getAppMap();
		request.setAttribute("appMap", appMap);
		return "list";
	}

	public TaskInsQueryDTO getTaskInsDto() {
		return taskInsDto;
	}

	public void setTaskInsDto(TaskInsQueryDTO taskInsDto) {
		this.taskInsDto = taskInsDto;
	}

	public Integer getIfShowMore() {
		return ifShowMore;
	}

	public void setIfShowMore(Integer ifShowMore) {
		this.ifShowMore = ifShowMore;
	}
	
}
