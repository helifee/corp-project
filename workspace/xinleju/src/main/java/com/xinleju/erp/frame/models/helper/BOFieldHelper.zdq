package com.xinleju.erp.frame.models.helper;

import java.util.List;
import java.util.Map;

import com.xinleju.erp.frame.enums.FiFieldFlagEnum;
import com.xinleju.erp.frame.enums.FiFieldTypeEnum;
import com.xinleju.erp.frame.models.BOFieldInfo;
import com.xinleju.erp.frame.utils.CommonUtil;

public class BOFieldHelper {
	private List<BOFieldInfo> boFieldInfoList = null;
	private BOFieldInfo keyfield = null;
	private BOFieldInfo codefield = null;
	private BOFieldInfo namefield = null;
	private Map<Object,List<BOFieldInfo>> typeMap;
	private Map<String,BOFieldInfo> codeMap;
	
	public BOFieldHelper(List<BOFieldInfo> boFieldInfoList){
		this.boFieldInfoList = boFieldInfoList;
		init();
	}
	
	public BOFieldInfo[] getAllFieldInfo(){
		return boFieldInfoList.toArray(new BOFieldInfo[0]);
	}
	public List<BOFieldInfo> getFieldList(FiFieldTypeEnum type){
		return typeMap.get(type.getKey());
	}
	
	private void init(){
		for(BOFieldInfo fieldINfo : boFieldInfoList){
			if(FiFieldFlagEnum.FLAG_KEY.getKey().equals(fieldINfo.getFlag()))
				keyfield = fieldINfo;
			 if(FiFieldFlagEnum.FLAG_CODE.getKey().equals(fieldINfo.getFlag()))
				codefield = fieldINfo;
			 if(FiFieldFlagEnum.FLAG_SHOW.getKey().equals(fieldINfo.getFlag()))
				namefield = fieldINfo;
			typeMap =CommonUtil.toMultiMap(boFieldInfoList, "vtype");
			codeMap = CommonUtil.toMap(boFieldInfoList, "fieldkey");
		}
	}
	
	public BOFieldInfo getFieldInfoByFieldkey(String fieldkey){
		return codeMap.get(fieldkey);
	}
	
	public BOFieldInfo getKeyfield() {
		return keyfield;
	}

	public BOFieldInfo getNamefield() {
		return namefield;
	}

	public BOFieldInfo getCodefield() {
		return codefield;
	}
	


}
