package com.xinleju.erp.frame.models;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Formula;

import com.xinleju.erp.base.app.models.IdEntity;

@Entity
@Table(name = "SM_PARTY_STRUCT")
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
public class PartyStruct extends IdEntity {
    private static final long serialVersionUID = 0L;
    
    @Column(name = "PARENT_ENTITY_ID")
    private Long parentEntityId;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="PARENT_ENTITY_ID",updatable=false,insertable=false)
    private PartyEntity parentEntity;
    
    @Column(name = "CHILD_ENTITY_ID")
    private Long childEntityId;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="CHILD_ENTITY_ID",updatable=false,insertable=false)
    private PartyEntity childEntity;
    
    @Column(name = "PARTY_STRUCT_TYPE_ID")
    private Long partyStructTypeId;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="PARTY_STRUCT_TYPE_ID",updatable=false,insertable=false)
    private PartyStructType partyStructType;
    
    
    @Formula("(SELECT COUNT(d.id) FROM  SM_PARTY_STRUCT d WHERE d.PARENT_ENTITY_ID = CHILD_ENTITY_ID AND "
    	+"EXISTS(SELECT 1 FROM sm_party_entity child WHERE d.child_entity_id = child.id "
         +    "AND (child.status IS NULL OR child.status =0 ) ) ) ")
    private Long subCount;
    
    public PartyEntity getParentEntity() {
        return parentEntity;
    }

    public void setParentEntity(PartyEntity parentEntity) {
        this.parentEntity = parentEntity;
    }

    public PartyEntity getChildEntity() {
        return childEntity;
    }

    public void setChildEntity(PartyEntity childEntity) {
        this.childEntity = childEntity;
    }

    public PartyStructType getPartyStructType() {
        return partyStructType;
    }

    public void setPartyStructType(PartyStructType partyStructType) {
        this.partyStructType = partyStructType;
    }

    public Long getParentEntityId() {
        return parentEntityId;
    }

    public void setParentEntityId(Long parentEntityId) {
        this.parentEntityId = parentEntityId;
    }

    public Long getChildEntityId() {
        return childEntityId;
    }

    public void setChildEntityId(Long childEntityId) {
        this.childEntityId = childEntityId;
    }

    public Long getPartyStructTypeId() {
        return partyStructTypeId;
    }

    public void setPartyStructTypeId(Long partyStructTypeId) {
        this.partyStructTypeId = partyStructTypeId;
    }

    public Long getSubCount() {
        return subCount;
    }

    public void setSubCount(Long subCount) {
        this.subCount = subCount;
    }
}
