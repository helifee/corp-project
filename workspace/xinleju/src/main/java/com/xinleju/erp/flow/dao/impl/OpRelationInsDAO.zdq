package com.xinleju.erp.flow.dao.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Repository;

import com.xinleju.erp.flow.models.Ac;
import com.xinleju.erp.flow.models.OpRelationIns;

/**
 * 操作组Service 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司 <简述> <详细描述>
 * 
 * @author jun
 * @version $Id$
 * @since
 * @see
 */
@Repository
public class OpRelationInsDAO extends BaseDAO {
    
    /**
     * 得到操作列表
     * @author jun
     * @param ac ac
     * @param opUserType opUserType
     * @return 操作组实例
     */
    public List<OpRelationIns> getOpRelationInsList(Ac ac, String opUserType){
        List<OpRelationIns> opRelationInsList = null;
        if (null != ac && null != ac.getId() && org.apache.commons.lang3.math.NumberUtils.isNumber(ac.getOpGroups())){
            opRelationInsList = this.getOpRelationInsList(ac.getFlowCode(), ac.getNodeId(), ac.getFlowVersion(), Long.valueOf(ac.getOpGroups()), opUserType);
        }
        return opRelationInsList;
    }
    
    /**
     * 得到操作列表
     * @author jun
     * @param flowCode 流程编码
     * @param nodeId 节点id
     * @param flowVersion 流程版本
     * @param opGroupId 操作组id
     * @param opUserType 操作组用户类型
     * @return 操作组实例集合
     */
    public List<OpRelationIns> getOpRelationInsList(String flowCode, String nodeId, String flowVersion, Long opGroupId, String opUserType) {
        if (null == opGroupId || StringUtils.isBlank(flowCode) || StringUtils.isBlank(nodeId) || StringUtils.isBlank(flowVersion)){
            return new ArrayList<OpRelationIns>();
        } else if (StringUtils.isBlank(opUserType)){
            return getDao().findAll(OpRelationIns.class, "flowCode = ? and flowVersion = ? and nodeId = ? and (isDisabled = 0 or isDisabled is null)"
                    + " and opGroupId = ? ", new Object[]{flowCode, flowVersion, nodeId, opGroupId} ," sort asc ", new String[]{"op"});
        } else {
            return getDao().findAll(OpRelationIns.class, "flowCode = ? and flowVersion = ? and nodeId = ? and (isDisabled = 0 or isDisabled is null)"
                    + " and opGroupId = ? and opUserType = ? ", new Object[]{flowCode, flowVersion, nodeId, opGroupId, opUserType}
            , " sort asc ", new String[]{"op"});
        }
    }
    /**
     * 得到操作
     * @author jun
     * @param flowCode 流程编码
     * @param nodeId 节点id
     * @param flowVersion 流程版本
     * @param opGroupId 操作组id
     * @param opId 操作id
     * @param opUserType 操作组用户类型
     * @return 操作组实例
     */
    public OpRelationIns getOpRelationIns(String flowCode, String nodeId, String flowVersion, Long opGroupId, Long opId, String opUserType){
        return getDao().findFirst(OpRelationIns.class, "flowCode = ? and nodeId = ? and flowVersion = ? and opGroupId = ? and opId = ? and opUserType = ?"
                , new Object[]{flowCode, nodeId, flowVersion, opGroupId, opId, opUserType}, " sort asc ", new String[]{"op"});
    }
}
