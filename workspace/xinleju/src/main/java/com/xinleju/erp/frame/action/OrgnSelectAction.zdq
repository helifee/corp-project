package com.xinleju.erp.frame.action;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.base.app.bean.Page;
import com.xinleju.erp.flow.flowutils.bean.PageBean;
import com.xinleju.erp.flow.service.api.ApiConstant;
import com.xinleju.erp.flow.service.api.extend.BaseAPI;
import com.xinleju.erp.flow.service.api.extend.dto.UserDTO;
import com.xinleju.erp.frame.service.OrgnSelectAPIService;

/**
 * 
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 * <人员选择>
 * <详细描述>
 * @author   胡科
 * @version  $Id$
 * @since 2015.04.04
 * @see
 */
public class OrgnSelectAction extends BaseAction {
    
    /**
     * 基础API。为页面提供zTree的数据，还有用户。
     */
    @Autowired
    @Qualifier(ApiConstant.BEAN_CODE)
    private BaseAPI baseAPI;

    /**
     * 本action对应的Service，封装了一些方法。
     */
    @Autowired
    private OrgnSelectAPIService orgnSelectService;
    
    /**
     * 
     *〈进入到〉
     *〈详细描述〉
     * @author 胡科
     * @return  String 人员选择页面
     */
    public String index() {
        
        //获取之前已经选好的人员，该字符串existingPersonIds是由Long型id转成String,再加","拼接起来的
        String existingPersonIds = getParameter("existingPersonIds");
        if (StringUtils.isNotEmpty(existingPersonIds)) {
            request.setAttribute("list", orgnSelectService.getExistingUsers(existingPersonIds));           
        }

        //决定选择模式，是单选，还是多选 1为单选，其他为多选
        request.setAttribute("chooseModel", getParameterInt("model"));        

        //获取zTree的开始数据 
        request.setAttribute("typeTree", orgnSelectService.getChildrenOrgns(null));
        System.out.println(orgnSelectService.getChildrenOrgns(null)); 
        return "index";
    }
    
    public String singleIndex() {
    	this.index();
    	
    	return "singleIndex";
    }
    
      /**
       * 
       *〈给可选人员ifrma提供数据〉
       *〈user〉
       * @author 胡科
       * @return String 用户列表
       */
	public String usersList() {

		Long deptId = getParameterLong("deptId");
		String name = getParameter("name");
		try {
			name = URLDecoder.decode(StringUtils.isNotBlank(name) ? name : "", "UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}

		PageBean<UserDTO> pageUserDto = baseAPI.getUserList(deptId, name, start, limit, true, null).getResult();
		if (pageUserDto != null) {
			page = new Page(start, limit, pageUserDto.getTotal(), pageUserDto.getItems());

		}
		request.setAttribute("name", name);
		return "usersList";
	}

    public String singleUsersList() {
    	this.usersList();
    	return "singleUsersList";
    }
    

        /**
         * 
         *〈ajax補充zTree〉
         *〈读取传过来的节点的id，读取它的子节点，封装为List<Map<String,String>，再转变为JSONaArray，再转变为String,发送出去。〉
         * @author 胡科
         */
    public void  zTreeAsync(){
        
        //id为ajax发过来的，作为父节点用的，根据此来查找子节点
        Long id = getParameterLong("id"); 
        if (id != null) {
            
            System.out.println("id=" + id); 
            
            //发送已经转换成字符串的子结点过去
            renderJson(orgnSelectService.getChildrenOrgns(id));     
        }
    }
    
}