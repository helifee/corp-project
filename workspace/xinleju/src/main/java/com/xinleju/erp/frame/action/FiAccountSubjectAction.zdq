package com.xinleju.erp.frame.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONArray;

import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.bean.Page;
import com.xinleju.erp.base.utils.JsonUtils;
import com.xinleju.erp.finance.models.FiAssMapping;
import com.xinleju.erp.finance.models.FiBizObject;
import com.xinleju.erp.finance.service.BizObjectService;
import com.xinleju.erp.finance.service.FiAssMappingService;
import com.xinleju.erp.finance.service.FiBizObjectService;
import com.xinleju.erp.frame.dao.AppDao;
import com.xinleju.erp.frame.dto.FiAccountSubjectDTO;
import com.xinleju.erp.frame.dto.FiSysCorpDTO;
import com.xinleju.erp.frame.dto.JsonTreeTableTemplete;
import com.xinleju.erp.frame.models.BaseEntity;
import com.xinleju.erp.frame.models.EntityExtender;
import com.xinleju.erp.frame.models.FiSysInfo;
import com.xinleju.erp.frame.models.extender.FiAccountSubjectExtender;
import com.xinleju.erp.frame.models.extender.FiSysCorpExtender;
import com.xinleju.erp.frame.service.FiBusinessService;
import com.xinleju.erp.frame.service.FiSysDataService;
import com.xinleju.erp.frame.test.FiAccIncurflagEnum;
import com.xinleju.erp.frame.test.FiAccSubtypeEnum;
import com.xinleju.erp.frame.utils.CommonUtil;

public class FiAccountSubjectAction extends FiBaseAction {
	@Autowired
	private FiBusinessService fiBusinessService;
	@Autowired
	private FiSysDataService fiSysDataService;
	@Autowired
	private FiAssMappingService fiAssMappingService;
	
	@Autowired
	AppDao appDao;
	@Autowired
	private FiBizObjectService fiBizObjectService;

	@Override
	protected Class<? extends EntityExtender> getExtender() {
		return FiAccountSubjectExtender.class;
	}

	/**
	 * 列表
	 * 
	 * @return
	 */
	public String list() {
		Long accountSetId = getParameterLong("accountSetId");
		String accountSetCode = request.getParameter("accountSetCode");
		Long fisysinfoid = getParameterLong("fisysinfoid");
		Long sysId = getParameterLong("sysId");
		addRefs("fisysinfoid_ref", fiBusinessService.queryDataSet(FiSysInfo.class));
		if (fisysinfoid != null) {
			addRefs("targsyscorpid_ref", CommonUtil.transform(fiSysDataService.queryFiSysCorp(fisysinfoid), "id", "name"));
		} else {
			addRefs("targsyscorpid_ref", null);
		}
		addRefs("subtype_ref", FiAccSubtypeEnum.getMap());
		addRefs("incurflag_ref", FiAccIncurflagEnum.getMap());
		List<FiBizObject> bizObjs = BizObjectService.getBaseDataObjectList();
		String json = JsonUtils.toJSONString(bizObjs);
		request.setAttribute("bizObjs", json);
		//获取辅助核算列表
		if(accountSetCode != null ){
			List<FiAssMapping> assMapps = fiAssMappingService.getFiAssMappingsByAccountSetId(accountSetId,sysId);
			Map<String,FiAssMapping> fmmap = new HashMap<String,FiAssMapping>();
			for(FiAssMapping fm:assMapps){
				fmmap.put(fm.getAssName(), fm);
			}
			List<FiAssMapping> assMappList = new ArrayList<FiAssMapping>();
			for(Map.Entry<String, FiAssMapping> entry:fmmap.entrySet()){
				assMappList.add(entry.getValue());
			}
			String assMappjson = JsonUtils.toJSONString(assMappList);
			request.setAttribute("assMppObjs", assMappjson);
		}
		request.setAttribute("accountSetId", accountSetId);
		request.setAttribute("accountSetCode", accountSetCode);
		request.setAttribute("sysId", sysId);
		return super.list();
	}

	@Override
	public void loadlist() {
		limit = getParameter("rows") == null ? Integer.MAX_VALUE : getParameterInt("rows");
		start = getParameter("page") == null ? 0 : (getParameterInt("page") - 1) * limit;
		page = loaddata();
		JsonTreeTableTemplete jttt = new JsonTreeTableTemplete("id", "pid", FiAccountSubjectDTO.class, FiAccountSubjectExtender.class);
		JSONArray jsonTree = CommonUtil.transTree(page.getItems(), jttt);
		renderJson(jsonTree.toString());
	}

	@Override
	protected Page loaddata() {
		Long fisysinfoid = getParameterLong("fisysinfoid");
		String targsyscorpid = getParameter("targsyscorpid");
		List<FiAccountSubjectDTO> dtoList = null;
		if (fisysinfoid != null && targsyscorpid != null)
			dtoList = fiSysDataService.queryAccountSubject(fisysinfoid, targsyscorpid);
		else
			dtoList = new ArrayList<FiAccountSubjectDTO>();
		Page page = new Page();
		page.setItems(dtoList);
		page.setTotal(dtoList.size());
		return page;
	}

	@Override
	protected Class<? extends BaseEntity> getMainClass() {
		return null;
	}

	public void loadficorp() {
		Long fisysinfoid = getParameterLong("fisysinfoid");
		List<FiSysCorpDTO> corpList = null;
		if (fisysinfoid != null)
			corpList = fiSysDataService.queryFiSysCorp(fisysinfoid);
		else
			corpList = new ArrayList<FiSysCorpDTO>();
		JsonTreeTableTemplete jttt = new JsonTreeTableTemplete("id", "pid", new String[] { "id" }, FiSysCorpExtender.class);
		JSONArray jsonTree = CommonUtil.transTree(corpList, jttt);
		renderJson(jsonTree.toString());
	}
}
