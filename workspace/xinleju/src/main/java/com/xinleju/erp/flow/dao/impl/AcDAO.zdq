package com.xinleju.erp.flow.dao.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.xinleju.erp.base.utils.StringHelper;
import com.xinleju.erp.flow.models.Ac;

/**
 * 
 * 
 * <p>
 * </p>
 * <p>
 * </p>
 * 
 * @author 孙朝辉
 * @version $Id: AcDAO.java 2337 2015-01-23 08:16:23Z zhongjun $
 * @since
 * 
 */
@Repository
public class AcDAO extends BaseDAO {

    /**
     * 
     * <p>
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param flowCode
     *            流程编码
     * @param flowVersion
     *            流程版本
     * @return 环节定义集合
     */
    public List<Ac> getAcList(String flowCode, String flowVersion) {
        List<Ac> acList = getDao().findByHQL(Ac.class, "from Ac where flowCode=? and flowVersion=? order by tp asc", flowCode, flowVersion);
        return acList;
    }

    /**
     * 
     * <p>
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param flowCode
     *            流程编码
     * @param flowVersion
     *            流程版本
     * @return 返回流程首节点
     */
    public Ac getStart(String flowCode, String flowVersion) {
    	//isStart流程模板第一个为1 ，isEnd流程模板节点为1 ，其他情况都为0
        Ac ac = getDao().findFirst(Ac.class, "flowCode=? and flowVersion=? and isStart = 1", new Object[] { flowCode, flowVersion });
        return ac;
    }

    /**
     * 
     * <p>
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param ac
     *            节点
     * @return 返回所有前置节点
     */
    public List<Ac> getFromAList(Ac ac) {
        String fromA = ac.getFrom_a();
        return getListByNodeIdList(ac.getFlowCode(), ac.getFlowVersion(), StringHelper.splitAsStringList(fromA, "-"));
    }

    /**
     * 
     * <p>
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param ac
     *            节点
     * @return 返回所有后置节点
     */
    public List<Ac> getNextAList(Ac ac) {
        String nextA = ac.getNext_a();
        return getListByNodeIdList(ac.getFlowCode(), ac.getFlowVersion(), StringHelper.splitAsStringList(nextA, "-"));
    }

    /**
     * 
     * <p>
     * </p>
     * <p>
     * </p>
     * 
     * @author 孙朝辉
     * @param flowCode
     *            流程编码
     * @param flowVersion
     *            流程版本
     * @param nodeIds
     *            指定的节点
     * @return 返回指定节点id的集合
     */
    private List<Ac> getListByNodeIdList(String flowCode, String flowVersion, List<String> nodeIds) {
        List<Ac> acList = new ArrayList<Ac>();

        if (nodeIds.size() > 0) {
            String whereClause = "flowCode = ? and flowVersion = ? and  " + " nodeId in (" + StringHelper.join(nodeIds, ",", "'") + ")";

            acList = getDao().findAll(Ac.class, whereClause, new Object[] { flowCode, flowVersion });
        }
        return acList;
    }
}
