package com.xinleju.erp.finance.dao;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.xinleju.erp.finance.models.FiCashFlowCase;
import com.xinleju.erp.flow.dao.impl.BaseDAO;
import com.xinleju.erp.form.utils.DbType;
import com.xinleju.erp.frame.dto.FiCashFlowCaseDTO;

/**
 * 现金流量项目
 * @author ztl
 *
 */
@Repository
public class FiCashFlowCaseDao extends BaseDAO {
	
    /**
     * 根据账套code、所属系统、状态获取现金流量项目  
     * @param status
     * @param accountSetCode
     * @param sysId
     * @return
     */
	public List<FiCashFlowCase> getFiCashFlowCaseList(String status,Long accountSetId,Long sysId) {
		List<FiCashFlowCase> cashFlowCaseList = new ArrayList<FiCashFlowCase>(); 
		if(DbType.getType().contains("dbo.")){
			cashFlowCaseList = getDao().findByHQL(FiCashFlowCase.class, "from FiCashFlowCase p where  p.createDate = (select max(pp.createDate) from FiCashFlowCase pp where pp.code=p.code and pp.accountSetId = ? and pp.sysId = ?) and  p.accountSetId = ?   order by code asc",accountSetId,sysId,accountSetId);
		}else{
			cashFlowCaseList = getDao().findByHQL(FiCashFlowCase.class, "from FiCashFlowCase where accountSetId = ? and sysId = ? order by code asc",accountSetId,sysId);
		}
		return cashFlowCaseList;
	}

	/**
	 * 将FiCashFlowCaseDTO列表返回
	 * 
	 * @param accountSetId
	 * @param status
	 * @return
	 */
	public List<FiCashFlowCaseDTO> getFiCashFlowCaseDTOList(String status,Long accountSetId,Long sysId) {
		List<FiCashFlowCase> cashFlowCaseList = getFiCashFlowCaseList(status,accountSetId,sysId);
		List<FiCashFlowCaseDTO> dtoList = new ArrayList<FiCashFlowCaseDTO>(cashFlowCaseList.size());
		for (FiCashFlowCase cashFlowCase : cashFlowCaseList) {
			FiCashFlowCaseDTO subjectDTO = cashFlowCaseToSubjectDTO(cashFlowCase);
			dtoList.add(subjectDTO);
		}
		return dtoList;
	}

	/**
	 * 现金流量项目转换成Dto对象
	 * 
	 * @param cashFlowCase
	 * @return
	 */
	private FiCashFlowCaseDTO cashFlowCaseToSubjectDTO(FiCashFlowCase cashFlowCase) {
		FiCashFlowCaseDTO dto = new FiCashFlowCaseDTO();
		dto.setId(cashFlowCase.getId().toString());
		dto.setPid(cashFlowCase.getParentId() == null ? "" : cashFlowCase.getParentId().toString());
		dto.setSubcode(cashFlowCase.getCode());
		//dto.setAccountsetid(accountCaption.getAccountSetId().toString());
		dto.setSubname(cashFlowCase.getName());
		try{
			SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			dto.setCreateDate(sf.format(cashFlowCase.getCreateDate()));
			}catch(Exception e){
				e.printStackTrace();
			}
		return dto;
	}

	/**
	 * 保存
	 * 
	 * @param cashFlowCase
	 */
	public void saveOrUpdate(FiCashFlowCase cashFlowCase) {
		getDao().saveOrUpdate(cashFlowCase);
	}
	
	

}
