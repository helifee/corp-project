package com.xinleju.erp.finance.service;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.io.FileUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;

import com.alibaba.fastjson.JSON;
import com.xinleju.erp.base.utils.JsonUtils;
import com.xinleju.erp.finance.models.FiBizObject;
import com.xinleju.erp.finance.models.FiBusinessobject;

/**
 * 存放业务对象数据
 * @author songjunjie
 */
/**
 * 
 * @author songjunjie
 */
public class BizObjectService {
	private static final Log log = LogFactory.getLog(BizObjectService.class);
	
	@Autowired
	private FiBizObjectService fibizService;
	
	
	
	/**
	 * 基本档案对象列表
	 */
	public static List<FiBizObject> baseDataObjectList;

	/**
	 * 业务表单对象列表
	 */
	public static List<FiBizObject> bizFormObjectList;
	
	
	
	

	/**
	 * 初始化
	 */
	public static void init() {
	
		synchronized (BizObjectService.class) {
			if (baseDataObjectList == null || bizFormObjectList == null) {
				baseDataObjectList = new ArrayList<FiBizObject>();
				bizFormObjectList = new ArrayList<FiBizObject>();
				try {
					String file = BizObjectService.class.getClassLoader().getResource("FiBizObject.json").getFile();
					String json = FileUtils.readFileToString(new File(file), "utf-8");
					List<FiBizObject> list = JSON.parseArray(json, FiBizObject.class);
					for (FiBizObject bizObj : list) {
						int type = bizObj.getType();
						if (type == 1) {
							baseDataObjectList.add(bizObj);
						} else if (type == 2) {
							bizFormObjectList.add(bizObj);
						}
					}
				} catch (IOException e) {
					log.error("", e);
				}
			}
		}
	}
	
	
	/**
	 * 返回基本档案业务对象列表
	 * 
	 * @return
	 */
	public static List<FiBizObject> getBaseDataObjectList() {
		if (baseDataObjectList == null) {
			init();
		}
		
		return baseDataObjectList;
	}

	/**
	 * 返回业务表单基本对象列表
	 * 
	 * @return
	 */
	public static List<FiBizObject> getBizFormObjectList() {
		if (bizFormObjectList == null) {
			init();
		}
		return bizFormObjectList;
	}
	
	/**
	 * 根据业务对象的名字得到辅助核算对应的字段
	 * @param objectName
	 * @return
	 */
	public static String getBaseDataObjectAssField(String objectName){
		
		
		for(FiBizObject o : getBaseDataObjectList()){
			if(o.getObjectName().equals(objectName)){
				return o.getAssField();
			}
		}
		return null;
	}

	public static void main(String[] args) {
		List<FiBizObject> list = BizObjectService.getBaseDataObjectList();
		for (FiBizObject bizObj : list) {
			String json = JsonUtils.toJSONString(bizObj);
			System.out.println(json);
		}
	}
}
