package com.xinleju.erp.frame.action;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.frame.dao.PartyTypeDao;
import com.xinleju.erp.frame.models.PartyType;

/**
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 * 组维护
 * @author   jdq
 * @version  $Id$
 * @since
 * @see
 */
public class PartyTypeAction extends BaseAction{

	private PartyType partyType;

	@Autowired
	private PartyTypeDao partyTypeDao;

	public String list() {
		String name = request.getParameter("name");
		DetachedCriteria c = DetachedCriteria.forClass(PartyType.class);
		if(StringUtils.isNotBlank(name)){
			c.add(Restrictions.like("name", "%"+name+"%"));
		}
		c.addOrder(Order.asc("sort"));
		page = getCommonService().findPage(c, start, limit);
		request.setAttribute("name", name);
		return "list";
	}

	public String edit() {
		if (id != null) {
			partyType = getCommonService().getById(PartyType.class, id);
		} else {
			partyType = new PartyType();
			partyType.setIfCanAdd(PartyType.IFCANADD_NO);
			partyType.setIfOnlyEntity(PartyType.IFONLYENTITY_YES);
		}
		request.setAttribute("typeList", PartyType.typeList);
		return "edit";
	}

	public void save() {
		getCommonService().saveOrUpdate(partyType);
	}

	public PartyType getPartyType() {
		return partyType;
	}

	public void setPartyType(PartyType partyType) {
		this.partyType = partyType;
	}



}
