package com.xinleju.erp.frame.action;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.frame.dao.AppDao;
import com.xinleju.erp.frame.dto.MsgLogQueryDTO;
import com.xinleju.erp.frame.models.OaMsgSendLog;
import com.xinleju.erp.thirdpart.oa.xinyuan.impl.OaMsgServiceImpl;

/**
 * oa推送消息日志查询
 * @author luocheng
 * 
 */
public class MsgLogAction extends BaseAction {
	
	private MsgLogQueryDTO msgLogQueryDTO;
	
	@Autowired
	private AppDao appDao;
	

	@Autowired
	private OaMsgServiceImpl oaMsgServiceImpl;
	
	/**
	 * 列表
	 * @return
	 */
	public String list() {
		try{
		DetachedCriteria dc = DetachedCriteria.forClass(OaMsgSendLog.class);

        
		if(msgLogQueryDTO != null) {
			if(msgLogQueryDTO.getType()!=null) {
				dc.add(Restrictions.eq("returnState", msgLogQueryDTO.getType()));
			}
			if(StringUtils.isNotBlank(msgLogQueryDTO.getOpType())) {
				dc.add(Restrictions.eq("opType", msgLogQueryDTO.getOpType()));
			}
			if(StringUtils.isNotBlank(msgLogQueryDTO.getVisitLoginName())) {
				dc.add(Restrictions.or(Restrictions.like("loginName", msgLogQueryDTO.getVisitLoginName().trim(), MatchMode.ANYWHERE)));
			}
			if(StringUtils.isNotBlank(msgLogQueryDTO.getVisitDateBegin())) {
				//dc.add(Restrictions.ge("createDate", DateUtils.str2Date(msgLogQueryDTO.getVisitDateBegin().trim()."DbType.getType()+"concat(" 00:00:00"), "yyyy-MM-dd HH:mm:ss")));
			}
			
			if(StringUtils.isNotBlank(msgLogQueryDTO.getVisitDateEnd())) {
				//dc.add(Restrictions.le("createDate", DateUtils.str2Date(msgLogQueryDTO.getVisitDateEnd().trim()."DbType.getType()+"concat(" 23:59:59"), "yyyy-MM-dd HH:mm:ss")));
			}
		}
        dc.addOrder(Order.desc("id"));
		
		page = getCommonService().findPage(dc, start, limit);
		}catch(Exception ex){
			ex.printStackTrace();
		}
		//Map<String,App> appMap = appDao.getAppMap();
		//request.setAttribute("appMap", appMap);
		return "list";
	}
	
	//重新推送
	public void againPush(){
		String msgId = request.getParameter("msgId");
		Map<String, Object> r = new HashMap<String, Object>();
		if(StringUtils.isNotBlank(msgId)){
			try{
				oaMsgServiceImpl.sendOaMsg(Long.parseLong(msgId));
				r.put("success", true);
			}catch(Exception ex){
				r.put("success", false);
				ex.printStackTrace();
			}
		}else{
			r.put("success", false);
		}
		super.renderJson(r);
	}
	
	

	public MsgLogQueryDTO getMsgLogQueryDTO() {
		return msgLogQueryDTO;
	}

	public void setMsgLogQueryDTO(MsgLogQueryDTO msgLogQueryDTO) {
		this.msgLogQueryDTO = msgLogQueryDTO;
	}


	
}
