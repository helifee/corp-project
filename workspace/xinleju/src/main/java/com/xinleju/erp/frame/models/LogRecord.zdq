package com.xinleju.erp.frame.models;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

import org.hibernate.annotations.Formula;

import com.xinleju.erp.base.app.models.IdEntity;

/**
 * 操作日志
 * 
 * @author luocheng
 * 
 */
@Entity
@Table(name = "SM_LOG_RECORD")
public class LogRecord extends IdEntity {

	/**
	 * 序列化
	 */
	private static final long serialVersionUID = -2039531201368730667L;

	/**
	 * 日志日期
	 */
	@Column(nullable = true)
	private Date createDate;

	/**
	 * 创建人
	 */
	@Column(nullable = true)
	private Long createUserId;

	@Formula("(select u.real_name from SM_USER u where u.id = create_user_id)")
	private String createUserName;

	@Column(nullable = true)
	private String loginName;
	
	@Formula("(select u.prefix from SM_USER u where u.id = create_user_id)")
	private String namePrefix;
	/**
	 * 公司
	 */
	@Column(nullable = true)
	private String company;

	/**
	 * 模块编码
	 */
	@Column(nullable = true)
	private String moduleCode;

	/**
	 * 操作标识：1查询2新增3修改4删除 多项用1,3,4来存
	 */
	@Column(nullable = true)
	private String sign;

	public static final String SIGN_QUERY = "1";// 查询
	public static final String SIGN_INSERT = "2";// 新增
	public static final String SIGN_UPDATE = "3";// 修改
	public static final String SIGN_DELETE = "4";// 删除

	/**
	 * 日志内容
	 */
	@Column(nullable = true)
	private String logInfo;

	/**
	 * 功能名称 用户管理，功能管理，角色管理等
	 */
	@Column(nullable = true)
	private String funcName;

	/**
	 * 错误信息
	 */
	@Column(nullable = true)
	private String errorMsg;

	/**
	 * 返回信息
	 */
	@Column(nullable = true)
	private String returnMsg;

	/**
	 * 日志类型：1登录日志2菜单日志3接口日志4其它日志
	 */
	@Column(nullable = true)
	private Long type;

	public static final Long TYPE_LOGIN = 1L;// 登录日志
	public static final Long TYPE_MEAN = 2L;// 菜单日志
	public static final Long TYPE_INTERFACE = 3L;// 接口日志
	public static final Long TYPE_OTHER = 4L;// 其它日志

	/**
	 * ip地址
	 */
	@Column(nullable = true)
	private String ipAddress;

	/**
	 * url
	 */
	@Column(nullable = true)
	private String url;

	public Date getCreateDate() {
		return createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	public Long getCreateUserId() {
		return createUserId;
	}

	public void setCreateUserId(Long createUserId) {
		this.createUserId = createUserId;
	}

	public String getModuleCode() {
		return moduleCode;
	}

	public void setModuleCode(String moduleCode) {
		this.moduleCode = moduleCode;
	}

	public String getSign() {
		return sign;
	}

	public void setSign(String sign) {
		this.sign = sign;
	}

	public String getLogInfo() {
		return logInfo;
	}

	public void setLogInfo(String logInfo) {
		this.logInfo = logInfo;
	}

	public String getFuncName() {
		return funcName;
	}

	public void setFuncName(String funcName) {
		this.funcName = funcName;
	}

	public String getErrorMsg() {
		return errorMsg;
	}

	public void setErrorMsg(String errorMsg) {
		this.errorMsg = errorMsg;
	}

	public String getReturnMsg() {
		return returnMsg;
	}

	public void setReturnMsg(String returnMsg) {
		this.returnMsg = returnMsg;
	}

	public Long getType() {
		return type;
	}

	public void setType(Long type) {
		this.type = type;
	}

	public String getIpAddress() {
		return ipAddress;
	}

	public void setIpAddress(String ipAddress) {
		this.ipAddress = ipAddress;
	}

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public String getCreateUserName() {
		return createUserName;
	}

	public void setCreateUserName(String createUserName) {
		this.createUserName = createUserName;
	}

	public String getLoginName() {
		return loginName;
	}

	public void setLoginName(String loginName) {
		this.loginName = loginName;
	}

	public String getNamePrefix() {
//		String sql = "";
//		if (!StringUtils.isEmpty(DbType.getType())) {
//			sql = "SELECT name_prefix  from  sm_party_entity  where  prefix=(SELECT cast(u.prefix as varchar(1500)) from SM_USER u where u.id = create_user_id )";
//
//		} else {
//			sql = "SELECT name_prefix  from  sm_party_entity  where  prefix=(SELECT  u.prefix from SM_USER u where u.id = create_user_id) ";
//		}
//		List<String> strList = App.getBean(JdbcTemplate.class).queryForList(sql, new Object[] { getId() }, String.class);
		return namePrefix;
	}

	public void setNamePrefix(String namePrefix) {
		this.namePrefix = namePrefix;
	}

	public String getCompany() {
		return company;
	}

	public void setCompany(String company) {
		this.company = company;
	}

}
