package com.xinleju.erp.quartz.model;

// Generated 2013-4-17 10:53:11 by Hibernate Tools 4.0.0

import java.sql.Blob;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * JobDetails generated by hbm2java
 */
@Entity
@Table(name = "QRTZ_JOB_DETAILS")
public class JobDetails implements java.io.Serializable {
	private static final long serialVersionUID = 3658825656395324904L;
	private JobDetailsId id;
	private String description;
	private String jobClassName;
	private String isDurable;
	private String isNonconcurrent;
	private String isUpdateData;
	private String requestsRecovery;
	private Blob jobData;
	private Set<Triggers> triggerses = new HashSet<Triggers>(0);

	public JobDetails() {
	}

	public JobDetails(JobDetailsId id, String jobClassName, String isDurable,
			String isNonconcurrent, String isUpdateData, String requestsRecovery) {
		this.id = id;
		this.jobClassName = jobClassName;
		this.isDurable = isDurable;
		this.isNonconcurrent = isNonconcurrent;
		this.isUpdateData = isUpdateData;
		this.requestsRecovery = requestsRecovery;
	}

	public JobDetails(JobDetailsId id, String description, String jobClassName,
			String isDurable, String isNonconcurrent, String isUpdateData,
			String requestsRecovery, Blob jobData, Set<Triggers> triggerses) {
		this.id = id;
		this.description = description;
		this.jobClassName = jobClassName;
		this.isDurable = isDurable;
		this.isNonconcurrent = isNonconcurrent;
		this.isUpdateData = isUpdateData;
		this.requestsRecovery = requestsRecovery;
		this.jobData = jobData;
		this.triggerses = triggerses;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "schedName", column = @Column(name = "SCHED_NAME", nullable = false, length = 120)),
			@AttributeOverride(name = "jobName", column = @Column(name = "JOB_NAME", nullable = false, length = 200)),
			@AttributeOverride(name = "jobGroup", column = @Column(name = "JOB_GROUP", nullable = false, length = 200)) })
	public JobDetailsId getId() {
		return this.id;
	}

	public void setId(JobDetailsId id) {
		this.id = id;
	}

	@Column(name = "DESCRIPTION", length = 250)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "JOB_CLASS_NAME", nullable = false, length = 250)
	public String getJobClassName() {
		return this.jobClassName;
	}

	public void setJobClassName(String jobClassName) {
		this.jobClassName = jobClassName;
	}

	@Column(name = "IS_DURABLE", nullable = false, length = 1)
	public String getIsDurable() {
		return this.isDurable;
	}

	public void setIsDurable(String isDurable) {
		this.isDurable = isDurable;
	}

	@Column(name = "IS_NONCONCURRENT", nullable = false, length = 1)
	public String getIsNonconcurrent() {
		return this.isNonconcurrent;
	}

	public void setIsNonconcurrent(String isNonconcurrent) {
		this.isNonconcurrent = isNonconcurrent;
	}

	@Column(name = "IS_UPDATE_DATA", nullable = false, length = 1)
	public String getIsUpdateData() {
		return this.isUpdateData;
	}

	public void setIsUpdateData(String isUpdateData) {
		this.isUpdateData = isUpdateData;
	}

	@Column(name = "REQUESTS_RECOVERY", nullable = false, length = 1)
	public String getRequestsRecovery() {
		return this.requestsRecovery;
	}

	public void setRequestsRecovery(String requestsRecovery) {
		this.requestsRecovery = requestsRecovery;
	}

	@Column(name = "JOB_DATA")
	public Blob getJobData() {
		return this.jobData;
	}

	public void setJobData(Blob jobData) {
		this.jobData = jobData;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobDetails")
	public Set<Triggers> getTriggerses() {
		return this.triggerses;
	}

	public void setTriggerses(Set<Triggers> triggerses) {
		this.triggerses = triggerses;
	}

}
