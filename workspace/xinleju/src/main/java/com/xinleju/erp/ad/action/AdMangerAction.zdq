package com.xinleju.erp.ad.action;

import java.util.List;

import javax.annotation.Resource;
import javax.naming.NamingException;
import javax.naming.directory.SearchControls;
import javax.naming.ldap.LdapContext;

import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

import com.xinleju.erp.ad.config.AdConfigUtils;
import com.xinleju.erp.ad.config.AdSetting;
import com.xinleju.erp.ad.service.AdCompanyService;
import com.xinleju.erp.ad.service.AdDeptService;
import com.xinleju.erp.ad.service.AdSettingService;
import com.xinleju.erp.ad.service.AdUserService;
import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.base.utils.JsonUtils;

public class AdMangerAction extends BaseAction{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private AdSetting adSetting;

	@Resource
	private AdCompanyService adCompanyService;
	
	@Resource
	private AdDeptService adDeptService;
	
	@Resource
	private AdUserService adUserService;
	
	private Long id;
	
	@Resource
	private AdSettingService adSettingService;

	public String execute() throws Exception {
		AdSetting rootAd=null;
		List<AdSetting> adSettings=  adSettingService.getAdSettingByextend();
		request.setAttribute("adSettings", adSettings);
		if(adSettings!=null && adSettings.size()>0){
			for(AdSetting adSetting:adSettings){
				if("root".equals(adSetting.getExtendName())){
					rootAd=adSetting;
					break;
				}
			}
		}
		if(rootAd!=null){
			request.setAttribute("adRoot", rootAd);
		}
		return "syncData";
	}
	
	
	
	public void getAdSettingById(){
		String id=request.getParameter("id");
		if(StringUtils.isNotBlank(id)){
			AdSetting adSetting=adSettingService.getAdSettingById(Long.valueOf(id));
			JSONObject obj=new JSONObject();
			try {
				String s = JsonUtils.toJSONString(adSetting);
				obj.put("result", s);
				obj.put("success", true);
				renderJson(obj.toString());
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
		
	}
	
	
	public void syncZbRoot() throws Exception{
		/*yangweijun 20160425 不同步总部数据	*/
		
		LdapContext ldapContext=AdConfigUtils.getLdapContextInstance(adSetting);
		boolean syncResult = adCompanyService.syncZbRoot(ldapContext,adSetting);
		if(syncResult){
			renderText("同步总部数据成功");
		}else{
			renderText("同步公司数据失败");
		}
	
		renderText("根据当前项目情况，总部数据同步关闭！");
	}
	
	
	
	
	
	public void syncCompany(){
		LdapContext ldapContext=AdConfigUtils.getLdapContextInstance(adSetting);
		boolean syncResult;
		try {
			System.out.print("----------------------start---------------------------------------------");
			System.out.print("ldapContext==================="+ldapContext);
			String   baseDN=AdConfigUtils.getBaseND(adSetting.getDomainName());
			System.out.print("baseDN==================="+baseDN);
			syncResult = adCompanyService.SynCompany(ldapContext,adSetting);
			System.out.print("----------------------end---------------------------------------------");
			
			
			if(syncResult){
				renderText("同步公司数据成功");
			}else{
				renderText("同步公司数据失败");
			}
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			/**
			try {
				ldapContext.close();
			} catch (NamingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			**/
		}
	
	}
	
	public void syncDept(){
		LdapContext ldapContext=AdConfigUtils.getLdapContextInstance(adSetting);
		boolean syncResult;
		try {
			syncResult = adDeptService.SynDept(ldapContext, adSetting);
			if(syncResult){
				renderText("同步部门数据成功");
			}else{
				renderText("同步部门数据失败");
			}
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			/**
			try {
				ldapContext.close();
			} catch (NamingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			**/
		}
	
	}

	public void syncUser(){
		   LdapContext ldapContext=AdConfigUtils.getLdapContextInstance(adSetting);
			try {
	
				boolean 	syncResult = adUserService.SynUser(ldapContext,adSetting);
				if(syncResult){
					renderText("同步用户数据成功");
				}else{
					renderText("同步用户数据失败");
				}
			} catch (NamingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}finally{
				/**
				try {
					ldapContext.close();
				} catch (NamingException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				**/
			}
		
	}
	
	public AdSetting getAdSetting() {
		return adSetting;
	}

	public void setAdSetting(AdSetting adSetting) {
		this.adSetting = adSetting;
	}



	public Long getId() {
		return id;
	}



	public void setId(Long id) {
		this.id = id;
	}




	
	
	

}
