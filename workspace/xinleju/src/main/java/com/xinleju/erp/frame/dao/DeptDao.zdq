package com.xinleju.erp.frame.dao;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.xinleju.erp.base.utils.StringHelper;
import com.xinleju.erp.flow.dao.impl.BaseDAO;
import com.xinleju.erp.frame.models.Dept;
@Repository
public class DeptDao extends BaseDAO{
	
	
	public static final int DELET_STATUS = 1;
	
	public void logicDelete(Long deptId) {
		changeStatus(deptId, DELET_STATUS);
	}
	
	public void changeStatus(Long deptId, Integer status ){
		if (null != deptId && null != status){
			getDao().execute("update Dept set status = ? where id= ?", status, deptId);
		}
	}
	
	/**
	 * 获得所有的部门
	 * @param includeDisabled 是否包含禁用的
	 * @return
	 */
	public List<Dept> getAllDept(Boolean includeDisabled) {
		StringBuffer hqlSb = new StringBuffer();
		hqlSb.append(" from Dept c where 1 = 1");
		if(includeDisabled == null || !includeDisabled) {
			hqlSb.append(" and (c.status is null or c.status = 0)");
		}
		return getDao().findByHQL(Dept.class, hqlSb.toString());
	}
	
	
	/**
	 * 获得非重复的所有部门
	 * @param includeDisabled 是否包含禁用的
	 * @return
	 */
	public List<Dept> getAllDepts(Boolean includeDisabled) {
		StringBuffer hqlSb = new StringBuffer();
		hqlSb.append(" from Dept c where 1 = 1 group by c.name");
		if(includeDisabled == null || !includeDisabled) {
			hqlSb.append(" and (c.status is null or c.status = 0)");
		}
		return getDao().findByHQL(Dept.class, hqlSb.toString());
	}
	
	/**
	 * 根据ID获取公司
	 * @param includeDisabled
	 * @param companyId
	 * @return
	 */
	public Dept getDeptById(Boolean includeDisabled,Long deptId) {
		StringBuffer hqlSb = new StringBuffer();
		hqlSb.append(" from Dept c where 1 = 1");
		
		hqlSb.append(" and c.id ="+deptId);
		if(includeDisabled == null || !includeDisabled) {
			hqlSb.append(" and (c.status is null or c.status = 0) ");
		}
		return getDao().findFirstByHQL(Dept.class, hqlSb.toString());
	}
	

	/**
	 * 根据IDs获取公司
	 * @param includeDisabled
	 * @param companyIds
	 * @return
	 */
	public List<Dept> getDeptByIds(Boolean includeDisabled,String[] deptIds) {
		StringBuffer hqlSb = new StringBuffer();
		hqlSb.append(" from Dept c where 1 = 1");
		
		hqlSb.append(" and c.id in  ('" + StringHelper.join(deptIds, "','") + "')");
		
		if(includeDisabled == null || !includeDisabled) {
			hqlSb.append(" and (c.status is null or c.status = 0) ");
		}
		return getDao().findByHQL(Dept.class, hqlSb.toString());
	}

}
