package com.xinleju.erp.flow.taglib;

import java.io.IOException;
import java.util.List;

import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.tagext.BodyTagSupport;

import org.apache.commons.lang3.StringUtils;

import com.xinleju.erp.flow.flowutils.utils.WsConstant;
import com.xinleju.erp.flow.models.Upload;

/**
 * 
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 * 流程文件列表
 * @author   zhongjun
 * @version  $Id: FlowFilesTag.java 54722 2014-12-23 04:28:39Z yinxianglong $
 * @since
 * @see
 */
@SuppressWarnings("serial")
public class HistoryDivTag extends BodyTagSupport {
    
    /**
     * 任务信息
     */
    private String userName;
    
    /**
     * 意见
     */
    private String userNote;
    
    /**
     * 操作
     */
    private String opName;
    
    /**
     * 节点名称
     */
    private String displayName;
    
    /**
     * 创建时间
     */
    private String creatDate;
    
    /**
     * 结束时间
     */
    private String endDate;
    
    /**
     * 任务状态
     */
    private int status;
    
    /**
     * 附件列表
     */
    private List<Upload> uploadList;

    /**
     * 
     * @see javax.servlet.jsp.tagext.BodyTagSupport#doStartTag()
     * @return int
     */
    public int doStartTag() {
        return (SKIP_BODY);
    }

    /**
     * 结束
     * @see javax.servlet.jsp.tagext.BodyTagSupport#doEndTag()
     * @return int
     */
    public int doEndTag() {
        String divStr = "";
        StringBuffer divHtml = new StringBuffer("<div class=\"${statusClass}\"><div class=\"item_title\">${userName}<span class=\"item_title_data\">${creatDateOrEndDate}</span></div>");
        divHtml.append("<div class=\"item_content\">");
        divHtml.append("${userNote}");
        divHtml.append("${uploadList}");
        divHtml.append("</div>");
        divHtml.append("<div class=\"item_status\">操作：${opName}&nbsp;&nbsp;节点：${displayName}</div></div>");
        try {
            divStr = divHtml.toString();
            if(StringUtils.isNotBlank(userName)){
                divStr = divStr.replace("${userName}", userName);
            } else {
                divStr = divStr.replace("${userName}", "");
            }
            String creatDateOrEndDate = "";
            if (StringUtils.isNotBlank(endDate)){
                creatDateOrEndDate = endDate;
            } else if(StringUtils.isNotBlank(creatDate)){
                creatDateOrEndDate = creatDate;
            }
            if(StringUtils.isNotBlank(userName)){
                divStr = divStr.replace("${creatDateOrEndDate}", creatDateOrEndDate);
            } else {
                divStr = divStr.replace("${creatDateOrEndDate}", "");
            }
            if(StringUtils.isNotBlank(userNote)){
                divStr = divStr.replace("${userNote}", userNote);
            } else {
                divStr = divStr.replace("${userNote}", "");
            }
            StringBuffer uploadListHtml = new StringBuffer("");
            if (null != uploadList && uploadList.size() > 0){
                uploadListHtml.append("<br/>");
                for(Upload upload : uploadList){
                    if (upload.getFileName().endsWith(".url")){
                        uploadListHtml.append("<a href=\"" + upload.getUserLabel() + "\" target=\"_blank\">" + upload.getFileName()+ "</a>");
                    } else {
                        uploadListHtml.append("<a href=\"File!download.do?id=" + upload.getId() + "\" target=\"_blank\">" + upload.getFileName()+ "</a>");
                    }
                }
            }
            divStr = divStr.replace("${uploadList}", uploadListHtml.toString());
            if(StringUtils.isNotBlank(opName)){
                divStr = divStr.replace("${opName}", opName);
            } else {
                divStr = divStr.replace("${opName}", "");
            }
            if(StringUtils.isNotBlank(displayName)){
                divStr = divStr.replace("${displayName}", displayName);
            } else {
                divStr = divStr.replace("${displayName}", "");
            }
            if(WsConstant.STATUS_CREATED == status){
                divStr = divStr.replace("${statusClass}", "spHistoryDivCreate");
            } else if(WsConstant.STATUS_RUNNING == status){
                divStr = divStr.replace("${statusClass}", "spHistoryDivRunning");
            } else if(WsConstant.STATUS_COMPLETE == status){
                divStr = divStr.replace("${statusClass}", "spHistoryDivComplete");
            }
            JspWriter writer = pageContext.getOut();
            writer.write(divStr);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return (SKIP_BODY);
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getUserNote() {
        return userNote;
    }

    public void setUserNote(String userNote) {
        this.userNote = userNote;
    }

    public String getOpName() {
        return opName;
    }

    public void setOpName(String opName) {
        this.opName = opName;
    }

    public String getDisplayName() {
        return displayName;
    }

    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    public String getCreatDate() {
        return creatDate;
    }

    public void setCreatDate(String creatDate) {
        this.creatDate = creatDate;
    }

    public String getEndDate() {
        return endDate;
    }

    public void setEndDate(String endDate) {
        this.endDate = endDate;
    }

    public int getStatus() {
        return status;
    }

    public void setStatus(int status) {
        this.status = status;
    }

    public List<Upload> getUploadList() {
        return uploadList;
    }

    public void setUploadList(List<Upload> uploadList) {
        this.uploadList = uploadList;
    }
}
