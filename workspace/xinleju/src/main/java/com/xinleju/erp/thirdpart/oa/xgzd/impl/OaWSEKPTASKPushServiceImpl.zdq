package com.xinleju.erp.thirdpart.oa.xgzd.impl;

import javax.transaction.Transactional;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;

import com.xinleju.erp.thirdpart.oa.xgzd.OaWSEKPTASKServicePushService;
import com.xinleju.erp.thirdpart.oa.xgzd.api.WS_EKP_RETURN;
import com.xinleju.erp.thirdpart.oa.xgzd.api.WS_EKP_TASK;
import com.xinleju.erp.thirdpart.oa.xgzd.api.WS_EKP_TASKS;
import com.xinleju.erp.thirdpart.oa.xgzd.api.WS_EKP_TASKSServiceLocator;
@Service
@Transactional
public class OaWSEKPTASKPushServiceImpl implements OaWSEKPTASKServicePushService{
    /**
     * 获得日志类
     */
    private static final Logger LOG = Logger.getLogger(OaWSEKPTASKPushServiceImpl.class);
    
    private WS_EKP_TASKSServiceLocator locator = new WS_EKP_TASKSServiceLocator();



	@Override
	public WS_EKP_RETURN sendTodo(String appName, String modelName,
			String msgId, String subject, String link, String type,
			String source, String targets)throws Exception  {
		// TODO Auto-generated method stub
		WS_EKP_TASKS service= locator.getDomino();
		WS_EKP_TASK task=new WS_EKP_TASK();
		
		task.setRECORD_KEY(msgId);
		 //待办发送人
		task.setFROM_AD_KEY(source);  
		//待办接收人
		task.setSENDTO_ADS_KEY(targets);  
		   //待办类型,"1"为审批类,"4"为通知类
		task.setTASK_TYPE(type);   
		
		  //待办标题
		task.setTITLE(subject);        
		  //待办url
		task.setURL(link); 
		
        //待办分类标题,用于待办库中对待办进行分类展示
		task.setFROM_TITLE(appName); 

                   
		WS_EKP_RETURN ws_ekp_return=service.SEND_TASK(task);
		return null;
	}



	@Override
	public WS_EKP_RETURN deleteTodo(String appName, String modelName,String msgId, String type,String targets) throws Exception {
		// TODO Auto-generated method stub
		WS_EKP_TASKS service= locator.getDomino();
		WS_EKP_TASK task=new WS_EKP_TASK();
       //删除待办
		task.setRECORD_KEY(msgId);
		 //同Finished_Ads_Key,不再建议使用此属性,请使用Finished_Ads_Key,待办已完成(取消待办)人员Key,多人以";"分隔
		task.setFINISHED_USERS(targets); 
		 //待办类型,"1"为审批类,"4"为通知类
		task.setTASK_TYPE(type);  
		WS_EKP_RETURN ws_ekp_return=service.REMOVE_TASK(task);

        return ws_ekp_return;
	}

	@Override
	public WS_EKP_RETURN setTodoDone(String appName, String modelName,String type,String msgId, String targets) throws Exception {
		// TODO Auto-generated method stub
		WS_EKP_TASKS service= locator.getDomino();
		WS_EKP_TASK task=new WS_EKP_TASK();

		
        //待办分类标题,用于待办库中对待办进行分类展示
		task.setFROM_TITLE(appName); 

        //完成代办
		task.setRECORD_KEY(msgId);
		 //同Finished_Ads_Key,不再建议使用此属性,请使用Finished_Ads_Key,待办已完成(取消待办)人员Key,多人以";"分隔
		task.setFINISHED_USERS("test10"); 
		 //待办类型,"1"为审批类,"4"为通知类
		task.setTASK_TYPE(type);  
		WS_EKP_RETURN ws_ekp_return=service.SET_TASK_FINISHED(task);
		return ws_ekp_return;
	} 
    
}
