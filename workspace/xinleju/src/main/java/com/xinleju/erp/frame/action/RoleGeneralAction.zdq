package com.xinleju.erp.frame.action;

import java.io.UnsupportedEncodingException;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.flow.service.api.ApiConstant;
import com.xinleju.erp.flow.service.api.extend.BaseAPI;
import com.xinleju.erp.flow.utils.LoginInfoUtils;
import com.xinleju.erp.frame.dao.RoleGeneralDao;
import com.xinleju.erp.frame.models.LogRecord;
import com.xinleju.erp.frame.models.Role;
import com.xinleju.erp.frame.models.RoleGeneral;
import com.xinleju.erp.frame.service.PartyStructService;
import com.xinleju.erp.frame.service.RoleGeneralService;

/**
 * 通用角色Action
 * 
 * @author liuhaiming
 * @since
 * @see
 */
public class RoleGeneralAction extends BaseAction {
	/**
	 * 消息DTO
	 */
	private String name;

	private RoleGeneral roleGeneral;
	
	@Autowired
	private RoleGeneralDao roleGeneralDao;
	
	@Autowired
	private RoleGeneralService roleGeneralService;
	
	@Autowired
	private PartyStructService partyStructService;

	/**
	 * 通用角色列表
	 * 
	 * @author liuhaiming
	 * @param request
	 * @param pageable
	 * @param model
	 * @return
	 */
	public String index() {
		DetachedCriteria c = DetachedCriteria.forClass(RoleGeneral.class);
		String name = "";

		// 标准角色
		if (StringUtils.isNotBlank(name)) {
			c.add(Restrictions.like("name", "%" + name + "%"));
		}
//		c.add(Restrictions.eqOrIsNull("status", BaseEntity.STATUS_ENABLE));
		c.addOrder(Order.asc("status"));
		c.addOrder(Order.asc("sort"));
		page = getCommonService().findPage(c, start, limit);

		return "index";
	}

	public String edit() {
		if (id != null) {
			roleGeneral = getCommonService().getById(RoleGeneral.class, id);
		} else {
			roleGeneral = new RoleGeneral();
			roleGeneral.setStatus(Role.STATUS_ENABLE);

			Date currDate = Calendar.getInstance().getTime();
			roleGeneral.setCreateDate(currDate);
			roleGeneral.setEditDate(currDate);
		}

		return "edit";
	}

	public void save() {
		try{
			roleGeneralService.saveOrupdateRoleGeneral(roleGeneral);
		}catch(Exception e){
			e.printStackTrace();
		}
		Map<String, Object> rtn = new HashMap<String, Object>();
		rtn.put("success", true);

		//加日志
		BaseAPI baseAPIService = com.xinleju.erp.base.app.config.App.getBean(BaseAPI.class, ApiConstant.BEAN_CODE);
		Long uid=LoginInfoUtils.getLoginInfoUserDtoId(request);
		baseAPIService.saveLog(uid, "PT", "通用角色管理", "RoleGeneralAction.save()", "保存通用角色", null, "json串",  LogRecord.SIGN_INSERT,LogRecord.TYPE_OTHER);
		
		
		super.renderJson(rtn);
	}

	public void deleteRole() {
		String roleGeneralId = request.getParameter("roleGeneralId");
		if(StringUtils.isNotBlank(roleGeneralId)){
			roleGeneralService.getDao().delete(RoleGeneral.class, Long.valueOf(roleGeneralId));
        }

		Map<String, Object> tree = new HashMap<String, Object>();
        tree.put("success", "true");

		//加日志
		BaseAPI baseAPIService = com.xinleju.erp.base.app.config.App.getBean(BaseAPI.class, ApiConstant.BEAN_CODE);
		Long uid=LoginInfoUtils.getLoginInfoUserDtoId(request);
		baseAPIService.saveLog(uid, "PT", "通用角色管理", "RoleGeneralAction.deleteRole()", "删除通用角色", null, "json串",  LogRecord.SIGN_DELETE,LogRecord.TYPE_OTHER);
		
		
        super.renderJson(tree);
	}
	
	public void disable() {
		String roleGeneralId = request.getParameter("id");
        if(StringUtils.isNotBlank(roleGeneralId)){
        	roleGeneralService.changeStatus(Long.valueOf(roleGeneralId), Role.STATUS_DISABLE);
        }

        Map<String, Object> tree = new HashMap<String, Object>();
        tree.put("success", "true");
        super.renderJson(tree);
    }
    
    public void enable() {
		String roleGeneralId = request.getParameter("id");
        if(StringUtils.isNotBlank(roleGeneralId)){
        	roleGeneralService.changeStatus(Long.valueOf(roleGeneralId), Role.STATUS_ENABLE);
        }

        Map<String, Object> tree = new HashMap<String, Object>();
        tree.put("success", "true");
        super.renderJson(tree);
    }
    
    /**
	 * 
	 * @author liuhm
	 * @param request
	 * @return
	 */
	public String unionStandardRole() {
		// 组织架构上一级节点
		String parentId = request.getParameter("parentId");
		String name = request.getParameter("name");
		page = partyStructService.findStandardRoles(name,parentId, start, limit);
		request.setAttribute("name", name);
		request.setAttribute("parentEntityId", parentId);
		request.setAttribute("partyStructTypeId", request.getParameter("partyStructTypeId"));
		
		String selRole = request.getParameter("selRole");
    	try {
    		selRole = java.net.URLDecoder.decode(selRole,"UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
		
		request.setAttribute("selRole", selRole);
		return "unionStandardRole";
	}
	

	/**
	 * Ajax校验编码
	 * 
	 * @author luocheng
	 */
	/*public void validateCode() {
		String code = request.getParameter("code");
		Map<String, Integer> map = new HashMap<String, Integer>();
		if (roleGeneralService.isExistCode(code)) {
			map.put("result", 0);
		} else {
			map.put("result", 1);
		}
		renderJson(map);
	}*/
	
	public void validateCode(){
		String id = request.getParameter("id");
		String code = request.getParameter("code");
		if (StringUtils.isBlank(code)){
			code = request.getParameter("param");
		}
		boolean exists = false;
		if(StringUtils.isNotBlank(code)){
			code = code.trim();
			//如果id非空，即为编辑，排除本身
			if(StringUtils.isNotBlank(id)){
				Long count = roleGeneralDao.getRoleGeneralCountWithId(code, Long.valueOf(id));
				if(count >0 ){
					exists = true;
				}
			}else{//如果id为空，则为新增
				Long count = roleGeneralDao.getRoleGeneralCount(code);
				if(count >0 ){
					exists = true;
				}
			}
		}
		Map<String, Object> r = new HashMap<String, Object>();
		r.put("status", !exists ? "y" : "n");
        r.put("info", !exists ? "" : "通用角色编码已存在！");
		super.renderJson(r);
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public RoleGeneral getRoleGeneral() {
		return roleGeneral;
	}

	public void setRoleGeneral(RoleGeneral roleGeneral) {
		this.roleGeneral = roleGeneral;
	}

}
