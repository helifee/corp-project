package com.xinleju.erp.finance.dao;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Repository;

import com.xinleju.erp.base.utils.CollectionUtils;
import com.xinleju.erp.base.utils.StringHelper;
import com.xinleju.erp.finance.models.FiAccountCaption;
import com.xinleju.erp.flow.dao.impl.BaseDAO;
import com.xinleju.erp.form.utils.DbType;
import com.xinleju.erp.frame.dto.FiAccountSubjectDTO;
import com.xinleju.erp.frame.models.BizDataField;

/**
 * 会计科目数据访问对象
 * 
 * @author walden
 * 
 */
@Repository
public class FiAccountCaptionDao extends BaseDAO {
	/**
	 * 根据账套id获得会计科目
	 * 
	 * @param accountSetId
	 * @param status
	 * @return
	 */
	public List<FiAccountCaption> getAccountCaptionList(String status,Long accountSetId) {
		
		List<Object> param = new ArrayList<Object>();
		StringBuffer hqlStringBuffer = new StringBuffer();
		hqlStringBuffer.append("");
		 
		List<FiAccountCaption> accountCaptionList = new ArrayList<FiAccountCaption>();
		if(DbType.getType().contains("dbo.")){
			accountCaptionList = getDao().findByHQL(FiAccountCaption.class, "from FiAccountCaption p where p.createDate = (select max(pp.createDate) from FiAccountCaption pp where pp.code=p.code and pp.accountSetId = ?) and p.accountSetId = ?  order by code asc",accountSetId,accountSetId);
		}else{
			accountCaptionList = getDao().findByHQL(FiAccountCaption.class, "from FiAccountCaption where accountSetId = ? order by code asc",accountSetId);
		}
		return accountCaptionList;
	}

	/**
	 * 将FiAccountSubjectDTO列表返回
	 * 
	 * @param accountSetId
	 * @param status
	 * @return
	 */
	public List<FiAccountSubjectDTO> getFiAccountSubjectDTOList(String status,Long accountSetId) {
		List<FiAccountCaption> accountCaptionList = getAccountCaptionList(status,accountSetId);
		List<FiAccountSubjectDTO> dtoList = new ArrayList<FiAccountSubjectDTO>(accountCaptionList.size());
		for (FiAccountCaption accountCaption : accountCaptionList) {
			FiAccountSubjectDTO subjectDTO = captionToSubjectDTO(accountCaption);
			dtoList.add(subjectDTO);
		}
		return dtoList;
	}

	/**
	 * 将会计科目转换成Dto对象
	 * 
	 * @param accountCaption
	 * @return
	 */
	private FiAccountSubjectDTO captionToSubjectDTO(FiAccountCaption accountCaption) {
		FiAccountSubjectDTO dto = new FiAccountSubjectDTO();
		dto.setId(accountCaption.getId().toString());
		dto.setPid(accountCaption.getParentId() == null ? "" : accountCaption.getParentId().toString());
		dto.setSubcode(accountCaption.getCode());
		//dto.setAccountsetid(accountCaption.getAccountSetId().toString());
		dto.setSubname(accountCaption.getName());
		dto.setBizData(accountCaption.getBizData());
		dto.setBizDatamx(accountCaption.getBizDatamx());
		dto.setAssName(accountCaption.getAssName());
		dto.setAssContent(accountCaption.getAssContent());
		try{
			SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			if(accountCaption.getCreateDate()!=null){
				dto.setCreateDate(sf.format(accountCaption.getCreateDate()));
			}
		}catch(Exception e){
			e.printStackTrace();
		}
		return dto;
	}

	/**
	 * 将会计科目保存代码
	 * 
	 * @param fiAccountCaption
	 */
	public void saveOrUpdate(FiAccountCaption fiAccountCaption) {
		getDao().saveOrUpdate(fiAccountCaption);
	}
}
