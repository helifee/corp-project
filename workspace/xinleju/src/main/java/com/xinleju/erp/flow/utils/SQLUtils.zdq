package com.xinleju.erp.flow.utils;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import com.xinleju.erp.flow.exception.SqlParamsLostException;

/**
 * 
 * 
 * <p>
 * </p>
 * <p>
 * </p>
 * 
 * @author 孙朝辉
 * @version $Id: SQLUtils.java 583 2014-06-13 09:38:22Z sunchaohui $
 * @since
 * 
 */
public class SQLUtils {

    /**
     * 
     * <p>
     * 返回预定义参数格式(:参数名)的SQL语句中的所有参数
     * </p>
     * <p>
     * 譬如:select id from sys_user where user_id = :userId 则返回List中包含 userId参数
     * </p>
     * 
     * @param sql
     *            sql语句
     * 
     * @return 返回参数数组
     */
    public static List<String> selectParams(String sql) {
        sql = sql.replaceAll("\r", "");
        sql = sql.replaceAll("\n", "");
        List<String> r = new LinkedList<String>();
        while (sql.indexOf(":") > 0) {
            sql = sql.substring(sql.indexOf(":") + 1);
            int index = sql.indexOf(" ") > 0 ? sql.indexOf(" ") : sql.length();
            String k = sql.substring(0, index);
            r.add(k.trim());
        }

        return r;
    }

    /**
     * 
     * <p>
     * 按照预定义参数格式(:参数名)的sql,分析其中的参数，返回对应的值
     * </p>
     * <p>
     * 譬如:select id from sys_user where user_id = :userId 则从globalVars中获取key为userId的值，并返回
     * </p>
     * 
     * @param sql
     *            sql语句
     * @param globalVars
     *            变量map
     * 
     * @return 返回参数数组
     */
    public static List<Object> selectValues(String sql, Map<String, Object> globalVars) {

        List<String> params = SQLUtils.selectParams(sql);
        List<Object> values = new ArrayList<Object>();
        for (String k : params) {
            if (globalVars.containsKey(k) && globalVars.get(k) != null) {
                values.add(globalVars.get(k));
            } else {
                throw new SqlParamsLostException("SQL参数丢失:[" + k + "] --" + sql);
            }
        }
        return values;
    }

    /**
     * 
     * <p>
     * 将预定义参数格式的SQL语句中的参数换成 问号占位符
     * </p>
     * <p>
     * 譬如:select id from sys_user where user_id = :userId，分析完后，返回 select id from sys_user where user_id = ?
     * </p>
     * 
     * @param sql
     *            sql语句
     * 
     * @return 返回参数数组
     */
    public static String parseSQL(String sql) {
        List<String> params = SQLUtils.selectParams(sql);
        for (String k : params) {
            sql = sql.replaceAll(":" + k, "?");
        }

        return sql;
    }

    /**
     * 
     * <p>
     * 测试
     * </p>
     * <p>
     * 
     * </p>
     * 
     * @param args
     *            输入参数
     */
    public static void main(String[] args) {
        List<String> s = selectParams("select u.id,u.login_name,u.user_name from btc_tender_expert t "
                + "left join sm_user u on u.id = t.user_id where t.project_id = :projectId");
        System.out.println(s.get(0));
    }
}
