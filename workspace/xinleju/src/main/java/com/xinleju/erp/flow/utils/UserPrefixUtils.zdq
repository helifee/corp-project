package com.xinleju.erp.flow.utils;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.xinleju.erp.base.utils.CollectionUtils;
import com.xinleju.erp.flow.frameapi.domain.User;

/**
 * 
 * @author jun
 *
 */
public class UserPrefixUtils {

    /**
     * Log
     */
    static final Log LOGGER = LogFactory.getLog(UserPrefixUtils.class);
    
    public static String getPrefix(Long userId, String userPrefixs){
    	String prefix = "";
    	if (null != userId && StringUtils.isNotBlank(userPrefixs)){
    		Map map = CollectionUtils.collectAsMap(UserPrefixUtils.decode(userPrefixs), "userId");
    		if (null != map && map.containsKey(userId)){
    			User user = (User) map.get(userId);
    			prefix = null != user.getPrefix() ? user.getPrefix() : "";
    		}
    	}
    	return prefix;
    }
    
    /**
     * 
     * @param userPrefix
     * @return
     */
    public static List<User> decode(String userPrefixs){
    	List<User> userList = new ArrayList<User>();
    	if (StringUtils.isNotBlank(userPrefixs)){
    		String[] upss = userPrefixs.split(";");
    		User user = null;
    		for (String up : upss){
    			if (StringUtils.isNotBlank(up) && up.indexOf(":") > -1){
    				user = new User();
        			user.setUserId(Long.valueOf(up.substring(0,up.indexOf(":"))));
        			user.setPrefix(up.substring(up.indexOf(":") + 1));
        			userList.add(user);
    			}
    		}
    	}
    	return userList;
    }
    
    public static String ecode(List<User> userList, String prefix){
    	String userPrefix = "";
    	if (null != userList){
    		for(User user : userList){
    			if (StringUtils.isNotBlank(userPrefix)){
    				userPrefix += ";";
    			}
    			userPrefix += user.getUserId() + ":" + (StringUtils.isNotBlank(prefix) ? prefix : (StringUtils.isNotBlank(user.getPrefix()) ? user.getPrefix() : ""));
    		}
    	}
    	return userPrefix;
    }
}
