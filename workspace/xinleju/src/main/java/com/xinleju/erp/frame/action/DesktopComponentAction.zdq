package com.xinleju.erp.frame.action;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.frame.dao.AppDao;
import com.xinleju.erp.frame.models.App;
import com.xinleju.erp.frame.models.DesktopComponent;

public class DesktopComponentAction extends BaseAction{
	
	@Autowired
	private AppDao appDao;
	
	private DesktopComponent desktopComponent;
	
	
	/**
	 * 列表
	 * @return
	 */
	public String list() {
		
		String moduleCode = request.getParameter("moduleCode");
		String keyword = request.getParameter("keyword");
		String sta=request.getParameter("status");
		
		DetachedCriteria dc = DetachedCriteria.forClass(DesktopComponent.class);
		if(StringUtils.isNotBlank(moduleCode)) {
			dc.add(Restrictions.eq("moduleCode", moduleCode));
		}
		
		if(StringUtils.isNotBlank(keyword)) {
			dc.add(Restrictions.like("name", keyword, MatchMode.ANYWHERE));
		}
		
		if(StringUtils.isNotBlank(sta)) {
			Integer status=Integer.valueOf(sta);
			dc.add(Restrictions.eq("status", status));
			request.setAttribute("status", status);
		}
		page = getCommonService().findPage(dc, start, limit);
        Map<String,App> appMap = appDao.getAppMap();
		request.setAttribute("appMap", appMap);
		request.setAttribute("statusMap", DesktopComponent.getStatusMap());
		request.setAttribute("moduleCode", moduleCode);
		request.setAttribute("keyword", keyword);
		
		return "list";
	}
	
	 /**
     * 编辑页面
     * @return
     */
    public String edit() throws Exception{
    	
    	Long id=getParameterLong("id");
    	if(id!=null){
    		List<DesktopComponent> list=getCommonService().findByHQL(DesktopComponent.class, "from DesktopComponent dc where dc.id = ?", id);
    		desktopComponent=list.get(0);
    	}
    	Map<String,App> appMap = appDao.getAppMap();
		request.setAttribute("appMap", appMap);
    	
        return "edit";
    }
    
    /**
     * 保存desktopComponent对象
     */
    public void save() throws Exception{
    	Map<String,Object> result = new HashMap<String,Object>();
    	
    	if(desktopComponent.getId()!=null){
    		desktopComponent.setEditDate(new Date());
    	}else{
    		desktopComponent.setCreateDate(new Date());
    		desktopComponent.setStatus(0);
    	}
    	
    	if(StringUtils.isBlank(desktopComponent.getName())){
    		result.put("success", false);
    		result.put("msg", "名称不能为空");
    		renderJson(result);
    		return;
    	}
    	if(StringUtils.isBlank(desktopComponent.getModuleCode())){
    		result.put("success", false);
    		result.put("msg", "请选择一个模块");
    		renderJson(result);
    		return;
    	}
    	if(StringUtils.isBlank(desktopComponent.getUrl())){
    		result.put("success",false);
    		result.put("msg", "url不能为空");
    		renderJson(result);
    	    return;
    	}
    	
    	if(StringUtils.isBlank(desktopComponent.getRemark())){
    		result.put("success",false);
    		result.put("msg", "描述不能为空");
    		renderJson(result);
    	    return;
    	}
    	getCommonService().saveOrUpdate(desktopComponent);
    	result.put("success",true);
		result.put("msg", "保存成功");
		renderJson(result);

    }
    
    /**
     * 启用
     */
    public void enable(){
    	Map<String,Object> result = new HashMap<String,Object>();
    	try{
    		String ids = request.getParameter("id");
    		
    		if(ids!=null) {
    		String[] idAry = ids.split(";");
				for(String dd : idAry) {
					Long id=Long.valueOf(dd);
					getCommonService().execute("update DesktopComponent d set d.status=0 where d.id= ?", id);
				}
    		
    		}	
    		result.put("success", true);
    	}catch(Exception e){
    		result.put("success", false);
    		result.put("msg", e.getMessage());
    	}
    	renderJson(result);
    }
    
    /**
     * 禁用
     */
    public void unable(){
    	Map<String,Object> result = new HashMap<String,Object>();
    	try{
    		String ids = request.getParameter("id");
    		
    		if(ids!=null) {
    		String[] idAry = ids.split(";");
				for(String dd : idAry) {
					Long id=Long.valueOf(dd);
					getCommonService().execute("update DesktopComponent d set d.status=1 where d.id= ?", id);
				}
    		
    		}	
    		result.put("success", true);
    	}catch(Exception e){
    		result.put("success", false);
    		result.put("msg", e.getMessage());
    	}
    	renderJson(result);
    }
    
	/**
	 * 左边菜单
	 * @return
	 */
	public String leftMenu(){
		return "leftMenu";
	}
	
	/**
	 * @return
	 */
	public String index(){
		return "index";
	}

	public DesktopComponent getDesktopComponent() {
		return desktopComponent;
	}

	public void setDesktopComponent(DesktopComponent desktopComponent) {
		this.desktopComponent = desktopComponent;
	}
	
}
