package com.xinleju.erp.frame.action;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;

import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.frame.models.FuncButton;
import com.xinleju.erp.frame.service.FuncButtonService;

/**
 * 
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 *  功能按钮action
 * @author   jeeping
 * @version  $Id$
 * @since
 * @see
 */
public class FuncButtonAction extends BaseAction {
    /**
     * 功能按钮service
     */
    @Autowired
    private FuncButtonService funcButtonService;
    /**
     * 功能按钮
     */
    private FuncButton funcButton;
    /**
     * 
     * 功能列表
     * @author jeeping
     * @return
     */
    public String list() {
        String keyWord = request.getParameter("keyWord");
        String funcModuleId = request.getParameter("funcModuleId");
        page = funcButtonService.findFuncButtonList(funcModuleId, keyWord, start, limit);
        request.setAttribute("keyWord", keyWord);
        request.setAttribute("funcModuleId", funcModuleId);
        return "list";
    }
    /**
     * 
     * 编辑、新增
     * @author jeeping
     * @return
     */
    public String edit() {
        String funcModuleId = request.getParameter("funcModuleId");
        if (null != id) {
            funcButton = getCommonService().getById(FuncButton.class, id);
        } else {
            funcButton = new FuncButton();
            funcButton.setFuncModuleId("0".equals(funcModuleId) || StringUtils.isBlank(funcModuleId) ? null : Long.valueOf(funcModuleId));
        }
        return "edit";
    }
    /**
     * 
     * 保存
     * @author jeeping
     */
    public void save() {
        funcButtonService.save(funcButton);
        renderJson("{\"success\":true,\"msg\":\"保存成功。\"}");
    }
    /**
     * 
     * 删除
     * @author jeeping
     */
    public void delete() {
        String funcButtonId = request.getParameter("funcButtonId");
        if (StringUtils.isNotBlank(funcButtonId) && Long.valueOf(funcButtonId) != 0) {
            funcButtonService.delete(Long.valueOf(funcButtonId));
        }
        renderJson("{\"success\":true,\"msg\":\"保存成功。\"}");
    }
    
    
    
    public FuncButton getFuncButton() {
        return funcButton;
    }
    public void setFuncButton(FuncButton funcButton) {
        this.funcButton = funcButton;
    }

}
