/*
 * 文件名：OATaskPushServiceImpl.java 版权：Copyright by www.tele-hot.com 描述： 修改人：zhengxj 修改时间：2014-6-10
 * 跟踪单号： 修改单号： 修改内容：
 */
package com.xinleju.erp.thirdpart.oa.fance.impl;
import java.net.URLEncoder;
import java.util.Date;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.xinleju.erp.base.app.config.App;
import com.xinleju.erp.base.utils.DateUtils;
import com.xinleju.erp.frame.models.OAServiceInfo;
import com.xinleju.erp.frame.models.PartyEntity;
import com.xinleju.erp.frame.models.Setting;
import com.xinleju.erp.frame.models.User;
import com.xinleju.erp.frame.models.UserInfo;
import com.xinleju.erp.frame.service.SettingService;
import com.xinleju.erp.frame.service.UserService;
import com.xinleju.erp.frame.utils.Md5Utils;
import com.xinleju.erp.frame.utils.StaticInterface;
import com.xinleju.erp.thirdpart.oa.fance.soap.SyncMasterDataLocator;
import com.xinleju.erp.thirdpart.oa.fance.soap.NotifyTodoAppResult;
import com.xinleju.erp.thirdpart.oa.fance.soap.NotifyTodoRemoveContext;
import com.xinleju.erp.thirdpart.oa.fance.soap.NotifyTodoSendContext;
import com.xinleju.erp.thirdpart.oa.fance.OATaskPush4FanCeService;;

/**
 * 
 * OA任务推送接口实现类，凡策
 * 发送待办接口、删除待办接口、设为已办接口、获取待办接口
 * @author zhengxj
 * @version 2014-6-10
 * @see OATaskPushService4FanCeImpl
 */
@Service
@Transactional
public class OATaskPushService4FanCeImpl implements OATaskPush4FanCeService {
    
    /**
     * 获得日志类
     */
    private static final Logger LOG = Logger.getLogger(OATaskPushService4FanCeImpl.class);
    
    private SyncMasterDataLocator locator = new SyncMasterDataLocator(); 
    
	@Autowired
	private UserService userService;

    @Override
    public NotifyTodoAppResult sendTodo(String appName, String modelName, String modelId, String subject, String link, int type, String targets) throws Exception {
        NotifyTodoSendContext notifyTodoSendContext = new NotifyTodoSendContext();
        notifyTodoSendContext.setAppName(appName);
        //modelName NULL表示加锁，不能在app审批 .setModelName("NULL");//
        notifyTodoSendContext.setModelName("NULL");
        notifyTodoSendContext.setModelId(modelId);
        notifyTodoSendContext.setSubject(subject);
  	    SettingService settingService = (SettingService)App.getBean(SettingService.class);
        Setting setting = settingService.getSetting(StaticInterface.SKEY_PT_FANCEOA_INTERFACE_OPEN_URL);
        String url =  setting.getValue();
        notifyTodoSendContext.setLink(url+URLEncoder.encode(link,"UTF-8") );
        notifyTodoSendContext.setType(type);
        notifyTodoSendContext.setTargets("{\"LoginName\":\""+targets+"\"}");
        notifyTodoSendContext.setCreateTime(DateUtils.formatDate(new Date(),"yyyy-MM-dd HH:mm:ss"));
        NotifyTodoAppResult notifyTodoAppResult = locator.getSyncMasterDataSoap().sendToDo(notifyTodoSendContext);
        LOG.info("{\"appName\":\""+appName+"\",\"modelName\":\""+modelName+"\",\"modelId\":\""+modelId+"\",\"subject\":\""+subject+"\",\"url\":\""+notifyTodoSendContext.getLink()+"\",\"targets\":\""+targets+"\",\"returnState\":\""+notifyTodoAppResult.getReturnState()+"\"}");
        return notifyTodoAppResult;
    }

    @Override
    public NotifyTodoAppResult deleteTodo(String appName, String modelName, String modelId, int optType, String targets)
        throws Exception {
        NotifyTodoRemoveContext notifyTodoRemoveContext = new NotifyTodoRemoveContext();
        notifyTodoRemoveContext.setAppName(appName);
        notifyTodoRemoveContext.setModelName("NULL");
        notifyTodoRemoveContext.setModelId(modelId);
        notifyTodoRemoveContext.setOptType(optType + 1);
        notifyTodoRemoveContext.setTargets("{\"LoginName\":\""+targets+"\"}");
        NotifyTodoAppResult notifyTodoAppResult = locator.getSyncMasterDataSoap().deleteTodo(notifyTodoRemoveContext);
        LOG.info("{\"appName\":\""+appName+"\",\"modelName\":\""+modelName+"\",\"modelId\":\""+modelId+"\",\"optType\":\""+optType+"\",\"targets\":\""+targets+"\",\"returnState\":\""+notifyTodoAppResult.getReturnState()+"\"}");
        return notifyTodoAppResult;
    }

    @Override
    public NotifyTodoAppResult setTodoDone(String appName, String modelName, String modelId, int optType, String targets) throws Exception{
        NotifyTodoRemoveContext notifyTodoRemoveContext = new NotifyTodoRemoveContext();
        notifyTodoRemoveContext.setAppName(appName);
        notifyTodoRemoveContext.setModelName("NULL");
        notifyTodoRemoveContext.setModelId(modelId);
        notifyTodoRemoveContext.setOptType(1);
        notifyTodoRemoveContext.setTargets("{\"LoginName\":\""+targets+"\"}");
        NotifyTodoAppResult notifyTodoAppResult = locator.getSyncMasterDataSoap().setTodoDone(notifyTodoRemoveContext);
        LOG.info("{\"appName\":\""+appName+"\",\"modelName\":\""+modelName+"\",\"modelId\":\""+modelId+"\",\"optType\":\""+optType+"\",\"targets\":\""+notifyTodoRemoveContext.getTargets()+"\",\"returnState\":\""+notifyTodoAppResult.getReturnState()+"\"}");
        return notifyTodoAppResult;
    }

    @Override
    public NotifyTodoAppResult getTodo(String targets, int type, int rowSize, int pageNo) throws Exception{
//        NotifyTodoGetContext notifyTodoGetContext = new NotifyTodoGetContext();
//        notifyTodoGetContext.setTargets("{\"LoginName\":\""+targets+"\"}");
//        notifyTodoGetContext.setType(type);
//        notifyTodoGetContext.setRowSize(rowSize);
//        notifyTodoGetContext.setPageNo(pageNo);
//        NotifyTodoAppResult notifyTodoAppResult = locator.getISysNotifyTodoWebServicePort().getTodo(notifyTodoGetContext);
//        LOG.error("{\"type\":\""+type+"\",\"rowSize\":\""+rowSize+"\",\"pageNo\":\""+pageNo+"\",\"targets\":\""+targets+"\",\"returnState\":\""+notifyTodoAppResult.getReturnState()+"\"}");        
//        return notifyTodoAppResult;
    	return null;
    }

    public void synchronizeUserInfo(List<UserInfo> userLst) {
		OAServiceInfo serviceInfo = com.xinleju.erp.base.app.config.App.getBean(OAServiceInfo.class, OAServiceInfo.OA_FANWEI_SERVICE_INFO);
		for ( UserInfo user : userLst ) {
			insertUser(user, serviceInfo.getOrgId());
		}
	}
	
	private void insertUser(UserInfo oaUser, int orgId) {
		Long parentEntityId = null;
		
		if ( orgId > 0) {
			parentEntityId = Long.valueOf(orgId);
		} else {
			String prefix = oaUser.getBUPath().replaceAll("/", "-");
			List<PartyEntity> peLst = userService.getDao().findByHQL(PartyEntity.class, " from PartyEntity where namePrefix = ? ", prefix + "-");
			if ( peLst != null && peLst.size() > 0 ) {
				parentEntityId = peLst.get(0).getId();
			} else {
				return;
			}
		}

		User user = null;
		List<User> existUser = userService.getDao().findByHQL( User.class, " from User where loginName = ? ", oaUser.getUserCode() );
		if ( existUser != null && existUser.size() > 0 ) {
			user = existUser.get(0);
			user.setRealName( oaUser.getUserName() );
			user.setStatus( Integer.valueOf(oaUser.getIsDisable()) );
		} else {
			user = new User();
			user.setLoginname( oaUser.getUserCode() );
			user.setRealName( oaUser.getUserName() );
			user.setStatus(0);
			user.setGwh("false");
			user.setPassword(Md5Utils.makeMd5("123"));
			user.setRb("false");
			user.setType("false");
			user.setZjjh("false");
		}
		
		userService.save(user, parentEntityId, 1L);
	}

   
}
