package com.xinleju.erp.finance.service;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.finance.dao.FiVoucherEntryDao;
import com.xinleju.erp.finance.dao.FiVoucherTempTypeDao;
import com.xinleju.erp.finance.models.FiVoucherEntry;
import com.xinleju.erp.finance.models.FiVoucherTempType;
import com.xinleju.erp.finance.models.FiVoucherTemplate;
import com.xinleju.erp.finance.utils.ExcelHandlerUtil;
import com.xinleju.erp.finance.utils.IExcelHandler;
import com.xinleju.erp.form.utils.DbType;

@Service
public class FiVoucherTemplateService extends BaseService implements IExcelHandler{
	@Autowired
	private FiVoucherEntryDao fiVoucherEntryDao;
	@Autowired
	private FiVoucherTempTypeDao fiVoucherTempTypeDao;
	@Autowired
	private JdbcTemplate jt;
	
	public void saveOrUpdate(FiVoucherTemplate fiVoucherTemplate) {
		getDao().saveOrUpdate(fiVoucherTemplate);
	}

	public List<FiVoucherEntry> getVoucherEntryByTempId(Long id) {
		return fiVoucherEntryDao.getVoucherEntryByTempId(id);
	}

	/**
	 * 根据模板id删除分录
	 * 
	 * @param id
	 */
	public void deleteEntryByTempId(Long id) {
		getDao().execute("delete from FiVoucherEntry where voucherTemplateId =?", id);
	}

	/**
	 * 保存分录到数据库
	 * 
	 * @param fiVoucherEntry
	 */
	public void saveEntry(List<FiVoucherEntry> fiVoucherEntry) {
		getDao().saveOrUpdateAll(fiVoucherEntry);
	}
	
	/**
	 * 根据模板类别id查询出凭证模板模板.凭证模板表中的模板类别id保存的是模板类别中的叶子节点。
	 * 
	 * @param typeId
	 * @return
	 */
	public FiVoucherTemplate getFiVoucherTemplateByTypeId(Long typeId){
		String hql = "FROM FiVoucherTemplate WHERE typeId = ?";
		List<FiVoucherTemplate> temp = this.getDao().findByHQL(FiVoucherTemplate.class, hql, typeId);
		if(temp==null || temp.size()==0){
			return null;
		}else{
			return temp.get(0);
		}
	}
	
	public FiVoucherTempType getFiVoucherTempTypeById(Long id){
		return getDao().findFirstByHQL(FiVoucherTempType.class, "FROM FiVoucherTempType WHERE id = ?", id);
	}

	/**
	 * excel页签名
	 * @return
	 */
	@Override
	public String getSheetName() {
		// TODO Auto-generated method stub
		return "凭证模板-业务类型对应的模板";
	}
	/**
	 * 导出的excel字段名称
	 * @return
	 */
	@Override
	public String[] getHeadItemsNameAry() {
		// TODO Auto-generated method stub
		//id,name,account_set_id,account_set_code,parentid,sys_id
		String[] str = {"id","业务类型名称","业务对象","账套id","业务类型id","业务类型说明","状态","筛选条件","凭证字"};
		return str;
	}

	/**
	 * 导出的excel字段属性名，class中必须存在此属性
	 * @return
	 */
	@Override
	public String[] getHeadItemsCodeAry() {
		// TODO Auto-generated method stub
		String[] str = {"id","bizTypeName","bizObjectId","accountSetId","typeId","note","status","filter","flag"};
		return str;
	}

	/**
	 * 导出的excel字段在表格中占的宽度，与code一一对应，默认100，如不想显示比如ID字段，可设置为0。
	 * @return
	 */
	@Override
	public Integer[] getHeadItemsLength() {
		// TODO Auto-generated method stub
		Integer[] lengths = { 100, 100, 100, 100, 100, 100, 100, 100, 100};
		return lengths;
	}

	/**
	 * 导出字段在excel中是否红色显示 <br/> true:是（字段值不导出），false：否，null：红色、且字段值导出
	 * @return
	 */
	@Override
	public Boolean[] getHeadItemsColor() {
		// TODO Auto-generated method stub
		Boolean[] bool = { false, false, false, false, false, false, false, false, false};
		return bool;
	}

	/**
	 * 导出的excel实体类名
	 * @return
	 */
	@Override
	public Class<?> getEntityClass() {
		// TODO Auto-generated method stub
		return FiVoucherTemplate.class;
	}

	/**
	 * 导出到excel的具体数据
	 * @return
	 */
	@Override
	public List<?> getEntityList(IExcelHandler handler,String accountSetCode,long sysId,Long accountSetId,Long companyId) {
		// TODO Auto-generated method stub
		try{
			FiVoucherTemplateService fiVoucherTemplateService = (FiVoucherTemplateService)handler;
			List<FiVoucherTemplate> fiVoucherTemplateList = new ArrayList<FiVoucherTemplate>();
			if(null != accountSetId){
				List<FiVoucherTempType> fiVoucherTempTypeList = null;
				if(StringUtils.isNotBlank(accountSetCode)){
					fiVoucherTempTypeList = fiVoucherTempTypeDao.fiVoucherTempTypeDao(accountSetId,sysId,companyId);
				}
				for(FiVoucherTempType fiVoucherTempType:fiVoucherTempTypeList){
					FiVoucherTemplate fiVoucherTemplate = fiVoucherTemplateService.getFiVoucherTemplateByTypeId(fiVoucherTempType.getId());
					if(fiVoucherTemplate!=null){
						fiVoucherTemplateList.add(fiVoucherTemplate);
					}
				}
			}
			return fiVoucherTemplateList;
		}catch(Exception e){
			e.printStackTrace();
		}
		return null;
	}
	
	/**
	 * 根据模板类别id查询出凭证模板模板.凭证模板表中的模板类别id保存的是模板类别中的叶子节点。
	 * 
	 * @param typeId
	 * @return
	 */
	public List<FiVoucherTemplate> getFiVoucherTemplateByAccountSetId(Long accountSetId){
		String hql = "FROM FiVoucherTemplate WHERE accountSetId = ?";
		List<FiVoucherTemplate> temp = this.getDao().findByHQL(FiVoucherTemplate.class, hql, accountSetId);
		return temp;
	}

	/**
	 * 表格最上方的提示列表，为String集合，多条提示逐行显示
	 * @return
	 */
	@Override
	public List<String> getTipsList() {
		// TODO Auto-generated method stub
		List<String> tips = new ArrayList<String>();
		tips.add("说明：数据导出模板对格式有严格要求，请直接录入相关值，禁止增加或删除列，禁止删除此行及标题行，否则将导入失败！");
		return tips;
	}

	@Override
	public Map<String, Integer[]> getCellJoinMap() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<?> getImpClass() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String[] getImportColumns() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String[] getImportHeadItemsName() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<?>[] getImportColumnsType() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Boolean[] getColsIsImp() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int importPr(String accountSetCode,String sysId,String companyCode,String accountSetId,HSSFSheet sheet,Long companyId){
		int rowNum = sheet.getLastRowNum();// 行  
    	try{
    		if(DbType.getType().contains("dbo.")){
    			jt.execute("SET IDENTITY_INSERT [dbo].[fi_voucher_template] ON");
    		}
			for(int k=2;k<=rowNum;k++){
	    		HSSFRow hssfRow = sheet.getRow(k);
	    		if (hssfRow == null) {
					continue;
				}
	    		Long typeId = null;
	    		if(StringUtils.isNotBlank(hssfRow.getCell(4)+"")){
	    			typeId = Long.valueOf(ExcelHandlerUtil.cutIdLength(ExcelHandlerUtil.getValue(hssfRow.getCell(4))+"")+companyId+accountSetId+sysId);
	    		}
	    		Long id = null;
	    		if(StringUtils.isNotBlank(hssfRow.getCell(0)+"")){
	    			id = Long.valueOf(ExcelHandlerUtil.cutIdLength(ExcelHandlerUtil.getValue(hssfRow.getCell(0))+"")+companyId+accountSetId);
	    		}
	    		//"id","bizTypeName","bizObjectId","accountSetId","typeId","note","status","filter","flag"
	    		if(DbType.getType().contains("dbo.")){
		    		String sql = "insert into fi_voucher_template(id,biz_type_name,biz_object_id,account_set_id,type_id,note,status,filter,flag,create_date) VALUES (?,?,?,?,?,?,?,?,?,?)";
		    		jt.update(sql, id, 
		    				ExcelHandlerUtil.getValue(hssfRow.getCell(1))+"",
		    				ExcelHandlerUtil.getValue(hssfRow.getCell(2))+"",
		    				accountSetId,typeId,ExcelHandlerUtil.getValue(hssfRow.getCell(5))+"",1,
		    				ExcelHandlerUtil.getValue(hssfRow.getCell(7))+"",
		    				ExcelHandlerUtil.getValue(hssfRow.getCell(8))+"",new Date());
	    		}else{
	    			String sql = "insert IGNORE into fi_voucher_template(id,biz_type_name,biz_object_id,account_set_id,type_id,note,status,filter,flag,create_date) VALUES (?,?,?,?,?,?,?,?,?,?)";
		    		getDao().executeSQL(sql, id, 
		    				ExcelHandlerUtil.getValue(hssfRow.getCell(1))+"",
		    				ExcelHandlerUtil.getValue(hssfRow.getCell(2))+"",
		    				accountSetId,typeId,ExcelHandlerUtil.getValue(hssfRow.getCell(5))+"",1,
		    				ExcelHandlerUtil.getValue(hssfRow.getCell(7))+"",
		    				ExcelHandlerUtil.getValue(hssfRow.getCell(8))+"",new Date());
	    		}
	    	}
			if(DbType.getType().contains("dbo.")){
				jt.execute("SET IDENTITY_INSERT [dbo].[fi_voucher_template] OFF");
			}
			return 2;
    	}catch(Exception e){
    		e.printStackTrace();
    		return 3;
    	}
	}
}
