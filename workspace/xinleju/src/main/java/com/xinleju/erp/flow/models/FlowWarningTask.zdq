package com.xinleju.erp.flow.models;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.xinleju.erp.base.app.models.IdEntity;

/**
 * 预警任务列表
 * 
 * @author zhengxj
 */
@Entity
@Table(name = "tf_flow_warning_task")
public class FlowWarningTask extends IdEntity {

    /**
     * 序列化ID
     */
    private static final long serialVersionUID = -6566500524270507153L;

    /**
     * 执行状态-未处理
     */
    public static final int STATUS_UNDO = 0;

    /**
     * 执行状态-已发送
     */
    public static final int STATUS_SENT = 1;

    /**
     * 执行状态-已完成
     */
    public static final int STATUS_DONE = 2;
    
    /**
     * 发送默认次数
     */
    public static final int SEND_DEFAULT_COUNT = 0;

    @Column(name = "wi_id")
    private Long wiId;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "wi_id", updatable = false, insertable = false)
    private Wi wi;

    /**
     * 通知参与者
     */
    private Integer noticeActor;

    /**
     * 异常消息
     */
    @Column(length = 4000)
    private String errMsg;

    /**
     * 执行异常次数
     */
    private Integer errCount;

    /**
     * 状态
     */
    private Integer exeStatus;
    
    /**
     * 发送次数
     */
    private Integer sendCount;
    

    @Temporal(TemporalType.TIMESTAMP)
    private Date createTime;
    
    /**
     * 第一次发送时间
     */
    @Temporal(TemporalType.TIMESTAMP)
    private Date firstSendTime;

    /**
     * 发送时间
     */
    @Temporal(TemporalType.TIMESTAMP)
    private Date sendTime;

    /**
     * 下次发送时间
     */
    @Temporal(TemporalType.TIMESTAMP)
    private Date nextSendTime;

    /**
     * 完成时间
     */
    @Temporal(TemporalType.TIMESTAMP)
    private Date finishTime;
    
    /**
     * 待办接收时间
     */
    private Date acceptTime;

    public FlowWarningTask() {
        super();
    }

    public Long getWiId() {
        return wiId;
    }

    public void setWiId(Long wiId) {
        this.wiId = wiId;
    }

    public Wi getWi() {
        return wi;
    }

    public void setWi(Wi wi) {
        this.wi = wi;
    }

    public String getErrMsg() {
        return errMsg;
    }

    public void setErrMsg(String errMsg) {
        this.errMsg = errMsg;
    }

    public Integer getErrCount() {
        return errCount;
    }

    public void setErrCount(Integer errCount) {
        this.errCount = errCount;
    }

    public Integer getExeStatus() {
        return exeStatus;
    }

    public void setExeStatus(Integer exeStatus) {
        this.exeStatus = exeStatus;
    }

    public Integer getSendCount() {
        return sendCount;
    }

    public void setSendCount(Integer sendCount) {
        this.sendCount = sendCount;
    }

    public Integer getNoticeActor() {
        return noticeActor;
    }

    public void setNoticeActor(Integer noticeActor) {
        this.noticeActor = noticeActor;
    }

    public Date getFirstSendTime() {
        return firstSendTime;
    }

    public void setFirstSendTime(Date firstSendTime) {
        this.firstSendTime = firstSendTime;
    }

    public Date getSendTime() {
        return sendTime;
    }

    public void setSendTime(Date sendTime) {
        this.sendTime = sendTime;
    }

    public Date getNextSendTime() {
        return nextSendTime;
    }

    public void setNextSendTime(Date nextSendTime) {
        this.nextSendTime = nextSendTime;
    }

    public Date getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    public Date getFinishTime() {
        return finishTime;
    }

    public void setFinishTime(Date finishTime) {
        this.finishTime = finishTime;
    }

    public Date getAcceptTime() {
        return acceptTime;
    }

    public void setAcceptTime(Date acceptTime) {
        this.acceptTime = acceptTime;
    }

}
