package com.xinleju.erp.frame.dto;

import java.lang.reflect.Field;
import java.util.HashSet;
import java.util.Set;

import com.xinleju.erp.annotation.PageField;
import com.xinleju.erp.frame.models.EntityExtender;

public class JsonTreeTableTemplete {
	private String idfield;
	private String pidfield;
	private String[] fields;
	private Class<?> mainClass;
	private Class<? extends EntityExtender> extenderClass;
	
	public JsonTreeTableTemplete(String idfield,String pidfield,Class<?> mainClass, Class<? extends EntityExtender> extenderClass){
		this.idfield = idfield;
		this.pidfield = pidfield;
		this.fields = null;
		this.mainClass = mainClass;
		this.extenderClass = extenderClass;
	}
	
	public JsonTreeTableTemplete(String idfield,String pidfield,Class<?> mainClass){
		this.idfield = idfield;
		this.pidfield = pidfield;
		this.fields = null;
		this.mainClass = mainClass;
		this.extenderClass = null;
	}
	
	public JsonTreeTableTemplete(String idfield,String pidfield,String[] fields){
		this.idfield = idfield;
		this.pidfield = pidfield;
		this.fields = fields;
		this.mainClass = null;
		this.extenderClass = null;
	}
	
	public JsonTreeTableTemplete(String idfield,String pidfield,String[] fields, Class<? extends EntityExtender> extenderClass){
		this.idfield = idfield;
		this.pidfield = pidfield;
		this.fields = fields;
		this.mainClass = null;
		this.extenderClass = extenderClass;
	}
	
	public Class<? extends Object> getMainClass() {
		return mainClass;
	}
	public void setMainClass(Class<? extends Object> mainClass) {
		this.mainClass = mainClass;
	}
	public String getIdfield() {
		return idfield;
	}
	public void setIdfield(String idfield) {
		this.idfield = idfield;
	}
	public String getPidfield() {
		return pidfield;
	}
	public void setPidfield(String pidfield) {
		this.pidfield = pidfield;
	}
	public String[] getFields() {
		if(fields == null && getMainClass() != null){
			Set<String> set = new HashSet<String>();
			set.add(getIdfield());
			set.add(getPidfield());
			Field[] mcfields = getMainClass().getDeclaredFields();
			if(mcfields == null)
				return set.toArray(new String[0]);
			for(Field field : mcfields){
				if(field == null)
					continue;
				if(field.getAnnotation(PageField.class) != null)
					set.add(field.getName());
			}
			 fields = set.toArray(new String[0]);
		}
		return fields;
	}
	public void setFields(String[] fields) {
		this.fields = fields;
	}
	public Class<? extends EntityExtender> getExtenderClass() {
		return extenderClass;
	}
	public void setExtenderClass(Class<? extends EntityExtender> extenderClass) {
		this.extenderClass = extenderClass;
	}
	
}
