package com.xinleju.erp.frame.models.ref;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.xinleju.erp.base.app.bean.Page;
import com.xinleju.erp.data.cache.dto.ProjectBaseDTO;
import com.xinleju.erp.flow.flowutils.bean.FlowResult;
import com.xinleju.erp.frame.dao.FiBusinessDao;
import com.xinleju.erp.frame.itf.IRefModel;
import com.xinleju.erp.frame.utils.BeanUtil;
import com.xinleju.erp.frame.utils.MdServiceProxy;

@Component
public class MDProjectRefModel implements IRefModel {
	@Autowired
	FiBusinessDao fibusinessDao;
	@Override
	public Page getData(int start,int limit,String keywords) {
		Page page = new Page();
		Long id = -1l;
		if(keywords != null)
			id = Long.valueOf(keywords);
		FlowResult<List<ProjectBaseDTO>> fr = null;
		if(MdServiceProxy.getMdProjectCacheService() != null)
			fr = MdServiceProxy.getMdProjectCacheService().getProjectBaseByOrgId(id);
 		List<Map<String,Object>> items = transfrom( fr.getResult());
		page.setItems(items);
		page.setTotal(items.size());
		return page;
	}
	
	private List<Map<String,Object>> transfrom(List<?> list){
		List<Map<String,Object>> transList = new ArrayList<Map<String,Object>>();
		if(list == null)
			return transList;
		for(Object obj : list){
			transList.add(transform(obj));
		}
		return transList;
	}
	
	private Map<String,Object> transform(Object entity){
		Map<String,Object> map = new HashMap<String,Object>();
		map.put(getKeyField(), BeanUtil.getAttribute(getKeyField(),entity));
		map.put(getNameField(), BeanUtil.getAttribute(getNameField(),entity));
		for(String field : getShowFields()){
			Object value =  BeanUtil.getAttribute(field,entity);
			map.put(field, value);
		}
		return map;
	}

	@Override
	public String getKeyField() {
		return "id";
	}

	@Override
	public String getNameField() {
		return "name";
	}

	@Override
	public String[] getShowFields() {
		return new String[]{"name","shortName"};
	}
	
	@Override
	public String[] getShowNames() {
		return new String[]{"项目名称","项目简称"};
	}

	@Override
	public String getTitle() {
		return "项目";
	}

	@Override
	public Boolean isMutil() {
		return false;
	}
	
	@Override
	public String getCodeField() {
		return "shortName";
	}
}
