package com.xinleju.erp.quartz.model;

// Generated 2013-4-17 11:29:38 by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;

/**
 * SimpleTriggers generated by hbm2java
 */
@Entity
@Table(name = "QRTZ_SIMPLE_TRIGGERS")
public class SimpleTriggers implements java.io.Serializable {
	private static final long serialVersionUID = -5136323096588529940L;
	private SimpleTriggersId id;
	private int repeatCount;
	private long repeatInterval;
	private long timesTriggered;

	public SimpleTriggers() {
	}

	public SimpleTriggers(int repeatCount,
			long repeatInterval, long timesTriggered) {
		this.repeatCount = repeatCount;
		this.repeatInterval = repeatInterval;
		this.timesTriggered = timesTriggered;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "schedName", column = @Column(name = "SCHED_NAME", nullable = false, length = 120)),
			@AttributeOverride(name = "triggerName", column = @Column(name = "TRIGGER_NAME", nullable = false, length = 200)),
			@AttributeOverride(name = "triggerGroup", column = @Column(name = "TRIGGER_GROUP", nullable = false, length = 200)) })
	public SimpleTriggersId getId() {
		return this.id;
	}

	public void setId(SimpleTriggersId id) {
		this.id = id;
	}


	@Column(name = "REPEAT_COUNT", nullable = false, precision = 7, scale = 0)
	public int getRepeatCount() {
		return this.repeatCount;
	}

	public void setRepeatCount(int repeatCount) {
		this.repeatCount = repeatCount;
	}

	@Column(name = "REPEAT_INTERVAL", nullable = false, precision = 12, scale = 0)
	public long getRepeatInterval() {
		return this.repeatInterval;
	}

	public void setRepeatInterval(long repeatInterval) {
		this.repeatInterval = repeatInterval;
	}

	@Column(name = "TIMES_TRIGGERED", nullable = false, precision = 10, scale = 0)
	public long getTimesTriggered() {
		return this.timesTriggered;
	}

	public void setTimesTriggered(long timesTriggered) {
		this.timesTriggered = timesTriggered;
	}

}
