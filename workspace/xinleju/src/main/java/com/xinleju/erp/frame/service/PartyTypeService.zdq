package com.xinleju.erp.frame.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.xinleju.erp.base.app.service.impl.BaseService;
import com.xinleju.erp.frame.dao.PartyTypeDao;
import com.xinleju.erp.frame.models.LabelValueBean;
import com.xinleju.erp.frame.models.PartyType;

@Service
@Transactional
public class PartyTypeService extends BaseService {
	
	@Autowired
	private PartyTypeDao partyTypeDao;

	/**
	 * 得到可在组织架构树中添加的类型
	 * @author jdq
	 * @return
	 */
	public List<PartyType> getCanAddList(){
		return partyTypeDao.getCanAddList();
	}

	public PartyType getById(Long id){
		return getDao().getById(PartyType.class, id);
	}

	public PartyType getByPartyType(String partyType){
		return partyTypeDao.findIdByType(partyType);
	}


	public Long getIdByPartyType(String partyType){
		return getByPartyType(partyType).getId();
	}


	public void init(){
		List<PartyType> partyTypeList = partyTypeDao.findAll();

		if(partyTypeList==null ||partyTypeList.size()==0){

			PartyType partyType = null;
			List<LabelValueBean> list = PartyType.typeList;
			for(LabelValueBean labelValueBean:list){
				partyType = new PartyType();
				partyType.setName(labelValueBean.getName());
				partyType.setType(labelValueBean.getValue());
				if(PartyType.TYPE_COMPANY.equals(labelValueBean.getValue())
						||PartyType.TYPE_DEPARTMENT.equals(labelValueBean.getValue())||PartyType.TYPE_GROUP.equals(labelValueBean.getValue())){
					partyType.setIfCanAdd(PartyType.IFCANADD_YES);
				}
				partyType.setIfOnlyEntity(PartyType.IFONLYENTITY_NO);
				getDao().saveOrUpdate(partyType);
			}

		}

	}

}
