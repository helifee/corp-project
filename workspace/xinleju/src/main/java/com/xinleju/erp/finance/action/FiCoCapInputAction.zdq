package com.xinleju.erp.finance.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;

import com.opensymphony.xwork2.ModelDriven;
import com.xinleju.erp.base.app.action.BaseAction;
import com.xinleju.erp.base.app.config.App;
import com.xinleju.erp.base.utils.JsonUtils;
import com.xinleju.erp.co.voucher.service.SyncFinaCoData;
import com.xinleju.erp.finance.dto.FiCoCapInputDTO;
import com.xinleju.erp.finance.models.FiAccountSetData;
import com.xinleju.erp.finance.models.FiCoCapInput;
import com.xinleju.erp.finance.models.extender.FiCoCapInputComboTreeExtender;
import com.xinleju.erp.finance.service.FiAccountSetDataService;
import com.xinleju.erp.finance.service.FiCoCapInputService;
import com.xinleju.erp.finance.utils.ExcelHandlerUtil;
import com.xinleju.erp.finance.utils.IExcelHandler;
import com.xinleju.erp.flow.utils.LoginInfoUtils;
import com.xinleju.erp.frame.dto.JsonTreeTableTemplete;
import com.xinleju.erp.frame.utils.CommonUtil;

import net.sf.json.JSONArray;

/**
 * 预算科目 ACTION
 * @author ztl
 *
 */
public class FiCoCapInputAction extends BaseAction implements ModelDriven<FiCoCapInput>{
	
	@Autowired
	private FiCoCapInputService fiCoCapInputService;
	@Autowired
	private FiAccountSetDataService fiAccountSetDataService;
	private FiCoCapInput fiCoCapInput = new FiCoCapInput();
	private File  uploadfile;
	/**
	 * 列表
	 * 
	 * @return
	 */
	public String list() {
		Long accountSetId = getParameterLong("accountSetId");
		String accountSetCode = request.getParameter("accountSetCode");
		Long sysId = getParameterLong("sysId");
		request.setAttribute("accountSetCode", accountSetCode);
		request.setAttribute("sysId", sysId);
		request.setAttribute("accountSetId", accountSetId);
		List<FiAccountSetData> fasds = fiAccountSetDataService.getFiAccountSetsDataByAccountId(accountSetId,sysId);
		if(fasds != null && fasds.size() > 0){
			List<Long> ids = new ArrayList<Long>();
			List<FiAccountSetData> companys = new ArrayList<FiAccountSetData>();
			for(FiAccountSetData f:fasds){
				if(!ids.contains(f.getCompanyId())){
					ids.add(f.getCompanyId());
					companys.add(f);
				}
			}
			String accountSetsjson = JsonUtils.toJSONString(companys);
			request.setAttribute("accountSetsjson", accountSetsjson);
			ids.clear();
		}else{
			request.setAttribute("accountSetsjson", "[]");
		}
		return "list";
	}

	
	/**
	 * 加载预算科目的treeGrid的json数据
	 */
	public void loadTreeGrid() {
		try{
		Long accountSetId = getParameterLong("accountSetId");
		String accountSetCode = request.getParameter("accountSetCode");
		Long sysId = getParameterLong("sysId");
		Long companyId = getParameterLong("companyId");
		String status = "1";
		List<FiCoCapInputDTO> fiCoCapInputDTOs = null;
		if (StringUtils.isNotBlank(accountSetCode))
			fiCoCapInputDTOs = fiCoCapInputService.getFiCoCapInputDTOList(accountSetId, status,sysId,companyId);
		else
			fiCoCapInputDTOs = new ArrayList<FiCoCapInputDTO>();
		JsonTreeTableTemplete jttt = new JsonTreeTableTemplete("id", "pid", FiCoCapInputDTO.class, FiCoCapInputComboTreeExtender.class);
		JSONArray jsonTree = CommonUtil.transTree(fiCoCapInputDTOs, jttt);
		renderJson(jsonTree.toString());
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	
	public void loadComboTree() {
		Long sysId = getParameterLong("sysId");
		Long companyId = getParameterLong("companyId");
		List<FiCoCapInputDTO> fds = new ArrayList<FiCoCapInputDTO>();
		if(sysId.intValue()==2){
			SyncFinaCoData syncFinaCoData =  (SyncFinaCoData) App.getBean("syncFinaCoData");
			Map<Long,List<Map<String,Object>>> returnmap = syncFinaCoData.findSub(companyId);
			List<Map<String,Object>> list = returnmap.get(companyId);
			for(int i=0;i<list.size();i++){
				FiCoCapInputDTO bc = new FiCoCapInputDTO();
				Map<String,Object> mpa = list.get(i);
				String id = String.valueOf(mpa.get("id"));
				String pid = String.valueOf(mpa.get("parentId"));
				String code = String.valueOf(mpa.get("fullCode"));
				String name = String.valueOf(mpa.get("name"));
			   
				bc.setSubcode(code);
				bc.setSubname(name);
				try {
					bc.setPid(pid);
				} catch (Exception e) {
					bc.setPid("0");
				}
				bc.setId(id);
				bc.setCompanyId(companyId);
				fds.add(bc);
			}
		}
		JsonTreeTableTemplete jttt = new JsonTreeTableTemplete("id", "pid", FiCoCapInputDTO.class, FiCoCapInputComboTreeExtender.class);
		JSONArray jsonTree = CommonUtil.transTree(fds, jttt);
		renderJson(jsonTree.toString());
	}

	
	/**
	 * 保存或者更新会计科目
	 */
	public void saveOrUpdate() {
		/*Long accountCapId = getParameterLong("parentAcId");
		FiAccountCaption fac = fiAccountCaptionService.getFiAccountCaptionById(accountCapId);
		if(fac != null){
			fiCoCapInput.setAccountCapCode(fac.getCode());
			fiCoCapInput.setAccountCapName(fac.getName());
			fiCoCapInput.setAccountCapId(accountCapId);
		}*/
		
		Map<String, Object> result = new HashMap<String, Object>();
		if (fiCoCapInput.getId() != null) {
			fiCoCapInput.setEditDate(new Date());
			fiCoCapInput.setStatus(1);
			fiCoCapInput.setEditUserId(LoginInfoUtils.getLoginInfoUserDtoId(request));
		} else {
			fiCoCapInput.setCreateDate(new Date());
			fiCoCapInput.setStatus(1);
			fiCoCapInput.setCreateUserId(LoginInfoUtils.getLoginInfoUserDtoId(request));
		}

		try {
			fiCoCapInputService.saveOrUpdate(fiCoCapInput);
			result.put("success", true);
			result.put("msg", "操作成功");
			renderHtml(JsonUtils.toJSONString(result));
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
			renderHtml(JsonUtils.toJSONString(result));
		}
	}

	public void delete() {
		Map<String, Object> result = new HashMap<String, Object>();
		try {
			fiCoCapInputService.delete(fiCoCapInput);
			result.put("success", true);
			renderHtml(JsonUtils.toJSONString(result));
		} catch (Exception e) {
			result.put("success", false);
			result.put("msg", e.getMessage());
			renderHtml(JsonUtils.toJSONString(result));
		}
	}
	
	/*
	 * 成本科目对照 导出
	 */
	public void exportPr(){
		try {
			String accountSetCode = request.getParameter("accountSetCode");
			String sysId = request.getParameter("sysId");
			String accountSetId = request.getParameter("accountSetId");
			Long companyId = getParameterLong("companyId");
			List<IExcelHandler> iexcelHandlerList = new ArrayList<IExcelHandler>();
			iexcelHandlerList.add(fiCoCapInputService);
			HSSFWorkbook wb = ExcelHandlerUtil.onexport(iexcelHandlerList,accountSetCode,Long.parseLong(sysId),Long.parseLong(accountSetId),companyId);
			onExport(wb,"成本科目对照(投入).xls");
		} catch (Exception e) {
			e.printStackTrace();
			Logger.getLogger(this.getClass()).error(e.getMessage());
		}
	}
	
	public void onExport(HSSFWorkbook wb,String fileName) throws UnsupportedEncodingException{
		response.setContentType("application/vnd.ms-excel");
		String downloadFileName=new String(fileName.getBytes("gb2312"), "iso8859-1");
		
		response.setHeader("Content-disposition","attachment;filename="+downloadFileName);
		OutputStream ouputStream = null;
		try {
			ouputStream = response.getOutputStream();
			wb.write(ouputStream);
			ouputStream.flush();
			ouputStream.close();
		} catch (IOException e) {
			Logger.getLogger(this.getClass()).error(e.getMessage());
			Logger.getLogger(this.getClass()).error("业务异常",e);
		}finally{
			if (ouputStream != null)
				try {
					ouputStream.close();
				} catch (IOException e) {
					Logger.getLogger(this.getClass()).error(e.getMessage());
					Logger.getLogger(this.getClass()).error("业务异常",e);
				}
            
		}
	}
	
	/**
	 * 成本科目对照导入
	 */
	public void  importPr(){
		try {
			String accountSetCode = request.getParameter("accountSetCode");//账套好
			String sysId = request.getParameter("sysId");//系统
			String companyCode = request.getParameter("companyCode");//公司编码
			String accountSetId = request.getParameter("accountSetId");
			Long companyId = getParameterLong("companyId");
			List<IExcelHandler> iexcelHandlerList = new ArrayList<IExcelHandler>();
			iexcelHandlerList.add(fiCoCapInputService);
			FileInputStream fileInputStream = new FileInputStream(uploadfile);
			ExcelHandlerUtil.importPr(fileInputStream,accountSetCode,sysId,companyCode,accountSetId,iexcelHandlerList,companyId);
		} catch (Exception e) {
			e.printStackTrace();
			Logger.getLogger(this.getClass()).error(e.getMessage());
			Logger.getLogger(this.getClass()).error("业务异常",e);
		}
	}
	
	public FiCoCapInput getModel() {
		return fiCoCapInput;
	}

	public FiCoCapInput getFiCoCapInput() {
		return fiCoCapInput;
	}

	public void setFiCoCapInput(FiCoCapInput fiCoCapInput) {
		this.fiCoCapInput = fiCoCapInput;
	}

	/**
	 * @return the uploadfile
	 */
	public File getUploadfile() {
		return uploadfile;
	}

	/**
	 * @param uploadfile the uploadfile to set
	 */
	public void setUploadfile(File uploadfile) {
		this.uploadfile = uploadfile;
	}
	
}
