package com.xinleju.erp.flow.taglib;

import java.io.IOException;
import java.util.List;

import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.tagext.BodyTagSupport;

import org.apache.commons.lang3.StringUtils;

import com.xinleju.erp.flow.models.Upload;

/**
 * 
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 * 流程文件列表
 * @author   zhongjun
 * @version  $Id: FlowFilesTag.java 54722 2014-12-23 04:28:39Z yinxianglong $
 * @since
 * @see
 */
@SuppressWarnings("serial")
public class FlowFilesTag extends BodyTagSupport {
 
    /**
     * 附件列表
     */
    private List<Upload> uploadList;

    /**
     * 
     * @see javax.servlet.jsp.tagext.BodyTagSupport#doStartTag()
     * @return int
     */
    public int doStartTag() {
        return (SKIP_BODY);
    }

    /**
     * 权限结束 
     * @see javax.servlet.jsp.tagext.BodyTagSupport#doEndTag()
     * @return int
     */
    public int doEndTag() {
        StringBuffer uploadHtml = new StringBuffer();
        try {
            if (null != uploadList && uploadList.size() > 0){
                String dateId = "" + System.nanoTime();
                uploadHtml.append("<form action=\"File!downloadZip.do\" name=\"frm_" + dateId + "\" id=\"frm_" + dateId + "\" method=\"post\" target=\"_top\">");
                uploadHtml.append("<input type=\"hidden\" name=\"dateId\" value=\"" + dateId + "\"/>");
                uploadHtml.append("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"table_flow_fj\">");
                uploadHtml.append("<tr>");
                uploadHtml.append("<th width=\"10px\">");
                uploadHtml.append("<input type=\"checkbox\" id=\"checkAllBox_" + dateId + "\" onclick=\"AutoCheckAllByEvent('zipUploadIds_" + dateId + "',event);\"/>");
                uploadHtml.append("</th>");
                uploadHtml.append("<th>");
                uploadHtml.append("<a href=\"javascript:void(0);\" onclick=\"if(!isCheck('zipUploadIds_" + dateId + "')) return false;document.frm_" + dateId + ".submit();return false;\">打包下载</a>");
                uploadHtml.append("</th>");
                uploadHtml.append("</tr>");
                for (Upload upload : uploadList){
                    uploadHtml.append(this.getUploadHtml(upload, dateId));
                }
                uploadHtml.append("</table>");
                uploadHtml.append("</form>");
            }
            JspWriter writer = pageContext.getOut();
            writer.write(uploadHtml.toString());
        } catch (IOException e) {
            e.printStackTrace();
        }
        return (SKIP_BODY);
    }
    /**
     * 得到附件的string
     * @author jun
     * @param upload 附件
     * @return 附件的string
     */
    private String getUploadHtml(Upload upload, String dateId){
        String uploadHtml = "";
        if (null != upload && null != upload.getId()){
            uploadHtml += "<tr>";
            uploadHtml += "<td>";
            uploadHtml += "<input type=\"checkbox\" name=\"zipUploadIds_" + dateId + "\" value=\"" + upload.getId()
                + "\" onclick=\"changeCheckAll('zipUploadIds_" + dateId + "','checkAllBox_" + dateId + "');\"/>";
            uploadHtml += "</td>";
            uploadHtml += "<td>";
            
            // modify by liuhm : 判断如果是地址的话则不进行下载，而是打开新的窗口打开具体地址
            //modify by wangliqiang 多了一个引号导致ie8下解析报错
            if ( upload.getFileName().endsWith(".url") ) {
            	//uploadHtml += "<a href=\"#\" target=\"_blank\" onclick=\"window.open('" + upload.getUserLabel() + "')\" >";
            	uploadHtml += "<a name=\"urlOpen\" href=\"javascript:;\" data-href=\""+ upload.getUserLabel() + "\">";
            	uploadHtml += upload.getFileName();
            	if (StringUtils.isNotBlank(upload.getNote())){
            		uploadHtml += "(" + upload.getNote() + ")";
            	}
            	
            } else {
            	uploadHtml += "<a href=\"File!download.do?id=" + upload.getId() + "\">";
            	uploadHtml += upload.getFileName();
            	if (StringUtils.isNotBlank(upload.getNote())){
            		uploadHtml += "(" + upload.getNote() + ")";
            	}
            }
            
            uploadHtml += "</a>";
            uploadHtml += "</td>";
            uploadHtml += "</tr>";
        }
        return uploadHtml;
    }
    
    public List<Upload> getUploadList() {
        return uploadList;
    }

    public void setUploadList(List<Upload> uploadList) {
        this.uploadList = uploadList;
    }

}
