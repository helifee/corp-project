package com.xinleju.erp.flow.service.api.extend;

import java.util.List;
import java.util.Map;

import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import com.xinleju.erp.data.cache.api.BaseExtendAPI;
import com.xinleju.erp.flow.flowutils.bean.FlowResult;
import com.xinleju.erp.flow.flowutils.bean.PageBean;
import com.xinleju.erp.flow.service.api.extend.dto.CtrlDTO;
import com.xinleju.erp.flow.service.api.extend.dto.DataAuthDTO;
import com.xinleju.erp.flow.service.api.extend.dto.FieldDTO;
import com.xinleju.erp.flow.service.api.extend.dto.FuncDTO;
import com.xinleju.erp.flow.service.api.extend.dto.OpDTO;
import com.xinleju.erp.flow.service.api.extend.dto.RoleDTO;
import com.xinleju.erp.flow.service.api.extend.dto.ScopeDTO;
import com.xinleju.erp.flow.service.api.extend.dto.UserDTO;

public class UserServiceImplTest {
	

	private BaseAPI baseAPI;
	private OrgnService orgnService;
	private UserSerivce userService;
	private FlowService flowService;
	private CommonService commonService;
	
	

  @BeforeClass
  public void beforeClass() {
	  ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(new String[] {"test-dubbo.xml"});
      context.start();
    
      baseAPI = (BaseAPI)context.getBean("baseAPIService");
      
      orgnService = (OrgnService)context.getBean("orgnServiceCustmer");
      userService = (UserSerivce)context.getBean("userServiceCustmer");
      flowService = (FlowService)context.getBean("flowServiceCustmer");
      commonService = (CommonService)context.getBean("commonServiceCustmer");
  }




  @Test
  public void getOpAuth() {
	  FlowResult<List<OpDTO>> fr = userService.getOpAuth("test", "SA", null);
	  
	  System.out.println("-------------getOpAuth-"+fr.getResult().size());
	  
	  for(OpDTO op : fr.getResult()){
		  System.out.println(op.getCode()+"--------------"+op.getName());
	  }
	  
  }


  @Test  
  public void getAllStandardRoles(){
	  FlowResult<List<RoleDTO>> fr = userService.getAllStandardRoles();
	  System.out.println("------------getAllStandardRoles-------------------");
	  
	  for(RoleDTO r : fr.getResult()){
		  System.out.println("-------------"+r.getName()+"------------"+r.getType()+"-----------"+r.getTypeCode());
	  }
  }
  @Test
  public void getRootStandardRoles() {
	  FlowResult<List<RoleDTO>> fr = userService.getRootStandardRoles();
	  
	  System.out.println("------------getRootStandardRoles-------------------");
	  
	  for(RoleDTO r : fr.getResult()){
		  System.out.println("-------------"+r.getName());
	  }
	  
  }

  

  @Test
  public void getUserList() {
	  
	  FlowResult<PageBean<UserDTO>> fr = baseAPI.getUserList(1l, null, 0, 1000, true, null);
	  
	  System.out.println("-------getUserList----------");
	  
	  for(UserDTO uDTO : fr.getResult().getItems()){
		  System.out.println("----------"+uDTO.getRealName());
	  }
  }



  @Test
  public void getDataAuth() {
	  
	  FlowResult<DataAuthDTO> fr = userService.getDataAuth("zhangxiang");
	  System.out.println("-------getDataAuth----------");
	  
	 // for(Map<CtrlDTO, Map<FieldDTO, List<ScopeDTO>>>.Entry<CtrlDTO, Map<FieldDTO, List<ScopeDTO>>> map:fr.getResult().getDetail().entrySet()){
		  
	  //}
	  
  }

  @Test
  public void getFuncAuth() {
	  
	  FlowResult<List<FuncDTO>> fr = userService.getFuncAuth("zhangxiang", "PT");
	  
	  System.out.println("-------getFuncAuth----------"+fr.getResult().size());
	  
	  for(FuncDTO f :fr.getResult()){
		  System.out.println("-------"+f.getName());
		  for(FuncDTO fc :f.getChildren()){
			  System.out.println("------------"+fc.getName());			 
		  }
	  }
	  
  }

 

  @Test
  public void getSubStandardRoles() {
	  
	  FlowResult<List<RoleDTO>> fr = userService.getSubStandardRoles(8l);
	  
	  System.out.println("-------getSubStandardRoles----------"+fr.getResult().size());
	  
	  for(RoleDTO f :fr.getResult()){
		  System.out.println("-------"+f.getName());
	  }
  }

  @Test
  public void getUserByUserId() {
	  
	  FlowResult<UserDTO> fr = userService.getUserByUserId(3l);
	  System.out.println("-------getUserByUserId----------"+fr.getResult().getRealName());
  }

  @Test
  public void getUserByUserLoginName() {	  
	  FlowResult<UserDTO> fr = userService.getUserByUserLoginName("test");
	  System.out.println("-------getUserByUserLoginName----------"+fr.getResult().getRealName());
  }

 

  @Test
  public void getUserListByCompanyId() {
	  
	  FlowResult<List<UserDTO>> fr = userService.getUserListByCompanyId(4l);
	  
	  System.out.println("-------getUserListByCompanyId----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByCompanyIdAndStandardRoleId() {
	  FlowResult<List<UserDTO>> fr = userService.getUserListByCompanyIdAndStandardRoleId(3l,16l);
	  
	  System.out.println("-------getUserListByCompanyIdAndStandardRoleId----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByDeptId() {
	  FlowResult<List<UserDTO>> fr = userService.getUserListByDeptId(3l);
	  
	  System.out.println("-------getUserListByDeptId----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByDeptIdAndStandardRoleId() {
	  FlowResult<List<UserDTO>> fr = userService.getUserListByDeptIdAndStandardRoleId(3l,16l);
	  
	  System.out.println("-------getUserListByDeptIdAndStandardRoleId----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByDeptIds() {
	  FlowResult<List<UserDTO>> fr = userService.getUserListByDeptIds(new String[]{"3"});
	  
	  System.out.println("-------getUserListByDeptIds----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByLoginNames() {
	  FlowResult<List<UserDTO>> fr = userService.getUserListByLoginNames(new String[]{"zhangxiang","chenhb","funaru"});
	  
	  System.out.println("-------getUserListByLoginNames----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByPostId() {
	  FlowResult<List<UserDTO>> fr = userService.getUserListByPostId(28l);
	  
	  System.out.println("-------getUserListByPostId----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByProjectBranchId() {
	  FlowResult<List<UserDTO>> fr = userService.getUserListByProjectBranchId(1l);
	  
	  System.out.println("-------getUserListByProjectBranchId----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByProjectBranchIdAndStandardRoleId() {
	  
	  FlowResult<List<UserDTO>> fr = userService.getUserListByProjectBranchIdAndStandardRoleId(35l,22l);
	  
	  System.out.println("-------getUserListByProjectBranchIdAndStandardRoleId----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByProjectId() {
	  
	  FlowResult<List<UserDTO>> fr = userService.getUserListByProjectId(3l);
	  
	  System.out.println("-------getUserListByProjectId----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByStandardRoleId() {
	  
	  FlowResult<List<UserDTO>> fr = userService.getUserListByStandardRoleId(16l);
	  
	  System.out.println("-------getUserListByStandardRoleId----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByStandardRoleIds() {
	  
	  FlowResult<List<UserDTO>> fr = userService.getUserListByStandardRoleIds(new String[]{"16","17"});
	  
	  System.out.println("-------getUserListByStandardRoleIds----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }

  @Test
  public void getUserListByUserIds() {
	  
	  FlowResult<List<UserDTO>> fr = userService.getUserListByUserIds(new String[]{"3","5"});
	  
	  System.out.println("-------getUserListByUserIds----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
  }
  
  @Test
  public void getUserListByPostIds(){
	  
	  FlowResult<List<UserDTO>> fr = userService.getUserListByPostIds(new String[]{"28"});
	  
	  System.out.println("-------getUserListByPostIds----------"+fr.getResult().size());
	  
	  for(UserDTO f :fr.getResult()){
		  System.out.println("-------"+f.getRealName());
	  }
	  
  }
  
  @Test
  public void getStandardRolesByUserId(){
	  FlowResult<List<RoleDTO>> fr = userService.getStandardRolesByUserId(1l);
	  
	  System.out.println("-------getStandardRolesByUserId----------"+fr.getResult().size());
	  
	  for(RoleDTO f :fr.getResult()){
		  System.out.println("-------"+f.getName());
	  }
  }
  
  @Test
  public void getStandardRolesById(){
	  FlowResult<RoleDTO> fr = userService.getStandardRolesById(1l);
	  
	  System.out.println("-------getStandardRolesById----------"+fr.getResult().getName());
	  
  }
  
  @Test
  public void getFuncAuth2(){
//	  FlowResult<List<FuncDTO>> fr = userService.getFuncAuth(11l,"ZB");
//	  
//	  System.out.println("-------getFuncAuth2----------"+fr.getResult().size());
//	  
//	  for(FuncDTO f :fr.getResult()){
//		  System.out.println("-------"+f.getName());
//	  }
  }
  
  @Test
  public void getOpAuth2(){
//	  FlowResult<List<OpDTO>> fr = userService.getOpAuth(2l,"SA",null);
//	  
//	  System.out.println("-------getOpAuth2----------"+fr.getResult().size());
//	  
//	  for(OpDTO f :fr.getResult()){
//		  System.out.println("-------"+f.getName());
//	  }
  }
  
  
}
