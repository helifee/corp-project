package com.xinleju.erp.flow.service.api.extend;

import java.util.List;

import java.util.Map;

import org.junit.Test;
import org.springframework.context.support.ClassPathXmlApplicationContext;


import com.xinleju.erp.data.cache.api.BaseExtendAPI;
import com.xinleju.erp.flow.flowutils.bean.FlowResult;
import com.xinleju.erp.flow.service.api.extend.dto.CompanyDTO;
import com.xinleju.erp.flow.service.api.extend.dto.DeptDTO;
import com.xinleju.erp.flow.service.api.extend.dto.OrgnDTO;
import com.xinleju.erp.flow.service.api.extend.dto.PostDTO;

public class OrgnServiceImplTest {
	private BaseExtendAPI baseExtendAPI;
	private BaseAPI baseAPI;
	private OrgnService orgnService;
	private UserSerivce userService;
	private FlowService flowService;
	private CommonService commonService;
	
	

  
  public void beforeClass() {
	  ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(new String[] {"test-dubbo.xml"});
      context.start();
      baseExtendAPI = (BaseExtendAPI)context.getBean("exBaseAPIService");
      baseAPI = (BaseAPI)context.getBean("baseAPIService");
      
      orgnService = (OrgnService)context.getBean("orgnServiceCustmer");
      userService = (UserSerivce)context.getBean("userServiceCustmer");
      flowService = (FlowService)context.getBean("flowServiceCustmer");
      commonService = (CommonService)context.getBean("commonServiceCustmer");
  }
  
  @Test
	public void getOrgnListAll(){
	  FlowResult<List<OrgnDTO>> fr = orgnService.getOrgnListAll();
	  
	  System.out.println("getOrgnListAll----------"+fr.getResult().size());
	  for(OrgnDTO dto : fr.getResult()){
		  System.out.println(dto.getName()+"-----------------"+dto.getNodeType());
	  }
	}
  
  @Test
  public void getOrgnRoot(){
	  FlowResult<OrgnDTO> fr = orgnService.getOrgnRoot();
	  System.out.println("getOrgnRoot----------"+fr.getResult().getName());
	  
  }
  
  @Test
  public void getOrgnListSub(){
	  FlowResult<List<OrgnDTO>> fr= orgnService.getOrgnListSub(1l,new String[]{"company"});
	  System.out.println("getOrgnListSub----------"+fr.getResult().size());
	  
	  for(OrgnDTO dto : fr.getResult()){
		  System.out.println(dto.getName());
	  }
  }
  
  @Test 
  public void getCompanyListAll(){
	  try {
		  ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(new String[] {"test-dubbo.xml"});
	      context.start();
	      
	      orgnService = (OrgnService)context.getBean("orgnServiceCustmer");
		  FlowResult<List<CompanyDTO>> fr = orgnService.getCompanyListAll();
		  
		  System.out.println("getCompanyListAll----------"+fr.getResult().size());
		  
		  for(CompanyDTO dto : fr.getResult()){
			  System.out.println(dto.getName());
		  }
	} catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
	}
	
	  
  }
  
  @Test
  public void getCompanyById(){
	  FlowResult<CompanyDTO> fr = orgnService.getCompanyById(1l);
	  
	  System.out.println("getCompanyById----------"+fr.getResult().getName());
  }

  @Test 
  public void getCompanyListByIds(){
	  
     FlowResult<List<CompanyDTO>> fr = orgnService.getCompanyListByIds(new String[]{"1","2","3","5"});
	  
	  System.out.println("getCompanyListByIds----------"+fr.getResult().size());
	  
	  for(CompanyDTO dto : fr.getResult()){
		  System.out.println(dto.getName());
	  }
	  
  }
  
  @Test
  public void getCompanyListLeaf(){
	  FlowResult<List<CompanyDTO>> fr = orgnService.getCompanyListLeaf();
	  
	  System.out.println("getCompanyListLeaf----------"+fr.getResult().size());
	  
	  for(CompanyDTO dto : fr.getResult()){
		  System.out.println(dto.getName());
	  }
	  
  }
  
  @Test
  public void getCompanyListHaveProject(){
	  FlowResult<List<CompanyDTO>> fr = orgnService.getCompanyListHaveProject();
	  
	  System.out.println("getCompanyListHaveProject----------"+fr.getResult().size());
	  
	  for(CompanyDTO dto : fr.getResult()){
		  System.out.println(dto.getName());
	  }
  }
  @Test
  public void getCompanyByDeptId(){
	  FlowResult<CompanyDTO> fr = orgnService.getCompanyByDeptId(1l);
	  
	  System.out.println("getCompanyByDeptId----------"+fr.getResult().getName());
  }
  
  @Test
  public void getCompanyListByDeptIds(){
	  FlowResult<List<CompanyDTO>> fr = orgnService.getCompanyListByDeptIds(new String[]{"1","6","9","11"});
	  
	  System.out.println("getCompanyListByDeptIds----------"+fr.getResult().size());
	  
	  for(CompanyDTO dto : fr.getResult()){
		  System.out.println(dto.getName());
	  }
  }
  
  @Test 
  public void getCompanyListByUserId(){
	  FlowResult<List<CompanyDTO>> fr = orgnService.getCompanyListByUserId(3l);
	  
	  System.out.println("getCompanyListByUserId----------"+fr.getResult().size());
	  
	  for(CompanyDTO dto : fr.getResult()){
		  System.out.println(dto.getName());
	  }
	  
  }
  
  @Test
  public void getCompanyMainByUserId(){
	  FlowResult<CompanyDTO> fr = orgnService.getCompanyMainByUserId(3l);
	  
	  System.out.println("getCompanyMainByUserId----------"+fr.getResult().getName());
  }
  
  @Test
  public void getDeptMainByUserIds(){
	  FlowResult<Map<String,DeptDTO>> fr = orgnService.getDeptMainByUserIds(new String[]{"3","1","2"});
	  
	  System.out.println("------------getDeptMainByUserIds----------"+fr.getResult().size());
	  
	  for(Map.Entry<String,DeptDTO> dto : fr.getResult().entrySet()){
		  System.out.println(dto.getKey()+"----------------"+dto.getValue().getName());
	  }
  }
  
  @Test
  public void getPostListByCompanyId(){
	  FlowResult<List<PostDTO>> fr = orgnService.getPostListByCompanyId(3l);
	  
	  System.out.println("getCompanyListByUserId----------"+fr.getResult().size());
	  
	  for(PostDTO dto : fr.getResult()){
		  System.out.println(dto.getName());
	  }
  }
  
  @Test
  public void getPostListByIds(){
	  FlowResult<List<PostDTO>> fr = orgnService.getPostListByIds(new String[]{"52","53"});
	  
	  System.out.println("getPostListByIds----------"+fr.getResult().size());
	  
	  for(PostDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  

  @Test
  public void getCompanyListByUserIds() {
	  FlowResult<List<CompanyDTO>> fr = orgnService.getCompanyListByUserIds(new String[]{"3","5"});
	  
	  System.out.println("getCompanyListByUserIds----------"+fr.getResult().size());
	  
	  for(CompanyDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getCompanyListByUserLoginName() {
	  FlowResult<List<CompanyDTO>> fr = orgnService.getCompanyListByUserLoginName("zhangxiang");
	  
	  System.out.println("getCompanyListByUserLoginName----------"+fr.getResult().size());
	  
	  for(CompanyDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getCompanyListByUserLoginNames() {
	  
	  FlowResult<List<CompanyDTO>> fr = orgnService.getCompanyListByUserLoginNames(new String[]{"zhangxiang","funaru","zhenghb"});
	  
	  System.out.println("getCompanyListByUserLoginNames----------"+fr.getResult().size());
	  
	  for(CompanyDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  

  @Test
  public void getCompanyMainByUserLoginName() {
	  FlowResult<CompanyDTO> fr = orgnService.getCompanyMainByUserLoginName("zhangxiang");
	  
	  System.out.println("getCompanyMainByUserLoginName----------"+fr.getResult().getName());
  }

  @Test
  public void getDeptById() {
	  
	  FlowResult<DeptDTO> fr = orgnService.getDeptById(1l);
	  
	  System.out.println("getDeptById----------"+fr.getResult().getName());
  }

  @Test
  public void getDeptByPostId() {
	  FlowResult<DeptDTO> fr = orgnService.getDeptByPostId(28l);
	  
	  System.out.println("getDeptByPostId----------"+fr.getResult().getName());
  }

  @Test
  public void getDeptListByCompanyId() {
	  
	  FlowResult<List<DeptDTO>> fr = orgnService.getDeptListByCompanyId(3l);
	  
	  System.out.println("getDeptListByCompanyId----------"+fr.getResult().size());
	  
	  for(DeptDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getDeptListByIds() {
	  
	  FlowResult<List<DeptDTO>> fr = orgnService.getDeptListByIds(new String[]{"1","2","3"});
	  
	  System.out.println("getDeptListByIds----------"+fr.getResult().size());
	  
	  for(DeptDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getDeptListByPostIds() {
	  FlowResult<List<DeptDTO>> fr = orgnService.getDeptListByPostIds(new String[]{"1","2","3"});
	  
	  System.out.println("getDeptListByPostIds----------"+fr.getResult().size());
	  
	  for(DeptDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getDeptListByUserId() {
	  FlowResult<List<DeptDTO>> fr = orgnService.getDeptListByUserId(3l);
	  
	  System.out.println("getDeptListByUserId----------"+fr.getResult().size());
	  
	  for(DeptDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getDeptListByUserIds() {
	  FlowResult<List<DeptDTO>> fr = orgnService.getDeptListByUserIds(new String[]{"1","2","3"});
	  
	  System.out.println("getDeptListByUserIds----------"+fr.getResult().size());
	  
	  for(DeptDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getDeptMainByUserId() {
	  FlowResult<DeptDTO> fr = orgnService.getDeptByPostId(3l);
	  
	  System.out.println("getDeptMainByUserId----------"+fr.getResult().getName());
  }

   @Test
  public void getPostById() {
	   FlowResult<PostDTO> fr = orgnService.getPostById(18l);
		  
	   System.out.println("getPostById----------"+fr.getResult().getName());
  }

   @Test
  public void getPostListByCompanyIdAndStandardRoleId() {
		  FlowResult<List<PostDTO>> fr = orgnService.getPostListByCompanyIdAndStandardRoleId(3l,16l);
		  
		  System.out.println("getPostListByCompanyIdAndStandardRoleId----------"+fr.getResult().size());
		  
		  for(PostDTO dto : fr.getResult()){
			  System.out.println("-----------------"+dto.getName());
		  }
  }

  @Test
  public void getPostListByDeptId() {
	  FlowResult<List<PostDTO>> fr = orgnService.getPostListByDeptId(3l);
	  
	  System.out.println("getPostListByDeptId----------"+fr.getResult().size());
	  
	  for(PostDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getPostListByDeptIdAndStandardRoleId() {
	  FlowResult<List<PostDTO>> fr = orgnService.getPostListByDeptIdAndStandardRoleId(3l,16l);
	  
	  System.out.println("getPostListByDeptIdAndStandardRoleId----------"+fr.getResult().size());
	  
	  for(PostDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getPostListByStandardRoleId() {
	  FlowResult<List<PostDTO>> fr = orgnService.getPostListByStandardRoleId(3l);
	  
	  System.out.println("getPostListByStandardRoleId----------"+fr.getResult().size());
	  
	  for(PostDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getPostListByUserId() {
	  FlowResult<List<PostDTO>> fr = orgnService.getPostListByUserId(3l);
	  
	  System.out.println("getPostListByUserId----------"+fr.getResult().size());
	  
	  for(PostDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }

  @Test
  public void getPostListByUserLoginName() {
	  FlowResult<List<PostDTO>> fr = orgnService.getPostListByUserLoginName("zhangxiang");
	  
	  System.out.println("getPostListByUserLoginName----------"+fr.getResult().size());
	  
	  for(PostDTO dto : fr.getResult()){
		  System.out.println("-----------------"+dto.getName());
	  }
  }
}
