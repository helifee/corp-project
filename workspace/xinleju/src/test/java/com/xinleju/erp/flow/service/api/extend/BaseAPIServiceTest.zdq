package com.xinleju.erp.flow.service.api.extend;

import java.util.List;
import java.util.Map;

import org.junit.Test;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.xinleju.erp.flow.flowutils.bean.FileDto;
import com.xinleju.erp.flow.flowutils.bean.FlowInstanceDto;
import com.xinleju.erp.flow.flowutils.bean.FlowResult;
import com.xinleju.erp.flow.flowutils.bean.SimpleResult;



public class BaseAPIServiceTest {
	
	  
	 public static void main(String[] args){
		  ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(new String[] {"test-dubbo.xml"});
          System.out.println("=====================");
       //   context.start();
          String[] beans=context.getBeanDefinitionNames();
          for(String b:beans){
        	  System.out.println(b);
          }
        
          BaseAPI  baseAPIService = (BaseAPI)context.getBean("baseAPIService");
	     System.out.println("-------------------------------Start------------------------------------");
	    // FlowResult<List<FlowInstanceDto>> fr = baseAPIService.getEndFlowUsers("'3066','3066','3064'", "'7757816','2876739'");
	     FlowResult<List<FileDto>> fr= baseAPIService.getFileList("EX", "'EX_DAYEXPENSE-b19bdf10da4f45f8abca8558380cfd9e'");
		 System.out.println(fr);
		
	  }
/*	
	  private BaseAPI baseAPIService;
	
	  @BeforeClass
	  public void beforeClass() {
		  ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(new String[] {"test-dubbo.xml"});
	      context.start();
	      baseAPIService = (BaseAPI)context.getBean("baseAPIService");
	  }
	
	

	  
	  @Test
	  public void getMaxBizCode(){
		  
		  FlowResult<String> fr = baseAPIService.getNextBizCode("PL");
		  System.out.println("-------------------------------"+fr.getResult()+"------------------------------------");
		  
	  }
	  
	  @Test
	  public void getDataAuth() {
		  
		  FlowResult<DataAuthDTO> fr = baseAPIService.getDataAuth("zhangxiang");
		  for(Map.Entry<CtrlDTO, Map<FieldDTO, List<ScopeDTO>>> m : fr.getResult().getDetail().entrySet()){
			  System.out.println("数据权限控制点----"+m.getKey().getName());
			  for(Map.Entry<FieldDTO, List<ScopeDTO>> m0 : m.getValue().entrySet()){
				  System.out.println("数据权限控维度--------"+m.getKey().getName());
				  for(ScopeDTO s : m0.getValue()){
					  System.out.println("数据权限控范围------------"+s.getName());
				  }
			  }
		  }
		  
	  }*/
	
}
