package com.xinleju.platform.sys.org.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.xinleju.platform.base.service.impl.BaseServiceImpl;
import com.xinleju.platform.base.utils.IDGenerator;
import com.xinleju.platform.sys.org.dao.RoleUserDao;
import com.xinleju.platform.sys.org.dto.RoleUserDto;
import com.xinleju.platform.sys.org.dto.UserDto;
import com.xinleju.platform.sys.org.entity.RoleUser;
import com.xinleju.platform.sys.org.service.RoleUserService;

/**
 * @author admin
 * 
 * 
 */

@Service
public class RoleUserServiceImpl extends  BaseServiceImpl<String,RoleUser> implements RoleUserService{
	

	@Autowired
	private RoleUserDao roleUserDao;
	/**
	 * 根据roleid删除
	 * @param parentId
	 * @return
	 */
	public Integer deleteByRoleId(Map<String, Object> paramater)  throws Exception{
		return roleUserDao.deleteByRoleId(paramater);
	}
	/**
	 * 批量保存
	 * @param parentId
	 * @return
	 */
	public Integer insertRoleUserBatch(Map<String, Object> paramater)  throws Exception{
		return roleUserDao.insertRoleUserBatch(paramater);
	}
	/**
	 * 获取通用角色引用对象列表
	 * @return
	 */
	public List<RoleUserDto> queryRoleRefListByRoleId(Map<String, Object> paramater)  throws Exception{
		return roleUserDao.queryRoleRefListByRoleId(paramater);
	}
	/**
	 * 查询用户岗位组织树
	 * @return
	 */
	public List<Map<String, Object>> selectUserPostTree(Map<String, Object> paramater)  throws Exception{
//		return roleUserDao.selectUserPostTree(paramater);
		List<Map<String, Object>> org=roleUserDao.selectTreeOrg(paramater);
		List<Map<String, Object>> post=roleUserDao.selectTreePost(paramater);
		List<Map<String, Object>> user=roleUserDao.selectTreePostUser(paramater);
		List<Map<String, Object>> res=new ArrayList<Map<String, Object>>();
		res.addAll(org);
		res.addAll(post);
		res.addAll(user);
		return res;
	}
	/**
	 * 查询用户组织树
	 * @return
	 */
	public List<Map<String, Object>> selectUserOrgTree(Map<String, Object> paramater)  throws Exception{
//		return roleUserDao.selectUserOrgTree(paramater);
		List<Map<String, Object>> org=roleUserDao.selectTreeOrg(paramater);
		List<Map<String, Object>> user=roleUserDao.selectTreeOrgUser(paramater);
		List<Map<String, Object>> res=new ArrayList<Map<String, Object>>();
		res.addAll(org);
		res.addAll(user);
		return res;
	}
	/**
	 * 批量保存引用
	 * @return
	 */
	@Transactional(readOnly=false,rollbackFor=Exception.class)
	public Integer saveBatchRoleUserPost(Map<String, Object> param)  throws Exception{
		List<Map<String, Object>> list=(List<Map<String, Object>>)param.get("list");
		for (int i = 0; i < list.size(); i++) {
			Map<String,Object> m=list.get(i);
			if(!m.containsKey("id")||m.get("id")==null||StringUtils.isBlank(m.get("id").toString())){
				m.put("id", IDGenerator.getUUID());
			}
		}
		//删除之前的
		deleteByRoleId(param);
		//批量保存
		return insertRoleUserBatch(param);
	}
}
