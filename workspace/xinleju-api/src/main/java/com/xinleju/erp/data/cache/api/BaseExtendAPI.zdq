package com.xinleju.erp.data.cache.api;

import java.util.List;
import java.util.Map;

import com.xinleju.erp.flow.flowutils.bean.FlowResult;
import com.xinleju.erp.flow.service.api.extend.BaseAPI;
import com.xinleju.erp.flow.service.api.extend.dto.CompanyDTO;
import com.xinleju.erp.flow.service.api.extend.dto.DeptDTO;
import com.xinleju.erp.flow.service.api.extend.dto.RoleDTO;
import com.xinleju.erp.flow.service.api.extend.dto.UserDTO;


public interface BaseExtendAPI extends BaseAPI {
	/**
	    * 根据用户名查询用户信息
	    * @param loginName
	    * @return
	    */
	     public FlowResult<UserDTO> findUserByLoginName(String loginName);
	     /**
	      * 根据多ID查询公司
	      * @param arg0
	      * @return
	      */
	     public FlowResult<Map<Long,String>> getCompanyByIds(String[] arg0);
	     
	     /**
	      * 根据ID获取部门
	      * @param arg0
	      * @return
	      */
	     public FlowResult<DeptDTO> getDeptById(Long arg0);
	     
	     /**
	      * 根据多ID获取部门
	      * @param arg0
	      * @return
	      */
	     public FlowResult<Map<Long,String>> getDeptByIds(String[] arg0);
	     
	     /**
	      * 根据多ID获取部门
	      * @param arg0
	      * @return
	      */
	     public FlowResult<List<DeptDTO>> getDeptLIstByIds(String[] arg0);
	     
	     /**
	      * 根据ID获取角色
	      * @param arg0
	      * @return
	      */
	     public FlowResult<RoleDTO> getRoleById(Long arg0);
	     
	     /**
	      * 根据多ID获取角色
	      * @param arg0
	      * @return
	      */
	     public FlowResult<Map<Long,String>> getRoleByIds(String[] arg0);
	     
	     /**
	      * 根据多ID获取角色
	      * @param arg0
	      * @return
	      */
	     public FlowResult<List<RoleDTO>> getRoleListByIds(String[] arg0);
	     
	     /**
	      * 根据多ID获取用户
	      * @param arg0
	      * @return
	      */
	     public FlowResult<Map<Long,String>> getUserByIds(String[] arg0);
	     
	     /**
	      * 根据多ID获取用户
	      * @param arg0
	      * @return
	      */
	     public FlowResult<List<UserDTO>> getUserListByIds(String[] arg0);
	     
	     /**
	      * 根据多ID获取用户真实姓名
	      * @param arg0
	      * @return
	      */
	     public FlowResult<String> getUserNameByIds(String[] arg0);
	 	
	     /**
	      * 根据多ID获取用于角色名称
	      * @param arg0
	      * @return
	      */
	 	public FlowResult<String> getRoleNameByIds(String[] arg0) ;
	 	
	 	/**
	 	 * 获取用户
	 	 * @param roleRefId
	 	 * @return
	 	 */
	 	public FlowResult<List<UserDTO>> getUserByRoleRefId(Long roleRefId);
	 	
	 	/**
	 	 * 获取用户
	 	 * @param roleRefIds
	 	 * @return
	 	 */
		
		public FlowResult<List<UserDTO>> getUserByRoleRefIds(String[] roleRefIds);		
		
		
		   /**
	     * 根据用户名查询用户公司
	     * @param loginName
	     * @return
	     */
	    public FlowResult<CompanyDTO> getCompanyByUserId(String loginName) ;
	    
	    /**
	     * 根据登录名获取用户公司
	     * @param longNames
	     * @return
	     */
	    public FlowResult<List<CompanyDTO>> getCompanyListByUserIds(String[] longNames);
	    
	    /**
	     * 根据登录名获取用户公司
	     * @param longNames
	     * @return
	     */
	    public FlowResult<Map<Long,String>> getCompanyMapByUserIds(String[] longNames);
	    
	    /**
	     * 根据用户名查询用户部门
	     * @param loginName
	     * @return
	     */
	    public FlowResult<DeptDTO> getDeptByUserId(String loginName) ;
	    
	    /**
	     * 根据登录名获取用户部门
	     * @param longNames
	     * @return
	     */
	    public FlowResult<List<DeptDTO>> getDeptListByUserIds(String[] longNames);
	    
	    /**
	     * 根据登录名获取用户部门
	     * @param longNames
	     * @return
	     */
	    public FlowResult<Map<Long,String>> getDeptMapByUserIds(String[] longNames);
	    
	    /**
	     * 根据用户名查询用户角色
	     * @param loginName
	     * @return
	     */
	    public FlowResult<RoleDTO> getRoleByUserId(String loginName) ;
	    
	    /**
	     * 根据登录名获取用户角色
	     * @param longNames
	     * @return
	     */
	    public FlowResult<List<RoleDTO>> getRoleListByUserIds(String[] longNames);
	    
	    /**
	     * 根据登录名获取用户角色
	     * @param longNames
	     * @return
	     */
	    public FlowResult<Map<Long,String>> getRoleMapByUserIds(String[] longNames);
	    
	    
			
}
