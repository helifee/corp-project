package com.xinleju.erp.flow.service.api.extend;

import java.util.List;
import java.util.Map;

import com.xinleju.erp.flow.flowutils.bean.CategoryDTO;
import com.xinleju.erp.flow.flowutils.bean.FlowDTO;
import com.xinleju.erp.flow.flowutils.bean.FlowResult;
import com.xinleju.erp.flow.flowutils.bean.PageBean;
import com.xinleju.erp.flow.flowutils.bean.SimpleResult;
import com.xinleju.erp.flow.flowutils.bean.ToDoBean;


public interface FlowService {
	
	 /**
     * 更新流程数据
     * <p></p>
     * <p></p>
     * @author 孙朝辉
     * @param bizId 业务对象实例ID,主键
     * @param soCode 业务对象ID
     * @param data 流程数据
     * @return
     */
    FlowResult<Boolean> updateFlowData(String bizId,String soCode, Map<String,Object> data);
    
    /**
     * 
     * <p>获取工作流根目录列表</p>
     * <p></p>
     * @author 孙朝辉
     * @return
     */
    FlowResult<List<CategoryDTO>> getRootCategories();
    
    /**
     * 
     * <p>获取子目录列表</p>
     * <p></p>
     * @param parentId 父ID
     * @author 孙朝辉
     * @return
     */
    FlowResult<List<CategoryDTO>> getSubCategories(String parentId);
    
    /**
     * 
     * <p>获取某个目录下的流程列表</p>
     * <p></p>
     * @author 孙朝辉
     * @param categoryId  目录ID
     * @param extParm  预留扩展属性
     * @return
     */
    FlowResult<PageBean<FlowDTO>> getFlows(String categoryId,Integer start,Integer limit, Map<String, Object> extParm);
    
    /**
     * 
     * <p>作废流程</p>
     * <p></p>
     * @author 孙朝辉
     * @param bizId 业务id
     * @param flowCode 流程编码
     * @param userId 操作人id
     * @return
     */
    FlowResult<Boolean> undo(String bizId,String flowCode, String userId);
    
    /**
     * <p>结束流程</p>
     * @author 孙朝辉
     * @param bizId 业务id
     * @param flowCode 流程编码
     * @param userId 操作人id
     * @return
     */
    FlowResult<Boolean> finishFi(String bizId,String flowCode, Long userId);
    
    /**
     * <p>打回流程</p>
     * @author 孙朝辉
     * @param bizId 业务id
     * @param flowCode 流程编码
     * @param userId 操作人id
     * @return
     */
    FlowResult<Boolean> giveBackFi(String bizId,String flowCode, Long userId);
    
    /**
     * <p>结束分支</p>
     * @author 孙朝辉
     * @param bizId 业务id
     * @param flowCode 流程编码
     * @param endTag 分支标识
     * @param userId 操作人id
     * @return
     */
    FlowResult<Boolean> finishFiBranch(String bizId,String flowCode, String endTag, Long userId);
    
    
	/**流程发起
	 * @param spGwId
	 * @param startUserId
	 * @param userNote
	 * @param flowCode
	 * @param bizId
	 * @return
	 */
	public FlowResult<SimpleResult> startFlowTask(String spGwId, String startUserId, String userNote,String flowCode,String bizId);

    /**
     * 流程业务查看
     * @param flowCode
     * @param bizId
     * @return
     */
    FlowResult<ToDoBean> getToDoBeanByflowCodeAndbizId(String flowCode, String bizId);
   

}
