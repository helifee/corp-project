package com.xinleju.erp.flow.service.api.extend;

import java.util.List;
import java.util.Map;

import com.xinleju.erp.flow.flowutils.bean.FlowResult;
import com.xinleju.erp.flow.service.api.extend.dto.CompanyDTO;
import com.xinleju.erp.flow.service.api.extend.dto.DeptDTO;
import com.xinleju.erp.flow.service.api.extend.dto.OrgnDTO;
import com.xinleju.erp.flow.service.api.extend.dto.PartyEntityDTO;
import com.xinleju.erp.flow.service.api.extend.dto.PostDTO;
import com.xinleju.erp.flow.service.api.extend.dto.RoleDTO;
import com.xinleju.erp.flow.service.api.extend.dto.ScopeDTO;


public interface OrgnService {
	
	/**
	 * 查询所有组织机构信息
	 * @return
	 */
	public FlowResult<List<OrgnDTO>> getOrgnListAll();
	
	/**
	 * 根据Id查询组织机构信息
	 * @param id
	 * @return
	 */
	public FlowResult<OrgnDTO> getOrgnById(Long id);
	
	/**
	 * 获取父节点
	 * @param childId
	 * @return
	 */
	public FlowResult<OrgnDTO>  getParentOrgnByChildId(Long childId);
	
	/**
	 * 查询组织机构根节点信息
	 * @return
	 */
	public FlowResult<OrgnDTO> getOrgnRoot();
	
	/**
     * 获取孩子组织机构列表
     * 
     * @param parentId
     *            父ID
     * @param includeTypes
     *           包含节点类型（company:公司  department:部门  group:团队 ）
     * @return
     */
	
	public FlowResult<List<OrgnDTO>> getOrgnListSub(String parentId, String[] includeTypes);
	
	/**
	 * 查询所有公司
	 * @return
	 */
	public FlowResult<List<CompanyDTO>> getCompanyListAll() ;
	/**
	 * 根据ID查询公司
	 * @param companyId
	 * @return
	 */
	public FlowResult<CompanyDTO> getCompanyById(String companyId) ;
	
	/**
	 * 根据国ID查询公司
	 * @param companyIds
	 * @return
	 */
	public FlowResult<List<CompanyDTO>> getCompanyListByIds(String[] companyIds) ;
	
	/**
	 * 查询末级公司
	 * @return
	 */
	public FlowResult<List<CompanyDTO>> getCompanyListLeaf();
	
	/**
	 * 查询含有项目的公司
	 * @return
	 */
	public FlowResult<List<CompanyDTO>> getCompanyListHaveProject();
	
	/**
	 * 根据部门ID查询公司
	 * @param deptId
	 * @return
	 */
	public FlowResult<CompanyDTO> getCompanyByDeptId(String deptId) ;
	
	/**
	 * 根据多部门ID获取公司
	 * @param deptIds
	 * @return
	 */
	public FlowResult<List<CompanyDTO>> getCompanyListByDeptIds(String[] deptIds) ;
	
	/**
	 * 获取用户公司
	 * @param userId
	 * @return
	 */
	public FlowResult<List<CompanyDTO>> getCompanyListByUserId(String userId) ;
	
	/**
	 * 获取用户主公司
	 * @param userId
	 * @return
	 */
	public FlowResult<CompanyDTO> getCompanyMainByUserId(String userId) ;
	
	/**
	 * 获取多用户主公司
	 * @param userIds
	 * @return
	 */
	public FlowResult<List<CompanyDTO>> getCompanyListByUserIds(String[] userIds) ;
	
	/**
	 * 根据登录名获取用户公司
	 * @param userLoginName
	 * @return
	 */
	public FlowResult<List<CompanyDTO>> getCompanyListByUserLoginName(String userLoginName) ;
	/**
	 * 根据登录名获取用户主公司
	 * @param userLoginName
	 * @return
	 */
	public FlowResult<CompanyDTO> getCompanyMainByUserLoginName(String userLoginName) ;
	
	/**
	 * 根据多用户名获取用户公司
	 * @param userLoginNames
	 * @return
	 */
	public FlowResult<List<CompanyDTO>> getCompanyListByUserLoginNames(String[] userLoginNames) ;
	
	/**
	 * 根据公司ID获取公司下部门
	 * @param companyId
	 * @return
	 */
	public FlowResult<List<DeptDTO>> getDeptListByCompanyId(String companyId) ;
	
	/**
	 * 根据部门ID获取部门
	 * @param deptId
	 * @return
	 */
	public FlowResult<DeptDTO> getDeptById(String deptId) ;
	
	/**
	 * 根据部门ID获取部门
	 * @param deptIds
	 * @return
	 */
	public FlowResult<List<DeptDTO>> getDeptListByIds(String[] deptIds) ;
	
	/**
	 * 根据岗位ID获取部门
	 * @param postId
	 * @return
	 */
	public FlowResult<DeptDTO> getDeptByPostId(Long postId) ;
	
	/**
	 * 根据岗位id获取部门
	 * @param postIds
	 * @return
	 */
	public FlowResult<List<DeptDTO>> getDeptListByPostIds(String[] postIds) ;
	
	/**
	 * 根据用户ID获取用户部门
	 * @param userId
	 * @return
	 */
	public FlowResult<List<DeptDTO>> getDeptListByUserId(String userId) ;
	
	/**
	 *   chc add 2016.8.2
	 * 根据用户ID获取用户部门
	 * @param userId
	 * @return
	 */
	public FlowResult<List<PartyEntityDTO>> getDeptListByUserIdNew(String userId) ;
	
	/**
	 * 根据公司Id,用户ID获取用户部门
	 * 
	 * @param userId
	 * @return
	 */
	public FlowResult<List<DeptDTO>> getDeptListByUserId(String companyId,String userId) ;
	/**
	 * 根据用户id获取用户主部门
	 * @param userId
	 * @return
	 */
	public FlowResult<DeptDTO> getDeptMainByUserId(String userId) ;
	/**
	 * 根据用户id获取用户主部门一级部门
	 * @param userId
	 * @return
	 */
	public FlowResult<DeptDTO> getUpDeptMainByUserId(Long userId) ;	
	/**
	 * 根据用户ID获取用户主部门
	 * Map key 为用户登录名
	 * @param userIds
	 * @return
	 */
	public FlowResult<Map<String,DeptDTO>> getDeptMainByUserIds(String[] userIds);
	/**
	 * 根据用户ID获取用户主部门
	 * @param userIds
	 * @return
	 */
	public FlowResult<List<DeptDTO>> getDeptListByUserIds(String[] userIds) ;
	
	
	
	
	/**
	 * 根据公司ID获取公司下岗位
	 * @param companyId
	 * @return
	 */
	public FlowResult<List<PostDTO>> getPostListByCompanyId(Long companyId);
	
	/**
	 * 根据公司ID和标准角色获取岗位
	 * @param companyId
	 * @param standardRoleId
	 * @return
	 */
	public FlowResult<List<PostDTO>> getPostListByCompanyIdAndStandardRoleId(String companyId,String standardRoleId);
	
	/**
	 * 根据部门ID或标准角色获取岗位
	 * @param companyId
	 * @param standardRoleId
	 * @return
	 */
	public FlowResult<List<PostDTO>> getPostListByDeptIdAndStandardRoleId(Long companyId,Long standardRoleId);
	
	/**
	 * 根据标准角色获取岗位列表
	 * @param standardRoleId
	 * @return
	 */
	public FlowResult<List<PostDTO>> getPostListByStandardRoleId(Long standardRoleId);
	
	/**
	 * 根据岗位ID获取岗位
	 * @param postId
	 * @return
	 */
	public FlowResult<PostDTO> getPostById(String postId);
	
	/**
	 * 根据岗位ID获取岗位列表
	 * @param postIds
	 * @return
	 */
	public FlowResult<List<PostDTO>> getPostListByIds(String[] postIds);
	
	/**
	 * 根据部门ID获取岗位列表
	 * @param deptId
	 * @return
	 */
	public FlowResult<List<PostDTO>> getPostListByDeptId(String deptId);
    
    /**
     * 根据部门ID获取岗位列表
     * @param deptId
     * @return
     */
    public FlowResult<List<PostDTO>> getPostListByPeId(String peId);
	
	/**
	 * 根据登录名获取用户岗位列表
	 * @param userLoginName
	 * @return
	 */
	public FlowResult<List<PostDTO>> getPostListByUserLoginName(String userLoginName);
	
	/**
	 * 根据用户ID获取用户岗位列表
	 * @param userId
	 * @return
	 */
	public FlowResult<List<PostDTO>> getPostListByUserId(String userId);
	
	
	/**
	 * 
	  * <p>Title:OrgnService.java </p>
	  * <p>Description: @param partyStructTypeId
	  * <p>Description: @param parentEntityId
	  * <p>Description: @param isStruct
	  * <p>Description: @return</p>
	  * <p>Todo:TODO </p> 
	  * @author liugang
	  * @date 2016-5-3
	 */
	public List<PartyEntityDTO> getParyEntityByStPidIsStrc(String partyStructTypeId,String parentEntityId,String isStruct);
	
	
	
	public FlowResult<List<OrgnDTO>> getOrgnListAll(String moduleCode,String authUserLoginName,Long ctrId,Long fieldId) ;
	public FlowResult<OrgnDTO> getOrgnRoot(String moduleCode,String authUserLoginName,Long ctrId,Long fieldId) ;
	public FlowResult<List<OrgnDTO>> getOrgnListSub(Long parentId,String[] includeTypes,String moduleCode,String authUserLoginName,Long ctrId,Long fieldId);
	public FlowResult<List<CompanyDTO>> getCompanyListAll(String moduleCode,String authUserLoginName,String ctrId,String fieldId) ;
	public FlowResult<CompanyDTO> getCompanyById(Long companyId,String moduleCode,String authUserLoginName,Long ctrId,Long fieldId);
	public FlowResult<List<CompanyDTO>> getCompanyListByIds(String[] companyIds,String moduleCode,String authUserLoginName,Long ctrId,Long fieldId) ;
	public FlowResult<List<CompanyDTO>> getCompanyListLeaf(String moduleCode,String authUserLoginName,Long ctrId,Long fieldId) ;
	public FlowResult<List<CompanyDTO>> getCompanyListHaveProject(String moduleCode,String authUserLoginName,Long ctrId,Long fieldId);
	public FlowResult<CompanyDTO> getCompanyByDeptId(Long deptId,String moduleCode,String authUserLoginName,Long ctrId,Long fieldId);
	public FlowResult<List<CompanyDTO>> getCompanyListByDeptIds(String[] deptIds,String moduleCode,String authUserLoginName,Long ctrId,Long fieldId) ;
	public FlowResult<List<CompanyDTO>> getCompanyListByUserId(String userId,String moduleCode,String authUserLoginName,String ctrId,String fieldId);
	public FlowResult<CompanyDTO> getCompanyMainByUserId(Long userId,String moduleCode,String authUserLoginName,Long ctrId,Long fieldId);
	public FlowResult<List<CompanyDTO>> getCompanyListByUserIds(String[] userIds,String moduleCode,String authUserLoginName,Long ctrId,Long fieldId) ;
	public FlowResult<List<CompanyDTO>> getCompanyListByUserLoginName(String userLoginName,String moduleCode,String authUserLoginName,String ctrId,String fieldId);
	public FlowResult<CompanyDTO> getCompanyMainByUserLoginName(String userLoginName,String moduleCode,String authUserLoginName,Long ctrId,Long fieldId);
	public FlowResult<List<CompanyDTO>> getCompanyListByUserLoginNames(String[] userLoginNames,String moduleCode,String authUserLoginName,Long ctrId,Long fieldId);
	
	public FlowResult<List<DeptDTO>> getAllDept (String companyId,String moduleCode,String authUserLoginName,String ctrId,String fieldId);
	public FlowResult<List<OrgnDTO>> getAuthDeptByCompany (Long companyId,String moduleCode,String authUserLoginName,Long ctrId,Long fieldId);
    public FlowResult<List<OrgnDTO>> getOrgnListNotProjectAndBranch();
    
    public FlowResult<List<OrgnDTO>> getOrgnByRefId(Long refId,String[] includeTypes);
    public FlowResult<OrgnDTO> getParentOrgnByChildId(String refId,String[] includeTypes);
	
    /**
	 * 查询用户权限项
	 * @param moduleCode
	 * @param authUserLoginName
	 * @param ctrId
	 * @param fieldId
	 * @return
	 */
	public FlowResult<List<ScopeDTO>> getAuthScope(String moduleCode,String authUserLoginName,String ctrId,String fieldId);

	/**
     * chc add 获取当前用户拥有岗位集合
     * @param loginName
     * @return
     */
	public List<RoleDTO> getPostsByCurrentUser(String loginName);
}
