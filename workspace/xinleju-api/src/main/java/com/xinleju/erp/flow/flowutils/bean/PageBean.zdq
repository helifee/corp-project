package com.xinleju.erp.flow.flowutils.bean;

import java.util.ArrayList;
import java.util.List;

/**
 * 
 * 版权：(C) 版权所有 2000-2014 上海天好电子商务有限公司苏州分公司
 * 分页bean
 * @author   zhongjun
 * @version  $Id: PageBean.java 2091 2014-12-11 14:36:44Z zhongjun $
 * @since
 * @see
 */
public class PageBean<T> implements IResultBean {

    /**
     * 序列化ID
     */
    private static final long serialVersionUID = 1L;
    
    public PageBean(int start,int limit,int total, List<T> items){
        this.start = start;
        this.total = total;
        this.items = items;
        this.limit = limit;
    }
    
    public PageBean() {
        limit = 15;
        start = 0;
        total = 0;
        items = new ArrayList<T>();
    }

    private int limit;
    private int start;
    private int total;
    private List<T> list;   //当前记录实体对象列表
    
    private List<T> items;
    
    
    public List<T> getItems() {
        return items;
    }
    public void setItems(List<T> items) {
        this.items = items;
    }
    public int getStart() {
        return start;
    }
    public void setStart(int start) {
        this.start = start;
    }
    public int getTotal() {
        return total;
    }
    public void setTotal(int total) {
        this.total = total;
    }
    /**
     * 计算总页数.
     */
    public int getTotalPages() {
        if (total == -1)
            return -1;

        int count = total / limit;
        if (total % limit > 0) {
            count++;
        }
        return count;
    }

    /**
     * 是否还有下一页.
     */
    public boolean hasNextPage() {
        return getTotalPages() > start / limit + 1;
    }
    public int getPageNumer() {
        
        if (hasNextPage())
            return start / limit + 1;
        else{
            return start / limit + 1;
        }
            
        
    }
    /**
     * 获取页数,从1开始计数
     * @return
     */
    public int getNextPage() {
        if (hasNextPage())
            return start / limit + 2;
        else
            return start / limit + 1;
    }

    /**
     * 是否还有上一页. 
     */
    public boolean hasPrePage() {
        return start > 0;
    }

    /**
     * 返回上页的页号,序号从1开始.
     */
    public int getPrePage() {
        if (hasPrePage())
            return start / limit;
        else
            return 1;
    }


    public int getFirstPage() {
        return 1;
    }

    public int getLastPage() {
        return getTotalPages();
    }
    public int getLimit() {
        return limit;
    }
    public void setLimit(int limit) {
        this.limit = limit;
    }

	public List<T> getList() {
		return list;
	}

	public void setList(List<T> list) {
		this.list = list;
	}
    
    
}
