<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.cloud.oa.office.entity.OfficeHouse">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.cloud.oa.office.entity.OfficeHouse">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.cloud.oa.office.entity.OfficeHouse">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.cloud.oa.office.entity.OfficeHouse">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	<!-- 查询办公用品类别-->
	 <select id="queryListOfficeHouse" resultType="com.xinleju.cloud.oa.office.entity.OfficeHouse" parameterType="java.lang.String">
		 	  select id as id,parent_node_id as parentNodeId,type_name as typeName from oa_office_house
		 	<choose>
               <when test="_parameter != 'null'">
                  where parent_node_id = #{_parameter,jdbcType=VARCHAR}
               </when>
         </choose>
	 </select>
	 
	 
	 
	 	<!-- 查询用品分类树结构-->
	 <select id="getOfficeHouseTreeById" resultType="com.xinleju.cloud.oa.office.entity.OfficeHouse" parameterType="java.lang.String">
		 	  select id,parent_node_id as parentNodeId,type_name as typeName from oa_office_house  where delflag=0
		 	<choose>
               <when test="_parameter != 'null'">
                  and parent_node_id = #{_parameter,jdbcType=VARCHAR}
               </when>
         </choose>
         		group by parent_node_id;
	 </select>
	 
	 
	 <!-- 查询查询出来的父节点获取父节点下面的信息-->
	 <select id="queryOfficeHouseByParentId" resultType="com.xinleju.cloud.oa.office.entity.OfficeHouse" parameterType="java.lang.String">
		 	   select id,parent_node_id as parentNodeId,type_name as typeName from oa_office_house where delflag=0
		 	<choose>
                <when test="_parameter != 'null'">
                   and parent_node_id = #{_parameter,jdbcType=VARCHAR}
                </when>
         </choose>
		 	 
	 </select>
	 
	 <select id="getOfficeHousepage" resultType="java.util.Map">
SELECT
	a.id as id,
	a.account_id as accountId,
	a.manager as manager,
	a.number_code as numberCode,
	a.owned_company as ownedCompany,
	a.parent_node_id  as parentNodeId,
	a.sort_number as sortNumber,
	a.state as state,
	a.tend_id as tendId,
	a.type_name as typeName,
	a.create_date AS createDate,
	a.update_date AS updateDate,
	a.create_person_id AS createPersonId,
	a.create_person_name AS createPersonName,
	a.update_person_id AS updatePersonId,
	a.update_person_name AS updatePersonName,
	a.create_org_id AS createOrgId,
	a.create_org_name AS createOrgName,
	a.create_company_id AS createCompanyId,
	a.create_company_name AS createCompanyName,
	a.concurrency_version AS concurrencyVersion,
  u.real_name as realName,
  b.type_name as typeParentName,
	a.delflag AS delflag
FROM 
	OA_OFFICE_HOUSE a 
  LEFT JOIN pt_sys_org_user  u on a.create_person_id=u.id
  LEFT JOIN OA_OFFICE_HOUSE b on a.parent_node_id=b.id where a.delflag=0
	 <if test="start!=null and start!='' and limit!=null and limit!=''">
	      limit #{start},#{limit}
	 </if>
	 </select>
	 <select id="getOfficeHousepageCount" resultType="java.lang.Integer">
	   select count(a.id) from oa_office_house a where a.delflag=0
	 </select>
	 
	 <!-- 获取树列表数据 -->
	<select id="queryTreeList" resultType="java.util.Map" parameterType="java.util.Map">
	SELECT	
		a.id as id,
		a.account_id as accountId,
		a.manager as manager,
		a.number_code as numberCode,
		a.owned_company as ownedCompany,
		a.parent_node_id  as parentNodeId,
		a.sort_number as sortNumber,
		a.state as state,
		a.tend_id as tendId,
		a.type_name as typeName,
		a.create_date AS createDate,
		a.update_date AS updateDate,
		a.create_person_id AS createPersonId,
		a.create_person_name AS createPersonName,
		a.update_person_id AS updatePersonId,
		a.update_person_name AS updatePersonName,
		a.create_org_id AS createOrgId,
		a.create_org_name AS createOrgName,
		a.create_company_id AS createCompanyId,
		a.create_company_name AS createCompanyName,
		a.concurrency_version AS concurrencyVersion,
	    u.real_name as realName,
	    b.type_name as typeParentName,
		a.delflag AS delflag
	 FROM 
		OA_OFFICE_HOUSE a 
	 LEFT JOIN pt_sys_org_user  u on a.create_person_id=u.id
	 LEFT JOIN OA_OFFICE_HOUSE b on a.parent_node_id=b.id 
	 WHERE 1=1 
		<choose>
        <when test="parentId != null">
             and   a.parent_node_id = #{parentId}
        </when>
        <otherwise>
             and    a.parent_node_id='0'
         </otherwise>
        </choose>
        and a.delflag=0  order by a.sort_number
	</select>
	<select id="getEntryListByParentId" resultType="com.xinleju.cloud.oa.office.entity.OfficeHouse" parameterType="java.lang.String">
	SELECT 
	    a.id as id,
		a.account_id as accountId,
		a.manager as manager,
		a.number_code as numberCode,
		a.owned_company as ownedCompany,
		a.parent_node_id  as parentNodeId,
		a.sort_number as sortNumber,
		a.state as state,
		a.tend_id as tendId,
		a.type_name as typeName,
		a.create_date AS createDate,
		a.update_date AS updateDate,
		a.create_person_id AS createPersonId,
		a.create_person_name AS createPersonName,
		a.update_person_id AS updatePersonId,
		a.update_person_name AS updatePersonName,
		a.create_org_id AS createOrgId,
		a.create_org_name AS createOrgName,
		a.create_company_id AS createCompanyId,
		a.create_company_name AS createCompanyName,
		a.concurrency_version AS concurrencyVersion,
		a.delflag 
		from   OA_OFFICE_HOUSE a  where a.delflag=0 
		<choose>
		<when test="_parameter != null and _parameter!=''">
			and  a.parent_node_id= #{_parameter,jdbcType=VARCHAR} 
		</when>
		</choose>
		order by a.sort_number
	</select>
	<select id="getSortNum" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT
			T.sort_number AS SORT
		FROM
			OA_OFFICE_HOUSE T
		WHERE
			1 = 1
	<choose>
	<when test="parentId != null and parentId !=''">
		AND T.parent_node_id = #{parentId,jdbcType=VARCHAR}
	</when>
	</choose>
	<choose>
	<when test="sort != null and sort !=''">
		AND T.sort_number = #{sort,jdbcType=VARCHAR}
	</when>
	</choose>
		ORDER BY
			T.sort_number DESC
		LIMIT 0,1
	</select>
</mapper>