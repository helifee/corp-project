package com.xinleju.cloud.oa.content.service.impl;

import java.util.*;

import com.xinleju.cloud.oa.content.dao.ContentChildDao;
import com.xinleju.cloud.oa.content.dao.ContentTypeDao;
import com.xinleju.cloud.oa.content.entity.ContentChild;
import com.xinleju.cloud.oa.content.entity.ContentType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xinleju.platform.base.service.impl.BaseServiceImpl;
import com.xinleju.platform.base.utils.Page;
import com.xinleju.cloud.oa.content.dao.ContentRowTypeDao;
import com.xinleju.cloud.oa.content.entity.ContentRowAttribute;
import com.xinleju.cloud.oa.content.entity.ContentRowType;
import com.xinleju.cloud.oa.content.service.ContentRowTypeService;
import com.xinleju.platform.base.dao.impl.BaseDaoImpl;

/**
 * @author admin
 */

@Service
public class ContentRowTypeServiceImpl extends BaseServiceImpl<String, ContentRowType> implements ContentRowTypeService {


    @Autowired
    private ContentRowTypeDao contentRowTypeDao;

    @Autowired
    private ContentTypeDao contentTypeDao;

    @Autowired
    private ContentChildDao contentChildDao;

    @Override
    public int queryTypeCount(String parament) {
        // TODO Auto-generated method stub
        return contentRowTypeDao.queryTypeCount(parament);
    }

    @Override
    public int deleteContentRowTypeByContentTypeId(String contentTypeId) {
        // TODO Auto-generated method stub
        int result = 0;
        Map<String, Object> map = new HashMap<String, Object>();
        map.put("contentTypeId", contentTypeId);
        List<ContentRowType> ContentRowTypeList = contentRowTypeDao.queryList(map);
        if (ContentRowTypeList.size() > 0) {
            List<String> list = new ArrayList<String>();
            for (ContentRowType contentRowType : ContentRowTypeList) {
                list.add(contentRowType.getId());
            }
            result = contentRowTypeDao.deleteAllObjectByIds(list);
        }
        return result;
    }

    @Override
    public Page getContentRowTypeByPage(Map map) throws Exception {
        Page page = new Page();
        List<ContentRowType> list = contentRowTypeDao.getContentRowTypePage(map);
        Integer count = contentRowTypeDao.getContentRowTypeCount(map);
        page.setLimit((Integer) map.get("limit"));
        page.setList(list);
        page.setStart((Integer) map.get("start"));
        page.setTotal(count);
        return page;
    }

    @Override
    public String getContentRowData(Map map) throws Exception {
        String code = (String) map.get("contentTypeCode");
        map.put("code",code);
        map.remove("contentTypeCode");
        //根据大类编码获取唯一大类实体
        List<ContentType> list = contentTypeDao.queryList(map);
        ContentType contentType = null;
        if(list!=null&&list.size()>0){
            contentType = list.get(0);
        }

        //查找大类目录
        List<ContentChild> contentChildList = null;
        if(contentType!=null){
            Map<String,Object> paramMap = new HashMap<String,Object>();
            paramMap.put("parentId",contentType.getId());
            contentChildList = contentChildDao.queryList(paramMap);
        }

        //判断大类是否有目录，如果没有则查找大类下的新闻
        StringBuffer buffer = new StringBuffer();
        if (contentChildList==null||contentChildList.size()==0) {
            String contentTypeId = contentType.getId();
            Map<String,Object> contentRowParam = new HashMap<String,Object>();
            contentRowParam.put("contentTypeId",contentTypeId);
            contentRowParam.put("start",0);
            contentRowParam.put("limit",8);
            Page page = this.getContentRowTypeByPage(contentRowParam);
            List<ContentRowType> contentRowTypeList = page.getList();
            int count = 0;

            buffer.append("<ul class=\"news_list\" id=\""+contentType.getCode()+"\">");
            for (ContentRowType contentRowType:contentRowTypeList){
                String id = contentRowType.getId();
                String title = contentRowType.getTitle();
                String publishDate = contentRowType.getSubmittime();
                String li = "<li class=\"new\"></li>";
                if(count<2){
                    buffer.append("<li class=\"new\"><a target=\"_blank\" data-href=\"content/contentRowType/contentRowType_view.html?id=\""+id+">"+title+"</a><span >"+publishDate+"</span></li>");
                }else{
                    buffer.append("<li ><a target=\"_blank\" data-href=\"content/contentRowType/contentRowType_view.html?id=\""+id+">"+title+"</a><span >"+publishDate+"</span></li>");
                }
                count++;
            }
            buffer.append("</ul>");
            buffer.append("<script type=\"text/javascript\">\n" +
                    "$(function(){\n" +
                    "   var links = $('#"+contentType.getCode()+"').find('a');\n" +
                    "   $.each(links,function(){\n" +
                    "       $(this).attr('href',hostUrl + $(this).attr('data-href'));\n" +
                    "   })\n" +
                    "});\n" +
                    "" +
                    "</script>");

        }else{

        }
        return buffer.toString();
    }
}
