<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.3.xsd">



    <util:properties id="configuration" location="classpath:configuration.properties"/>


	<context:component-scan base-package="com.xinleju.cloud.oa.**.service.impl"></context:component-scan>
	<context:component-scan base-package="com.xinleju.cloud.oa.**.dao.impl"></context:component-scan>

    <!-- 基础数据源 -->
	 <bean id="mainDataSource" class="com.alibaba.druid.pool.DruidDataSource"
        destroy-method="close">
        <property name="driverClassName" value="#{configuration['db.driverClassName']}" />
        <property name="url" value="#{configuration['db.url']}" />
        <property name="username" value="#{configuration['db.username']}" />
        <property name="password" value="#{configuration['db.password']}" />
        <property name="filters" value="stat" />
     </bean>
   <!--
	   <bean id="dataSource" class="com.xinleju.platform.base.datasource.DynamicDataSource"  >
	        <property name="targetDataSources">
	        <map></map>
	        </property>
	        <property name="defaultTargetDataSource" ref="mainDataSource"></property>
	    </bean>
	-->
    <!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mainDataSource" />
	</bean>

    <!-- 开启事务注解驱动 -->
    <tx:annotation-driven />

    <!-- mybatis sessionFactory工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mainDataSource" />
		<property name="mapperLocations" value="#{configuration['mybatis.mapper']}"></property>
	</bean>

	<bean id="excuteTimeMonitor" class="com.xinleju.platform.base.interceptor.MethodTimeMonitoring"></bean>

	<aop:config>
	   <!--切入点-->
         <aop:pointcut id="methodPoint" expression="execution(* com.xinleju..service.*.*(..) ) ||  execution(* com.xinleju..dao.*.*(..)) "/>
	    <!--在该切入点使用自定义拦截器-->
		<aop:advisor pointcut-ref="methodPoint" advice-ref="excuteTimeMonitor"/>
	</aop:config>




</beans>