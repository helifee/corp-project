/*
 * Copyright (c) 2009-2010 by DaLian YuDong Computer System CO.,LTD
 * All rights reserved.
 *      Project: SSH
 *    SubSystem: 会议室管理子系统
 */

package com.ysys.www.hy.service.impl;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import com.opensymphony.xwork2.util.XWorkList;
import com.ysys.www.hy.dao.AffirmattendDao;
import com.ysys.www.hy.dao.condition.TabMrhycjz;
import com.ysys.www.hy.dao.condition.TabMrhycjzPK;
import com.ysys.www.hy.service.AffirmattendService;
import com.ysys.www.hy.service.common.CommonConstants;
import com.ysys.www.hy.service.common.SessionManager;
import com.ysys.www.hy.service.common.UserInfo;
import com.ysys.www.hy.service.condition.Attendinfo;
import com.ysys.www.hy.service.condition.Pinfo;

/**
 * @see com.ysys.www.hy.service.AffirmattendService
 */
public class AffirmattendServiceImpl implements AffirmattendService {

	private AffirmattendDao affirmattendDaoImpl;

	public void setAffirmattendDao(AffirmattendDao affirmattendDaoImpl) {
		this.affirmattendDaoImpl = affirmattendDaoImpl;
	}

	 /**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	public List<Attendinfo> getattendinfo() {
		SessionManager session = new SessionManager();
		// 从session中得到登录者
		String attendEmpid = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getUserID();
		// 日期格式
		SimpleDateFormat formattm = new SimpleDateFormat("HH:mm:ss");
		SimpleDateFormat sdfs = new SimpleDateFormat("yyyy-MM-dd");

		Date nowdate = new Date();
		String nowYMD = sdfs.format(nowdate);
		String nowTime = formattm.format(nowdate);
		// 登录者要参加会议的主要信息
		List affirmattendllist = affirmattendDaoImpl.getattendinfo(attendEmpid,
				nowYMD, nowTime);

		Iterator iter = affirmattendllist.iterator();

		Object[] record = null;
		List<Attendinfo> resultattendinfo = new ArrayList();
		// 把主要信息转化成在画面显示的List
		for (; iter.hasNext();) {
			Attendinfo attendlist = new Attendinfo();
			record = (Object[]) iter.next();
			attendlist.setHysid((Integer) record[0]);
			attendlist.setHysname((String) record[1]);
			attendlist.setHyrq(sdfs.format(record[2]));
			attendlist.setHykssj(formattm.format(record[3]));
			attendlist.setHyjssj(formattm.format(record[4]));
			attendlist.setHyzt((String) record[5]);
			attendlist.setUserName((String) record[6]);
			resultattendinfo.add(attendlist);
		}
		return resultattendinfo;

	}

	 /**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	public List<Pinfo> getkeyinfo(Boolean keyflg) {
		SessionManager session = new SessionManager();
		// 从session中得到登录者
		String attendEmpid = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getUserID();
		List<Pinfo> resultkeyinfo = new ArrayList();
		if (keyflg) {
			// 日期格式
			SimpleDateFormat formattm = new SimpleDateFormat("HH:mm:ss");
			SimpleDateFormat sdfs = new SimpleDateFormat("yyyy-MM-dd");
			Date nowdate = new Date();
			String nowYMD = sdfs.format(nowdate);
			String nowTime = formattm.format(nowdate);
			// 登录者要参加会议的主要信息
			List affirmattendllist = affirmattendDaoImpl.getattendinfo(attendEmpid,
					nowYMD, nowTime);

			Iterator iter = affirmattendllist.iterator();

			Object[] record = null;

			for (; iter.hasNext();) {
				Pinfo keyinfo = new Pinfo();
				record = (Object[]) iter.next();
				String keystr = "";
				keystr = record[0] + ","
						+ sdfs.format(record[2]) + ","
						+ formattm.format(record[3]);
				keyinfo.setEmpid(keystr);
				keyinfo.setEmpmc("");
				resultkeyinfo.add(keyinfo);
			}

		} else {
			Pinfo keyinfo = new Pinfo();
			keyinfo.setEmpid("");
			keyinfo.setEmpmc("");
			resultkeyinfo.add(keyinfo);
		}
		return resultkeyinfo;
	}

	 /**
	 * {@inheritDoc}
	 */
	public void updatemrhy(XWorkList temporaryinfos) {

		SessionManager session = new SessionManager();
		// 从session中得到登录者
		String attendEmpid = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getUserID();
		SimpleDateFormat nyr = new SimpleDateFormat("yyyy-MM-dd");
		SimpleDateFormat sfm = new SimpleDateFormat("HH:mm:ss");
		Date updatetime = new Date();
		try {
			for (int i = 0; i < temporaryinfos.size(); i++) {
				TabMrhycjz mrhycjz = new TabMrhycjz();
				TabMrhycjzPK mrhycjzpk = new TabMrhycjzPK();
				String key = (String) temporaryinfos.get(i);
				if (!"".equals(key)) {
					String[] keyinfos = key.split(",");
					mrhycjzpk.setHysid(Integer.parseInt(keyinfos[0]));
					mrhycjzpk.setHyrq(nyr.parse(keyinfos[1]));
					mrhycjzpk.setHykssj(sfm.parse(keyinfos[2]));
					mrhycjzpk.setCjzid(attendEmpid);
					mrhycjz.setId(mrhycjzpk);
					mrhycjz.setHzqr(1);
					mrhycjz.setUpdatetime(updatetime);
					// 更新每日会议参加者表
					affirmattendDaoImpl.update(mrhycjz);
				}
			}
		} catch (java.text.ParseException e) {
			e.printStackTrace();
		}
	}
}
