package com.ysys.www.hy.dao.condition.base;

import java.io.Serializable;


public abstract class BaseTabZqhyylPK implements Serializable {

	protected int hashCode = Integer.MIN_VALUE;

	private java.lang.Integer zqhyid;
	private java.lang.String zqnhyts;


	public BaseTabZqhyylPK () {}
	
	public BaseTabZqhyylPK (
		java.lang.Integer zqhyid,
		java.lang.String zqnhyts) {

		this.setZqhyid(zqhyid);
		this.setZqnhyts(zqnhyts);
	}


	/**
	 * Return the value associated with the column: ZQHYID
	 */
	public java.lang.Integer getZqhyid () {
		return zqhyid;
	}

	/**
	 * Set the value related to the column: ZQHYID
	 * @param zqhyid the ZQHYID value
	 */
	public void setZqhyid (java.lang.Integer zqhyid) {
		this.zqhyid = zqhyid;
	}



	/**
	 * Return the value associated with the column: ZQNHYTS
	 */
	public java.lang.String getZqnhyts () {
		return zqnhyts;
	}

	/**
	 * Set the value related to the column: ZQNHYTS
	 * @param zqnhyts the ZQNHYTS value
	 */
	public void setZqnhyts (java.lang.String zqnhyts) {
		this.zqnhyts = zqnhyts;
	}




	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof com.ysys.www.hy.dao.condition.TabZqhyylPK)) return false;
		else {
			com.ysys.www.hy.dao.condition.TabZqhyylPK mObj = (com.ysys.www.hy.dao.condition.TabZqhyylPK) obj;
			if (null != this.getZqhyid() && null != mObj.getZqhyid()) {
				if (!this.getZqhyid().equals(mObj.getZqhyid())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getZqnhyts() && null != mObj.getZqnhyts()) {
				if (!this.getZqnhyts().equals(mObj.getZqnhyts())) {
					return false;
				}
			}
			else {
				return false;
			}
			return true;
		}
	}

	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			StringBuilder sb = new StringBuilder();
			if (null != this.getZqhyid()) {
				sb.append(this.getZqhyid().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getZqnhyts()) {
				sb.append(this.getZqnhyts().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			this.hashCode = sb.toString().hashCode();
		}
		return this.hashCode;
	}


}