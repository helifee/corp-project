<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
    <bean id="bookManageServiceTarget" class="com.ysys.www.hy.serviceImpl.BookManageServiceImpl">
        <property name="bookDAO">
            <ref bean="bookDAO"/>
        </property>
    </bean>
    <bean id="loginServiceTarget" class="com.ysys.www.hy.serviceImpl.LoginServiceImpl">
        <property name="loginDAO">
            <ref bean="loginDAO"/>
        </property>
    </bean>
    <bean id="distributeServiceTarget" class="com.ysys.www.hy.serviceImpl.DistributeServiceImpl">
        <property name="distributeDAO">
            <ref bean="distributeDAO"/>
        </property>
    </bean>
     <bean id="conferensituationServiceTarget" class="com.ysys.www.hy.serviceImpl.ConferensituationServiceImpl">
        <property name="conferensituationDAO">
            <ref bean="conferensituationDAO"/>
        </property>
    </bean>
    <bean id="conferenceInitServiceTarget" class="com.ysys.www.hy.serviceImpl.ConferenceInitServiceImpl">
        <property name="hybaseDAO">
            <ref bean="hybaseDAO"/>
        </property>
    </bean>

	<bean id="groupmanageServiceTarget" class="com.ysys.www.hy.serviceImpl.GroupmanageServiceImpl">
        <property name="gpmanageDAO">
            <ref bean="gpmanageDAO"/>
        </property>
    </bean>


    <bean id="yuyueServiceTarget" class="com.ysys.www.hy.serviceImpl.YuyueServiceImpl">
        <property name="yuyueDAO">
            <ref bean="yuyueDAO"/>
        </property>
    </bean>


    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>
    <bean id="bookManageService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="bookManageServiceTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean> 
    <bean id="conferenceInitService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="conferenceInitServiceTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
    <bean id="groupmanageService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="groupmanageServiceTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
   
    <bean id="yuyueService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="yuyueServiceTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
    
    <bean id="distributeService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="distributeServiceTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
    
    <bean id="conferensituationService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="conferensituationServiceTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    
    <bean id="loginService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="loginServiceTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
	
	<!--scope="prototype" 会在该类型的对象被请求时创建一个新的action对象。
		如果没有配置scope=prototype则添加的时候不会新建一个action，仍然会保留上次访问的过记录的信息。 
        如果scope=prototype，每次从spring容器中获取bookAction的实例的时候就会new一个新对象，
		即我们所说的原型，spring中scope默认的是单态（singleton），针对web应用程序，还可以配置为request、session等范围。
		至于什么时候使用什么权限范围就要看应用程序的使用了-->
	<bean id="bookAction" scope="prototype" class="com.ysys.www.hy.action.BookAction">
        <property name="bookManageService">
            <ref bean="bookManageService"/>
        </property>
    </bean>    
    <bean id="hyinitAction" scope="prototype" class="com.ysys.www.hy.action.HyinitAction">
        <property name="conferenceInitService">
            <ref bean="conferenceInitService"/>
        </property>
    </bean>

    <bean id="yuyueAction" scope="prototype" class="com.ysys.www.hy.action.YuyueAction">
        <property name="yuyueService">
            <ref bean="yuyueService"/>
        </property>
    </bean>

    <bean id="conferensituationAction" scope="prototype" class="com.ysys.www.hy.action.ConferensituationAction">
        <property name="conferensituationService">
            <ref bean="conferensituationService"/>
        </property>
    </bean>
    <bean id="distributeAction" scope="prototype" class="com.ysys.www.hy.action.DistributeAction">
        <property name="distributeService">
            <ref bean="distributeService"/>
        </property>
    </bean>
   
    <bean id="distributeUpdateAction" scope="prototype" class="com.ysys.www.hy.action.DistributeUpdateAction">
        <property name="distributeService">
            <ref bean="distributeService"/>
        </property>
    </bean>
 
    <bean id="loginAction" scope="prototype" class="com.ysys.www.hy.action.LoginAction">
        <property name="loginService">
            <ref bean="loginService"/>
        </property>
    </bean>
	<bean id="AuthInterceptor" scope="prototype" class="com.ysys.www.hy.interceptor.AuthInterceptor">
	</bean>
	<bean id="reloginAction" scope="prototype" class="com.ysys.www.hy.action.LoginAction">
	</bean>
	<bean id="logoutAction" scope="prototype" class="com.ysys.www.hy.action.LoginAction">
	</bean>
	<bean id="hygroupmanageAction" scope="prototype" class="com.ysys.www.hy.action.HygroupmanageAction">
	    <property name="groupmanageService">
            <ref bean="groupmanageService"/>
        </property>
	</bean>


 </beans>