package com.ysys.www.hy.dao;

import java.util.List;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.ysys.www.hy.dao.condition.BookCondition;
import com.ysys.www.hy.dao.condition.TabZbyl;
import com.ysys.www.hy.dao.condition.Tempinfo;
import com.ysys.www.hy.service.common.CommonConstants;

public class GpmanageDAO extends HibernateDaoSupport {
    private static final Log log = LogFactory.getLog(GpmanageDAO.class);

    //组别一览信息
	@SuppressWarnings("unchecked")
	public List getzbyl(String jlzid, Integer adflg){
	    log.debug("Init");
	    try {
	    	String queryString = "";
	    	if(adflg == CommonConstants.ADMINISTRATOR){
		        queryString = "select zbyl.id, " +
        		" zbyl.zzwmc, " +
        		" zbyl.zbqf, " +
        		" ti.id, " +
        		" ti.empName " +
        		" from TabZbyl zbyl,TabZbcyyl zbcyyl, Tempinfo ti  " +
        		" where zbyl.id = zbcyyl.id.zbid" +
        		" and zbcyyl.id.zcyid = ti.id" +
        		" order by zbyl.id";
	    	}else{
		        queryString = "select zbyl.id, " +
        		" zbyl.zzwmc, " +
        		" zbyl.zbqf, " +
        		" ti.id, " +
        		" ti.empName " +
        		" from TabZbyl zbyl,TabZbcyyl zbcyyl, Tempinfo ti  " +
        		" where zbyl.id = zbcyyl.id.zbid" +
        		" and zbcyyl.id.zcyid = ti.id" +
        		" and zbyl.jlzid=" +
        		" '" + jlzid + "'" +
        		" order by zbyl.id";
	    	}
    		return getHibernateTemplate().find(queryString);
	} catch (RuntimeException re) {
	        log.error("find all failed", re);
	        throw re;
	    }
	}
	
	//项目组名字的取得
	@SuppressWarnings("unchecked")
	public List getpjzu(String jlzid, String nownyr, Integer adflg){
	    log.debug("Init");
	    try {
	    	String queryString = "";
	        if(adflg == CommonConstants.ADMINISTRATOR){
	        	queryString =	" select tm.id, tm.prjCname, ti.id, ti.empName" +
        		" from Tprjjion tj,Tprjmgrs tm, Tempinfo ti " +
        		" where tj.id.prjId = tm.id" +
        		" tj.id.prjEmpid = ti.id" +
        		" and tm.prjTbdate <= '" + nownyr +"'"+ 
        		" and ('" + nownyr +"' <= tm.prjTedate " +
        		" or tm.prjTedate = '"+CommonConstants.ENDNULL+"')" +
        		" order by tm.id";	
	        }else{
	        	queryString =	" select tm.id, tm.prjCname, ti.id, ti.empName" +
        		" from Tprjjion tj,Tprjmgrs tm, Tempinfo ti " +
        		" where tj.id.prjId = tm.id" +
        		" and tj.id.prjEmpid = ti.id" +
        		" and tm.prjTbdate <= '" + nownyr +"'"+ 
        		" and ('" + nownyr +"' <= tm.prjTedate " +
        		" or tm.prjTedate = '"+CommonConstants.ENDNULL+"')" +
        		" and tj.id.prjId in(" +
        		" select tjj.id.prjId" +
        		" from Tprjjion tjj " +
        		" where tjj.id.prjEmpid = '" + jlzid + "' )" +
        		" order by tm.id";	
	        }
    		return getHibernateTemplate().find(queryString);
	} catch (RuntimeException re) {
	        log.error("find all failed", re);
	        throw re;
	    }
	}
	
	//项目组名字的取得
	@SuppressWarnings("unchecked")
	public List getzjzu(String jlzid, Integer adflg){
	    log.debug("Init");
	    try {
	    	String queryString = "";
	        if(adflg == CommonConstants.ADMINISTRATOR){
	        	queryString = 
	        		" from TabZbyl tz" +
	        		" order by tz.id";
	        }else{
	        	queryString = 
	        		" from TabZbyl tz" +
	        		" where tz.jlzid = '" + jlzid +"'"+ 
	        		" order by tz.id";
	        }
    		return getHibernateTemplate().find(queryString);
	} catch (RuntimeException re) {
	        log.error("find all failed", re);
	        throw re;
	    }
	}
	
	//全员的取得
	@SuppressWarnings("unchecked")
	public List<Tempinfo> getqunyuan(){
	    log.debug("Init");
	    try {
	    	String queryString = 
	        		" from Tempinfo ti where ti.empFlag =0" +
	        		" order by ti.id";
	        return getHibernateTemplate().find(queryString);
	} catch (RuntimeException re) {
	        log.error("find all failed", re);
	        throw re;
	    }
	}
	

	public TabZbyl findById(String zbid) {
		log.debug("getting TabZbyl instance with zbid: " + zbid);
		try {
			TabZbyl instance = (TabZbyl) getHibernateTemplate()
					.get("com.ysys.www.hy.dao.condition.TabZbyl", Integer.parseInt(zbid));
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}
	
	public void updateZbyl(TabZbyl persistentInstance) {
		log.debug("updateing Zbyl instance");
		try {
			getHibernateTemplate().update(persistentInstance);
			log.debug("update successful");
		} catch (RuntimeException re) {
			log.error("update failed", re);
			throw re;
		}
	}
	
	public void deleteZbyl(TabZbyl persistentInstance) {
		log.debug("deleteing Zbyl instance");
		try {
			getHibernateTemplate().delete(persistentInstance);
			log.debug("delete successful");
		} catch (RuntimeException re) {
			log.error("delete failed", re);
			throw re;
		}
	}

}

