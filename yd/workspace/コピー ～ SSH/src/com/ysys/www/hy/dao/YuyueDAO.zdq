package com.ysys.www.hy.dao;

import java.util.Date;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.ysys.www.hy.dao.condition.TabHysyl;
import com.ysys.www.hy.dao.condition.TabMrhycjz;
import com.ysys.www.hy.dao.condition.TabMrhyyl;
import com.ysys.www.hy.dao.condition.TabZqhcjz;
import com.ysys.www.hy.dao.condition.TabZqhyyl;

public class YuyueDAO extends HibernateDaoSupport {

    private static final Log log = LogFactory.getLog(YuyueDAO.class);
	
    //save mrhyyl
    public void saveData(TabMrhyyl mrhyyl){
	    log.debug("save mrhyyl");
	    try {
	    	this.getHibernateTemplate().save(mrhyyl);
	    } catch (RuntimeException re) {
	        log.error("save failed", re);
	        throw re;
	    }
	}
    
    //save mrhyylcjz
    public void saveData(TabMrhycjz mrhycjz){
	    log.debug("save mrhyylcjz");
	    try {
	    	this.getHibernateTemplate().save(mrhycjz);
	    } catch (RuntimeException re) {
	        log.error("save failed", re);
	        throw re;
	    }
	}
    
    //save zqhyyl
    public void saveData(TabZqhyyl zqhyyl){
	    log.debug("save zqhyyl");
	    try {
	    	this.getHibernateTemplate().save(zqhyyl);
	    } catch (RuntimeException re) {
	        log.error("save failed", re);
	        throw re;
	    }
	}
    
    //save zqhcjz
    public void saveData(TabZqhcjz zqhcjz){
	    log.debug("save zqhyyl");
	    try {
	    	this.getHibernateTemplate().save(zqhcjz);
	    } catch (RuntimeException re) {
	        log.error("save failed", re);
	        throw re;
	    }
	}
    
    
    //检索所有会议室(初始化下拉列表)
    @SuppressWarnings("unchecked")
	public List<TabHysyl> getHysAll() {
        log.debug("select id name");
        try {
            String queryString = "from TabHysyl order by sortid";
            return getHibernateTemplate().find(queryString);
        } catch (RuntimeException re) {
            log.error("find all failed", re);
            throw re;
        }
    }
    
//    //取得TabMrhyyl的全部数据(冲突检查)////////////////////性能不好！！！
//    @SuppressWarnings("unchecked")
//	public List<TabMrhyyl> getMrhyylAll() {
//    	log.debug("get TabMrhyyl Data");
//    	try {
//    		String queryString = "from TabMrhyyl";
//    		return getHibernateTemplate().find(queryString);
//    	} catch (RuntimeException re) {
//    		log.error("find all failed", re);
//    		throw re;
//    	}
//    }
    
    //------------------ 冲突检查    当日 ----------------------//
    public long getMrhyylNumber(int hysid, Date start_date, Date start_time, Date end_time) {
    	
    	log.debug("find Mrhyyl crash yuyue number!");
    	try {
    		String hql = "select count(*) from TabMrhyyl as t where t.id.hysid = :hysid and t.id.hyrq = :start_date " +
    				"and ((:start_time < t.id.hykssj and :end_time > t.id.hykssj) " +
    				  "or (:start_time > t.id.hykssj and :start_time < t.hyjssj) " +
    				  "or (:start_time = t.id.hykssj))";
    		
    		String[] params = {"hysid", "start_date", "start_time", "end_time"};
    		
    		Object[] args = {hysid, start_date, start_time, end_time};
    		return (Long)this.getHibernateTemplate().findByNamedParam(hql, params, args).get(0);
    		
    	} catch (RuntimeException re) {
    		log.error("find Mrhyyl crash yuyue number failed!");
    		throw re;
    	}
    }
    
    //------------------ 冲突检查    每日----------------------//
    public long getMrhyylNumber(int hysid, Date start_date, Date end_date, Date start_time, Date end_time) {
    	
    	log.debug("find Mrhyyl crash yuyue number!");
    	try {
    		String hql = "select count(*) from TabMrhyyl as t where t.id.hysid = :hysid " +
    				"and (t.id.hyrq between :start_date and :end_date) " +
    				"and ((:start_time < t.id.hykssj and :end_time > t.id.hykssj) " +
    				  "or (:start_time > t.id.hykssj and :start_time < t.hyjssj) " +
    				  "or (:start_time = t.id.hykssj))";
    		
    		String[] params = {"hysid", "start_date", "end_date", "start_time", "end_time"};
    		
    		Object[] args = {hysid, start_date, end_date, start_time, end_time};
    		return (Long)this.getHibernateTemplate().findByNamedParam(hql, params, args).get(0);
    		
    	} catch (RuntimeException re) {
    		log.error("find Mrhyyl crash yuyue number failed!");
    		throw re;
    	}
    }
    
    //------------------ 冲突检查    每周/月 ----------------------//
    @SuppressWarnings("unchecked")
	public List<Date> getMrhyyl(int hysid, Date start_date, Date end_date, Date start_time, Date end_time) {
    	
    	log.debug("find Mrhyyl crash yuyue number!");
    	try {
    		String hql = "select t.id.hyrq from TabMrhyyl as t where t.id.hysid = :hysid " +
    				"and (t.id.hyrq between :start_date and :end_date) " +
    				"and ((:start_time < t.id.hykssj and :end_time > t.id.hykssj) " +
    				  "or (:start_time > t.id.hykssj and :start_time < t.hyjssj) " +
    				  "or (:start_time = t.id.hykssj))";
    		
    		String[] params = {"hysid", "start_date", "end_date", "start_time", "end_time"};
    		
    		Object[] args = {hysid, start_date, end_date, start_time, end_time};
    		return this.getHibernateTemplate().findByNamedParam(hql, params, args);
    		
    	} catch (RuntimeException re) {
    		log.error("find Mrhyyl crash yuyue number failed!");
    		throw re;
    	}
    }
    
//    @SuppressWarnings("unchecked")
//	public List<TabZqhyyl> getZqhyylAll() {
//    	log.debug("get TabZqhyyl Data");
//    	try {
//    		String queryString = "from TabZqhyyl";
//    		return getHibernateTemplate().find(queryString);
//    	} catch (RuntimeException re) {
//    		log.error("find all faild", re);
//    		throw re;
//    	}
//    }
//    
//    @SuppressWarnings("unchecked")
//	public List getZqhyylMax() {
//    	log.debug("get TabZqhyyl Max Data");
//    	try {
//    		String queryString = "select max(id.zqhyid) from TabZqhyyl";
//    		return getHibernateTemplate().find(queryString);
//    	} catch (RuntimeException re) {
//    		log.error("find all faild", re);
//    		throw re;
//    	}
//    }
    
    //取得TabZqhyyl中ID最大的值
    public Integer getZqhyylMax() {
    	log.debug("get TabZqhyyl Max Data");
    	try {
    		String queryString = "select max(id.zqhyid) from TabZqhyyl";
    		return (Integer) getHibernateTemplate().find(queryString).get(0);
    	} catch (RuntimeException re) {
    		log.error("find all faild", re);
    		throw re;
    	}
    }
    
    //按Key取得每日会议信息
    public TabMrhyyl getMrhyyl(int hysid, Date start_date, Date start_time) {
    	
        log.debug("select from TabMrhyyl");
        try {
            String hql = "from TabMrhyyl as t where t.id.hysid = :hysid and t.id.hyrq = :start_date " +
            					 "and t.id.hykssj = :start_time";
            
            String[] params = {"hysid", "start_date", "start_time"};
            
            Object[] args = {hysid, start_date, start_time};
            return (TabMrhyyl) getHibernateTemplate().findByNamedParam(hql, params, args).get(0);
        } catch (RuntimeException re) {
            log.error("find all failed", re);
            throw re;
        } 	
    	
    }
    
    //按时间段取得会议信息
    @SuppressWarnings("unchecked")
	public List<TabMrhyyl> getMrhyylList(int hysid, Date start_date, Date end_date, Date start_time) {
    	
    	log.debug("get mrhyyllist");
        try {
            String hql = "from TabMrhyyl as t where t.id.hysid = :hysid  and t.id.hykssj = :start_time " +
            		"and (t.id.hyrq between :start_date and :end_date)";
            
            String[] params = {"hysid", "start_date", "end_date", "start_time"};
            
            Object[] args = {hysid, start_date, end_date, start_time};
            return getHibernateTemplate().findByNamedParam(hql, params, args);
        } catch (RuntimeException re) {
            log.error("get mrhyyllist", re);
            throw re;
        } 	
    }
    
    //get sqr by id from Tempinfo
    public String getSqrName(String id) {
    	
        log.debug("select from Tempinfo");
        try {
            String hql = "select t.empName from Tempinfo as t where t.id = '" + id + "'";
            
            return (String) getHibernateTemplate().find(hql).get(0);
        } catch (RuntimeException re) {
            log.error("find all failed", re);
            throw re;
        } 		
    }
    
    //delete from TabMrhyyl, TabMrhycjz
    public void deleteMrhy(TabMrhyyl mrhyyl, List<TabMrhycjz> mrhycjz_list) {
    	log.debug("delete from TabMrhyyl");
    	try {
    		this.getHibernateTemplate().delete(mrhyyl);
    		this.getHibernateTemplate().deleteAll(mrhycjz_list);
    	} catch (RuntimeException re) {
    		log.error("delete error!", re);
    		throw re;
    	}
    }
    
    //delete from TabZqhyyl, TabZqhycjz
    public void deleteZqhy(List<TabZqhyyl> zqhyyl_list, List<TabZqhcjz> zqhycjz_list) {
    	log.debug("delete from TabMrhyyl");
    	try {
    		this.getHibernateTemplate().deleteAll(zqhyyl_list);
    		this.getHibernateTemplate().deleteAll(zqhycjz_list);
    	} catch (RuntimeException re) {
    		log.error("delete error!", re);
    		throw re;
    	}
    }
    
    //get mrhycjz
    @SuppressWarnings("unchecked")
	public List<TabMrhycjz> getMrhycjzList(Date start_date, Date start_time, int hysid) {
    	
        log.debug("select from TabMrhyyl");
        try {
            String hql = "from TabMrhycjz as t where t.id.hysid = :hysid and t.id.hyrq = :start_date " +
            					 "and t.id.hykssj = :start_time";
            
            String[] params = {"hysid", "start_date", "start_time"};
            
            Object[] args = {hysid, start_date, start_time};
            return this.getHibernateTemplate().findByNamedParam(hql, params, args);
        } catch (RuntimeException re) {
            log.error("find all failed", re);
            throw re;
        } 	
    }
    
    //get zqhy list
    @SuppressWarnings("unchecked")
	public List<TabZqhyyl> getZqhyList(int id) {

        log.debug("get zqhy by id!");
        try {
            String hql = "from TabZqhyyl as t where t.id.zqhyid = " + id;           
            return this.getHibernateTemplate().find(hql);
        } catch (RuntimeException re) {
            log.error("get zqhy by id failed", re);
            throw re;
        } 	

    }
    
    //get zqhycjz list
	@SuppressWarnings("unchecked")
	public List<TabZqhcjz> getZqhycjzList(int id) {

        log.debug("get zqhycjz by id!");
        try {
            String hql = "from TabZqhcjz as t where t.id.zqhyid = " + id;           
            return this.getHibernateTemplate().find(hql);
        } catch (RuntimeException re) {
            log.error("get zqhycjz by id failed", re);
            throw re;
        } 	

    }
}
