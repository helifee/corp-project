package com.ysys.www.hy.dao;

import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.text.SimpleDateFormat;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;
/*
 * 类名：会议室预约DB.
 * 功能：查询符合页面查询条件的记录。
 * 函数： findTabMrhyylByDr :查询条件为当日时的处理。
 *       findTabMrhyylByDz :查询条件为当周时的处理。
 *       findTabMrhyylByDy :查询条件为当月时的处理。
 *       findTabMrhyylByRq :查询条件为日期时的处理。
 *       findTabMrhycjz    :查询与每一条预约记录对应的未回执人员名单。
 *       findSumHzqr       :查询与每一条预约记录对应的已回执人员数目。
 *       findHysName       :查询会议室名称。
 * 作成者：冯亮
 * 作成日期：2009-07-23      
 */
public class ConferensituationDAO extends HibernateDaoSupport {
	
	private static final Log log = LogFactory.getLog(ConferensituationDAO.class);

/*
 * 查询条件为当日时的处理。
 */
	@SuppressWarnings("unchecked")
	public List findTabMrhyylByDr(String conferensituationId ) {
		log.debug("-----------------------------findTabMrhyyl---------------------------");
		String whereString = null;
		Date nowDate = new Date();
		whereString = " select t.id.hyrq , t.id.hykssj ,t.hyjssj  , t.id.hysid , t.hyzt , u.empName , t.cjzrs , t.zqhyqf "+
		              " from  TabMrhyyl t , Tempinfo u "+
                      " where t.id.hysid = :conferensituationId"+
					  "   and t.yyrid = u.id  "+
					  "   and t.id.hyrq = :nowdate" +
			          " order by t.id.hyrq , t.id.hykssj";
		String[] params   = {"conferensituationId" , "nowdate"};
		Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
		Object[] args  ={conferensituationIdInteger , nowDate};    
	    try {
		     log.debug("HQL:" + whereString);			 
		     return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
	    } catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	
	}
/*
 * 查询条件为当周时的处理。
 */
	@SuppressWarnings("unchecked")
	public List findTabMrhyylByDz(String conferensituationId ) {
		log.debug("-----------------------------findTabMrhyyl---------------------------");
		String whereString = null;
		Date nowDate = new Date();
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(nowDate);
		SimpleDateFormat matter = new SimpleDateFormat("yyyy-MM-dd");
		Integer weekdayInteger=  calendar.get(Calendar.DAY_OF_WEEK)-1;
		Integer datesum = -(weekdayInteger-1);
		calendar.add(Calendar.DAY_OF_MONTH, datesum);	//使日历翻一页
        String weekDate1 =    matter.format(calendar.getTime()) ;
        calendar.add(Calendar.DAY_OF_MONTH, 1);
        String weekDate2 = matter.format(calendar.getTime());
		calendar.add(Calendar.DAY_OF_MONTH, 1);
		String weekDate3 =  matter.format(calendar.getTime());
		calendar.add(Calendar.DAY_OF_MONTH, 1);
		String weekDate4 =  matter.format(calendar.getTime());
		calendar.add(Calendar.DAY_OF_MONTH, 1);
		String weekDate5 =  matter.format(calendar.getTime());
		calendar.add(Calendar.DAY_OF_MONTH, 1);
		String weekDate6 =  matter.format(calendar.getTime());
		calendar.add(Calendar.DAY_OF_MONTH, 1);
		String weekDate7 =  matter.format(calendar.getTime());
		
		String dateOfMonDayToSunDayOfCurrentWeek = "'"+weekDate1+"' , '"+weekDate2+"' , '"+weekDate3+"' , '"+weekDate4+"' , '"
                                                      +weekDate5+"' , '"+weekDate6+"' , '"+weekDate7+"'  ";
		whereString = " select t.id.hyrq , t.id.hykssj ,t.hyjssj  , t.id.hysid , t.hyzt , u.empName , t.cjzrs , t.zqhyqf "+
		              " from  TabMrhyyl t , Tempinfo u "+
		              " where t.id.hysid = "+conferensituationId+
					  "   and t.yyrid = u.id  "+
					  "   and t.id.hyrq in ("+dateOfMonDayToSunDayOfCurrentWeek +")"+				 
			          " order by t.id.hyrq , t.id.hykssj";

	    try {
		     log.debug("HQL:" + whereString);			   
		     return (getHibernateTemplate().find(whereString));
	    } catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	
	}
/*
 * 查询条件为当月时的处理。
 */
	@SuppressWarnings("unchecked")
	public List findTabMrhyylByDy(String conferensituationId ) {
		log.debug("-----------------------------findTabMrhyyl---------------------------");
		String whereString = null;		
		Date nowDate = new Date();
		Calendar calendar = Calendar.getInstance();	
		calendar.setTime(nowDate);
		Integer yearInteger = calendar.get(Calendar.YEAR);
		Integer monthInteger = calendar.get(Calendar.MONTH)+1;
		whereString = " select t.id.hyrq , t.id.hykssj ,t.hyjssj  , t.id.hysid , t.hyzt , u.empName , t.cjzrs , t.zqhyqf "+
		              " from  TabMrhyyl t , Tempinfo u "+
                      " where t.id.hysid = :conferensituationId"+
					  "   and t.yyrid = u.id  "+
					  "   and year(t.id.hyrq) = :yearInteger" +
					  "   and month(t.id.hyrq) = :monthInteger" +
			          " order by t.id.hyrq , t.id.hykssj";
		String[] params   = {"conferensituationId" , "yearInteger" , "monthInteger"};
		Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
		Object[] args  ={conferensituationIdInteger , yearInteger , monthInteger};    
	    try {
		     log.debug("HQL:" + whereString);			 
		     return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
	    } catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}	
	}
/*
 * 查询条件为日期时的处理。
 */
	@SuppressWarnings("unchecked")
	public List findTabMrhyylByRq(String conferensituationId , Date startInputDate , Date endInputDate) {
		log.debug("-----------------------------findTabMrhyyl---------------------------");
		List listReturn=null;
		String whereString = null;

		//如果日期查询条件的开始日期和结束日期都不为空时的处理。
		if(startInputDate != null && endInputDate!=null){           
            whereString = " select t.id.hyrq , t.id.hykssj ,t.hyjssj  , t.id.hysid , t.hyzt , u.empName , t.cjzrs , t.zqhyqf "+
                          " from  TabMrhyyl t , Tempinfo u  "+
                          " where t.id.hysid = :conferensituationId "+
			              "   and t.yyrid = u.id  "+
			              "   and t.id.hyrq >= :startDate " +
			              "   and t.id.hyrq <= :endDate " +
	                      " order by t.id.hyrq , t.id.hykssj ";
            String[] params   = {"conferensituationId" , "startDate" , "endDate"};
            Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
            Object[] args  ={conferensituationIdInteger , startInputDate , endInputDate};    
            try {
                log.debug("HQL:" + whereString);			 
                return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
            } catch (RuntimeException re) {
	          log.error("find all failed", re);
	          throw re;
            }
	    } 
		
		//如果日期查询条件的开始日期不为空和结束日期为空时的处理。
		if(startInputDate != null && endInputDate == null){			 
	            whereString = " select t.id.hyrq , t.id.hykssj ,t.hyjssj  , t.id.hysid , t.hyzt , u.empName , t.cjzrs , t.zqhyqf "+
	                          " from  TabMrhyyl t , Tempinfo u  "+
	                          " where t.id.hysid = :conferensituationId "+
				              "   and t.yyrid = u.id  "+
				              "   and t.id.hyrq >= :startDate " +				              
		                      " order by t.id.hyrq , t.id.hykssj ";
	            String[] params   = {"conferensituationId" , "startDate" };
	            Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
	            Object[] args  ={conferensituationIdInteger , startInputDate };    
	            try {
	                log.debug("HQL:" + whereString);			 
	                return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
	            } catch (RuntimeException re) {
		          log.error("find all failed", re);
		          throw re;
	            }
		}
		
		//如果日期查询条件的开始日期为空和结束日期不为空时的处理。
		if( startInputDate == null && endInputDate !=null){          
            whereString = " select t.id.hyrq , t.id.hykssj ,t.hyjssj  , t.id.hysid , t.hyzt , u.empName , t.cjzrs , t.zqhyqf "+
                          " from  TabMrhyyl t , Tempinfo u  "+
                          " where t.id.hysid = :conferensituationId "+
                          "   and t.yyrid = u.id  "+                          
                          "   and t.id.hyrq <= :endDate " +
                          " order by t.id.hyrq , t.id.hykssj ";           
           String[] params   = {"conferensituationId" ,  "endDate"};
           Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
           Object[] args  ={conferensituationIdInteger ,  endInputDate};    
           try {
               log.debug("HQL:" + whereString);			 
               return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
           } catch (RuntimeException re) {
               log.error("find all failed", re);
                throw re;
           }
		}
		
		//如果日期查询条件的开始日期和结束日期都为空时的处理。
		if(startInputDate == null && endInputDate == null){            
            whereString = " select t.id.hyrq , t.id.hykssj ,t.hyjssj  , t.id.hysid , t.hyzt , u.empName , t.cjzrs , t.zqhyqf "+
                          " from  TabMrhyyl t , Tempinfo u  "+
                          " where t.id.hysid = "+conferensituationId +
                          "   and t.yyrid = u.id  "+                         
                          " order by t.id.hyrq , t.id.hykssj ";
            try {
                log.debug("HQL:" + whereString);			 
                return (getHibernateTemplate().find(whereString));
            } catch (RuntimeException re) {
                log.error("find all failed", re);
                throw re;
            }
		}
		return listReturn;
	}

	
	
/*
 * 查询与每条预约记录对应的未回执者的参加人名单。
 */
	@SuppressWarnings("unchecked")
	public List findTabMrhycjz(String conferensituationId,
			String radiobuttonString, Date startInputDate,
			Date endInputDate) {
		log.debug("-----------------------------findTabMrhycjz-----------------------------------");
		
		String whereString = null;		
        List listReturn = null;
		
		// 查询条件为当日查询时的处理。
		if (radiobuttonString.equals("dr")) {			
   		    Date nowDate = new Date();
			whereString = " select t.id.hyrq , t.id.hykssj , t.id.hysid , t.id.cjzid , u.empName"+
			              " from  TabMrhycjz t , Tempinfo u "+
	                      " where t.id.hysid = :conferensituationId"+
						  "   and t.id.cjzid = u.id  "+
						  "   and t.id.hyrq = :nowdate" +
						  "   and t.hzqr = 0 " +
				          " order by t.id.hyrq , t.id.hykssj";
			String[] params   = {"conferensituationId" , "nowdate"};
			Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
			Object[] args  ={conferensituationIdInteger , nowDate};    
		    try {
			     log.debug("HQL:" + whereString);			 
			     return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
		    } catch (RuntimeException re) {
				log.error("find all failed", re);
				throw re;
			}
		}
		
		// 查询条件为当周查询时的处理。
		if (radiobuttonString.equals("dz")) {			
			Date nowDate = new Date();
			Calendar calendar = Calendar.getInstance();
			calendar.setTime(nowDate);
			SimpleDateFormat matter = new SimpleDateFormat("yyyy-MM-dd");
			Integer weekdayInteger=  calendar.get(Calendar.DAY_OF_WEEK)-1;
			Integer datesum = -(weekdayInteger-1);
			calendar.add(Calendar.DAY_OF_MONTH, datesum);	//使日历翻一页
	        String weekDate1 =    matter.format(calendar.getTime()) ;
	        calendar.add(Calendar.DAY_OF_MONTH, 1);
	        String weekDate2 = matter.format(calendar.getTime());
			calendar.add(Calendar.DAY_OF_MONTH, 1);
			String weekDate3 =  matter.format(calendar.getTime());
			calendar.add(Calendar.DAY_OF_MONTH, 1);
			String weekDate4 =  matter.format(calendar.getTime());
			calendar.add(Calendar.DAY_OF_MONTH, 1);
			String weekDate5 =  matter.format(calendar.getTime());
			calendar.add(Calendar.DAY_OF_MONTH, 1);
			String weekDate6 =  matter.format(calendar.getTime());
			calendar.add(Calendar.DAY_OF_MONTH, 1);
			String weekDate7 =  matter.format(calendar.getTime());			
			String dateOfMonDayToSunDayOfCurrentWeek = "'"+weekDate1+"' , '"+weekDate2+"' , '"+weekDate3+"' , '"+weekDate4+"' , '"
	                                                      +weekDate5+"' , '"+weekDate6+"' , '"+weekDate7+"'  ";		
			whereString = " select t.id.hyrq , t.id.hykssj , t.id.hysid , t.id.cjzid , u.empName "+
			              " from   TabMrhycjz t , Tempinfo u "+
			              " where  t.id.hysid = "+conferensituationId+
			              "  and   t.hzqr = 0 "+
						  "  and   t.id.cjzid = u.id  "+
						  "  and   t.id.hyrq in ("+dateOfMonDayToSunDayOfCurrentWeek +")"+				 
				          " order by t.id.hyrq , t.id.hykssj";
		    try {
			     log.debug("HQL:" + whereString);			   
			     return (getHibernateTemplate().find(whereString));
		    } catch (RuntimeException re) {
				log.error("find all failed", re);
				throw re;
			}
		}
		
		// 查询条件为当月查询时的处理。
		if (radiobuttonString.equals("dy")) {
			Date nowDate = new Date();
			Calendar calendar = Calendar.getInstance();	
			calendar.setTime(nowDate);
			Integer yearInteger = calendar.get(Calendar.YEAR);
			Integer monthInteger = calendar.get(Calendar.MONTH)+1;
			//HQL语句作成。
			whereString = " select t.id.hyrq , t.id.hykssj , t.id.hysid , t.id.cjzid , u.empName "+
			              " from TabMrhycjz t , Tempinfo u "+
	                      " where t.id.hysid = :conferensituationId"+
						  "  and t.id.cjzid = u.id  "+
						  "  and t.hzqr = 0 "+
						  "  and year(t.id.hyrq) = :yearInteger" +
						  "  and month(t.id.hyrq) = :monthInteger" +
				          " order by t.id.hyrq , t.id.hykssj ";
			String[] params   = {"conferensituationId" , "yearInteger" , "monthInteger"};
			Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
			Object[] args  ={conferensituationIdInteger , yearInteger , monthInteger};    
		    try {
			     log.debug("HQL:" + whereString);			 
			     return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
		    } catch (RuntimeException re) {
				log.error("find all failed", re);
				throw re;
			}
		}

		// 查询条件为日期查询时的处理。
		if (radiobuttonString.equals("rq")) {
			if(startInputDate != null && endInputDate!=null){
	            whereString = " select t.id.hyrq , t.id.hykssj , t.id.hysid , t.id.cjzid , u.empName  "+
	                          " from   TabMrhycjz t , Tempinfo u  "+
	                          " where t.id.hysid = :conferensituationId "+
				              "  and t.id.cjzid = u.id  "+
				              "  and t.hzqr = 0" +
				              "  and t.id.hyrq >= :startDate " +
				              "  and t.id.hyrq <= :endDate " +
		                      " order by t.id.hyrq , t.id.hykssj ";
	            String[] params   = {"conferensituationId" , "startDate" , "endDate"};
	            Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
	            Object[] args  ={conferensituationIdInteger , startInputDate , endInputDate};    
	            try {
	                log.debug("HQL:" + whereString);			 
	                return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
	            } catch (RuntimeException re) {
		          log.error("find all failed", re);
		          throw re;
	            }
		    } 
			
		//如果日期查询条件的开始日期不为空和结束日期为空时的处理。
		if(startInputDate != null && endInputDate == null){		
		     whereString = " select t.id.hyrq , t.id.hykssj , t.id.hysid , t.id.cjzid , u.empName "+
		                   " from  TabMrhycjz t , Tempinfo u  "+
		                   " where t.id.hysid = :conferensituationId "+
					       "  and t.id.cjzid = u.id  "+
					       "  and t.hzqr = 0" +
					       "  and t.id.hyrq >= :startDate " +				              
			               " order by t.id.hyrq , t.id.hykssj ";
		    String[] params   = {"conferensituationId" , "startDate" };
		    Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
		    Object[] args  ={conferensituationIdInteger , startInputDate };    
		    try {
		        log.debug("HQL:" + whereString);			 
		        return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
		    } catch (RuntimeException re) {
			    log.error("find all failed", re);
			    throw re;
		    }
		}
			
	    //如果日期查询条件的开始日期为空和结束日期不为空时的处理。
		if( startInputDate == null && endInputDate !=null){		
	        whereString = " select t.id.hyrq , t.id.hykssj , t.id.hysid , t.id.cjzid , u.empName  "+
	                      " from   TabMrhycjz t , Tempinfo u  "+
	                      " where t.id.hysid = :conferensituationId "+
	                      "  and t.id.cjzid = u.id  "+  
	                      "  and t.hzqr = 0" +
	                      "  and t.id.hyrq <= :endDate " +
	                      " order by t.id.hyrq , t.id.hykssj ";
	           
	        String[] params   = {"conferensituationId" ,  "endDate"};
	        Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
	        Object[] args  ={conferensituationIdInteger ,  endInputDate};    
	        try {
	            log.debug("HQL:" + whereString);			 
	            return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
	        } catch (RuntimeException re) {
	            log.error("find all failed", re);
	            throw re;
	        }
		}
			
	    //如果日期查询条件的开始日期和结束日期都为空时的处理。
	   if(startInputDate == null && endInputDate == null){				
	       whereString = " select t.id.hyrq , t.id.hykssj , t.id.hysid , t.id.cjzid , u.empName "+
	                     " from  TabMrhycjz t , Tempinfo u   "+
	                     " where t.id.hysid = "+conferensituationId +
	                     "   and t.id.cjzid = u.id  "+   
	                     "   and t.hzqr = 0" +
	                     " order by t.id.hyrq , t.id.hykssj ";
	       try {
	            log.debug("HQL:" + whereString);			 
	            return (getHibernateTemplate().find(whereString));
	       } catch (RuntimeException re) {
	            log.error("find all failed", re);
	            throw re;
	       }
		}
	}
		return listReturn  ;	
}
	
	
	
/*
 * 查询与每条预约记录对应的已回执参加者的数目。
 */	
	@SuppressWarnings("unchecked")
	public List findSumHzqr(String conferensituationId,
			String radiobuttonString, Date startInputDate,
			Date endInputDate) {
		log.debug("-----------------------------findSumHzqr-----------------------------------");
        String whereString = null;
		List listReturn=null;
		
     // 查询条件为当日查询时的处理。
		if (radiobuttonString.equals("dr")) {
			Date nowDate = new Date();
			whereString = " select t.id.hyrq , t.id.hykssj , SUM(t.hzqr)as SmHzqr "+
			              " from  TabMrhycjz t "+
	                      " where t.id.hysid = :conferensituationId"+						 
						  "  and  t.id.hyrq = :nowdate" +
						  " group by t.id.hyrq , t.id.hykssj  " +
				          " order by t.id.hyrq , t.id.hykssj";
			String[] params   = {"conferensituationId" , "nowdate"};
			Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
			Object[] args  ={conferensituationIdInteger , nowDate};    
		    try {
			     log.debug("HQL:" + whereString);			 
			     return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
		    } catch (RuntimeException re) {
				log.error("find all failed", re);
				throw re;
			}		
		}
        
       // 查询条件为当周查询时的处理。
		if (radiobuttonString.equals("dz")) {
			//取得当前周的从星期一到星期日的每一天的日期。
			Date nowDate = new Date();
			Calendar calendar = Calendar.getInstance();
			calendar.setTime(nowDate);
			SimpleDateFormat matter = new SimpleDateFormat("yyyy-MM-dd");
			Integer weekdayInteger=  calendar.get(Calendar.DAY_OF_WEEK)-1;
			Integer datesum = -(weekdayInteger-1);
			calendar.add(Calendar.DAY_OF_MONTH, datesum);	//使日历翻一页
	        String weekDate1 =    matter.format(calendar.getTime()) ;
	        calendar.add(Calendar.DAY_OF_MONTH, 1);
	        String weekDate2 = matter.format(calendar.getTime());
			calendar.add(Calendar.DAY_OF_MONTH, 1);
			String weekDate3 =  matter.format(calendar.getTime());
			calendar.add(Calendar.DAY_OF_MONTH, 1);
			String weekDate4 =  matter.format(calendar.getTime());
			calendar.add(Calendar.DAY_OF_MONTH, 1);
			String weekDate5 =  matter.format(calendar.getTime());
			calendar.add(Calendar.DAY_OF_MONTH, 1);
			String weekDate6 =  matter.format(calendar.getTime());
			calendar.add(Calendar.DAY_OF_MONTH, 1);
			String weekDate7 =  matter.format(calendar.getTime());			
			String dateOfMonDayToSunDayOfCurrentWeek = "'"+weekDate1+"' , '"+weekDate2+"' , '"+weekDate3+"' , '"+weekDate4+"' , '"
	                                                      +weekDate5+"' , '"+weekDate6+"' , '"+weekDate7+"'  ";
			whereString = " select t.id.hyrq , t.id.hykssj , SUM(t.hzqr)as SmHzqr"+
			              " from  TabMrhycjz t "+
			              " where  t.id.hysid = "+conferensituationId+	
						  "  and   t.id.hyrq in ("+dateOfMonDayToSunDayOfCurrentWeek +")"+	
						  " group by t.id.hyrq , t.id.hykssj  "+ 
				          " order by t.id.hyrq , t.id.hykssj";
		    try {
			     log.debug("HQL:" + whereString);			   
			     return (getHibernateTemplate().find(whereString));
		    } catch (RuntimeException re) {
				log.error("find all failed", re);
				throw re;
			}		
		}

		// 查询条件为当月查询时的处理。
		if (radiobuttonString.equals("dy")) {		
			Date nowDate = new Date();
			Calendar calendar = Calendar.getInstance();
			calendar.setTime(nowDate);
			Integer yearInteger = calendar.get(Calendar.YEAR);
			Integer monthInteger = calendar.get(Calendar.MONTH)+1;
			whereString = " select t.id.hyrq , t.id.hykssj , SUM(t.hzqr)as SmHzqr"+
			              " from  TabMrhycjz t "+
	                      " where t.id.hysid = :conferensituationId"+		 
						  "  and  year(t.id.hyrq) = :yearInteger" +
						  "  and  month(t.id.hyrq) = :monthInteger" +
						  " group by t.id.hyrq , t.id.hykssj  "+
				          " order by t.id.hyrq , t.id.hykssj";
			String[] params   = {"conferensituationId" , "yearInteger" , "monthInteger"};
			Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
			Object[] args  ={conferensituationIdInteger , yearInteger , monthInteger};    
		    try {
			     log.debug("HQL:" + whereString);			 
			     return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
		    } catch (RuntimeException re) {
				log.error("find all failed", re);
				throw re;
			}
		}

		// 查询条件为日期查询时的处理。
		if (radiobuttonString.equals("rq")) {			
			//如果日期查询条件的开始日期和结束日期都不为空时的处理。
			if(startInputDate != null && endInputDate!=null){
	            whereString = " select t.id.hyrq , t.id.hykssj , SUM(t.hzqr)as SmHzqr"+
	                          " from  TabMrhycjz t  "+
	                          " where t.id.hysid = :conferensituationId "+				           
				              "  and  t.id.hyrq >= :startDate " +
				              "  and  t.id.hyrq <= :endDate " +
				              " group by t.id.hyrq , t.id.hykssj  "+
		                      " order by t.id.hyrq , t.id.hykssj ";
	            String[] params   = {"conferensituationId" , "startDate" , "endDate"};
	            Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
	            Object[] args  ={conferensituationIdInteger , startInputDate , endInputDate};    
	            try {
	                log.debug("HQL:" + whereString);			 
	                return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
	            } catch (RuntimeException re) {
		          log.error("find all failed", re);
		          throw re;
	            }
		    } 			
			//如果日期查询条件的开始日期不为空和结束日期为空时的处理。
			if(startInputDate != null && endInputDate == null){
		        whereString = " select t.id.hyrq , t.id.hykssj , SUM(t.hzqr)as SmHzqr"+
		                      " from  TabMrhycjz t  "+
		                      " where t.id.hysid = :conferensituationId "+  
					          "  and  t.id.hyrq >= :startDate " +	
					          " group by t.id.hyrq , t.id.hykssj  "+
			                  " order by t.id.hyrq , t.id.hykssj ";
		        String[] params   = {"conferensituationId" , "startDate" };
		        Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
		        Object[] args  ={conferensituationIdInteger , startInputDate };    
		        try {
		             log.debug("HQL:" + whereString);			 
		             return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
		        } catch (RuntimeException re) {
			         log.error("find all failed", re);
			         throw re;
		        }
			}			
			//如果日期查询条件的开始日期为空和结束日期不为空时的处理。
			if( startInputDate == null && endInputDate !=null){
	            whereString = " select t.id.hyrq , t.id.hykssj , SUM(t.hzqr)as SmHzqr  "+
	                          " from  TabMrhycjz t  "+
	                          " where t.id.hysid = :conferensituationId "+                             
	                          "  and  t.id.hyrq <= :endDate " +
	                          " group by t.id.hyrq , t.id.hykssj  "+
	                          " order by t.id.hyrq , t.id.hykssj ";	           
	           String[] params   = {"conferensituationId" ,  "endDate"};
	           Integer conferensituationIdInteger = Integer.parseInt(conferensituationId);
	           Object[] args  ={conferensituationIdInteger ,  endInputDate};    
	           try {
	               log.debug("HQL:" + whereString);			 
	               return (getHibernateTemplate()).findByNamedParam(whereString, params, args);       
	           } catch (RuntimeException re) {
	               log.error("find all failed", re);
	                throw re;
	           }
			}			
			//如果日期查询条件的开始日期和结束日期都为空时的处理。
			if(startInputDate == null && endInputDate == null){
	            whereString = " select t.id.hyrq , t.id.hykssj , SUM(t.hzqr)as SmHzqr "+
	                          " from  TabMrhycjz t "+
	                          " where t.id.hysid = "+conferensituationId +
	                          " group by t.id.hyrq , t.id.hykssj  "+                     
	                          " order by t.id.hyrq , t.id.hykssj ";
	            try {
	                log.debug("HQL:" + whereString);			 
	                return (getHibernateTemplate().find(whereString));
	            } catch (RuntimeException re) {
	                log.error("find all failed", re);
	                throw re;
	            }
			}
		 }
	return listReturn ;
	}

	
	
/*
 * 取得当前会议室名称	。
 */
	@SuppressWarnings("unchecked")
	public List findHysName(String conferensituationId) {
		log.debug("-----------------------------findHysName-----------------------------------");
		try {
			String queryString = "select t.hysmc " + "from  TabHysyl t "
					+ "where t.id = " + conferensituationId + "order by t.id  ";

			log.debug("HQL:" + queryString);
			return (getHibernateTemplate().find(queryString));
		} catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	}
}
