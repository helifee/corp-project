/*
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: SOOHAI
 *    SubSystem: 海景楼盘网
 */
package com.soohai.www.action;

import java.io.IOException;
import java.util.List;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.util.XWorkList;

import com.soohai.www.dao.condition.BuildingInfo;
import com.soohai.www.dao.condition.BuildingKey;

import com.soohai.www.service.BuildedService;
import com.soohai.www.service.common.CommonConstants;
import com.soohai.www.service.common.SessionManager;
import com.soohai.www.service.common.UserInfo;

/**
 * 楼盘信息一览处理
 * 
 * @author 远东)wangqingzhu
 * @version 1.00 2009/10/26
 */
public class BuildedylAction extends ActionSupport {

	private static final long serialVersionUID = -118833272655612789L;
	private BuildedService buildedService;
	private List<BuildingInfo> buildinginfos;
	private List<BuildingKey> temporaryinfoslist;
	private XWorkList temporaryinfos;
	private int buildId;

	/**
	 * 画面的初期显示
	 * 
	 * @return SUCCESS
	 */
	@Override
	public String execute() throws Exception {

		SessionManager session = new SessionManager();

		String glyid = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getJobId();
		// 取得楼盘信息
		this.buildinginfos = buildedService.getbuildingyl(glyid);
		temporaryinfoslist = buildedService.getkeyinfo();
		return SUCCESS;
	}

	/**
	 * 删除楼盘信息
	 * 
	 * @return SUCCESS
	 */
	public String buildingdel() {
		buildedService.buildingdel(buildId);

		SessionManager session = new SessionManager();
		// 从session中得到职务ID
		String glyId = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getJobId();
		this.buildinginfos = buildedService.getbuildingyl(glyId);
		return SUCCESS;
	}

	/**
	 * 通过楼盘ID生成静态页面
	 * 
	 * @return SUCCESS
	 */
	public String makedat() {

		int flag = 0;
		int buildId1 = 0;
		int buildId2 = 0;
		int oldbuildId1 = 0; 

		if (temporaryinfos.size() > 0) {
			for (int i = 0; i < temporaryinfos.size(); i++) {
				buildId1 = Integer.parseInt((String)temporaryinfos.get(i));

				if(i+1 != temporaryinfos.size()){
					buildId2 = Integer.parseInt((String)temporaryinfos.get(i+1));
				}else{
					buildId2 = Integer.parseInt((String)temporaryinfos.get(i));
				}

				if (buildId1 == buildId2 || buildId1 + 1 < buildId2){
					if(flag == 1){
						makedatrun(oldbuildId1, buildId1);
						flag = 0;
					}else{
						makedatrun(buildId1, buildId1);	
					}
				}else{	
					if(flag == 0){
						oldbuildId1 = buildId1;
					}
					flag = 1;
				}
			}
		}

		return SUCCESS;
	}
	
	/**
	 * 生成静态页面
	 */
	private void makedatrun(int buildId1, int buildId2){

		String cmd = "cmd /c start D:\\mf.bat " + buildId1 + " "
				+ buildId2;
		Runtime rt = Runtime.getRuntime();
		try {
			Process p = rt.exec(cmd);
		} catch (IOException e) {

			e.printStackTrace();
		}
	}
	

	/**
	 * @return the buildedService
	 */
	public BuildedService getBuildedService() {
		return buildedService;
	}

	/**
	 * @param buildedService
	 *            the buildedService to set
	 */
	public void setBuildedService(BuildedService buildedService) {
		this.buildedService = buildedService;
	}

	/**
	 * @return the buildinginfos
	 */
	public List<BuildingInfo> getBuildinginfos() {
		return buildinginfos;
	}

	/**
	 * @param buildinginfos
	 *            the buildinginfos to set
	 */
	public void setBuildinginfos(List<BuildingInfo> buildinginfos) {
		this.buildinginfos = buildinginfos;
	}

	/**
	 * @return the buildId
	 */
	public int getBuildId() {
		return buildId;
	}

	/**
	 * @param buildId
	 *            the buildId to set
	 */
	public void setBuildId(int buildId) {
		this.buildId = buildId;
	}

	/**
	 * @return the temporaryinfoslist
	 */
	public List getTemporaryinfoslist() {
		return temporaryinfoslist;
	}

	/**
	 * @param temporaryinfoslist
	 *            the temporaryinfoslist to set
	 */
	public void setTemporaryinfoslist(List temporaryinfoslist) {
		this.temporaryinfoslist = temporaryinfoslist;
	}

	/**
	 * @return the temporaryinfos
	 */
	public XWorkList getTemporaryinfos() {
		return temporaryinfos;
	}

	/**
	 * @param temporaryinfos
	 *            the temporaryinfos to set
	 */
	public void setTemporaryinfos(XWorkList temporaryinfos) {
		this.temporaryinfos = temporaryinfos;
	}

}
