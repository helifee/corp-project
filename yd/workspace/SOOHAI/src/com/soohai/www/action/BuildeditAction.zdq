/*
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: SOOHAI
 *    SubSystem: 海景楼盘网
 */
package com.soohai.www.action;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletContext;
import org.apache.struts2.ServletActionContext;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.Preparable;

import com.soohai.www.dao.condition.BuildingInfo;
import com.soohai.www.dao.condition.Mcity;
import com.soohai.www.dao.condition.Mdistrict;

import com.soohai.www.service.BuildedService;

/**
 * 楼盘信息编辑处理(Action请求)
 * 
 * @author 远东)wangqingzhu
 * @version 1.00 2009/10/22
 */
public class BuildeditAction extends ActionSupport implements Preparable {

	private static final long serialVersionUID = -118833272655612789L;
	private BuildedService buildedService;
	private List<Mcity> citylist;
	private List<Mdistrict> districtlist;
	private BuildingInfo buildinginfos;
	private String cityId;
	private int buildId;
	private boolean baomiFag;
	private boolean flag;

	private File myFile; // 代表上传文件的File对象
	private String myFileFileName; // 上传文件名
	private String myFileContentType; // 上传文件的MIME类型
	private String imageFileName;
	private ServletContext servletContext;

	/**
	 * 画面的初期显示
	 * 
	 * @return SUCCESS
	 */
	@Override
	public String execute() throws Exception {

		// 有城市时
		if (citylist.size() != 0) {
			// 城市id不为null，取得对应的区信息
			if (cityId != null) {
				this.districtlist = buildedService.getmdistrictnm(cityId);
			} else {
				// 城市id为null，取得第一个城市的区信息
				this.districtlist = buildedService.getmdistrictnm(citylist.get(
						0).getCityId());
			}

		}

		// 修改时的画面初始化
		if (buildId != 0) {
			buildinginfos = buildedService.getbuildinginfo(buildId);

			if (1 == buildinginfos.getFlag()) {
				baomiFag = false;
			} else {
				baomiFag = true;
			}
			imageFileName = buildinginfos.getImagePath();
			buildinginfos.setBuildId(buildId);
		}
		return SUCCESS;
	}

	/**
	 * 城市名变化，区名也变化
	 * 
	 * @return SUCCESS
	 */
	public String getnewmdnm() throws Exception {
		this.districtlist = buildedService.getmdistrictnm(cityId);
		return SUCCESS;
	}

	/**
	 * 楼盘信息的添加
	 * 
	 * @return SUCCESS
	 */

	public String buildedit() throws Exception {

		// 上传文件的保存
		if (myFile != null) {
			// attachment will be null if there's an error,
			// such as if the uploaded file is too large
			imageFileName = new Date().getTime() + getExtention(myFileFileName);
			ServletContext servletContext = ServletActionContext
					.getServletContext();
			String dataDir = servletContext.getRealPath("/images");
			File savedFile = new File(dataDir, imageFileName);
			myFile.renameTo(savedFile);
			buildinginfos.setImagePath(imageFileName);
		}

		// 楼盘信息不为null，添加或者修改楼盘信息
		if (buildinginfos != null) {
			if (flag == false) {
				buildinginfos.setFlag(1);
			} else {
				buildinginfos.setFlag(0);
			}

			if (buildinginfos.getBuildId() != 0) {
				buildedService.buildedupt(buildinginfos);
			} else {
				buildedService.buildedadd(buildinginfos);
			}
		}
		return SUCCESS;
	}

	// 对文件名进行分割
	private static String getExtention(String fileName) {
		int pos = fileName.lastIndexOf(".");
		return fileName.substring(pos);
	}

	/**
	 * @return the buildedService
	 */
	public BuildedService getBuildedService() {
		return buildedService;
	}

	/**
	 * @param buildedService
	 *            the buildedService to set
	 */
	public void setBuildedService(BuildedService buildedService) {
		this.buildedService = buildedService;
	}

	/**
	 * @return the citylist
	 */
	public List<Mcity> getCitylist() {
		return citylist;
	}

	/**
	 * @param citylist
	 *            the citylist to set
	 */
	public void setCitylist(List<Mcity> citylist) {
		this.citylist = citylist;
	}

	/**
	 * @return the districtlist
	 */
	public List<Mdistrict> getDistrictlist() {
		return districtlist;
	}

	/**
	 * @param districtlist
	 *            the districtlist to set
	 */
	public void setDistrictlist(List<Mdistrict> districtlist) {
		this.districtlist = districtlist;
	}

	/**
	 * @return the buildinginfos
	 */
	public BuildingInfo getBuildinginfos() {
		return buildinginfos;
	}

	/**
	 * @param buildinginfos
	 *            the buildinginfos to set
	 */
	public void setBuildinginfos(BuildingInfo buildinginfos) {
		this.buildinginfos = buildinginfos;
	}

	/**
	 * @return the myFileFileName
	 */
	public String getMyFileFileName() {
		return myFileFileName;
	}

	/**
	 * @param myFileFileName
	 *            the myFileFileName to set
	 */
	public void setMyFileFileName(String myFileFileName) {
		this.myFileFileName = myFileFileName;
	}

	/**
	 * @return the myFileContentType
	 */
	public String getMyFileContentType() {
		return myFileContentType;
	}

	/**
	 * @param myFileContentType
	 *            the myFileContentType to set
	 */
	public void setMyFileContentType(String myFileContentType) {
		this.myFileContentType = myFileContentType;
	}

	/**
	 * @return the myFile
	 */
	public File getMyFile() {
		return myFile;
	}

	/**
	 * @param myFile
	 *            the myFile to set
	 */
	public void setMyFile(File myFile) {
		this.myFile = myFile;
	}

	/**
	 * @return the imageFileName
	 */
	public String getImageFileName() {
		return imageFileName;
	}

	/**
	 * @param imageFileName
	 *            the imageFileName to set
	 */
	public void setImageFileName(String imageFileName) {
		this.imageFileName = imageFileName;
	}

	@Override
	public void prepare() throws Exception {
		this.citylist = buildedService.getcitynm();
		if (citylist.size() != 0) {
			this.districtlist = buildedService.getmdistrictnm(citylist.get(0)
					.getCityId());
		}
	}

	/**
	 * @return the servletContext
	 */
	public ServletContext getServletContext() {
		return servletContext;
	}

	/**
	 * @param servletContext
	 *            the servletContext to set
	 */
	public void setServletContext(ServletContext servletContext) {
		this.servletContext = servletContext;
	}

	/**
	 * @return the flag
	 */
	public boolean isFlag() {
		return flag;
	}

	/**
	 * @param flag
	 *            the flag to set
	 */
	public void setFlag(boolean flag) {
		this.flag = flag;
	}

	/**
	 * @return the cityId
	 */
	public String getCityId() {
		return cityId;
	}

	/**
	 * @param cityId
	 *            the cityId to set
	 */
	public void setCityId(String cityId) {
		this.cityId = cityId;
	}

	/**
	 * @return the buildId
	 */
	public int getBuildId() {
		return buildId;
	}

	/**
	 * @param buildId
	 *            the buildId to set
	 */
	public void setBuildId(int buildId) {
		this.buildId = buildId;
	}

	/**
	 * @return the baomiFag
	 */
	public boolean isBaomiFag() {
		return baomiFag;
	}

	/**
	 * @param baomiFag
	 *            the baomiFag to set
	 */
	public void setBaomiFag(boolean baomiFag) {
		this.baomiFag = baomiFag;
	}
}
