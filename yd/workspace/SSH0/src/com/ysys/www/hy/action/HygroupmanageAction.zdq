/*
 * Copyright (c) 2009-2010 by DaLian YuDong Computer System CO.,LTD
 * All rights reserved.
 *      Project: SSH
 *    SubSystem: 会议室管理子系统
 */
package com.ysys.www.hy.action;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.apache.struts2.ServletActionContext;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.util.XWorkList;
import com.ysys.www.hy.service.GroupmanageService;
import com.ysys.www.hy.service.common.CommonConstants;
import com.ysys.www.hy.service.condition.Groupinfo;
import com.ysys.www.hy.service.condition.Groupshow;
import com.ysys.www.hy.service.condition.Pinfo;

/**
 * 组管理Action. 对组进行管理 功能：1.建立一个组， 2.更新一个组（组名，属性，人员的修改） 3.删除一个组
 * 
 * @version 1.00 2009/08/31
 * @author wangqingzhu
 */
public class HygroupmanageAction extends ActionSupport {

	private static final long serialVersionUID = -2622167884478172338L;
	private GroupmanageService groupmanageService; 			// 组管理对应的Service
	private List<Groupinfo> groupinfos;						// 组别和组别人员相关信息
	private List<Groupshow> zmList; // 组和人员信息
	private List<Pinfo> leftpinfos; // 人员信息
	private String zuid; // 组别ID(组List用)
	private String zbid; // 组别ID(自己建的组用)
	private List<Pinfo> rightpinfos; // 参加会议列别信息List(doublelist)
	private List<Pinfo> hiddenzmList; // 参加会议列别信息List（组名变化时临时保存用）
	private List<Pinfo> hiddenleftList; // 组员列表List（人名检索时用）
	private List<Pinfo> hiddenpyinfos; // 组员拼音List（人名按'拼音'检索时用）
	private Integer zuattribute; // 组属性
	private String xinzuname; // 新组名或者修改的组名
	private String zuname; // 组名字
	private XWorkList rightname; // 参加会议列别信息List(doublelist，提交时用)
	private String xinzbid; // 组别id
	private String returnUrl; // 返回标志
	private String yyDate; // 返回的日期
	private String hiddenzuid; // 返回的日期

	/**
	 * 组管理画面的初始化.
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	@Override
	public String execute() throws Exception {
		// 组信息的取得
		this.groupinfos = groupmanageService.getmanage();
		// 组List的取得，List不能为NULL
		this.zmList = groupmanageService.getzuname();
		// 画面中的List不能为NULL
		this.leftpinfos = groupmanageService.getinfo(zmList, "");
		this.hiddenzmList = groupmanageService.getinfo(zmList, "");
		this.hiddenleftList = groupmanageService.getinfo(zmList, "");
		this.hiddenpyinfos = groupmanageService.getinfo(zmList, "");
		return SUCCESS;
	}

	/**
	 * 组名变化时组员列表随之变化.
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String getzuming() throws Exception {
		// 组名List的取得
		this.zmList = groupmanageService.getzuname();
		// 组员List的取得
		this.leftpinfos = groupmanageService.getinfo(zmList, zuid);
		this.hiddenleftList = groupmanageService.getinfo(zmList, zuid);
		this.hiddenpyinfos = groupmanageService.getinfo(zmList, zuid);
		return SUCCESS;
	}

	/**
	 * 修改按钮按下时，画面的表示信息.
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String updateZbyl() throws Exception {
		// 组名List
		this.zmList = groupmanageService.getzuname();
		// 组员列表List
		this.leftpinfos = groupmanageService.getinfo(zmList,
				CommonConstants.QUANYUANZBID);
		this.hiddenleftList = groupmanageService.getinfo(zmList,
				CommonConstants.QUANYUANZBID);
		this.hiddenpyinfos = groupmanageService.getinfo(zmList,
				CommonConstants.QUANYUANZBID);
		// 新建和修改组员列表List
		this.rightpinfos = groupmanageService.getinfo(zmList, zbid);
		// 组属性
		this.zuattribute = groupmanageService.getsiyou(zbid);
		this.xinzbid = zbid;
		return SUCCESS;
	}

	/**
	 * 新建按钮按下时，画面的表示信息.
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String addzulist() throws Exception {
		this.zmList = groupmanageService.getzuname();
		// 组员列表显示全员
		this.leftpinfos = groupmanageService.getinfo(zmList,
				CommonConstants.QUANYUANZBID);
		this.hiddenleftList = groupmanageService.getinfo(zmList,
				CommonConstants.QUANYUANZBID);
		this.hiddenpyinfos = groupmanageService.getinfo(zmList,
				CommonConstants.QUANYUANZBID);
		return SUCCESS;
	}

	/**
	 * 删除组别一览和组成员一览.
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String deleteZbyl() throws Exception {
		groupmanageService.deleteZbyl(zbid);
		return SUCCESS;
	}

	/**
	 * 确定按钮按下时，添加或者修改组别一览和组成员一览.
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String affirm() throws Exception {
		// 组名Check
		boolean flag = groupmanageService.validatezuName(xinzbid, xinzuname.trim());
		if (listvalidate(rightname) || flag == false) {
			groupmanageService.queren(xinzbid, xinzuname, zuattribute,
					rightname);
			showlist();
			return SUCCESS;
		}
		return ERROR;
	}

	/**
	 * 对新建和修改组员列表List进行校验.
	 * 
	 * @param rightL
	 *            :新建和修改组员列表List
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public Boolean listvalidate(XWorkList rightL) {
		if (rightL == null) {
			return false;
		} else {
			return true;
		}
	}

	/**
	 * 返回操作.
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String goback() throws Exception {
		if (CommonConstants.RETURNRESEVEURL.equals(returnUrl)) {
			return CommonConstants.RETURNONE;
		} else if (CommonConstants.RETURNATTENDURL.equals(returnUrl)) {
			// 返回到参加会议人员一览画面
			return CommonConstants.RETURNTWO;
		} else {
			return ERROR;
		}
	}

	/**
	 * 重新显示自己建的组.
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String showlist() throws Exception {
		this.groupinfos = groupmanageService.getmanage();
		return SUCCESS;
	}

	/**
	 * 组名存在Check
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public void validateName() throws Exception {
		// 取response对象
		HttpServletResponse response = ServletActionContext.getResponse();

		// 服务器响应
		response.setContentType("text/xml;charset=utf-8");
		response.setHeader("Cache-Control", "no-cache");

		String msgStr = "";
		
		// 从数据库中检测该用户名是否已经存在
		boolean flag = groupmanageService.validatezuName(hiddenzuid, zuname.trim());
		if (flag) {
			msgStr = "此组名已经存在！！！";
		} else {
			msgStr = "";
		}

		try {// response写信息
			response.getWriter().print(msgStr);
			response.getWriter().close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public GroupmanageService getGroupmanageService() {
		return groupmanageService;
	}

	public void setGroupmanageService(GroupmanageService groupmanageService) {
		this.groupmanageService = groupmanageService;
	}

	public List<Groupinfo> getGroupinfos() {
		return groupinfos;
	}

	public void setGroupinfos(List<Groupinfo> groupinfos) {
		this.groupinfos = groupinfos;
	}

	public List<Groupshow> getZmList() {
		return zmList;
	}

	public void setZmList(List<Groupshow> zmList) {
		this.zmList = zmList;
	}

	public String getZuid() {
		return zuid;
	}

	public void setZuid(String zuid) {
		this.zuid = zuid;
	}

	public String getZbid() {
		return zbid;
	}

	public void setZbid(String zbid) {
		this.zbid = zbid;
	}

	public List<Pinfo> getHiddenzmList() {
		return hiddenzmList;
	}

	public void setHiddenzmList(List<Pinfo> hiddenzmList) {
		this.hiddenzmList = hiddenzmList;
	}

	public Integer getZuattribute() {
		return zuattribute;
	}

	public void setZuattribute(Integer zuattribute) {
		this.zuattribute = zuattribute;
	}

	public List<Pinfo> getLeftpinfos() {
		return leftpinfos;
	}

	public void setLeftpinfos(List<Pinfo> leftpinfos) {
		this.leftpinfos = leftpinfos;
	}

	public List<Pinfo> getRightpinfos() {
		return rightpinfos;
	}

	public String getXinzuname() {
		return xinzuname;
	}

	public String getYyDate() {
		return yyDate;
	}

	public void setYyDate(String yyDate) {
		this.yyDate = yyDate;
	}

	public void setXinzuname(String xinzuname) {
		this.xinzuname = xinzuname;
	}

	public String getReturnUrl() {
		return returnUrl;
	}

	public void setReturnUrl(String returnUrl) {
		this.returnUrl = returnUrl;
	}

	public String getZuname() {
		return zuname;
	}

	public String getXinzbid() {
		return xinzbid;
	}

	public void setXinzbid(String xinzbid) {
		this.xinzbid = xinzbid;
	}

	public void setZuname(String zuname) {
		this.zuname = zuname;
	}

	public void setRightpinfos(List<Pinfo> rightpinfos) {
		this.rightpinfos = rightpinfos;
	}

	public XWorkList getRightname() {
		return rightname;
	}

	public void setRightname(XWorkList rightname) {
		this.rightname = rightname;
	}

	public List<Pinfo> getHiddenleftList() {
		return hiddenleftList;
	}

	public void setHiddenleftList(List<Pinfo> hiddenleftList) {
		this.hiddenleftList = hiddenleftList;
	}

	public List<Pinfo> getHiddenpyinfos() {
		return hiddenpyinfos;
	}

	public void setHiddenpyinfos(List<Pinfo> hiddenpyinfos) {
		this.hiddenpyinfos = hiddenpyinfos;
	}

	public String getHiddenzuid() {
		return hiddenzuid;
	}

	public void setHiddenzuid(String hiddenzuid) {
		this.hiddenzuid = hiddenzuid;
	}

}
