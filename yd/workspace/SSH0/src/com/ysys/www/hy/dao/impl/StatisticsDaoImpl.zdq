/*
 * Copyright (c) 2009-2010 by DaLian YuDong Computer System CO.,LTD
 * All rights reserved.
 *      Project: SSH
 *    SubSystem: 会议室管理子系统
 */

package com.ysys.www.hy.dao.impl;

import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.ysys.www.hy.dao.StatisticsDao;
import com.ysys.www.hy.dao.condition.TabHysyl;
import com.ysys.www.hy.service.condition.StaBYInfo;

/**
 * 预约统计（数据库访问）
 * @author fengliang
 * @version 1.00 2009/09/23
 */
public class StatisticsDaoImpl extends HibernateDaoSupport implements StatisticsDao {
	private static final Log log = LogFactory.getLog(DistributeDaoImpl.class);

	/* (non-Javadoc)
	 * @see com.ysys.www.hy.dao.impl.StatisticsDao#findTabMrhyylStaticsDn(java.lang.Integer)
	 */
	@SuppressWarnings("unchecked")
	public List findTabMrhyylStaticsDn(Integer staticsyear) {
		log
				.debug("-----------------------------findTabMrhyyl---------------------------");
		String whereString = null;
		whereString = "SELECT t.id.hysid ,u.hysmc ,  MONTH(t.id.hyrq) , COUNT(*) "
				+ "FROM TabMrhyyl t , TabHysyl u "
				+ "WHERE YEAR(t.id.hyrq) = :staticsyear and u.id = t.id.hysid "
				+ "GROUP BY t.id.hysid , MONTH(t.id.hyrq)";
		String[] params = { "staticsyear" };
		Object[] args = { staticsyear };
		try {
			log.debug("HQL:" + whereString);
			return this.getHibernateTemplate().findByNamedParam(whereString,
					params, args);
			// return getHibernateTemplate().find(whereString);
		} catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	}
	
	/* (non-Javadoc)
	 * @see com.ysys.www.hy.dao.impl.StatisticsDao#ftsby(java.util.List)
	 */
	@SuppressWarnings("unchecked")
	public List<StaBYInfo> ftsby(List<Integer> yearBYList) {
		log.debug("-----------------------------findTabMrhyyl---------------------------");
		Integer staFYear = yearBYList.get(0);
	    Integer StaLYear = yearBYList.get(yearBYList.size()-1);	
		
		String whereString = null;
		whereString = "SELECT t.id.hysid ,u.hysmc ,  YEAR(t.id.hyrq) , COUNT(*) "
				+ "FROM TabMrhyyl t , TabHysyl u "
				+ "WHERE YEAR(t.id.hyrq) >= :staFYear and YEAR(t.id.hyrq) <= :StaLYear and u.id = t.id.hysid "
				+ "GROUP BY t.id.hysid , YEAR(t.id.hyrq) "
				+ "ORDER BY t.id.hysid , YEAR(t.id.hyrq) ";
		String[] params = { "staFYear" , "StaLYear" };
		Object[] args = { staFYear , StaLYear };
		try {
			log.debug("HQL:" + whereString);
			return (List<StaBYInfo>)(this.getHibernateTemplate().findByNamedParam(whereString , params, args));
			// return getHibernateTemplate().find(whereString);
		} catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	}

	/* (non-Javadoc)
	 * @see com.ysys.www.hy.dao.impl.StatisticsDao#findHysName()
	 */
	@SuppressWarnings("unchecked")
	public List<TabHysyl> findHysName() {
		log.debug("Init");
		try {
			String queryString = " from TabHysyl t order by t.sortid ";
			return (List<TabHysyl>) (this.getHibernateTemplate().find(queryString));
		} catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	}
}
