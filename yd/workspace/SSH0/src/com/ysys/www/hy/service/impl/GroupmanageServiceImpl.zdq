/*
 * Copyright (c) 2009-2010 by DaLian YuDong Computer System CO.,LTD
 * All rights reserved.
 *      Project: SSH
 *    SubSystem: 会议室管理子系统
 */

package com.ysys.www.hy.service.impl;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import com.opensymphony.xwork2.util.XWorkList;
import com.ysys.www.hy.dao.GpmanageDao;
import com.ysys.www.hy.dao.condition.TabZbcyyl;
import com.ysys.www.hy.dao.condition.TabZbcyylPK;
import com.ysys.www.hy.dao.condition.TabZbyl;
import com.ysys.www.hy.dao.condition.Tempinfo;
import com.ysys.www.hy.dao.condition.Tprjmgrs;
import com.ysys.www.hy.service.GroupmanageService;
import com.ysys.www.hy.service.common.CommonConstants;
import com.ysys.www.hy.service.common.SessionManager;
import com.ysys.www.hy.service.common.UserInfo;
import com.ysys.www.hy.service.condition.Groupinfo;
import com.ysys.www.hy.service.condition.Groupshow;
import com.ysys.www.hy.service.condition.Pinfo;

/**
 * @see com.ysys.www.hy.service.GroupmanageService
 */
public class GroupmanageServiceImpl implements GroupmanageService {

	private GpmanageDao gpmanageDaoImpl;

	public void setGpmanageDao(GpmanageDao gpmanageDaoImpl) {
		this.gpmanageDaoImpl = gpmanageDaoImpl;
	}

	// 汉字的拼音
	String ChineseFirstPY = "";
	// 375个多音字
	String[] oMultiDiff = { "19969:DZ", "19975:WM", "19988:QJ", "20048:YL",
			"20056:SC", "20060:NM", "20094:QG", "20127:QJ", "20167:QC",
			"20193:YG", "20250:KH", "20256:ZC", "20282:SC", "20285:QJG",
			"20291:TD", "20314:YD", "20340:NE", "20375:TD", "20389:YJ",
			"20391:CZ", "20415:PB", "20446:YS", "20447:SQ", "20504:TC",
			"20608:KG", "20854:QJ", "20857:ZC", "20911:PF", "20504:TC",
			"20608:KG", "20854:QJ", "20857:ZC", "20911:PF", "20985:AW",
			"21032:PB", "21048:XQ", "21049:SC", "21089:YS", "21119:JC",
			"21242:SB", "21273:SC", "21305:YP", "21306:QO", "21330:ZC",
			"21333:SDC", "21345:QK", "21378:CA", "21397:SC", "21414:XS",
			"21442:SC", "21477:JG", "21480:TD", "21484:ZS", "21494:YX",
			"21505:YX", "21512:HG", "21523:XH", "21537:PB", "21542:PF",
			"21549:KH", "21571:E", "21574:DA", "21588:TD", "21589:O",
			"21618:ZC", "21621:KHA", "21632:ZJ", "21654:KG", "21679:LKG",
			"21683:KH", "21710:A", "21719:YH", "21734:WOE", "21769:A",
			"21780:WN", "21804:XH", "21834:A", "21899:ZD", "21903:RN",
			"21908:WO", "21939:ZC", "21956:SA", "21964:YA", "21970:TD",
			"22003:A", "22031:JG", "22040:XS", "22060:ZC", "22066:ZC",
			"22079:MH", "22129:XJ", "22179:XA", "22237:NJ", "22244:TD",
			"22280:JQ", "22300:YH", "22313:XW", "22331:YQ", "22343:YJ",
			"22351:PH", "22395:DC", "22412:TD", "22484:PB", "22500:PB",
			"22534:ZD", "22549:DH", "22561:PB", "22612:TD", "22771:KQ",
			"22831:HB", "22841:JG", "22855:QJ", "22865:XQ", "23013:ML",
			"23081:WM", "23403:SX", "23487:SX", "23558:QJ", "23561:YW",
			"23586:YW", "23614:YW", "23615:SN", "23631:PB", "23646:ZS",
			"23663:ZT", "23673:YG", "23762:TD", "23769:ZS", "23780:QJ",
			"23884:QK", "24055:XH", "24113:DC", "24162:ZC", "24191:GA",
			"24273:QJ", "24324:NL", "24377:TD", "24378:QJ", "24439:PF",
			"24554:ZS", "24683:TD", "24694:WE", "24733:LK", "24925:TN",
			"25094:ZG", "25100:XQ", "25103:XH", "25153:PB", "25170:PB",
			"25179:KG", "25203:PB", "25240:ZS", "25282:FB", "25303:NA",
			"25324:KG", "25341:ZY", "25373:WZ", "25375:XJ", "25384:A",
			"25457:A", "25528:SD", "25530:SC", "25552:TD", "25774:ZC",
			"25874:ZC", "26044:YW", "26080:WM", "26292:PB", "26333:PB",
			"26355:ZY", "26366:CZ", "26397:ZC", "26399:QJ", "26415:ZS",
			"26451:SB", "26526:ZC", "26552:JG", "26561:TD", "26588:JG",
			"26597:CZ", "26629:ZS", "26638:YL", "26646:XQ", "26653:KG",
			"26657:XJ", "26727:HG", "26894:ZC", "26937:ZS", "26946:ZC",
			"26999:KJ", "27099:KJ", "27449:YQ", "27481:XS", "27542:ZS",
			"27663:ZS", "27748:TS", "27784:SC", "27788:ZD", "27795:TD",
			"27812:O", "27850:PB", "27852:MB", "27895:SL", "27898:PL",
			"27973:QJ", "27981:KH", "27986:HX", "27994:XJ", "28044:YC",
			"28065:WG", "28177:SM", "28267:QJ", "28291:KH", "28337:ZQ",
			"28463:TL", "28548:DC", "28601:TD", "28689:PB", "28805:JG",
			"28820:QG", "28846:PB", "28952:TD", "28975:ZC", "29100:A",
			"29325:QJ", "29575:SL", "29602:FB", "30010:TD", "30044:CX",
			"30058:PF", "30091:YSP", "30111:YN", "30229:XJ", "30427:SC",
			"30465:SX", "30631:YQ", "30655:QJ", "30684:QJG", "30707:SD",
			"30729:XH", "30796:LG", "30917:PB", "31074:NM", "31085:JZ",
			"31109:SC", "31181:ZC", "31192:MLB", "31293:JQ", "31400:YX",
			"31584:YJ", "31896:ZN", "31909:ZY", "31995:XJ", "32321:PF",
			"32327:ZY", "32418:HG", "32420:XQ", "32421:HG", "32438:LG",
			"32473:GJ", "32488:TD", "32521:QJ", "32527:PB", "32562:ZSQ",
			"32564:JZ", "32735:ZD", "32793:PB", "33071:PF", "33098:XL",
			"33100:YA", "33152:PB", "33261:CX", "33324:BP", "33333:TD",
			"33406:YA", "33426:WM", "33432:PB", "33445:JG", "33486:ZN",
			"33493:TS", "33507:QJ", "33540:QJ", "33544:ZC", "33564:XQ",
			"33617:YT", "33632:QJ", "33636:XH", "33637:YX", "33694:WG",
			"33705:PF", "33728:YW", "33882:SR", "34067:WM", "34074:YW",
			"34121:QJ", "34255:ZC", "34259:XL", "34425:JH", "34430:XH",
			"34485:KH", "34503:YS", "34532:HG", "34552:XS", "34558:YE",
			"34593:ZL", "34660:YQ", "34892:XH", "34928:SC", "34999:QJ",
			"35048:PB", "35059:SC", "35098:ZC", "35203:TQ", "35265:JX",
			"35299:JX", "35782:SZ", "35828:YS", "35830:E", "35843:TD",
			"35895:YG", "35977:MH", "36158:JG", "36228:QJ", "36426:XQ",
			"36466:DC", "36710:JC", "36711:ZYG", "36767:PB", "36866:SK",
			"36951:YW", "37034:YX", "37063:XH", "37218:ZC", "37325:ZC",
			"38063:PB", "38079:TD", "38085:QY", "38107:DC", "38116:TD",
			"38123:YD", "38224:HG", "38241:XTC", "38271:ZC", "38415:YE",
			"38426:KH", "38461:YD", "38463:AE", "38466:PB", "38477:XJ",
			"38518:YT", "38551:WK", "38585:ZC", "38704:XS", "38739:LJ",
			"38761:GJ", "38808:SQ", "39048:JG", "39049:XJ", "39052:HG",
			"39076:CZ", "39271:XT", "39534:TD", "39552:TD", "39584:PB",
			"39647:SB", "39730:LG", "39748:TPB", "40109:ZQ", "40479:ND",
			"40516:HG", "40536:HG", "40583:QJ", "40765:YQ", "40784:QJ",
			"40840:YK", "40863:QJG" };

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<Groupinfo> getmanage() {

		SessionManager session = new SessionManager();
		// 从session中得到登录者
		String jlzid = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getUserID();
		// 从session中得到职务ID
		String glyid = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getJobId();
		// 取得组别一览和组成员一览相关信息
		List zbylllist = gpmanageDaoImpl.getzbyl(jlzid, glyid, false);
		Iterator iter = zbylllist.iterator();
		List<Groupinfo> result_base = new ArrayList<Groupinfo>();

		Integer zbid = 0; // 组别ID
		String zzwmc = null; // 组名字
		Integer zbqf = 0; // 组别区分
		Integer oldzbid = 0; // 存放旧的组别ID
		String oldzzwmc = null; // 存放旧的组名字
		Integer oldzbqf = 0; // 存放旧的组别区分

		Integer cjrys = 0; // 参加人数
		String cymingzi = ""; // 成员名字(连接用)
		int ksflg = 0; // 是否是第一条数据0：是，1：不是
		String zcymz = null; // 组成员名字
		String zbqfmz = null; // 组别区分名字
		Object[] record = null;

		// List非空校验
		if (zbylllist.size() != 0) {

			// 将zbylllist里的信息以Groupinfo的形式存放
			for (; iter.hasNext();) {
				record = (Object[]) iter.next();
				// 取得zbylllist里的相关信息
				zbid = (Integer) record[0];
				zzwmc = (String) record[1];
				zbqf = (Integer) record[2];
				zcymz = (String) record[4];

				// 当前组别ID和上一条组别ID不同时，向组信息List里插入一条数据
				if ((zbid.compareTo(oldzbid) != 0) && ksflg != 0) {

					Groupinfo roupinfo = new Groupinfo();
					roupinfo.setZbid(oldzbid);
					roupinfo.setZzwmc(oldzzwmc);
					roupinfo.setCygs(cjrys);
					// 去掉"，"号
					cymingzi = cymingzi.substring(0, cymingzi.length() - 1);

					// 当人数大于最大显示人数时，只显示最大显示人数。
					if (cjrys > CommonConstants.MAXCYSL) {
						cymingzi = cymingzi.concat(CommonConstants.DENGDENG);
					}

					roupinfo.setCymingzi(cymingzi);
					// 根据组别区分，设置不同的组别名字
					switch (oldzbqf) {
					case CommonConstants.PRIVATE_GROUP:
						zbqfmz = CommonConstants.PRIVATE_GROUP_NM;
						break;
					case CommonConstants.SHARE_GROUP:
						zbqfmz = CommonConstants.SHARE_GROUP_NM;
						break;
					case CommonConstants.PUBLIC_GROUP:
						zbqfmz = CommonConstants.PUBLIC_GROUP_NM;
						break;
					default:
						zbqfmz = "";
					}
					roupinfo.setZbqfmz(zbqfmz);
					result_base.add(roupinfo);
					cjrys = 0;
					cymingzi = "";
				}
				// 计算成员的数量
				cjrys++;
				// 成员之间用"，"号分开
				if (cjrys <= CommonConstants.MAXCYSL) {
					cymingzi = cymingzi.concat(zcymz);
					cymingzi = cymingzi + ",";
				}
				ksflg = 1;
				oldzbid = zbid;
				oldzzwmc = zzwmc;
				oldzbqf = zbqf;
			}
			// 对最后一条数据处理
			Groupinfo roupinfo = new Groupinfo();
			roupinfo.setZbid(zbid);
			roupinfo.setZzwmc(zzwmc);
			roupinfo.setCygs(cjrys);
			cymingzi = cymingzi.substring(0, cymingzi.length() - 1);
			if (cjrys > CommonConstants.MAXCYSL) {
				cymingzi = cymingzi.concat(CommonConstants.DENGDENG);
			}
			roupinfo.setCymingzi(cymingzi);

			switch (zbqf) {
			case CommonConstants.PRIVATE_GROUP:
				zbqfmz = CommonConstants.PRIVATE_GROUP_NM;
				break;
			case CommonConstants.SHARE_GROUP:
				zbqfmz = CommonConstants.SHARE_GROUP_NM;
				break;
			case CommonConstants.PUBLIC_GROUP:
				zbqfmz = CommonConstants.PUBLIC_GROUP_NM;
				break;
			default:
				zbqfmz = "";
			}
			roupinfo.setZbqfmz(zbqfmz);
			result_base.add(roupinfo);
		}
		return result_base;
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	public List<Groupshow> getzuname() {

		List<Pinfo> quresult_pinfo = new ArrayList<Pinfo>();
		List<Groupshow> result_groupshow = new ArrayList<Groupshow>();

		// 日期格式
		SessionManager session = new SessionManager();
		// 从session中得到登录者
		String jlzid = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getUserID();
		// 从session中得到职务ID
		String glyid = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getJobId();

		// 当前日期
		Date nowdate = new Date();

		// 项目组的取得
		List pjzulist = gpmanageDaoImpl.getpjzu(jlzid, nowdate, glyid);
		// 全体组员的取得
		List<Tempinfo> quanyuanlist = gpmanageDaoImpl.getqunyuan();
		// 自己建的组的取得
		List zjlist = gpmanageDaoImpl.getzbyl(jlzid, glyid, true);

		// 全员信息以Groupshow的形式存放
		Iterator iterqu = quanyuanlist.iterator();
		Groupshow qugroupshowsqu = new Groupshow();
		qugroupshowsqu.setZuid(CommonConstants.QUANYUANZBID);
		qugroupshowsqu.setZumc(CommonConstants.QUANYUANNAME);
		Tempinfo tempinfo = null;

		for (; iterqu.hasNext();) {
			Pinfo qupinfos = new Pinfo();
			tempinfo = (Tempinfo) iterqu.next();
			qupinfos.setEmpid(tempinfo.getId());
			qupinfos.setEmpmc(tempinfo.getEmpName());
			try {
				// 设置全员每个成员姓名的拼音
				qupinfos.setMcpinyin((makePy(tempinfo.getEmpName())).split(":",
						-1));
			} catch (NumberFormatException e) {
				e.printStackTrace();
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
			}
			quresult_pinfo.add(qupinfos);
		}
		qugroupshowsqu.setPinfos(quresult_pinfo);
		result_groupshow.add(qugroupshowsqu);

		// 自己建的组信息处理
		Integer ksflg = 0;
		Integer zjoldzubid = 0;
		String zjoldzumc = "";
		Integer zjzubid = 0;
		String zjzumc = "";
		String zjzyid = "";
		String zjzymc = "";
		Iterator zjiter = zjlist.iterator();
		List<Pinfo> zjresult_pinfo = new ArrayList<Pinfo>();
		Object[] zjrecord = null;
		if (zjlist.size() != 0) {
			// 自己建过组
			for (; zjiter.hasNext();) {
				zjrecord = (Object[]) zjiter.next();
				Pinfo pinfos = new Pinfo();
				zjzubid = (Integer) zjrecord[0];
				zjzumc = (String) zjrecord[1];
				zjzyid = (String) zjrecord[3];
				zjzymc = (String) zjrecord[4];

				if ((zjzubid.compareTo(zjoldzubid) != 0) && ksflg != 0) {
					Groupshow zjgroupshows = new Groupshow();
					zjgroupshows.setZuid(String.valueOf(zjoldzubid));
					zjgroupshows.setZumc(zjoldzumc);
					zjgroupshows.setPinfos(zjresult_pinfo);
					result_groupshow.add(zjgroupshows);
					zjresult_pinfo = new ArrayList<Pinfo>();
				}
				ksflg = 1;
				pinfos.setEmpid(zjzyid);
				pinfos.setEmpmc(zjzymc);
				try {
					pinfos.setMcpinyin((makePy(zjzymc)).split(":", -1));
				} catch (NumberFormatException e) {
					e.printStackTrace();
				} catch (UnsupportedEncodingException e) {
					e.printStackTrace();
				}
				zjresult_pinfo.add(pinfos);
				zjoldzubid = zjzubid;
				zjoldzumc = zjzumc;
			}
			// 对最后一条数据处理
			Groupshow zjgroupshows = new Groupshow();
			zjgroupshows.setZuid(String.valueOf(zjzubid));
			zjgroupshows.setZumc(zjzumc);
			zjgroupshows.setPinfos(zjresult_pinfo);
			result_groupshow.add(zjgroupshows);
		}

		// 项目组的取得
		String oldzuid = "";
		String oldzumc = "";
		String zuid = "";
		String zumc = "";
		String zyid = "";
		String zymc = "";
		ksflg = 0;
		Iterator iter = pjzulist.iterator();

		List<Pinfo> result_pinfo = new ArrayList<Pinfo>();
		Object[] record = null;
		if (pjzulist.size() != 0) {
			// 自己曾经做过某个项目
			for (; iter.hasNext();) {
				record = (Object[]) iter.next();
				Pinfo pinfos = new Pinfo();
				zuid = (String) record[0];
				zumc = (String) record[1];
				zyid = (String) record[2];
				zymc = (String) record[3];

				if ((zuid.compareTo(oldzuid) != 0) && ksflg != 0) {
					Groupshow groupshows = new Groupshow();
					groupshows.setZuid(oldzuid);
					groupshows.setZumc(oldzumc);
					groupshows.setPinfos(result_pinfo);
					result_groupshow.add(groupshows);
					result_pinfo = new ArrayList<Pinfo>();
				}
				ksflg = 1;
				pinfos.setEmpid(zyid);
				pinfos.setEmpmc(zymc);
				try {
					pinfos.setMcpinyin((makePy(zymc)).split(":", -1));
				} catch (NumberFormatException e) {
					e.printStackTrace();
				} catch (UnsupportedEncodingException e) {
					e.printStackTrace();
				}
				result_pinfo.add(pinfos);
				oldzuid = zuid;
				oldzumc = zumc;
			}
			// 对最后一条数据处理
			Groupshow groupshows = new Groupshow();
			groupshows.setZuid(zuid);
			groupshows.setZumc(zumc);
			groupshows.setPinfos(result_pinfo);
			result_groupshow.add(groupshows);
		}
		return result_groupshow;
	}

	/**
	 * {@inheritDoc}
	 */
	public List<Pinfo> getinfo(List<Groupshow> zmlist, String zuid) {
		String zmzuid = null;
		Groupshow zuminglsit = null;
		List<Pinfo> pinfolist = new ArrayList<Pinfo>();
		Iterator<Groupshow> iterator1 = zmlist.iterator();
		if ("".equals(zuid)) {
			// 初始组List， 组员列表的显示
			Pinfo pinfolt = new Pinfo();
			pinfolt.setEmpid("");
			pinfolt.setEmpmc("");

			pinfolist.add(pinfolt);
		} else {
			// 组改变时， 组员列表的显示
			for (; iterator1.hasNext();) {
				zuminglsit = iterator1.next();
				zmzuid = zuminglsit.getZuid();
				if (zuid.equals(zmzuid)) {
					pinfolist = zuminglsit.getPinfos();
				}
			}
		}
		return pinfolist;
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void deleteZbyl(String zbid) {
		// 删除组别一览的数据
		TabZbyl tabzbyl = gpmanageDaoImpl.findById(zbid);
		// 只有组创建者和管理员才能删除
		if (checklogin(tabzbyl.getJlzid())) {
			gpmanageDaoImpl.deleteZbyl(tabzbyl);
			// 删除组别成员一览的数据
			List tabzbcyyl = gpmanageDaoImpl.findZcyById(zbid);
			if (tabzbcyyl.size() > 0) {
				gpmanageDaoImpl.deleteZbcyyl(tabzbcyyl);
			}
		}
	}

	/**
	 * 对删除者进行Check
	 * 
	 * @param jlzid 组建立者
	 * @return boolean 是否是组建立者
	 */
	public boolean checklogin(String jlzid) {

		SessionManager session = new SessionManager();

		String loginuser = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getUserID();
		String glyid = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getJobId();
		if (loginuser.equals(jlzid)
				|| CommonConstants.ADMINISTRATOR.equals(glyid)) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	public Integer getsiyou(String zbid) {
		TabZbyl tabzbyl = gpmanageDaoImpl.findById(zbid);
		return tabzbyl.getZbqf();
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	public void queren(String xinzbid, String xinzuname, Integer zuattribute,
			XWorkList rightpinfos) {
		TabZbyl zbyl = new TabZbyl();

		SessionManager session = new SessionManager();
		// 登录者
		String dquserid = ((UserInfo) session.get(CommonConstants.USERINFO))
				.getUserID();

		// 组别ID最大值的取得
		Integer maxzbid = 0;
		if (gpmanageDaoImpl.getMaxzbid() == null) {
			maxzbid = 1;
		} else {
			maxzbid = gpmanageDaoImpl.getMaxzbid() + 1;
		}

		// 新组别ID为空，进行新建操作
		if ("".equals(xinzbid)) {
			zbyl.setId(maxzbid);
			zbyl.setJlzid(dquserid);
			zbyl.setZbqf(zuattribute);
			zbyl.setZzwmc(xinzuname);
			// 组别一览的数据保存
			gpmanageDaoImpl.saveZbylData(zbyl);

			for (int i = 0; i < rightpinfos.size(); i++) {
				TabZbcyyl zbcyyl = new TabZbcyyl();
				TabZbcyylPK zbcyylpk = new TabZbcyylPK();
				zbcyylpk.setZbid(maxzbid);
				zbcyylpk.setZcyid((String) rightpinfos.get(i));
				zbcyyl.setId(zbcyylpk);
				// 组别成员一览的数据保存
				gpmanageDaoImpl.saveZbcyylData(zbcyyl);
			}
		} else {
			// 更新操作
			// 删除组别一览的数据，然后更新
			TabZbyl tabzbyl = gpmanageDaoImpl.findById(xinzbid);
			if (checklogin(tabzbyl.getJlzid())) {
				gpmanageDaoImpl.deleteZbyl(tabzbyl);
				zbyl.setId(Integer.parseInt(xinzbid));
				zbyl.setJlzid(tabzbyl.getJlzid());
				zbyl.setZbqf(zuattribute);
				zbyl.setZzwmc(xinzuname);
				// 组别一览的数据保存
				gpmanageDaoImpl.saveZbylData(zbyl);

				// 删除组别成员一览的数据，然后更新
				List tabzbcyyl = gpmanageDaoImpl.findZcyById(xinzbid);
				gpmanageDaoImpl.deleteZbcyyl(tabzbcyyl);

				for (int i = 0; i < rightpinfos.size(); i++) {
					TabZbcyyl zbcyyl = new TabZbcyyl();
					TabZbcyylPK zbcyylpk = new TabZbcyylPK();
					zbcyylpk.setZbid(Integer.parseInt(xinzbid));
					zbcyylpk.setZcyid((String) rightpinfos.get(i));
					zbcyyl.setId(zbcyylpk);
					// 组别成员一览的数据保存
					gpmanageDaoImpl.saveZbcyylData(zbcyyl);
				}
			}
		}
	}

	/**
	 * {@inheritDoc}
	 */
	public List<Pinfo> getName(XWorkList rightname) {
		List<Pinfo> pinfolist = new ArrayList<Pinfo>();
		for (int i = 0; i < rightname.size(); i++) {
			String empid = (String) rightname.get(i);
			String empname = gpmanageDaoImpl.getname(empid);
			Pinfo pinfolt = new Pinfo();
			pinfolt.setEmpid(empid);
			pinfolt.setEmpmc(empname);
			pinfolist.add(pinfolt);
		}

		return pinfolist;
	}

	/**
	 * {@inheritDoc}
	 */
	public Boolean validatezuName(String zuid, String zuname) {
		// 取得组别一览的名字
		List<TabZbyl> tabzbyl = gpmanageDaoImpl.getzbname();

		// 取得项目组的名字
		List<Tprjmgrs> tprjmgrs = gpmanageDaoImpl.getrjname();

		Iterator<TabZbyl> iterzb = tabzbyl.iterator();
		Iterator<Tprjmgrs> iterrj = tprjmgrs.iterator();
		TabZbyl zbyllist = null;
		Tprjmgrs rjmglist = null;

		// 把组别一览的信息放到groupshows里
		for (; iterzb.hasNext();) {
			zbyllist = iterzb.next();
			if (zuid == null || "".equals(zuid)) {
				if (zuname.equals(zbyllist.getZzwmc())) {
					return true;
				}
			} else {
				if (Integer.parseInt(zuid) != (zbyllist.getId())
						&& zuname.equals(zbyllist.getZzwmc())) {
					return true;
				}
			}
		}

		// 把项目组的信息放到groupshows里
		for (; iterrj.hasNext();) {
			rjmglist = iterrj.next();
			if (zuid == null || "".equals(zuid)) {
				if (zuname.equals(rjmglist.getPrjName())) {
					return true;
				}
			} else {
				if (zuid.equals(rjmglist.getId())
						&& zuname.equals(rjmglist.getPrjName())) {
					return true;
				}
			}
		}

		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	public List<Pinfo> getuser() {
		List<Pinfo> pinfolist = new ArrayList<Pinfo>();
		SessionManager session = new SessionManager();
		Pinfo pinfolt = new Pinfo();
		if (((UserInfo) session.get(CommonConstants.USERINFO)).getUserID() == null) {
			pinfolist = null;
		} else {
			// 登录者ID
			pinfolt.setEmpid(((UserInfo) session.get(CommonConstants.USERINFO))
					.getUserID());
			// 登录者名字
			pinfolt.setEmpmc(((UserInfo) session.get(CommonConstants.USERINFO))
					.getUserName());
			pinfolist.add(pinfolt);
		}
		return pinfolist;
	}

	/**
	 * 查找首字母
	 * @param SourceStr 成员名字
	 * @return 组成员名字的首字母的字符串
	 * @throws NumberFormatException
	 * @throws UnsupportedEncodingException
	 */
	private String makePy(String SourceStr) throws NumberFormatException,
			UnsupportedEncodingException {
		int len = SourceStr.length();
		char ch;
		ArrayList<String> arrResult = new ArrayList<String>();
		for (int i = 0; i < len; i++) {
			ch = SourceStr.charAt(i);
			arrResult.add(checkCh(ch));
		}

		String strAll = "";
		int size = 0;
		for (int i = 0; i < arrResult.size(); i++) {
			String pp = arrResult.get(i).toString();
			if (size == 0) {
				size = 1;
				for (int k = 0; k < pp.length(); k++) {
					if (k == 0) {
						strAll = pp.substring(k, k + 1);
					} else {
						strAll += ":" + pp.substring(k, k + 1);
					}
				}
			} else {
				String[] aResult2 = strAll.split(":", -1);
				strAll = null;
				for (int j = 0; j < aResult2.length; j++) {
					for (int k = 0; k < pp.length(); k++) {

						if (k + j == 0) {
							strAll = aResult2[j] + pp.substring(k, k + 1);
						} else {
							strAll += ":" + aResult2[j]
									+ pp.substring(k, k + 1);
						}
					}
				}
			}
		}
		return strAll;
	}

	/**
	 * 查找字符所对应的英文字母
	 * @param cr 要查找的字符
	 * @return 英文字母
	 * @throws NumberFormatException
	 * @throws UnsupportedEncodingException
	 */
	private String checkCh(char cr) throws NumberFormatException,
			UnsupportedEncodingException {
		int uni = cr;
		// 如果不在汉字处理范围之内,返回原字符,也可以调用自己的处理函数
		if (uni > 40869 || uni < 19968)
			return String.valueOf(cr);
		// 检查是否是多音字,是按多音字处理,不是就直接在strChineseFirstPY字符串中找对应的首字母
		else {
			int len = oMultiDiff.length;

			String str = String.valueOf(uni);
			String moku = "";
			for (int i = 0; i < len; i++) {
				moku = oMultiDiff[i];
				if (moku.indexOf(str) >= 0) {
					return oMultiDiff[i]
							.substring(oMultiDiff[i].indexOf(":") + 1);
				}
			}
			return (String.valueOf(ChineseFirstPY.charAt(uni - 19968)));
		}
	}

}
