/*
 * Copyright (c) 2009-2010 by DaLian YuDong Computer System CO.,LTD
 * All rights reserved.
 *      Project: SSH
 *    SubSystem: 会议室管理子系统
 */
package com.ysys.www.hy.action;

import java.util.List;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.util.XWorkList;
import com.ysys.www.hy.service.GroupmanageService;
import com.ysys.www.hy.service.common.CommonConstants;
import com.ysys.www.hy.service.common.SessionManager;
import com.ysys.www.hy.service.condition.Groupshow;
import com.ysys.www.hy.service.condition.Pinfo;
import com.ysys.www.hy.service.condition.YuyueInfo;

/**
 * 参加会议人员一览Action. 选择要参见会议的人员
 * 
 * @version 1.00 2009/08/31
 * @author wangqingzhu
 */
public class HyattendAction extends ActionSupport {

	private static final long serialVersionUID = -2622167884478172338L;
	private GroupmanageService groupmanageService;	// 组管理对应的Service
	private List<Groupshow> zmList;					// 组和人员信息
	private List<Pinfo> leftpinfos;					// 人员信息
	private String zuid;							// 组别ID(组List用)
	private List<Pinfo> rightpinfos;				// 参加会议列别信息List(doublelist)
	private List<Pinfo> hiddenzmList;				// 参加会议列别信息List（组名变化时临时保存用）
	private List<Pinfo> hiddenleftList;				// 组员列表List（人名检索时用）
	private List<Pinfo> hiddenpyinfos;				// 组员拼音List（人名按'拼音'检索时用）
	private XWorkList rightname;					// 参加会议列别信息List(doublelist，提交时用)
	private String returnUrl;						// 返回标志					
	private String renming;							// 人名
	private	int yuyueInfoSource;					// 接口标志
	
	/**
	 * 参加会议人一览员画面的初始化.
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String execute() throws Exception {
		SessionManager session = new SessionManager();
		YuyueInfo yuyueinfo;
		// 从预约画面进来的session数据
		if (returnUrl == null){
			yuyueinfo = (YuyueInfo) session.get(CommonConstants.YUYUEINFO);
			if(yuyueinfo.getCjr_list() == null){
				this.rightpinfos = groupmanageService.getuser();
			}else{
				this.rightpinfos = yuyueinfo.getCjr_list();	
			}
			
		}

		// 从组管理画面进来的session数据
		if(returnUrl != null && CommonConstants.RETURNATTENDURL.equals(returnUrl)){
			this.renming = (String) session.get(CommonConstants.PPNAME);
			XWorkList attendlist =  (XWorkList) session.get(CommonConstants.ATTENDLIST);
			if (attendlist != null){
				this.rightpinfos = groupmanageService.getName(attendlist);
			}
		}
		// 组List的取得，List不能为NULL
		this.zmList = groupmanageService.getzuname();
		this.leftpinfos = groupmanageService.getinfo(zmList, CommonConstants.QUANYUANZBID);
		this.hiddenzmList = groupmanageService.getinfo(zmList, "");
		this.hiddenleftList = groupmanageService.getinfo(zmList, CommonConstants.QUANYUANZBID);
		this.hiddenpyinfos = groupmanageService.getinfo(zmList, CommonConstants.QUANYUANZBID);
		return SUCCESS;
	}

	/**
	 * 组名变化时组员列表随之变化.
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String getattendzuname() throws Exception {
		// 组名List的取得
		this.zmList = groupmanageService.getzuname();
		// 组员List的取得
		this.leftpinfos = groupmanageService.getinfo(zmList, zuid);
		this.hiddenleftList = groupmanageService.getinfo(zmList, zuid);
		this.hiddenpyinfos = groupmanageService.getinfo(zmList, zuid);
		return SUCCESS;
	}
	
	/**
	 * 组管理画面
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String groupmanage() throws Exception {
		// 把画面的值设置到session里
		SessionManager session = new SessionManager();
		session.set(CommonConstants.PPNAME, this.renming);
		session.set(CommonConstants.ATTENDLIST, this.rightname);
		setReturnUrl(CommonConstants.RETURNATTENDURL);
		return SUCCESS;
	}

	/**
	 * 确定按钮按下时，将信息返回给预约画面
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String attendaffirm() throws Exception {
		String reserve_modify_flg = "";
		SessionManager session = new SessionManager();
		XWorkList attendlist =  this.rightname;
		YuyueInfo yuyuinfo= (YuyueInfo) session.get(CommonConstants.YUYUEINFO);
		// 给预约画面的参加人传值
		if (attendlist != null){
			yuyuinfo.setCjr_list((groupmanageService.getName(attendlist)));
			
		}else{
			yuyuinfo.setCjr_list(null);
		}
		session.set(CommonConstants.YUYUEINFO, yuyuinfo);
		reserve_modify_flg = yuyuinfo.getReserve_modify_flg(); 
		setYuyueInfoSource(CommonConstants.FROMSESSION);
		// 确定返回的页面是预约画面还是预约修改画面
		if (CommonConstants.RESERVE.equals(reserve_modify_flg)){
			return CommonConstants.RESERVE;
		}else{
			return CommonConstants.MODIFY;
		}
	}
	
	/**
	 * 返回按钮按下时，确定返回到那个页面
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String attendgoback() throws Exception {
		String reserve_modify_flg = "";
		SessionManager session = new SessionManager();
		YuyueInfo yuyuinfo= (YuyueInfo) session.get(CommonConstants.YUYUEINFO);
		reserve_modify_flg = yuyuinfo.getReserve_modify_flg(); 
		setYuyueInfoSource(CommonConstants.FROMSESSION);
		if (CommonConstants.RESERVE.equals(reserve_modify_flg)){
			return CommonConstants.RESERVE;
		}else{
			return CommonConstants.MODIFY;
		}
	}
	
	public GroupmanageService getGroupmanageService() {
		return groupmanageService;
	}

	public void setGroupmanageService(GroupmanageService groupmanageService) {
		this.groupmanageService = groupmanageService;
	}

	public List<Groupshow> getZmList() {
		return zmList;
	}

	public void setZmList(List<Groupshow> zmList) {
		this.zmList = zmList;
	}

	public String getZuid() {
		return zuid;
	}

	public void setZuid(String zuid) {
		this.zuid = zuid;
	}

	public List<Pinfo> getHiddenzmList() {
		return hiddenzmList;
	}

	public void setHiddenzmList(List<Pinfo> hiddenzmList) {
		this.hiddenzmList = hiddenzmList;
	}

	public List<Pinfo> getLeftpinfos() {
		return leftpinfos;
	}

	public void setLeftpinfos(List<Pinfo> leftpinfos) {
		this.leftpinfos = leftpinfos;
	}

	public List<Pinfo> getRightpinfos() {
		return rightpinfos;
	}

	public String getReturnUrl() {
		return returnUrl;
	}

	public void setReturnUrl(String returnUrl) {
		this.returnUrl = returnUrl;
	}

	public void setRightpinfos(List<Pinfo> rightpinfos) {
		this.rightpinfos = rightpinfos;
	}

	public XWorkList getRightname() {
		return rightname;
	}

	public void setRightname(XWorkList rightname) {
		this.rightname = rightname;
	}

	public List<Pinfo> getHiddenleftList() {
		return hiddenleftList;
	}

	public void setHiddenleftList(List<Pinfo> hiddenleftList) {
		this.hiddenleftList = hiddenleftList;
	}

	public List<Pinfo> getHiddenpyinfos() {
		return hiddenpyinfos;
	}

	public void setHiddenpyinfos(List<Pinfo> hiddenpyinfos) {
		this.hiddenpyinfos = hiddenpyinfos;
	}

	public String getRenming() {
		return renming;
	}

	public void setRenming(String renming) {
		this.renming = renming;
	}

	public int getYuyueInfoSource() {
		return yuyueInfoSource;
	}

	public void setYuyueInfoSource(int yuyueInfoSource) {
		this.yuyueInfoSource = yuyueInfoSource;
	}
}
