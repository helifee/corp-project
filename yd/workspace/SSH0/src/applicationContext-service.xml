<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 定义事务管理器（声明式的事务） -->
	<bean id="transactionManager" 
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	<!-- 所有Bean共享一个代理基类 -->
	<bean id="transactionBase" 
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" 
		abstract="true" lazy-init="true">
		<property name="transactionManager" ref="transactionManager" />
		<!-- 配置事务属性 -->
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<!-- ServiceTarget配置 -->
	<bean id="bookManageServiceTarget" 
		class="com.ysys.www.hy.service.impl.BookManageServiceImpl">
		<property name="bookDao">
			<ref bean="bookDao"/>
		</property>
	</bean>
	<bean id="loginServiceTarget" 
		class="com.ysys.www.hy.service.impl.LoginServiceImpl">
		<property name="loginDao">
			<ref bean="loginDao"/>
		</property>
	</bean>
	<bean id="distributeServiceTarget" 
		class="com.ysys.www.hy.service.impl.DistributeServiceImpl">
		<property name="distributeDao">
			<ref bean="distributeDao"/>
		</property>
	</bean>
	<bean id="statisticsYuyueServiceTarget" 
		class="com.ysys.www.hy.service.impl.StatisticsYuyueServiceImpl">
		<property name="statiticsDao">
			<ref bean="statiticsDao"/>
		</property>
	</bean>
	<bean id="conferensituationServiceTarget" 
		class="com.ysys.www.hy.service.impl.ConferensituationServiceImpl">
		<property name="conferensituationDao">
			<ref bean="conferensituationDao"/>
		</property>
	</bean>
	<bean id="conferenceInitServiceTarget" 
		class="com.ysys.www.hy.service.impl.ConferenceInitServiceImpl">
		<property name="hybaseDao">
			<ref bean="hybaseDao"/>
		</property>
	</bean>
	<bean id="groupmanageServiceTarget" 
		class="com.ysys.www.hy.service.impl.GroupmanageServiceImpl">
		<property name="gpmanageDao">
			<ref bean="gpmanageDao"/>
		</property>
	</bean>
	<bean id="yuyueServiceTarget" 
		class="com.ysys.www.hy.service.impl.YuyueServiceImpl">
		<property name="yuyueDao">
			<ref bean="yuyueDao"/>
		</property>
	</bean>
	<bean id="affirmattendServiceTarget" 
		class="com.ysys.www.hy.service.impl.AffirmattendServiceImpl">
		<property name="affirmattendDao">
			<ref bean="affirmattendDao"/>
		</property>
	</bean>
	<!-- Service配置 -->
	<bean id="bookManageService" parent="transactionBase" >
		<property name="target">
			<ref bean="bookManageServiceTarget" />
		</property>
	</bean>
	<bean id="conferenceInitService" parent="transactionBase">
		<property name="target">
			<ref bean="conferenceInitServiceTarget"/>
		</property>
	</bean>
	<bean id="groupmanageService" parent="transactionBase">
		<property name="target">
			<ref bean="groupmanageServiceTarget"/>
		</property>
	</bean>
	<bean id="yuyueService" parent="transactionBase">
		<property name="target">
			<ref bean="yuyueServiceTarget"/>
		</property>
	</bean>
	<bean id="distributeService" parent="transactionBase">
		<property name="target">
			<ref bean="distributeServiceTarget"/>
		</property>
	</bean>
	<bean id="statisticsYuyueService" parent="transactionBase">
		<property name="target">
			<ref bean="statisticsYuyueServiceTarget"/>
		</property>
	</bean>
	<bean id="conferensituationService" parent="transactionBase">
		<property name="target">
			<ref bean="conferensituationServiceTarget"/>
		</property>
	</bean>
	<bean id="loginService" parent="transactionBase">
		<property name="target">
			<ref bean="loginServiceTarget"/>
		</property>
	</bean>
	<bean id="affirmattendService" parent="transactionBase">
		<property name="target">
			<ref bean="affirmattendServiceTarget"/>
		</property>
	</bean>
	<!--scope="prototype" 会在该类型的对象被请求时创建一个新的action对象。
		如果没有配置scope=prototype则添加的时候不会新建一个action，仍然会保留上次访问的过记录的信息。 
        如果scope=prototype，每次从spring容器中获取bookAction的实例的时候就会new一个新对象，
		即我们所说的原型，spring中scope默认的是单态（singleton），针对web应用程序，还可以配置为request、session等范围。
		至于什么时候使用什么权限范围就要看应用程序的使用了-->
	<!-- Action配置 -->
	<bean id="bookAction" scope="prototype" 
		class="com.ysys.www.hy.action.BookAction">
		<property name="bookManageService">
			<ref bean="bookManageService"/>
		</property>
	</bean>
	<bean id="hyinitAction" scope="prototype" 
		class="com.ysys.www.hy.action.HyinitAction">
		<property name="conferenceInitService">
			<ref bean="conferenceInitService"/>
		</property>
	</bean>
	<bean id="yuyueAction" scope="prototype" 
		class="com.ysys.www.hy.action.YuyueAction">
		<property name="yuyueService">
			<ref bean="yuyueService"/>
		</property>
	</bean>
	<bean id="conferensituationAction" scope="prototype" 
		class="com.ysys.www.hy.action.ConferensituationAction">
		<property name="conferensituationService">
			<ref bean="conferensituationService"/>
		</property>
	</bean>
	<bean id="statisticsYuyueAction" scope="prototype" 
		class="com.ysys.www.hy.action.StatisticsYuyueAction">
		<property name="statisticsYuyueService">
			<ref bean="statisticsYuyueService"/>
		</property>
	</bean>
	<bean id="distributeAction" scope="prototype" 
		class="com.ysys.www.hy.action.DistributeAction">
		<property name="distributeService">
			<ref bean="distributeService"/>
		</property>
	</bean>
	<bean id="distributeUpdateAction" scope="prototype" 
		class="com.ysys.www.hy.action.DistributeUpdateAction">
		<property name="distributeService">
			<ref bean="distributeService"/>
		</property>
	</bean>
	<bean id="loginAction" scope="prototype" 
		class="com.ysys.www.hy.action.LoginAction">
		<property name="loginService">
			<ref bean="loginService"/>
		</property>
	</bean>
	<bean id="AuthInterceptor" scope="prototype" 
		class="com.ysys.www.hy.interceptor.AuthInterceptor">
	</bean>
	<bean id="UrlCatch" scope="prototype" 
		class="com.ysys.www.hy.interceptor.UrlCatch">
	</bean>
	<bean id="reloginAction" scope="prototype" 
		class="com.ysys.www.hy.action.LoginAction">
	</bean>
	<bean id="logoutAction" scope="prototype" 
		class="com.ysys.www.hy.action.LoginAction">
	</bean>
	<bean id="hygroupmanageAction" scope="prototype" 
		class="com.ysys.www.hy.action.HygroupmanageAction">
		<property name="groupmanageService">
			<ref bean="groupmanageService"/>
		</property>
	</bean>
	<bean id="hyattendAction" scope="prototype" 
		class="com.ysys.www.hy.action.HyattendAction">
		<property name="groupmanageService">
			<ref bean="groupmanageService"/>
		</property>
	</bean>
	<bean id="hyaffirmattendAction" scope="prototype" 
		class="com.ysys.www.hy.action.HyaffirmattendAction">
		<property name="affirmattendService">
			<ref bean="affirmattendService"/>
		</property>
	</bean>
	<bean id= "testgrid" scope="prototype" class = "com.ysys.www.common.ui.test.TestGrid">
		
	</bean>
</beans>