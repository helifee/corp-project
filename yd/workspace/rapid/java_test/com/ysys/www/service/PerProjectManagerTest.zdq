/*
 * Powered By [rapid-framework]
 * Web Site: http://www.rapid-framework.org.cn
 * Google Code: http://code.google.com/p/rapid-framework/
 */

package com.ysys.www.service;

import javax.annotation.Resource;
import org.junit.Test;
import static junit.framework.Assert.*;

import java.util.*;

import javacommon.base.*;
import javacommon.util.*;

import cn.org.rapid_framework.util.*;
import cn.org.rapid_framework.web.util.*;
import cn.org.rapid_framework.page.*;
import cn.org.rapid_framework.page.impl.*;

import com.ysys.www.model.*;
import com.ysys.www.dao.*;
import com.ysys.www.service.*;

/**
 * @author badqiu email:badqiu(a)gmail.com
 * @version 1.0
 * @since 1.0
 */


public class PerProjectManagerTest extends BaseManagerTestCase{

	private PerProjectManager manager;
	
	// autowire by name
	@Resource
	public void setPerProjectManager(PerProjectManager manager) {
		this.manager = manager;
	}

	@Override
	protected String[] getDbUnitDataFiles() {
		return new String[]{"classpath:common_testdata.xml","classpath:PerProject_testdata.xml"};
	}

	@Test
	public void crud() {
		PerProject obj = new PerProject();
		
	  	obj.setProName(new java.lang.String("1"));
	  	obj.setProNameCn(new java.lang.String("1"));
	  	obj.setProNameEng(new java.sql.Date(System.currentTimeMillis()));
	  	obj.setProDesc(new java.lang.String("1"));
	  	obj.setParentPro(new java.lang.String("1"));
	  	obj.setCusName(new java.lang.String("1"));
	  	obj.setCusContact(new java.lang.String("1"));
	  	obj.setDevelopEnvi(new java.lang.String("1"));
	  	obj.setDeptId(new java.lang.String("1"));
	  	obj.setPlanStaDate(new java.sql.Date(System.currentTimeMillis()));
	  	obj.setPlanEndDate(new java.sql.Date(System.currentTimeMillis()));
	  	obj.setRealStaDate(new java.sql.Date(System.currentTimeMillis()));
	  	obj.setRealEndDate(new java.sql.Date(System.currentTimeMillis()));
	  	obj.setUpdatetime(new java.sql.Timestamp(System.currentTimeMillis()));
		
		manager.save(obj);
		manager.getEntityDao().flush();
		
		manager.update(obj);
		manager.getEntityDao().flush();
		
		assertNotNull(obj.getProId());
		
		manager.removeById(obj.getProId());
		manager.getEntityDao().flush();
	
	}
}
