/*
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: YDSWEB
 *    SubSystem: 远东公司内部网
 */

package com.ydsweb.www.action.perm;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import org.apache.struts2.ServletActionContext;
import org.springframework.stereotype.Controller;

import com.ydsweb.www.action.base.BaseAction;

import com.ydsweb.www.dao.condition.perm.DepartmentInfo;

import com.ydsweb.www.service.common.CommonMessage;
import com.ydsweb.www.service.perm.DepartmentService;

/**
 * 部门信息一览处理
 * 
 * @author 远东)renlong
 * @version 1.00 2010/01/04
 */
@Controller("departmentAction")
public class DepartmentAction extends BaseAction {

	private static final long serialVersionUID = -118833272655612789L;
	private DepartmentService departmentService;
	private List<DepartmentInfo> departmentInfos;
	private DepartmentInfo departmentInfo;
	private String deptId; // 部门ID
	private String deptNm; // 部门名称
	private String errormsg; // 错误信息
	private int deptInfosCnt; // 部门数

	/**
	 * 画面的初期显示 部门信息一览取得
	 * 
	 * @return SUCCESS
	 */
	@Override
	public String execute() throws Exception {

		// 取得部门信息一览
		this.departmentInfo = new DepartmentInfo();
		this.departmentInfos = departmentService.getdepartmentinfos();
		// 取得部门数
		this.deptInfosCnt = departmentInfos.size();
		return SUCCESS;
	}

	/**
	 * 删除部门信息
	 * 
	 * @return SUCCESS
	 */
	public String departmentdel() {

		// 部门存在check
		if (deptExitCheck()) {
			
			// 删除部门信息
			departmentService.departmentdel(deptId);
			
			// 重新取得部门一览和部门数
			this.departmentInfos = departmentService.getdepartmentinfos();
			this.deptInfosCnt = departmentInfos.size();

			return SUCCESS;
		} else {
			return ERROR;
		}
	}

	/**
	 * 添加部门信息
	 * 
	 * @return SUCCESS
	 */
	public String departmentadd() {

		// 部门存在check
		if (!deptExitCheck()) {
			if (!"".equals(departmentInfo.getLeaderId())) {
				// TODO renlong YD未共通化
				departmentInfo.setLeaderId("YD" + departmentInfo.getLeaderId());
			}

			// 添加部门信息
			departmentService.departmentadd(departmentInfo);
			
			// 重新取得部门一览和部门数
			this.departmentInfos = departmentService.getdepartmentinfos();
			this.deptInfosCnt = departmentInfos.size();
			
			return SUCCESS;
		} else {
			setErrormsg(CommonMessage.ERROR_DEPT_EXIT);
			return ERROR;
		}
	}

	/**
	 * 修改部门信息
	 * 
	 * @return SUCCESS
	 */
	public String departmentupt() {

		// 修改部门信息
		if (deptExitCheck()) {
			if (!"".equals(departmentInfo.getLeaderId())) {
				// TODO renglong YD还未共通化。
				departmentInfo.setLeaderId("YD" + departmentInfo.getLeaderId());
			}

			departmentService.departmentupt(departmentInfo);
			return SUCCESS;
		} else {
			setErrormsg(CommonMessage.ERROR_DEPT_NOTEXIT);
			return ERROR;
		}
	}

	/**
	 * 取得部门名称
	 */
	public void getdepartmentnm() {

		// 取得部门名称
		deptNm = departmentService.getdepartmentnm(deptId);

		// 取response对象
		HttpServletResponse response = ServletActionContext.getResponse();

		// 服务器响应
		response.setContentType("text/xml;charset=utf-8");
		response.setHeader("Cache-Control", "no-cache");

		try {// response写信息
			response.getWriter().print(deptNm);
			response.getWriter().close();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	/**
	 * 取得部门信息
	 * 
	 * @return SUCCESS
	 */
	public String getdepartmentinfo() {

		// 取得部门信息
		this.departmentInfo = departmentService.getdepartmentinfo(deptId);
		if (null == departmentInfo) {
			departmentInfo.setLeaderId(departmentInfo.getLeaderId()
					.substring(2));
			return SUCCESS;
		} else {
			setErrormsg(CommonMessage.ERROR_DEPT_NOTEXIT);
			return ERROR;
		}
	}

	/**
	 * 部门存在check
	 * 
	 * @return true/false
	 */
	public boolean deptExitCheck() {

		setDeptId(departmentInfo.getDeptId());
		
		// 部门存在
		this.departmentInfos = departmentService.getdepartmentinfos();
		for (DepartmentInfo deptInfo : departmentInfos) {
			if (deptId.equals(deptInfo.getDeptId())) {
				return true;
			}
		}

		return false;
	}

	/**
	 * @return the departmentService
	 */
	public DepartmentService getDepartmentServiceImpl() {
		return departmentService;
	}

	/**
	 * @param departmentService
	 *            the departmentService to set
	 */
	public void setDepartmentService(DepartmentService departmentService) {
		this.departmentService = departmentService;
	}

	/**
	 * @return the departmentInfos
	 */
	public List<DepartmentInfo> getDepartmentInfos() {
		return departmentInfos;
	}

	/**
	 * @param departmentInfos
	 *            the departmentInfos to set
	 */
	public void setDepartmentInfos(List<DepartmentInfo> departmentInfos) {
		this.departmentInfos = departmentInfos;
	}

	/**
	 * @return the departmentInfo
	 */
	public DepartmentInfo getDepartmentInfo() {
		return departmentInfo;
	}

	/**
	 * @param departmentInfo
	 *            the departmentInfo to set
	 */
	public void setDepartmentInfo(DepartmentInfo departmentInfo) {
		this.departmentInfo = departmentInfo;
	}

	/**
	 * @return the deptId
	 */
	public String getDeptId() {
		return deptId;
	}

	/**
	 * @param deptId
	 *            the deptId to set
	 */
	public void setDeptId(String deptId) {
		this.deptId = deptId;
	}

	/**
	 * @return the deptNm
	 */
	public String getDeptNm() {
		return deptNm;
	}

	/**
	 * @param deptNm
	 *            the deptNm to set
	 */
	public void setDeptNm(String deptNm) {
		this.deptNm = deptNm;
	}

	/**
	 * @return the deptInfosCnt
	 */
	public int getDeptInfosCnt() {
		return deptInfosCnt;
	}

	/**
	 * @param deptInfosCnt
	 *            the deptInfosCnt to set
	 */
	public void setDeptInfosCnt(int deptInfosCnt) {
		this.deptInfosCnt = deptInfosCnt;
	}

	/**
	 * @return the errormsg
	 */
	public String getErrormsg() {
		return errormsg;
	}

	/**
	 * @param errormsg
	 *            the errormsg to set
	 */
	public void setErrormsg(String errormsg) {
		this.errormsg = errormsg;
	}
}
