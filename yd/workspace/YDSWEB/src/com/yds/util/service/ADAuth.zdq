/*
 * @(#)ADAuth.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通
 */

package com.yds.util.service;

import javax.naming.*;
import javax.naming.directory.*;

import com.yds.common.service.CommonConstants;

import java.util.Hashtable;

/**
 * 通过 ActiveDirectory 认证用户登录
 * 
 * @author zhaodong
 * @version 1.00 2010/01/21
 */
public class ADAuth {

	/**
	 * @param userId
	 *            用户名
	 * @param password
	 *            密码
	 * @return 认证通过: 登录的用户名(userId@domain.name)，未通过: null
	 */
	public static String login(String userId, String password) {

		/** LDAP 环境变量 */
		Hashtable<String, String> env = null;
		/** 目录 */
		DirContext ctx = null;
		/** 认证状态 */
		String logged = null;

		// 用户名密码不为null
		if (null == userId || null == password) {
			return null;
		}
		// 取得@前的用户名
		if (userId.indexOf("@") != 0) {
			userId = (userId.split("@")[0]).trim();
		}
		// 用户名密码不为空
		if ("".equals(userId) || "".equals(password)) {
			return null;
		}
		// 使用userName@domain.name的方式验证
		userId = userId + "@" + CommonConstants.DOMAIN_NAME;

		env = new Hashtable<String, String>();
		env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");
		// LDAP地址
		env.put(Context.PROVIDER_URL, "ldap://" + CommonConstants.DOMAIN_NAME + ":389");
		// 使用 userName + password 进行认证
		env.put(Context.SECURITY_AUTHENTICATION, "simple");
		// 使用者的完整 email ，也就是 AD 中的 ${sAMAccountName}@your.domain.name
		env.put(Context.SECURITY_PRINCIPAL, userId);
		// 认证时的密码
		env.put(Context.SECURITY_CREDENTIALS, password);
		try {
			// 若可建立目录物件，即表示完成验证
			ctx = new InitialDirContext(env);
			logged = userId;
		} catch (AuthenticationException authe) {
			// 授权失败
			logged = null;
			System.out.println(authe);
		} catch (Exception e) {
			// 不明错误
			System.out.println(e);
		} finally {
			try {
				// 关闭目录
				if (null != ctx) {
					ctx.close();
				}
			} catch (NamingException nameException) {
				nameException.printStackTrace();
			}
		}
		return logged;
	}
}
