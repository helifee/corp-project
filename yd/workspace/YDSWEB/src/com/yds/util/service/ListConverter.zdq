/*
 * @(#)ListConverter.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */

package com.yds.util.service;

import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import net.sf.json.JSONArray;

/**
 * List转化工具类
 * 
 * @author zhangdaoqiang
 * @version 1.0 2010/06/11
 */
public class ListConverter {

	/**
	 * List<指定Bean> --> List<String[]> --> String
	 * 将指定Bean中指定的两个属性分别存到String[0], String[1]中.
	 * 
	 * @param src： 待转化的List
	 * @param key: 指定的key
	 * @param value: 指定的value
	 * @return String 字符串表示的键值形式 
	 * @throws Exception
	 */
	@SuppressWarnings("unchecked")
	public static String convert(Object src, String key, String value) throws Exception {
		
		//将传入的Object形式的list转化成List<Object>
		List<Object> list = (List<Object>)src;
		
		//中间数据形式
		List<String[]> ret = new ArrayList<String[]>();
		
		for(Object obj : list) {
			Class<?> classType = obj.getClass();
			
			//取得传入属性对应的get方法
			Locale loc = Locale.getDefault();
			String keyMethodName = "get" + key.substring(0, 1).toUpperCase(loc) + key.substring(1);
			String valueMethodName = "get" + value.substring(0, 1).toUpperCase(loc) + value.substring(1);
			
			Method keyMethod = classType.getMethod(keyMethodName, new Class[]{});
			Method valueMethod = classType.getMethod(valueMethodName, new Class[]{});
			
			//取得属性值
			String id = (String) keyMethod.invoke(obj);
			String name = (String) valueMethod.invoke(obj);
			
			ret.add(new String[]{id, name});
		}
		
		return JSONArray.fromObject(ret).toString();
	}
}
