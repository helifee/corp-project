package com.yds.util.service;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Locale;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.yds.common.service.CommonConstants;

public class FileUtil {
	private static int cacheLength = 2097152;
	private static final Log LOG = LogFactory.getLog(FileUtil.class);

	/**
	 * 将临时目录中的文件保存到指定位置.
	 * 
	 * @param tempFile 临时文件名.
	 * @param savePath 目标路径.
	 * @param destName 目标文件名(不含扩展名).
	 * @return 操作是否成功.
	 */
	public static boolean saveFile(String tempFile, String savePath, String destName) {
		
		// 获得propMgr
		PropertyManager propMgr= (PropertyManager)ApplicationContextHolder.getBean("propMgr");
		// 取得临时文件的路径
		String srcPath = propMgr.getParameter(CommonConstants.FILE_PATH.TEMP_PATH.value()) + "/" + tempFile;
		
		String destPath = savePath + "/" + destName + getExt(tempFile);
		LOG.debug("srcPath is :" + srcPath);
		LOG.debug("destPath is :" + destPath);
		FileInputStream in = null;
		FileOutputStream out = null;
		try {
			File src = new File(srcPath);
			File dest = new File(destPath);
			in = new FileInputStream(src);
			out = new FileOutputStream(dest);
			byte[] buffer = new byte[cacheLength];
			int length;
			while ((length = in.read(buffer)) != -1) {
				out.write(buffer, 0, length);
			}
			out.flush();
			return true;
		} catch (FileNotFoundException e0) {
			e0.printStackTrace();
			return false;
		} catch (IOException e1) {
			e1.printStackTrace();
			return false;
		} finally {

			try {
				if (in != null) {
					in.close();
				}
			} catch (IOException e2) {
				e2.printStackTrace();
			} finally {
				try {
					if (out != null) {
						out.close();
					}
				} catch (IOException e3) {
					e3.printStackTrace();
				}
			}

		}
	}

	public static String getExt(String fileName) {
		if ((fileName != null) && (fileName.length() > 0)) {
			int i = fileName.lastIndexOf('.');

			if ((i > -1) && (i < (fileName.length() - 1))) {
				return fileName.substring(i).toLowerCase(Locale.SIMPLIFIED_CHINESE);
			}
		}
		return "";
	}
}
