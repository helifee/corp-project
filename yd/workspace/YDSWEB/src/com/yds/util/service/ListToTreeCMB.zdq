/*
 * @(#)BeanToCSV.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */
package com.yds.util.service;

import java.util.ArrayList;
import java.util.List;

import com.yds.common.bean.TreeListInfo;
import com.yds.common.bean.TreeListResult;

/**
 * 树形分类下拉框转化工具
 * 
 * @author yuanjinling
 * @version 1.0 2010/07/22
 */
public class ListToTreeCMB {
	
	/**
	 * list转化为分组下拉框
	 * @param listInfo    输入List
	 * @param diff        下拉框的首行显示项目
	 * @return List<TreeListInfo>  分组下拉框内容
	 */
	public static List<TreeListInfo> convert(List<? extends TreeListResult> listInfo,
            String... diff){
		return convert(listInfo, true, diff);
	}
	
	/**
	 * list转化为分组下拉框
	 * @param listInfo    输入List
	 * @param leafCodeFlg 小分类的code是否需要大分类的code+","隔开
	 * @param diff        下拉框的首行显示项目
	 * @return List<TreeListInfo>  分组下拉框内容
	 */
	public static List<TreeListInfo> convert(List<? extends  TreeListResult> listInfo,
											 Boolean leafCodeFlg,
			                                 String... diff){
		List<TreeListInfo> treeList = new ArrayList<TreeListInfo>();
		String categoryID ="";	
		String categoryValue;
		TreeListInfo obj;
		
		//下拉框首项设定		
		if (diff.length == 1) {
			obj = new TreeListInfo();
			obj.setCategoryKey("");
			obj.setCategoryValue(diff[0]);
			treeList.add(obj);
		} else if (diff.length == 2) {
			obj = new TreeListInfo();
			obj.setCategoryKey(diff[0]);
			obj.setCategoryValue(diff[1]);
			treeList.add(obj);			
		}		
	    
		//下拉框分类项设定
		for (int i = 0; i < listInfo.size(); i++) {
			
			obj = new TreeListInfo();
			
			if (listInfo.get(i).refID1().equals(categoryID)) {
				
				if(null == listInfo.get(i).refID2() || "".equals(listInfo.get(i).refID2())){
					continue;
				}
			    //小分类的情况
				if(leafCodeFlg){
					obj.setCategoryKey(categoryID +","+ listInfo.get(i).refID2());
				}else{
					obj.setCategoryKey(listInfo.get(i).refID2());
				}
				
				categoryValue="　　"+listInfo.get(i).refName2();
				obj.setCategoryValue(categoryValue);
			}else{
				//大分类的情况
				categoryID = listInfo.get(i).refID1();
				obj.setCategoryKey(categoryID);
				categoryValue=listInfo.get(i).refName1();
				obj.setCategoryValue(categoryValue);
				//与大分类同组的第一个小分类标记
				i--;
			}
			
			treeList.add(obj);
		}							
		return treeList;		
	}
	
}
