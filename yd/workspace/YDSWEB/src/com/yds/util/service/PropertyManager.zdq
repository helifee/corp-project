/*
 * @(#)MessageManager.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */

package com.yds.util.service;

import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.stereotype.Service;

import com.opensymphony.xwork2.ActionContext;

/**
 * Message后台共通
 * @author zhangzheng
 * @version 1.00 2010/04/01
 */
@Service("propMgr")
public class PropertyManager implements ApplicationContextAware {

	// spring上下文
	ApplicationContext applicationContext;

	@Override
	/**
	 * {@inheritDoc}
	 */
	public void setApplicationContext(ApplicationContext applicationContext)
			throws BeansException {
		this.applicationContext = applicationContext;
	}

	/**
	 * 获取message（无参数）
	 * @param key 消息名称
	 * @return 消息内容
	 */
	public String getMessage(String key) {
		return getMessage(key, null, null);
	}

	/**
	 * 获取message（有参数）
	 * @param key 消息名称
	 * @param args 参数
	 * @return 消息内容
	 */
	public String getMessage(String key, Object... args) {
		if (ActionContext.getContext() != null){
			Session.set("_message_id", key);
		}
		return applicationContext.getMessage(key, args, null);
	}

	/**
	 * 获取参数值
	 * @param key 参数名称
	 * @return 参数值
	 */
	public String getParameter(String key) {
		return applicationContext.getMessage(key, null, null);
	}
}
