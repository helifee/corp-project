/*
 * @(#)Yc0010ServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东计算机社内网
 *    SubSystem: 会议室管理
 */
package com.yds.meet.service.impl;

import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Service;
import com.yds.base.service.AbstractBaseService;
import com.yds.common.service.ComSequenceService;
import com.yds.common.service.LogService;
import com.yds.common.service.CommonConstants;
import com.yds.meet.bean.MetRoomInfo;
import com.yds.meet.common.dao.MetRoomInfoDao;
import com.yds.meet.dao.Yc0010Dao;
import com.yds.meet.service.Yc0010Service;

/**
 * @see com.yds.meet.service.Yc0010Service
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Service("yc0010Service")
public class Yc0010ServiceImpl extends AbstractBaseService implements
		Yc0010Service {
	private MetRoomInfoDao metRoomInfoDao;
	private Yc0010Dao yc0010Dao;
	private LogService logService;
	private static final String LOGIN_MSG_1 = "会议室ID为";
	private static final String LOGIN_MSG_2 = "登录成功。";
	private static final String LOGIN_MSG_3 = "修改成功。";
	private static final String LOGIN_MSG_4 = "会议室排序";
	private ComSequenceService comSequenceService;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<MetRoomInfo> getMetRoomInfoLst() {
		return metRoomInfoDao.getMetRoomInfoList("all");
	}

	/**
	 * {@inheritDoc}
	 * @throws Exception 
	 * @throws  
	 */
	@Override
	public void insertMetRoom(MetRoomInfo metRoomInfo) throws  Exception {
		metRoomInfo.setMetId(Integer.parseInt(comSequenceService.getNextSequence("met_room_info", "met_id", 0)));
		yc0010Dao.insertMetRoomInfo(metRoomInfo);
		outputSqlLog(Integer.toString(metRoomInfo.getMetId()), LOGIN_MSG_2,0);			
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer updateMetRoom(MetRoomInfo metRoomInfo) {
		Integer updNub = yc0010Dao.updateMetRoomInfo(metRoomInfo);
		if ( updNub > 0){
			outputSqlLog(Integer.toString(metRoomInfo.getMetId()), LOGIN_MSG_3,0);	
			return updNub;
		}else{
			return 0;
		}

	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateMetRoomLstSort(String metRoomSort) {

		MetRoomInfo metRoomInfo = new MetRoomInfo();
		String[] metRoomArr = metRoomSort.replace(" ", "").split(",");
		int dispSeq = 0;

		for (int i = 0; i < metRoomArr.length; i++) {
			if (!"".equals(metRoomArr[i])) {
				metRoomInfo.setMetId(Integer.parseInt(metRoomArr[i]));
				dispSeq++;
				metRoomInfo.setSortId(dispSeq);
				yc0010Dao.updateMetRoomSort(metRoomInfo);
			}
		}
		outputSqlLog(LOGIN_MSG_4, LOGIN_MSG_3,1);		
	}

	/**
	 * 会议室修改日志记录
	 * 
	 * @param metId       会议室ID
	 *        operation   数据库操作
	 *        opeFlg      是否是排序操作（是 1，否0）
	 * @return void
	 */
	private void outputSqlLog(String messgeStr, String operation,Integer opeFlg) {
		StringBuffer logMsg = new StringBuffer();
		String logUserId = "";
		// 日志记录参数设定
		if (opeFlg == 0){
			logMsg.append(LOGIN_MSG_1);			
		}

		logMsg.append(messgeStr);
		logMsg.append(operation);
		// 写log
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Every_Month_Delete
				.toString(), CommonConstants.SubIdEnum.Sub_MEET.toString(), logUserId, logMsg.toString(), "");
	}

	/**
	 * @param logService
	 *            the logService to set
	 */
	public void setLogService(LogService logService) {
		this.logService = logService;
	}

	/**
	 * @param metRoomInfoDao
	 *            the metRoomInfoDao to set
	 */
	public void setMetRoomInfoDao(MetRoomInfoDao metRoomInfoDao) {
		this.metRoomInfoDao = metRoomInfoDao;
	}

	/**
	 * @param yc0010Dao
	 *            the yc0010Dao to set
	 */
	public void setYc0010Dao(Yc0010Dao yc0010Dao) {
		this.yc0010Dao = yc0010Dao;
	}
	
	/**
	 * @param comSequenceService the comSequenceService to set
	 */
	public void setComSequenceService(ComSequenceService comSequenceService) {
		this.comSequenceService = comSequenceService;
	}
}
