/*
 * @(#)Yc0040ServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东计算机社内网
 *    SubSystem: 会议室管理
 */

package com.yds.meet.service.impl;

import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.meet.bean.MetDaymetInfo;
import com.yds.meet.bean.Yc0040CondA;
import com.yds.meet.dao.Yc0040Dao;
import com.yds.meet.service.MeetConstants;
import com.yds.meet.service.Yc0040Service;
import com.yds.meet.service.MeetConstants.WEEK_DAY;

/**
 * @see com.yds.meet.service.Yc0040Service
 */
@Service("yc0040Service")
public class Yc0040ServiceImpl extends AbstractBaseService implements
		Yc0040Service {

	private Yc0040Dao yc0040Dao;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<MetDaymetInfo> getMetDaymetLst(int offset, int perCounts,
			Yc0040CondA yc0040CondA, boolean hasPermit) {
		List<MetDaymetInfo> metDaymetInfoLst = yc0040Dao.getMetDaymetLst(
				offset, perCounts, yc0040CondA);
		for (MetDaymetInfo metDaymetInfo : metDaymetInfoLst) {
			// 公开标识为1时 画面显示保密字样 不显示主题内容
			if (MeetConstants.PUBLICFLG.equals(metDaymetInfo.getPublicFlg())) {
				if (!(metDaymetInfo.getApplyUserId().equals(yc0040CondA
						.getLoginUserId()))
						&& !(metDaymetInfo.getPermitFlg().equals("1")) && !hasPermit) {
					metDaymetInfo.setMetTopic(MeetConstants.METTOPIC);
				}

			}
			if (hasPermit) {
				metDaymetInfo.setPermitFlg("1");
			}
			metDaymetInfo.setStartHhTime(metDaymetInfo.getMetStaTime()
					.substring(0, 2));
			metDaymetInfo.setStartMmTime(metDaymetInfo.getMetStaTime()
					.substring(3, 5));
			metDaymetInfo.setMetWeekDay(dayOfWeek(metDaymetInfo.getMetDate()));
		}
		return metDaymetInfoLst;
	}

	/**
	 * @param yc0040Dao
	 *            the yc0040Dao to set
	 */
	public void setYc0040Dao(Yc0040Dao yc0040Dao) {
		this.yc0040Dao = yc0040Dao;
	}

	@Override
	public Long getTotalCount(Yc0040CondA metDaymetInfo) {
		return yc0040Dao.getTotalCount(metDaymetInfo);
	}

	@Override
	public String getMetRoomInfo(Integer metId) {
		return yc0040Dao.getMetRoomInfo(metId);
	}

	/**
	 * 会议室时间（星期）
	 * 
	 * @param metDate
	 *            会议室时间
	 * @return String 星期
	 */
	private String dayOfWeek(Date metDate) {
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(metDate);
		WEEK_DAY weekday;
		int day = calendar.get(Calendar.DAY_OF_WEEK);
		// 星期日i==1，星期六i==7
		switch (day) {
		case 1:
			weekday = MeetConstants.WEEK_DAY.SUN;
			break;
		case 2:
			weekday = MeetConstants.WEEK_DAY.MON;
			break;
		case 3:
			weekday = MeetConstants.WEEK_DAY.TUE;
			break;
		case 4:
			weekday = MeetConstants.WEEK_DAY.WEN;
			break;
		case 5:
			weekday = MeetConstants.WEEK_DAY.THU;
			break;
		case 6:
			weekday = MeetConstants.WEEK_DAY.FRI;
			break;
		case 7:
			weekday = MeetConstants.WEEK_DAY.SAT;
			break;
		default:
			weekday = MeetConstants.WEEK_DAY.ERRORDAY;
		}
		return String.valueOf(weekday);
	}
}
