/*
 * @(#)Yc0020Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 会议室管理
 */

package com.yds.meet.action;

import java.util.Calendar;
import java.util.List;
import net.sf.json.JSONArray;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import com.yds.base.action.AbstractBaseAction;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.SessionStoreConstants;
import com.yds.common.service.CommonConstants.NameSpaceEnum;
import com.yds.meet.bean.MetDaymetInfo;
import com.yds.meet.bean.MetRoomInfo;
import com.yds.meet.service.MeetConstants;
import com.yds.meet.service.Yc0020Service;
import com.yds.util.service.DateUtil;
import com.yds.util.service.SessionStore;

/**
 * 会议室信息及每日信息一览
 * 
 * @author fangjiayuan
 * @version 1.00 2010/07/23
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("yc0020Action")
public class Yc0020Action extends AbstractBaseAction {

	private static final long serialVersionUID = -1052896044225155382L;
	private Yc0020Service yc0020Service;

	/** 会议室信息及每日会议室信息一览 */
	private List<MetRoomInfo> metRoomInfo;

	/** 显示某一天会议情况的日期(传值用) */
	private String metDate;
	
	/** spark弹出层专用 */
	private String sparkPopUpMsg;

	/** 当前系统时间刻度 */
	private Integer nowTimeScale;

	/** 当前系统日期 */
	private String today;

	/** json格式的全部数据 */
	private String jsonMetRoomInfo;

	/**
	 * 会议室预约一览初始化。
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	@Override
	public String execute() throws Exception {
		
		// 取当前系统时间
		Calendar nowDate = Calendar.getInstance();
		today = DateUtil.getDate();

		// 取当前时间对应的刻度
		nowTimeScale = nowDate.get(Calendar.HOUR_OF_DAY) * 2;
		if (nowDate.get(Calendar.MINUTE) >= MeetConstants.MINUTE_30){
			nowTimeScale += 1;
		}
		
		// 如果是别的页面返回或导航的时候
		// 从session里取得检索时间
		if(CommonConstants.ActionReloadFlg.Reload_Condition.value()
				.equals(super.getReloadFlg())){
			metDate = (String) SessionStore.getCondition(SessionStoreConstants.YC0020);
		} else if (metDate == null) {
			// 从menu过来的时候
			metDate = today;
		}
		return SUCCESS;
	}

	/**
	 * 日期改变，会议室预约一览的页面显示（不刷新页面）。
	 * 
	 * @return String 返回执行的逻辑结果字符串，以便对其结果进行相应处理。
	 */
	public String getMeetRoomInfo() throws Exception {

		// 会议室信息及每日会议室信息一览
		this.metRoomInfo = yc0020Service.getMetRoomDaymetInfoList(metDate);
		// 如果是系统管理员，则拥有参加者的权限即可以查看
		if (hasPermit(NameSpaceEnum.MEET.toString(),  "yc0010Init")){
			for (MetRoomInfo info : metRoomInfo) {
				for (MetDaymetInfo metDaymetInfo : info.getMetDaymetList()){
					metDaymetInfo.setPermitFlg("1");
				}
			}
		}
		JSONArray jsobj = JSONArray.fromObject(metRoomInfo);
		setJsonMetRoomInfo(jsobj.toString());
		
		//Session里存检索条件
		SessionStore.setCondition(SessionStoreConstants.YC0020,getMetDate());
		return SUCCESS;
	}

	/**
	 * @param yc0020Service
	 *            the yc0020Service to set
	 */
	public void setYc0020Service(Yc0020Service yc0020Service) {
		this.yc0020Service = yc0020Service;
	}

	/**
	 * @return the metRoomInfo
	 */
	public List<MetRoomInfo> getMetRoomInfo() {
		return metRoomInfo;
	}

	/**
	 * @param metRoomInfo
	 *            the metRoomInfo to set
	 */
	public void setMetRoomInfo(List<MetRoomInfo> metRoomInfo) {
		this.metRoomInfo = metRoomInfo;
	}

	/**
	 * @return the metDate
	 */
	public String getMetDate() {
		return metDate;
	}

	/**
	 * @param metDate
	 *            the metDate to set
	 */
	public void setMetDate(String metDate) {
		this.metDate = metDate;
	}

	/**
	 * @return the nowTimeScale
	 */
	public Integer getNowTimeScale() {
		return nowTimeScale;
	}

	/**
	 * @param nowTimeScale
	 *            the nowTimeScale to set
	 */
	public void setNowTimeScale(Integer nowTimeScale) {
		this.nowTimeScale = nowTimeScale;
	}

	/**
	 * @return the today
	 */
	public String getToday() {
		return today;
	}

	/**
	 * @param today
	 *            the today to set
	 */
	public void setToday(String today) {
		this.today = today;
	}

	/**
	 * @return the jsonMetRoomInfo
	 */
	public String getJsonMetRoomInfo() {
		return jsonMetRoomInfo;
	}

	/**
	 * @param jsonMetRoomInfo
	 *            the jsonMetRoomInfo to set
	 */
	public void setJsonMetRoomInfo(String jsonMetRoomInfo) {
		this.jsonMetRoomInfo = jsonMetRoomInfo;
	}

	/**
	 * @return the sparkPopUpMsg
	 */
	public String getSparkPopUpMsg() {
		return sparkPopUpMsg;
	}

	/**
	 * @param sparkPopUpMsg the sparkPopUpMsg to set
	 */
	public void setSparkPopUpMsg(String sparkPopUpMsg) {
		this.sparkPopUpMsg = sparkPopUpMsg;
	}
	
}