/*
 * @(#)TreeSampleServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 树共通示例
 */

package com.yds.sample.service.impl;

import java.util.ArrayList;
import java.util.List;

import net.sf.json.JSONObject;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.bean.Node;
import com.yds.common.bean.Tree;
import com.yds.sample.service.TreeSampleService;
import com.yds.util.service.TreeUtil;

/**
 * 
 * @see com.yds.sample.service.TreeSampleService
 *
 */
@Service("treeSampleService")
public class TreeSampleServiceImpl extends AbstractBaseService implements TreeSampleService {
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Tree getTree() {
		Tree tree;
		
		//准备数据，开发中即从DB中检索的List(须按dispSeq排序)
		//实际开中应在dao中实现
		List<Node> nodes = new ArrayList<Node>();
		nodes.add(new Node("001", "公告信息", 1, "0100000000", "http://www.csdn.net"));
		nodes.add(new Node("002", "公告信息", 1, "0101000000", "http://www.csdn.net"));
		nodes.add(new Node("003", "简报发布", 1, "0102000000", "http://www.csdn.net"));
		nodes.add(new Node("004", "项目管理", 0, "0200000000", "http://www.csdn.net"));
		nodes.add(new Node("005", " 加班一览", 1, "0201000000", "http://www.csdn.net"));
		nodes.add(new Node("006", "会议室预约", 1, "0202000000", "http://www.csdn.net"));
		nodes.add(new Node("007", "考勤管理", 1, "0300000000", "http://www.csdn.net"));
		nodes.add(new Node("008", "个人年休统计", 1, "0301000000", "http://www.csdn.net"));
		nodes.add(new Node("009", "个人换休统计", 1, "0302000000", "http://www.csdn.net"));
		nodes.add(new Node("010", "漏考一览", 1, "0303000000", "http://www.csdn.net"));
		nodes.add(new Node("011", "请假申请", 1, "0304000000", "http://www.csdn.net"));
		nodes.add(new Node("012", "请假一览", 1, "0305000000", "http://www.csdn.net"));
		nodes.add(new Node("013", "设备管理", 1, "0400000000", "http://www.csdn.net"));
		nodes.add(new Node("014", "资料借阅", 0, "0500000000", "http://www.csdn.net"));
		nodes.add(new Node("015", "座位管理", 0, "0600000000", "http://www.csdn.net"));
		nodes.add(new Node("016", "门区管理", 0, "0700000000", "http://www.csdn.net"));
		nodes.add(new Node("017", "账号管理", 1, "0800000000", "http://www.csdn.net"));
		nodes.add(new Node("018", "口令修改", 1, "0801000000", "http://www.csdn.net"));
		nodes.add(new Node("019", "邮箱设定", 0, "0802000000", "http://www.csdn.net"));
		nodes.add(new Node("020", "维基百科", 1, "0900000000", "http://www.csdn.net"));
		nodes.add(new Node("021", "公司规定", 0, "1000000000", "http://www.csdn.net"));
		nodes.add(new Node("022", "点击离开", 1, "1100000000", "http://www.csdn.net"));
		nodes.add(new Node("023", "双击修改", 1, "1200000000", "http://www.csdn.net"));
		
		//根据检索的List生成树
		tree = TreeUtil.getTree(nodes);
		
		//设置root
		tree.setId("000");
		tree.setTxt("远东计算机社内网");
		
		return tree;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void saveTree(String json) {
		
		//取得二维结点
		List<Node> nodes;
		if(null != json) {
			JSONObject tree = JSONObject.fromObject(json);
			nodes = TreeUtil.getNodes(tree, 10);
			
			//删除虚拟根结点
			nodes.remove(0);
			
			//保存结点list
			
		}
	}
}
