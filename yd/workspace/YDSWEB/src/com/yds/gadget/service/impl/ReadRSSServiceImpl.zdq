/*
 * @(#)WeatherServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 活动桌面
 */
package com.yds.gadget.service.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.service.CommonConstants;
import com.yds.gadget.service.ReadRSSService;
import com.yds.util.bean.RSSCfgBean;
import com.yds.util.service.DateUtil;
import com.yds.util.service.RSS;

/**
 * @see com.yds.gadget.service.ReadRSSService
 * 
 */
@Service("readRSSService")
public class ReadRSSServiceImpl extends AbstractBaseService implements ReadRSSService {

	/** 缓存Map，用于存放最近读取的RSS内容，距上次读取时间超过CommonConstants.BUFFER_TIME秒的将再次读取 */
	private static Map<String, List<RSSCfgBean>> cacheMap = null;

	/**
	 * {@inheritDoc}
	 * @throws Exception 
	 */
	@Override
	public List<RSSCfgBean> getContent(String category, boolean forceRead) throws Exception {
		return getRSSContent(category,forceRead);
	}

	/**
	 * 取得RSS地址上的内容
	 * 
	 * @param type RSS地址的key
	 * @param forceRead 强制读取，不从内存缓存中读取
	 * @return RSS内容
	 * @throws Exception 
	 */
	private static  List<RSSCfgBean> getRSSContent(String type, boolean forceRead) throws Exception {

		List<RSSCfgBean> rssContent = null;


		// 缓存中为空的情况
		synchronized (ReadRSSServiceImpl.class){
			if (null == cacheMap) {
				cacheMap = new HashMap<String, List<RSSCfgBean>>();
			}
		
			// 优先从缓存中读取
			rssContent = cacheMap.get(type);
		}

		// 缓存中为空或者数据过久的情况(距上次读取超过CommonConstants.BUFFER_TIME秒)
		if (forceRead || null == rssContent || rssContent.size() == 0
				|| DateUtil.dateDiff(rssContent.get(0).getUpdateTime(), new Date()) > CommonConstants.BUFFER_TIME) {
			// 读取RSS
			rssContent = RSS.readRSSCfgByType(type, true);
			if (null == rssContent || rssContent.size()==0) {
				return rssContent;
			}
			// 添加读取时间戳
			for (RSSCfgBean site : rssContent){
				site.setUpdateTime(new Date());
			}
			// 将结果缓存于cacheMap中
			synchronized (ReadRSSServiceImpl.class){
				cacheMap.put(type , rssContent);
			}
		}

		return rssContent;

	}

}
