/*
 * @(#)ActiveDeskServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 活动桌面
 */
package com.yds.gadget.service.impl;

import java.util.List;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.service.SessionService;
import com.yds.gadget.bean.ActiveDeskInfo;
import com.yds.gadget.bean.GadgetInfo;
import com.yds.gadget.dao.ActiveDeskDao;
import com.yds.gadget.dao.ManageGadgetDao;
import com.yds.gadget.service.ActiveDeskService;

/**
 * @see com.yds.gadget.service.ActiveDeskService
 */
@Service("activeDeskService")
public class ActiveDeskServiceImpl extends AbstractBaseService implements ActiveDeskService {

	private ActiveDeskDao activeDeskDao;
	private ManageGadgetDao manageGadgetDao;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ActiveDeskInfo> getActiveDeskInfoList() {
		List<ActiveDeskInfo> deskList = activeDeskDao.getActiveDeskInfoList(SessionService.getLoginUserId());
		for (ActiveDeskInfo i : deskList) {
			i.setGadgetInfo(activeDeskDao.getGadgetInfo(i.getGadgetId()));
		}
		return deskList;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateDeskInfo(List<ActiveDeskInfo> deskInfoList) {
		for (int i = 0; i < deskInfoList.size(); i++) {
			deskInfoList.get(i).setUserId(SessionService.getLoginUserId());
			activeDeskDao.updateDeskInfo(deskInfoList.get(i));
		}
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateFoldStatus(int gadgetId, String foldFlg) {
		ActiveDeskInfo folaStatus = new ActiveDeskInfo();

		folaStatus.setGadgetId(gadgetId);
		folaStatus.setModeFlg(foldFlg);
		folaStatus.setUserId(SessionService.getLoginUserId());
		folaStatus.setLocationCol(-1);

		activeDeskDao.updateDeskInfo(folaStatus);

	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteGadget(int gadgetId) {
		ActiveDeskInfo delInfo = new ActiveDeskInfo();

		delInfo.setGadgetId(gadgetId);
		delInfo.setUserId(SessionService.getLoginUserId());

		activeDeskDao.deleteGadget(delInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertDefault() {
		List<GadgetInfo> defList = activeDeskDao.getDefGadget();
		ActiveDeskInfo cfg = new ActiveDeskInfo();
		cfg.setUserId(SessionService.getLoginUserId());
		cfg.setModeFlg("1");
		for (GadgetInfo g : defList) {
			cfg.setLocationCol(Integer.parseInt(g.getDefPos().substring(0, 2)));
			cfg.setLocationRow(Integer.parseInt(g.getDefPos().substring(2)));
			cfg.setGadgetId(g.getGadgetId());
			manageGadgetDao.addGadget(cfg);
		}
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteAll() {
		activeDeskDao.deleteAll(SessionService.getLoginUserId());
	}

	public void setActiveDeskDao(ActiveDeskDao activeDeskDao) {
		this.activeDeskDao = activeDeskDao;
	}

	public void setManageGadgetDao(ManageGadgetDao manageGadgetDao) {
		this.manageGadgetDao = manageGadgetDao;
	}
}
