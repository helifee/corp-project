/*
 * @(#)TTConstants.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 共通定数
 */

package com.yds.tt.manager.service;

/**
 * 共通定数
 * 
 * @author qianguorong
 * @version 1.00 2010/04/20
 */
public interface TtConstants {

	// ============ 自定义定数 Start ============
	// 填空题的分隔符号
	public static String BLANK_SEPARATER = "<aparter>";
	
	/**
	 * 教材浏览方式Enum.
	 */
	public static enum OPEN_MODE {
		/** 阅读模式. */
		VIEW("0"),
		/** 编辑编辑. */
		EDIT("1");

		private String value;

		OPEN_MODE(String value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "OPEN_MODE";
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}

	/**
	 * 画面重载方式Enum.
	 */
	public static enum RELOAD_FLG {
		/** 使用Session保存的条件检索画面. */
		P01("1"),
		/** 使用Session保存的画面信息. */
		P02("2");

		private String value;

		RELOAD_FLG(String value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "ReloadFlg";
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}

	/**
	 * 提醒消息模式Enum.
	 */
	public static enum REMIND_MODE {
		/** 教材等待审批. */
		JYY01("01"),
		/** 课程等待审批. */
		JYY02("02"),
		/** 教材取消提交. */
		JYY03("03"),
		/** 开课. */
		JYY04("04"),
		/** 停课. */
		JYY05("05"),
		/** 成绩已发布. */
		KSY01("06"),
		/** 考试等待审批. */
		KSY02("07"),
		/** 试卷等待审批. */
		KSY03("08"),
		/** 开始时间变更. */
		KSY04("09"),
		/** 考试发布. */
		KSY05("10"),
		/** 报名等待审批. */
		KSY06("11"),
		/** 报名即将截止. */
		KSY07("12"),
		/** 考试即将开始. */
		KSY08("13"),
		/** 考试结束，请评分. */
		KSY09("14");

		private String value;

		REMIND_MODE(String value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "REMIND_MODE";
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}

	/**
	 * 提醒消息FLG（显示位置）Enum.
	 */
	public static enum REMIND_FLG {
		/** 左方提醒栏显示. */
		LEFT(0),
		/** 上方信息栏显示. */
		TOP(1);

		private int value;

		REMIND_FLG(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "REMIND_FLG";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 系统维护标识Enum.
	 */
	public static enum SYSTEM_STATUS {
		/** 维护中. */
		CLOSED("1"),
		/** 开放中. */
		OPENING("0");

		private String value;

		SYSTEM_STATUS(String value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "SYSTEM_STATUS";
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	
	/**
	 * 默认封面图片名.
	 */
	public static final String DEFAULTCOVERNAME = "defaultCover.jpg";

	/**
	 * 上传文件名格式.
	 */
	public static final String FILENAMEFORMAT = "yyMMddHHmmssSSS";
	
	/**
	 * 时间戳检查用定数TIMESTAMPKEY.
	 */
	public static final String TIMESTAMPKEY = "TIMESTAMP";
	
	/**
	 * 系统名缩写.
	 */
	public static final String PREVTT = "TT";

	/**
	 * 全员.
	 */
	public static final String USER_ALL = "99999999";

	/**
	 * 文件路径Enum.
	 */
	public static enum FILE_PATH {
		/** 教材文件. */
		BOOK_FILE("yds.tt.path.book.file"),
		/** 教材图片. */
		BOOK_IMAGE("yds.tt.path.book.image"),
		/** 教材多媒体. */
		BOOK_MEDIA("yds.tt.path.book.media"),
		/** 试题文件. */
		QUESTION_FILE("yds.tt.path.question.file"),
		/** 试题图片. */
		QUESTION_IMAGE("yds.tt.path.question.image"),
		/** 试题多媒体. */
		QUESTION_MEDIA("yds.tt.path.question.media"),
		/** 试题标准答案. */
		QUESTION_ANSWER("yds.tt.path.question.answer"),
		/** 试题用户答案. */
		QUESTION_USERANSWER("yds.tt.path.question.useranswer");

		private String value;

		FILE_PATH(String value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "FILE_PATH";
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}

	/**
	 * 画面名称Enum.
	 */
	public static enum PageId {
		/** 超级管理员登录. */
		G010011("G010011"),
		/** 权限管理. */
		G010021("G010021"),
		/** 新建课程及权限分配. */
		J020011("J020011"),
		/** 课程检索一览. */
		J020021("J020021"),
		/** 课程详细（管理）. */
		J020031("J020031"),
		/** 课程详细（用户）. */
		J020041("J020041"),
		/** 新建教材及权限分配. */
		J030011("J030011"),
		/** 教材一览. */
		J030021("J030021"),
		/** 教材详细. */
		J030031("J030031"),
		/** 教材详细编辑. */
		J030041("J030041"),
		/** 教材内容编辑. */
		J030051("J030051"),
		/** 章节编辑. */
		J030061("J030061"),
		/** 教材内容浏览. */
		J030071("J030071"),
		/** 插入视频. */
		J030081("J030081"),
		/** 插入图片. */
		J030091("J030091"),
		/** 插入表格. */
		J030101("J030101"),
		/** 插入代码. */
		J030111("J030111"),
		/** 插入练习. */
		J030121("J030121"),
		/** 插入下载文件. */
		J030131("J030131"),
		/** 变更履历. */
		J030141("J030141"),
		/** 插入栏目框. */
		J030151("J030151"),
		/** 插入链接. */
		J030161("J030161"),
		/** 题库检索一览. */
		K040011("K040011"),
		/** 试题新建修改. */
		K040021("K040021"),
		/** 试题批量修改. */
		K040031("K040031"),
		/** 试题批量录入. */
		K040041("K040041"),
		/** 试题预览核对删除. */
		K040051("K040051"),
		/** 试卷新建及权限分配. */
		K050011("K050011"),
		/** 试卷一览. */
		K050021("K050021"),
		/** 试卷编辑. */
		K050031("K050031"),
		/** 试卷试题编辑. */
		K050041("K050041"),
		/** 试卷查看. */
		K050051("K050051"),
		/** 考试新建及权限分配. */
		K060011("K060011"),
		/** 考试详细（用户）. */
		K060021("K060021"),
		/** 考生答卷（整卷）. */
		K060031("K060031"),
		/** 考生答卷（单题）. */
		K060041("K060041"),
		/** 考试检索一览. */
		K060051("K060051"),
		/** 考试总体设定及生成. */
		K060061("K060061"),
		/** 考试详细(管理). */
		K060071("K060071"),
		/** 考试报名批准. */
		K060081("K060081"),
		/** 考试阅卷（整卷）. */
		K060091("K060091"),
		/** 考试阅卷（单题）. */
		K060101("K060101"),
		/** 评分任务分配. */
		K060111("K060111"),
		/** 考试评分详细. */
		K060121("K060121"),
		/** 考试选择. */
		K060131("K060131"),
		/** 课程选择. */
		K060141("K060141"),
		/** 区分表设置. */
		G080011("G080011"),
		/** 考试试卷生成一览. */
		K060151("K060151"),
		/** 成绩查询. */
		K070011("K070011"),
		/** 成绩一览. */
		K070021("K070021"),
		/** 成绩明细. */
		K070031("K070031"),
		/** 类别表设置. */
		G090011("G090011"),
		/** 主画面. */
		G100011("G100011"),
		/** 员工选择. */
		C100011("C100011"),
		/** 关键字选择. */
		C100021("C100021");

		private String value;

		PageId(String value) {
			this.value = value;
		}

		public String getSessionKeyTS() {
			return PREVTT + "_" + this.value + "_" + TIMESTAMPKEY;
		}

		public String getSessionKeyTSMode(Mode mode) {
			return PREVTT + "_" + this.value + "_" + mode.value() + "_"
					+ TIMESTAMPKEY;
		}

		public static String getEnumName() {
			return "PageId";
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}

	/**
	 * 通用画面模式modeEnum, 常数区分（C01-C42）没有定义的，可以使用.
	 */
	public static enum Mode {
		/** 新建/追加模式. */
		Insert_Mode("1"),
		/** 管理/更新模式. */
		Update_Mode("2"),
		/** 删除模式. */
		Delete_Mode("3"),
		/** 查看/参照模式（用户）. */
		User_View_Mode("4"),
		/** 查看/参照模式（管理）. */
		Manage_View_Mode("5"),
		/** 一览模式. */
		List_Mode("6"),
		/** 一览模式(追加/选择用). */
		List_Select_Mode("7"),
		/** 审批模式. */
		Approve_Mode("8"),
		/** 参照新建模式. */
		Copy_Insert_Mode("9"),
		/** 新建/追加模式. */
		Insert_Inner_Mode("10"),
		/** 管理/更新模式. */
		Update_Inner_Mode("11"),

		// ADD BY 万秋宏 J030011 START
		/** 新建/追加迁移画面不同模式. */
		Insert_Book_Mode("1"),
		/** 新建/追加迁移画面不同模式. */
		Insert_Course_Mode("2"),
		/** 管理/更新迁移画面不同模式. */
		Update_Book_Mode("3"),
		/** 管理/更新迁移画面不同模式. */
		Update_Course_Mode("4");
		// ADD BY 万秋宏 J030011 END

		private String value;

		Mode(String value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "Mode";
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}

	/**
	 * 序列号IDEnum .
	 */
	public static enum SEQID {
		/** 课程. */
		Course("KC"),
		/** 考试. */
		Examine("KS"),
		/** 教材. */
		Book("JC"),
		/** 试卷. */
		Paper("SJ"),
		/** 试题. */
		Question("ST"),
		/** 试卷生成号. */
		PaperSerial("SC"),
		/** 提醒信息. */
		Information("TX");

		private String value;

		SEQID(String value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "SEQID";
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}

	// ============ 自定义定数End ============

	// ============ 区分定数 Start ============
	/**
	 * 教材状态Enum.
	 */
	public static enum R01 {
		/** 编辑中. */
		R01_1(1),
		/** 待审批. */
		R01_2(2),
		/** 已发布. */
		R01_3(3),
		/** 不批准. */
		R01_4(4);

		private int value;

		R01(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R01";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 类型Enum.
	 */
	public static enum R02 {
		/** 考试. */
		R02_1(1),
		/** 练习. */
		R02_2(2);

		private int value;

		R02(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R02";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 试题题型Enum.
	 */
	public static enum R03 {
		/** 单选题. */
		R03_1(1),
		/** 多选题. */
		R03_2(2),
		/** 判断题. */
		R03_3(3),
		/** 填空题. */
		R03_4(4),
		/** 问答题. */
		R03_5(5),
		/** 上传题. */
		R03_6(6),
		/** 组合题. */
		R03_7(7);

		private int value;

		R03(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R03";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 核对状态Enum.
	 */
	public static enum R04 {
		/** 未核对. */
		R04_1(1),
		/** 已核对. */
		R04_2(2);

		private int value;

		R04(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R04";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 课程开课状态Enum.
	 */
	public static enum R05 {
		/** 未开课. */
		R05_1(1),
		/** 已开课. */
		R05_2(2),
		/** 停课. */
		R05_3(3);

		private int value;

		R05(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R05";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 课程审批状态Enum.
	 */
	public static enum R06 {
		/** 编辑中. */
		R06_1(1),
		/** 待审批. */
		R06_2(2),
		/** 已批准. */
		R06_3(3),
		/** 不批准. */
		R06_4(4);

		private int value;

		R06(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R06";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 权限区分Enum.
	 */
	public static enum R07 {
		/** 课程管理. */
		R07_1(1),
		/** 考试管理. */
		R07_2(2),
		/** 题库管理. */
		R07_3(3),
		/** 成绩查看. */
		R07_4(4),
		/** 区分管理. */
		R07_5(5);

		private int value;

		R07(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R07";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 考试计划状态Enum.
	 */
	public static enum R08 {
		/** 未申请批准. */
		R08_1(1),
		/** 等待批准. */
		R08_2(2),
		/** 已批准. */
		R08_3(3),
		/** 不批准. */
		R08_4(4),
		/** 已结束. */
		R08_5(5);

		private int value;

		R08(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R08";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 可否可被引用Enum.
	 */
	public static enum R09 {
		/** 可被引用. */
		R09_1(1),
		/** 不可被引用. */
		R09_2(2);

		private int value;

		R09(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R09";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 试卷状态Enum.
	 */
	public static enum R10 {
		/** 编辑中. */
		R10_1(1),
		/** 待审批. */
		R10_2(2),
		/** 已批准. */
		R10_3(3),
		/** 不批准. */
		R10_4(4);

		private int value;

		R10(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R10";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 大题类别Enum.
	 */
	public static enum R11 {
		/** 人工大题. */
		R11_1(1),
		/** 随机大题. */
		R11_2(2);

		private int value;

		R11(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R11";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 考试状态Enum.
	 */
	public static enum R12 {
		/** 编辑中. */
		R12_1(1),
		/** 等待审批. */
		R12_2(2),
		/** 考试已批准. */
		R12_3(3),
		/** 考试不批准. */
		R12_4(4),
		/** 报名结束. */
		R12_5(5),
		/** 报名已批准. */
		R12_6(6),
		/** 评分任务未分配. */
		R12_7(7),
		/** 评分任务已分配. */
		R12_8(8),
		/** 评分中. */
		R12_9(9),
		/** 评分已汇总. */
		R12_10(10),
		/** 成绩已发布. */
		R12_11(11);

		private int value;

		R12(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R12";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 员工考试状态Enum.
	 */
	public static enum R13 {
		/** 等待批准. */
		R13_1(1),
		/** 已批准. */
		R13_2(2),
		/** 不批准. */
		R13_3(3),
		/** 考试中. */
		R13_4(4),
		/** 未参加考试. */
		R13_5(5),
		/** 放弃考试. */
		R13_6(6),
		/** 成绩未发布. */
		R13_7(7),
		/** 成绩已发布. */
		R13_8(8);

		private int value;

		R13(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R13";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 工龄Enum.
	 */
	public static enum R14 {
		/** 一年. */
		R14_1(1),
		/** 两年. */
		R14_2(2),
		/** 三年. */
		R14_3(3);

		private int value;

		R14(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R14";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 分类状态Enum.
	 */
	public static enum R15 {
		/** 正常. */
		R15_0(0),
		/** 待删除. */
		R15_1(1),
		/** 已细化. */
		R15_2(2),
		/** 已删除. */
		R15_3(3);

		private int value;

		R15(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "R15";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 最新标记Enum.
	 */
	public static enum C01 {
		/** 非最新，履历一览上不显示. */
		C01_1(1),
		/** 最新的. */
		C01_2(2);

		private int value;

		C01(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C01";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 自动判题区分Enum.
	 */
	public static enum C02 {
		/** 全部自动判题. */
		C02_1(1),
		/** 存在手动判题. */
		C02_2(2);

		private int value;

		C02(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C02";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 图片标记Enum.
	 */
	public static enum C03 {
		/** 无图片文件. */
		C03_1(1),
		/** 有图片文件. */
		C03_2(2);

		private int value;

		C03(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C03";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 视频标记Enum.
	 */
	public static enum C04 {
		/** 无音频视频文件. */
		C04_1(1),
		/** 有音频视频文件. */
		C04_2(2);

		private int value;

		C04(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C04";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 附件标记Enum.
	 */
	public static enum C05 {
		/** 无上传文件. */
		C05_1(1),
		/** 有上传文件. */
		C05_2(2);

		private int value;

		C05(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C05";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 随机大题存在区分Enum.
	 */
	public static enum C06 {
		/** 有随机大题. */
		C06_1(1),
		/** 无随机大题. */
		C06_2(2);

		private int value;

		C06(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C06";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 选项表示方式区分Enum.
	 */
	public static enum C07 {
		/** 有随机大题. */
		C07_1(1),
		/** 无随机大题. */
		C07_2(2);

		private int value;

		C07(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C07";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 考试区分Enum.
	 */
	public static enum C08 {
		/** 普通考试. */
		C08_1(1),
		/** 随时考试. */
		C08_2(2),
		/** 试考试. */
		C08_3(3);

		private int value;

		C08(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C08";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 参阅答案区分Enum.
	 */
	public static enum C09 {
		/** 不允许考生在考试成绩发布后查看标准答案. */
		C09_1(1),
		/** 允许考生在考试成绩发布后查看标准答案. */
		C09_2(2);

		private int value;

		C09(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C09";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 再考试区分Enum.
	 */
	public static enum C10 {
		/** 不允许考生在通过考试后继续参加该考试. */
		C10_1(1),
		/** 允许考生在通过考试后继续参加该考试. */
		C10_2(2);

		private int value;

		C10(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C10";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 必考区分Enum.
	 */
	public static enum C11 {
		/** 对象不必参加考试. */
		C11_1(1),
		/** 对象必须参加考试. */
		C11_2(2);

		private int value;

		C11(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C11";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 针对对象类型Enum.
	 */
	public static enum C12 {
		/** 针对全员. */
		C12_1(1),
		/** 针对项目组. */
		C12_2(2),
		/** 工龄. */
		C12_3(3),
		/** 针对个人. */
		C12_4(4);

		private int value;

		C12(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C12";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 报名批准区分Enum.
	 */
	public static enum C13 {
		/** 报名不需要批准. */
		C13_1(1),
		/** 报名需要批准. */
		C13_2(2);

		private int value;

		C13(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C13";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 有效成绩区分Enum.
	 */
	public static enum C14 {
		/** 以多次考试中最高的成绩作为有效成绩，判定是否通过考试. */
		C14_1(1),
		/** 以最后一次考试的成绩作为有效成绩，判定是否通过考试. */
		C14_2(2);

		private int value;

		C14(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C14";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 评分任务分配方式区分Enum.
	 */
	public static enum C15 {
		/** 按试卷分配. */
		C15_1(1),
		/** 按大题分配. */
		C15_2(2);

		private int value;

		C15(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C15";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 分数汇总区分Enum.
	 */
	public static enum C16 {
		/** 分数未汇总. */
		C16_1(1),
		/** 分数已汇总. */
		C16_2(2);

		private int value;

		C16(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C16";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 试题区分Enum.
	 */
	public static enum C17 {
		/** 非组合题. */
		C17_1(1),
		/** 组合题. */
		C17_2(2),
		/** 组合题小题. */
		C17_3(3);

		private int value;

		C17(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C17";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 评分完成区分Enum.
	 */
	public static enum C18 {
		/** 已完成. */
		C18_1(1),
		/** 未完成. */
		C18_2(2);

		private int value;

		C18(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C18";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 必修区分Enum.
	 */
	public static enum C19 {
		/** 必修. */
		C19_1(1),
		/** 非必修. */
		C19_2(2);

		private int value;

		C19(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C19";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 操作模式Enum.
	 */
	public static enum C20 {
		/** 查看. */
		C20_1(1),
		/** 编辑. */
		C20_2(2),
		/** 审批. */
		C20_3(3),
		/** 删除. */
		C20_4(4),
		/** 管理. */
		C20_5(5),
		/** 新建. */
		C20_6(6),
		/** 参与. */
		C20_7(7),
		/** 参照新建. */
		C20_8(8);

		private int value;

		C20(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C20";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 是否通过Enum.
	 */
	public static enum C21 {
		/** 通过. */
		C21_1(1),
		/** 未通过. */
		C21_2(2);

		private int value;

		C21(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C21";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 人数Enum.
	 */
	public static enum C22 {
		/** 单人. */
		C22_1(1),
		/** 多人. */
		C22_2(2);

		private int value;

		C22(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C22";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 操作权限Enum.
	 */
	public static enum C23 {
		/** 查看. */
		C23_1(1),
		/** 编辑. */
		C23_2(2),
		/** 审批. */
		C23_3(3),
		/** 删除. */
		C23_4(4),
		/** 新建. */
		C23_5(5),
		/** 整合. */
		C23_6(6);

		private int value;

		C23(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C23";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 权限Enum.
	 */
	public static enum C24 {
		/** 课程管理. */
		C24_1(1),
		/** 考试管理. */
		C24_2(2),
		/** 题库管理. */
		C24_3(3),
		/** 成绩查看. */
		C24_4(4),
		/** 系统维护. */
		C24_5(5),
		/** 课程编辑. */
		C24_6(6),
		/** 教材编辑. */
		C24_7(7),
		/** 考试编辑. */
		C24_8(8),
		/** 试卷编辑. */
		C24_9(9),
		/** 课程审批. */
		C24_10(10),
		/** 教材审批. */
		C24_11(11),
		/** 考试审批. */
		C24_12(12),
		/** 试卷审批. */
		C24_13(13);

		private int value;

		C24(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C24";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 删除标识Enum.
	 */
	public static enum C25 {
		/** 未删除. */
		C25_1(1),
		/** 已删除. */
		C25_2(2);

		private int value;

		C25(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C25";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 教材一览模式Enum.
	 */
	public static enum C26 {
		/** 追加. */
		C26_1(1),
		/** 一览. */
		C26_2(2);

		private int value;

		C26(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C26";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 试题编辑模式Enum.
	 */
	public static enum C27 {
		/** 题库新建. */
		C27_1(1),
		/** 练选新建. */
		C27_2(2),
		/** 考选新建. */
		C27_3(3),
		/** 题库修改. */
		C27_4(4),
		/** 练选修改. */
		C27_5(5),
		/** 考选修改. */
		C27_6(6),
		/** 参照. */
		C27_7(7);

		private int value;

		C27(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C27";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 题库画面模式Enum.
	 */
	public static enum C28 {
		/** 题库管理. */
		C28_1(1),
		/** 练习选题. */
		C28_2(2),
		/** 考试选题. */
		C28_3(3);

		private int value;

		C28(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C28";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 试题预览核对删除画面打开模式Enum.
	 */
	public static enum C29 {
		/** 题库预览. */
		C29_1(1),
		/** 有修改核对. */
		C29_2(2),
		/** 题库删除. */
		C29_3(3),
		/** 题库确认. */
		C29_4(4),
		/** 无修改核对. */
		C29_5(5),
		/** 考试卷预览. */
		C29_6(6),
		/** 练习卷预览. */
		C29_7(7),
		/** 考试卷新建确认. */
		C29_8(8),
		/** 考试卷修改确认. */
		C29_9(9),
		/** 练习卷新建确认. */
		C29_10(10),
		/** 练习卷修改确认. */
		C29_11(11);

		private int value;

		C29(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C29";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 提醒内容Enum.
	 */
	public static enum C30 {
		/** 报名开始. */
		C30_1(1),
		/** 报名截止. */
		C30_2(2),
		/** 考试日期已到. */
		C30_3(3),
		/** 考试结束. */
		C30_4(4),
		/** 报名已批准. */
		C30_5(5),
		/** 等待评分. */
		C30_6(6),
		/** 等待审批. */
		C30_7(7);

		private int value;

		C30(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C30";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 不整合类型Enum.
	 */
	public static enum C31 {
		/** 待删除. */
		C31_1(1),
		/** 已细化. */
		C31_2(2);

		private int value;

		C31(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C31";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 关注度Enum.
	 */
	public static enum C32 {
		/** 关注. */
		C32_1(1),
		/** 普通. */
		C32_2(2),
		/** 不关注. */
		C32_3(3);

		private int value;

		C32(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C32";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 教材详细模式Enum.
	 */
	public static enum C33 {
		/** 用户查看. */
		C33_1(1),
		/** 管理查看. */
		C33_2(2),
		/** 审批. */
		C33_3(3),
		/** 删除. */
		C33_4(4);

		private int value;

		C33(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C33";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 资料类型Enum.
	 */
	public static enum C34 {
		/** 多媒体. */
		C34_1(1),
		/** 图片. */
		C34_2(2),
		/** 下载文件. */
		C34_3(3);

		private int value;

		C34(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C34";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 当前任务状态Enum.
	 */
	public static enum C35 {
		/** 不在评分. */
		C35_1(1),
		/** 正在评分. */
		C35_2(2),
		/** 正在分配. */
		C35_3(3);

		private int value;

		C35(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C35";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 评定等级数量Enum.
	 */
	public static enum C36 {
		/** 2档. */
		C36_2(2),
		/** 3档. */
		C36_3(3),
		/** 4档. */
		C36_4(4),
		/** 5档. */
		C36_5(5);

		private int value;

		C36(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C36";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 考试通过档次Enum.
	 */
	public static enum C37 {
		/** 第1档. */
		C37_1(1),
		/** 第2档. */
		C37_2(2),
		/** 第3档. */
		C37_3(3),
		/** 第4档. */
		C37_4(4),
		/** 第5档. */
		C37_5(5);

		private int value;

		C37(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C37";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 循环考试方式Enum.
	 */
	public static enum C38 {
		/** 按年循环. */
		C38_1(1),
		/** 按月循环. */
		C38_2(2),
		/** 按周循环. */
		C38_3(3);

		private int value;

		C38(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C38";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 评分对象区分Enum.
	 */
	public static enum C39 {
		/** 普通考试评分. */
		C39_1(1),
		/** 随时考试评分. */
		C39_2(2),
		/** 练习评分. */
		C39_3(3);

		private int value;

		C39(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C39";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 按年循环考试日期(月)Enum.
	 */
	public static enum C40 {
		/** 1月. */
		C40_1(1),
		/** 2月. */
		C40_2(2),
		/** 3月. */
		C40_3(3),
		/** 4月. */
		C40_4(4),
		/** 5月. */
		C40_5(5),
		/** 6月. */
		C40_6(6),
		/** 7月. */
		C40_7(7),
		/** 8月. */
		C40_8(8),
		/** 9月. */
		C40_9(9),
		/** 10月. */
		C40_10(10),
		/** 11月. */
		C40_11(11),
		/** 12月. */
		C40_12(12);

		private int value;

		C40(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C40";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 按月循环考试日期(日)Enum.
	 */
	public static enum C41 {
		/** 1日. */
		C41_1(1),
		/** 2日. */
		C41_2(2),
		/** 3日. */
		C41_3(3),
		/** 4日. */
		C41_4(4),
		/** 5日. */
		C41_5(5),
		/** 6日. */
		C41_6(6),
		/** 7日. */
		C41_7(7),
		/** 8日. */
		C41_8(8),
		/** 9日. */
		C41_9(9),
		/** 10日. */
		C41_10(10),
		/** 11日. */
		C41_11(11),
		/** 12日. */
		C41_12(12),
		/** 13日. */
		C41_13(13),
		/** 14日. */
		C41_14(14),
		/** 15日. */
		C41_15(15),
		/** 16日. */
		C41_16(16),
		/** 17日. */
		C41_17(17),
		/** 18日. */
		C41_18(18),
		/** 19日. */
		C41_19(19),
		/** 20日. */
		C41_20(20),
		/** 21日. */
		C41_21(21),
		/** 22日. */
		C41_22(22),
		/** 23日. */
		C41_23(23),
		/** 24日. */
		C41_24(24),
		/** 25日. */
		C41_25(25),
		/** 26日. */
		C41_26(26),
		/** 27日. */
		C41_27(27),
		/** 28日. */
		C41_28(28);

		private int value;

		C41(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C41";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 按周循环考试日期Enum.
	 */
	public static enum C42 {
		/** 一. */
		C42_1(1),
		/** 二. */
		C42_2(2),
		/** 三. */
		C42_3(3),
		/** 四. */
		C42_4(4),
		/** 五. */
		C42_5(5);

		private int value;

		C42(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C42";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 对象区分名Enum.
	 */
	public static enum C43 {
		/** 课程. */
		C43_1(1),
		/** 教材. */
		C43_2(2),
		/** 考试. */
		C43_3(3),
		/** 考试卷. */
		C43_4(4),
		/** 练习卷. */
		C43_5(5),
		/** 试题. */
		C43_6(6);

		private int value;

		C43(int value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "C43";
		}

		@Override
		public String toString() {
			return Integer.toString(this.value);
		}

		public int value() {
			return this.value;
		}
	}

	/**
	 * 试题难度Enum.
	 */
	public static enum E01 {
		/** 难. */
		E01_1("1"),
		/** 中. */
		E01_2("2"),
		/** 易. */
		E01_3("3");

		private String value;

		E01(String value) {
			this.value = value;
		}

		public static String getEnumName() {
			return "E01";
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	// ============ 区分定数 End ============
}
