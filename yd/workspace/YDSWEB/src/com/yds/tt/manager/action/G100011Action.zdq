/*
 * @(#)G100011Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 管理子系统
 */

package com.yds.tt.manager.action;

import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.Preparable;
import com.yds.base.action.BasePagerAction;
import com.yds.common.bean.PagerInfo;
import com.yds.common.bean.SysCodeInfo;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.SysCodeInfoService;
import com.yds.tt.manager.bean.MessageReminding;
import com.yds.tt.manager.bean.PermRequestInfo;
import com.yds.tt.manager.service.G100011Service;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtExclusiveException;
import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.training.bean.Bookmark;
import com.yds.tt.training.bean.J020021SearchInfo;

/**
 * 画面的初期显示 主画面
 * 
 * @author liuyiwei
 * @version 1.00 2010/03/30
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("g100011Action")
public class G100011Action extends BasePagerAction implements Preparable{

	private static final long serialVersionUID = 4186428413506240095L;
	private G100011Service g100011Service;
	private SysCodeInfoService sysCodeInfoService;
	private TtCommonService ttCommonService;
	
	private String errorMessage;							//错误信息
	private List<Bookmark> bookMarkList;					//书签列表信息
	private Bookmark bookMarkInfo;							//书签信息
	private String bookId;									//教材ID
	
	private List<MessageReminding> messageRemindingList;	//提醒消息列表信息
	private MessageReminding messageRemindingInfo;			//提醒消息信息
	private String informationId;							//提醒消息ID
	
	private int pageNumber;//当前页
	private PagerInfo pager;//页面显示用到的参数
	private PagerInfo pager1;//页面显示用到的参数
	private J020021SearchInfo courseInfo;					//课程检索条件
	private List<J020021SearchInfo> courseInfoList;			//课程一览信息
	private ExamineInfo examineInfo;						//考试检索条件
	private List<ExamineInfo> examineInfoList;				//考试一览信息
	private List<SysCodeInfo> attentionFlagList;				//关注下拉框内容
	private List<SysCodeInfo> examineStatusList;				//状态下拉框内容
	private String sysDate;										//系统日期
	private String messageRemindingMarquee;					//上方信息栏显示的信息
	
	private List<SysCodeInfo> permRqstList;	//要申请的权限下拉框内容
	private PermRequestInfo permRequestInfo;//要申请的权限信息
	
	@Override
	public void prepare() throws Exception {
		
		//取得要申请的权限下拉框内容
		this.permRqstList = ttCommonService.getMaintAuthorityList();
	}
	/**
	 * 画面的初期显示
	 * 
	 * @return SUCCESS
	 */
	@Override
	public String execute() throws Exception {

        //上方信息栏显示的信息取得
        setMessageRemindingMarquee(g100011Service.getMessageRemindingMarquee());
		//取得书签列表
		this.bookMarkList = g100011Service.getBookMarkList();
		//取得提醒消息列表
		this.messageRemindingList = g100011Service.getMessageRemindingList();
		//取得关注下拉框内容
		this.attentionFlagList = sysCodeInfoService.getSysCodeInfo("C32");
		//取得状态下拉框内容
		this.examineStatusList = sysCodeInfoService.getSysCodeInfo("R13");
		//检索课程一览
		searchCourseInfoList();
		//检索考试一览
		searchExamineInfoList();
	
		return SUCCESS;
	}
	
	/**
	 * 画面初期表示（课程检索一览）
	 * 
	 * @return SUCCESS
	 */
	public String initSearchCourseInfoList() throws Exception {

		//取得关注下拉框内容
		this.attentionFlagList = sysCodeInfoService.getSysCodeInfo("C32");

		//检索课程一览
		searchCourseInfoList();
	
		return SUCCESS;
	}
	
	/**
	 * 检索课程一览
	 * 
	 * @return SUCCESS
	 */
	public String searchCourseInfoList(){
		// 设置下拉列表
		pager = this.getPagerinfo(pager, g100011Service.getCourseCount(courseInfo), 
				"g100011SearchCourseInfoList.action",5);
		//取得课程一览列表
		this.courseInfoList = g100011Service.getCourseInfoList(pager.getOffset().intValue(),
				pager.getPerDisplayCount().intValue(),courseInfo);
		return SUCCESS;
	}
	
	/**
	 * 画面初期表示（考试检索一览）
	 * 
	 * @return SUCCESS
	 */
	public String initSearchExamineInfoList() throws Exception {

		//取得状态下拉框内容
		this.examineStatusList = sysCodeInfoService.getSysCodeInfo("R13");

		//检索考试一览
		searchExamineInfoList();
	
		return SUCCESS;
	}
	
	/**
	 * 检索考试一览
	 * 
	 * @return SUCCESS
	 */
	public String searchExamineInfoList(){
		// 设置下拉列表
		pager1 = this.getPagerinfo(pager1, g100011Service.getExamineCount(examineInfo), 
				"g100011SearchExamineInfoList.action",5);
		//取得课程一览列表
		this.examineInfoList = g100011Service.getExamineInfoList(pager1.getOffset().intValue(),
				pager1.getPerDisplayCount().intValue(),examineInfo);
		return SUCCESS;
	}
	
	/**
	 * 分页参数设置
	 * 
	 * @param pagey
	 *            分页信息
	 * @param totalCount
	 *            总记录数
	 * @param pagerActionName
	 *            请求action名称
	 * @param perDisplayCount
	 *            每页显示的记录数
	 */
	private PagerInfo getPagerinfo(PagerInfo pagey, Long totalCount,
			String pagerActionName,Integer perDisplayCount) {
		/*
		 * 判断页面是否首次进入。首次进入时pager对象为空，此时初始化pager对象。
		 */
		PagerInfo pagex = new PagerInfo();
		if (pagey == null) {
			pagex.setTotalCount(totalCount); // 总记录数。
			pageNumber = 1; // 当前页码。
			pagex.setOffset(0); // 从第offset条记录开始查询。

			// 每页显示的记录数
			pagex.setPerDisplayCount(perDisplayCount);
			pagex.setTotalPagesCount(totalCount, perDisplayCount);

			pagex.setPagerIndexCount(CommonConstants.PAGER_INDEX_COUNT); // 分页导航条最多显示的页码数。
			pagex.setPagerActionName(pagerActionName); // 请求action名称。
			pagex.setPageNumber(pageNumber);

		} else {
			pagex.setOffset(pagey.getOffset());
			pagex.setTotalCount(totalCount); // 总记录数。
			pagex.setPageNumber(pageNumber);

			pagex.setPerDisplayCount(perDisplayCount);
			pagex.setTotalPagesCount(totalCount, perDisplayCount);
			pagex.setPagerIndexCount(CommonConstants.PAGER_INDEX_COUNT); // 分页导航条最多显示的页码数。
			pagex.setPagerActionName(pagerActionName); // 请求action名称。
		}

		return pagex;
	}
	
	/**
	 * 删除书签信息
	 */
	public String delBookMark(){
		//删除条件编辑
		bookMarkInfo = new Bookmark();
		bookMarkInfo.setBookId(bookId);
		try{
			g100011Service.deleteBookMark(bookMarkInfo);
		} catch (TtExclusiveException e){
			errorMessage = propMgr.getMessage("yds.tt.error.KSE56");
			return ERROR;			
		}
		
		//取得书签列表再检索
		this.bookMarkList = g100011Service.getBookMarkList();

		return SUCCESS;
	}
	/**
	 * 提醒信息更新处理
	 */
	public String updateLoseTime(){
		//更新条件编辑
		messageRemindingInfo = new MessageReminding();
		messageRemindingInfo.setInformationId(informationId);
		try{
			g100011Service.updateLoseTime(messageRemindingInfo);
		} catch (TtExclusiveException e){
			errorMessage = propMgr.getMessage("yds.tt.error.KSE56");
			return ERROR;			
		}
		this.errorMessage = SUCCESS;
		return SUCCESS;
	}
	
	/**
	 * 权限申请弹出初期表示
	 * 
	 * @return SUCCESS
	 */
	public String loadPagePermRequest() throws Exception {
		
		return SUCCESS;
	}
	
	/**
	 * 登录权限申请信息
	 * 
	 * @return SUCCESS
	 */
	public String insertPermRequest() throws Exception {
		
		g100011Service.insertPermRequest(permRequestInfo);
		//提交成功清空画面数据用
		//putOpTip(propMgr.getMessage("yds.tt.info.GTT02"));
		errorMessage= propMgr.getMessage("yds.tt.info.GLT05");		
		return SUCCESS;
	}

	/**
	 * 追加校验
	 * 
	 */
	public void validateInsertPermRequest(){
		
		// 开始时间与结束时间校验
		if (null != this.permRequestInfo){
			
			if((null != this.permRequestInfo.getStartTime() && this.permRequestInfo.getStartTime().length() > 0)
					&& (null != this.permRequestInfo.getEndTime()&& this.permRequestInfo.getEndTime().length() > 0)){
				
				if(0 < this.permRequestInfo.getStartTime().compareTo(
					   this.permRequestInfo.getEndTime())){
					this.addFieldError("permRequestInfo.startTime", 
							propMgr.getMessage("yds.tt.error.KSE17"));
				}
			}
		}
		return ;
	}
	
	/**
	 * @return the bookMarkList
	 */
	public List<Bookmark> getBookMarkList() {
		return bookMarkList;
	}
	/**
	 * @param bookMarkList the bookMarkList to set
	 */
	public void setBookMarkList(List<Bookmark> bookMarkList) {
		this.bookMarkList = bookMarkList;
	}
	/**
	 * @return the bookMarkInfo
	 */
	public Bookmark getBookMarkInfo() {
		return bookMarkInfo;
	}
	/**
	 * @param bookMarkInfo the bookMarkInfo to set
	 */
	public void setBookMarkInfo(Bookmark bookMarkInfo) {
		this.bookMarkInfo = bookMarkInfo;
	}
	/**
	 * @param service the g100011Service to set
	 */
	public void setG100011Service(G100011Service service) {
		g100011Service = service;
	}
	/**
	 * @return the bookId
	 */
	public String getBookId() {
		return bookId;
	}
	/**
	 * @param bookId the bookId to set
	 */
	public void setBookId(String bookId) {
		this.bookId = bookId;
	}
	/**
	 * @return the messageRemindingList
	 */
	public List<MessageReminding> getMessageRemindingList() {
		return messageRemindingList;
	}
	/**
	 * @param messageRemindingList the messageRemindingList to set
	 */
	public void setMessageRemindingList(List<MessageReminding> messageRemindingList) {
		this.messageRemindingList = messageRemindingList;
	}
	/**
	 * @return the messageRemindingInfo
	 */
	public MessageReminding getMessageRemindingInfo() {
		return messageRemindingInfo;
	}
	/**
	 * @param messageRemindingInfo the messageRemindingInfo to set
	 */
	public void setMessageRemindingInfo(MessageReminding messageRemindingInfo) {
		this.messageRemindingInfo = messageRemindingInfo;
	}
	/**
	 * @return the informationId
	 */
	public String getInformationId() {
		return informationId;
	}
	/**
	 * @param informationId the informationId to set
	 */
	public void setInformationId(String informationId) {
		this.informationId = informationId;
	}
	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}
	/**
	 * @param errorMessage the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}
	/**
	 * @return the courseInfo
	 */
	public J020021SearchInfo getCourseInfo() {
		return courseInfo;
	}
	/**
	 * @param courseInfo the courseInfo to set
	 */
	public void setCourseInfo(J020021SearchInfo courseInfo) {
		this.courseInfo = courseInfo;
	}
	/**
	 * @return the courseInfoList
	 */
	public List<J020021SearchInfo> getCourseInfoList() {
		return courseInfoList;
	}
	/**
	 * @param courseInfoList the courseInfoList to set
	 */
	public void setCourseInfoList(List<J020021SearchInfo> courseInfoList) {
		this.courseInfoList = courseInfoList;
	}
	/**
	 * @return the attentionFlagList
	 */
	public List<SysCodeInfo> getAttentionFlagList() {
		return attentionFlagList;
	}
	/**
	 * @param attentionFlagList the attentionFlagList to set
	 */
	public void setAttentionFlagList(List<SysCodeInfo> attentionFlagList) {
		this.attentionFlagList = attentionFlagList;
	}
	/**
	 * @return the sysCodeInfoService
	 */
	public SysCodeInfoService getSysCodeInfoService() {
		return sysCodeInfoService;
	}
	/**
	 * @param sysCodeInfoService the sysCodeInfoService to set
	 */
	public void setSysCodeInfoService(SysCodeInfoService sysCodeInfoService) {
		this.sysCodeInfoService = sysCodeInfoService;
	}

	/**
	 * @return the pageNumber
	 */
	public int getPageNumber() {
		return pageNumber;
	}

	/**
	 * @param pageNumber the pageNumber to set
	 */
	public void setPageNumber(int pageNumber) {
		this.pageNumber = pageNumber;
	}

	/**
	 * @return the pager
	 */
	public PagerInfo getPager() {
		return pager;
	}

	/**
	 * @param pager the pager to set
	 */
	public void setPager(PagerInfo pager) {
		this.pager = pager;
	}

	/**
	 * @return the pager1
	 */
	public PagerInfo getPager1() {
		return pager1;
	}

	/**
	 * @param pager1 the pager1 to set
	 */
	public void setPager1(PagerInfo pager1) {
		this.pager1 = pager1;
	}

	/**
	 * @return the examineInfo
	 */
	public ExamineInfo getExamineInfo() {
		return examineInfo;
	}

	/**
	 * @param examineInfo the examineInfo to set
	 */
	public void setExamineInfo(ExamineInfo examineInfo) {
		this.examineInfo = examineInfo;
	}

	/**
	 * @return the examineInfoList
	 */
	public List<ExamineInfo> getExamineInfoList() {
		return examineInfoList;
	}

	/**
	 * @param examineInfoList the examineInfoList to set
	 */
	public void setExamineInfoList(List<ExamineInfo> examineInfoList) {
		this.examineInfoList = examineInfoList;
	}

	/**
	 * @return the examineStatusList
	 */
	public List<SysCodeInfo> getExamineStatusList() {
		return examineStatusList;
	}

	/**
	 * @param examineStatusList the examineStatusList to set
	 */
	public void setExamineStatusList(List<SysCodeInfo> examineStatusList) {
		this.examineStatusList = examineStatusList;
	}

	/**
	 * @return the sysDate
	 */
	public String getSysDate() {
		return sysDate;
	}

	/**
	 * @param sysDate the sysDate to set
	 */
	public void setSysDate(String sysDate) {
		this.sysDate = sysDate;
	}

	/**
	 * @return the messageRemindingMarquee
	 */
	public String getMessageRemindingMarquee() {
		return messageRemindingMarquee;
	}

	/**
	 * @param messageRemindingMarquee the messageRemindingMarquee to set
	 */
	public void setMessageRemindingMarquee(String messageRemindingMarquee) {
		this.messageRemindingMarquee = messageRemindingMarquee;
	}
	/**
	 * @return the permRqstList
	 */
	public List<SysCodeInfo> getPermRqstList() {
		return permRqstList;
	}
	/**
	 * @param permRqstList the permRqstList to set
	 */
	public void setPermRqstList(List<SysCodeInfo> permRqstList) {
		this.permRqstList = permRqstList;
	}
	/**
	 * @return the permRequestInfo
	 */
	public PermRequestInfo getPermRequestInfo() {
		return permRequestInfo;
	}
	/**
	 * @param permRequestInfo the permRequestInfo to set
	 */
	public void setPermRequestInfo(PermRequestInfo permRequestInfo) {
		this.permRequestInfo = permRequestInfo;
	}
	/**
	 * @param tCommonService the tCommonService to set
	 */
	public void setTtCommonService(TtCommonService tCommonService) {
		this.ttCommonService = tCommonService;
	}
	/**
	 * @return the tCommonService
	 */
	public TtCommonService getTtCommonService() {
		return ttCommonService;
	}
}
