/*
 * @(#)G010021Service.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 权限管理
 */

package com.yds.tt.manager.service;

import java.util.List;

import com.yds.tt.manager.bean.G010021aInfo;

/**
 * 权限管理
 * 
 * @author guozhizhou
 * @version 1.00 2010/03/15
 */
public interface G010021Service {

	/**
	 * 取得维护权限信息一览 
	 * 
	 * @param  param
	 *          检索条件信息
	 * @param  offset 
	 *          取得维护权限信息 
	 * @param  perCounts
	 *          取得翻页信息
	 * @return G010021aInfo 维护权限信息一览 
	 */
	public List<G010021aInfo> getG010021aInfo(G010021aInfo param, int offset , int perCounts);
	
	/**
	 * 权限申请信息一览 
	 * 
	 * @param  application
	 *          检索条件信息
	 * @param  offset 
	 *          取得权限申请信息 
	 * @param  perCounts
	 *          取得翻页信息
	 * @return G010021aInfo 权限申请信息一览 
	 */
	public List<G010021aInfo> getG010021ApplicationInfo(G010021aInfo application, int offset , int perCounts);
	
	/**
	 * 取得其他权限信息一览 
	 * 
	 * @param  simple
	 *          检索条件信息
	 * @param  offset 
	 *          取得其他权限信息 
	 * @param  perCounts
	 *          取得翻页信息
	 * @return G010021aInfo 其他权限信息一览 
	 */
	public List<G010021aInfo> getG010021OtherInfo(G010021aInfo simple, int offset , int perCounts);
	
	/**
	 * 取得权限信息总数(分页)
	 * 
	 * @return 权限信息总数
	 */
	public Long getTotalCount();
	
	/**
	 * 排他检查
	 * 
	 * @return 更新登录者登录时间stampCheck检查结果 true 一致
	 */
	public boolean stampCheck();
	
	/**
	 * 排他检查
	 * 
	 * @param g010021aInfo
	 *            维护权限分配信息
	 * @return sameAuthority检查结果重复件数
	 */
	public Long sameAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 排他检查
	 * 
	 *  @param g010021aInfo
	 *            其他权限分配信息
	 * @return sameOtherAuthority检查结果重复件数
	 */
	public Long sameOtherAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 排他检查
	 * 
	 * @param g010021aInfo
	 *            维护权限分配信息
	 * @return sameUpdateAuthority检查结果重复件数
	 */
	public Long sameUpdateAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 排他检查
	 * 
	 *  @param g010021aInfo
	 *            其他权限分配信息
	 * @return sameUpdateOtherAuthority检查结果重复件数
	 */
	public Long sameUpdateOtherAuthority(G010021aInfo g010021aInfo);

	/**
	 * 取得权限申请一览总数(分页)
	 * 
	 * @return 权限申请一览总数
	 */

	public Long getTotalCountApplication();
	
	/**
	 * 取得权限信息总数(分页)
	 * 
	 * @return 权限信息总数
	 */
	public Long getTotalCountOther();
	
	/**
	 * 添加维护权限分配信息
	 * 
	 * @param g010021aInfo
	 *            维护权限分配信息
	 * @return true/false
	 */
	public boolean insertAuthority(G010021aInfo g010021aInfo);

	/**
	 * 添加其他权限分配信息
	 * 
	 * @param g010021aInfo
	 *            其他权限分配信息
	 * @return true/false
	 */
	public boolean insertOtherAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 修改维护权限分配信息
	 * 
	 * @param g010021aInfo
	 *            维护权限分配信息
	 * @return 更新行数
	 */
	public boolean updateAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 修改其他权限分配信息
	 * 
	 * @param g010021aInfo
	 *            其他权限分配信息
	 * @return 更新行数
	 */
	public boolean updateOtherAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 修改密码维护信息
	 * 
	 * @param g010021aInfo
	 *            密码信息
	 * @return 更新行数
	 */
	public boolean updatePasswordName(G010021aInfo g010021aInfo);

	/**
	 * 删除维护权限分配信息
	 * 
	 * @param g010021aInfo
	 *            员工ID,权限区分,一级分类ID,二级分类ID,三级分类ID,开始时间
	 * @return 删除行数
	 */
	public boolean deleteAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 删除其他权限分配信息
	 * 
	 * @param g010021aInfo
	 *            员工ID,权限区分,开始时间
	 * @return 删除行数
	 */
	public boolean deleteOtherAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 删除权限申请一览信息
	 * 
	 * @param g010021aInfo
	 *            员工ID,权限区分
	 * @return 删除行数
	 */
	public boolean deleteApplicationAuthority(G010021aInfo g010021aInfo);
	
}
