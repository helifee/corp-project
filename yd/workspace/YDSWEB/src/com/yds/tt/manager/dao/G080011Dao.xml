<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="G080011Dao">

	<typeAlias alias="CategoryBusinessBean" type="com.yds.tt.manager.bean.G080011CategoryInfo"/>
	<typeAlias alias="DiffBusinessBean" type="com.yds.tt.manager.bean.G080011Differentiation"/>
	<typeAlias alias="UnconformityDataBean" type="com.yds.tt.manager.bean.G080011UnconformityDataInfo"/>
	
	<!-- 分类ID检索条件SQL -->
	<sql id="categoryIdSelectCondition">
		<isGreaterThan prepend="AND" property="category1Id" compareValue="0">
			CATEGORY1_ID = #category1Id#
		</isGreaterThan>
		<isGreaterThan prepend="AND" property="category2Id" compareValue="0">
			CATEGORY2_ID = #category2Id#
		</isGreaterThan>
		<isGreaterThan prepend="AND" property="category3Id" compareValue="0">
			CATEGORY3_ID = #category3Id#
		</isGreaterThan>
	</sql>
	
	<!-- 分类名取得SQL -->
	<sql id="getCategoryNameItem">
		CONCAT
			(CASE T1.CATEGORY1_ID 
				WHEN 0 THEN ""
				ELSE 
					(SELECT CATEGORY_NAME 
					   FROM TT_FENLEI
					  WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
							CATEGORY_LEVEL = 1)
			END,
			CASE T1.CATEGORY2_ID
				WHEN 0 THEN ""
				ELSE CONCAT("-",(SELECT CATEGORY_NAME 
							FROM TT_FENLEI
						   WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
								 CATEGORY2_ID = T1.CATEGORY2_ID AND
								 CATEGORY_LEVEL = 2))
			END ,
			CASE T1.CATEGORY3_ID
				WHEN 0 THEN ""
				ELSE CONCAT("-",(SELECT CATEGORY_NAME 
							FROM TT_FENLEI 
						   WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
								 CATEGORY2_ID = T1.CATEGORY2_ID AND
								 CATEGORY3_ID = T1.CATEGORY3_ID AND
								 CATEGORY_LEVEL = 3))
			END) AS categoryName,
	</sql>
	
	<!-- 连接分类视图SQL -->
	<sql id="joinCategoryView">
		JOIN V_TT_FENLEI T2 
		ON 
		(T1.CATEGORY1_ID = T2.CATEGORY1_ID AND 
		T1.CATEGORY2_ID = T2.CATEGORY2_ID AND 
		T1.CATEGORY3_ID = T2.CATEGORY3_ID AND
		T2.CATEGORY_STATUS = 1 )
	</sql>
	
	<!-- 分类信息列表取得-->
	<select id="getCategoryInfoList" resultClass="CategoryBusinessBean" parameterClass="CategoryBusinessBean">
		SELECT 	CATEGORY1_ID AS category1Id, 
				CATEGORY2_ID AS category2Id, 
				CATEGORY3_ID AS category3Id,
				CATEGORY_ID AS categoryId,
				CATEGORY_LEVEL_CODE AS categoryLevelCode,
				CATEGORY_STATUS AS categoryStatus,
				CASE 
				WHEN CATEGORY_STATUS = 1 THEN CONCAT(CATEGORY_NAME,'（待删除）')
				WHEN CATEGORY_STATUS = 2 AND QUESTION > 0 THEN CONCAT(CATEGORY_NAME,'（已细化）')
				ELSE CATEGORY_NAME
				END AS categoryName
		  FROM  V_TT_FENLEI
		<dynamic prepend="WHERE">
			<include refid="categoryIdSelectCondition"/>
		</dynamic>
	</select>
	
	<!-- 不整合数据统计取得-->
	<select id="getUnconformityCountList" resultClass="CategoryBusinessBean" parameterClass="CategoryBusinessBean">
		SELECT 
			CASE CATEGORY_STATUS
			WHEN 1 THEN CONCAT(CATEGORY_NAME,'（待删除）')
			WHEN 2 THEN CONCAT(CATEGORY_NAME,'（已细化）')
			END AS categoryName,
			AUTHORITY AS authority,
			COURSE AS course,
			BOOK AS book,
			EXAM AS exam,
			PAPER AS paper,
			QUESTION AS question
		FROM 
			V_TT_FENLEI
		WHERE
			((CATEGORY_STATUS = 1 AND
			AUTHORITY + COURSE + BOOK + EXAM + PAPER + QUESTION > 0 )  OR
			(CATEGORY_STATUS = 2 AND
			QUESTION > 0))
			<include refid="categoryIdSelectCondition"/>	
	</select>
	
	<!-- 不整合一览数据取得-->
	<select id="getUnconformityDataList" resultClass="UnconformityDataBean" >
		SELECT 	T1.COURSE_ID AS objectId, 
				T1.COURSE_NAME AS objectName,
				'课程' AS objectType,
				<include refid="getCategoryNameItem"/>
				T1.CREATE_TIME AS createTime
			 
		FROM 	TT_KECHENG T1 
		<include refid="joinCategoryView"/>
		
		UNION
		
		SELECT 	T1.BOOK_ID AS objectId, 
				T1.BOOK_NAME AS objectName,
				'教材' AS objectType,
				<include refid="getCategoryNameItem"/>
				T1.CREATE_TIME AS createTime
			 
		FROM 	TT_JIAOCAI T1 
		<include refid="joinCategoryView"/>
		
		UNION
		
		SELECT 	T1.EXAMINE_ID AS objectId, 
				T1.EXAMINE_NAME AS objectName,
				'考试' AS objectType,
				<include refid="getCategoryNameItem"/>
				T1.CREATE_TIME AS createTime
			 
		FROM 	TT_KS_XINXI T1 
		<include refid="joinCategoryView"/>
		
		UNION
		
		SELECT 	T1.PAPER_ID AS objectId, 
				T1.PAPER_TITLE AS objectName,
				'试卷' AS objectType,
				<include refid="getCategoryNameItem"/>
				T1.CREATE_TIME AS createTime
			 
		FROM 	TT_SHIJUAN T1 
		<include refid="joinCategoryView"/>
		
		UNION
		
		SELECT 	T1.QUESTION_ID AS objectId, 
				'-' AS objectName,
				'试题' AS objectType,
				<include refid="getCategoryNameItem"/>
				T1.CREATE_TIME AS createTime
			 
		FROM 	TT_TIKU T1 
				JOIN V_TT_FENLEI T2 
				ON 
				(T1.CATEGORY1_ID = T2.CATEGORY1_ID AND 
				T1.CATEGORY2_ID = T2.CATEGORY2_ID AND 
				T1.CATEGORY3_ID = T2.CATEGORY3_ID AND
				T2.CATEGORY_STATUS != 0  )
		
		UNION
		
		SELECT 	'-' AS objectId, 
				(SELECT	USER_CNM
				 FROM 	V_TT_USER
				 WHERE	USER_ID = T1.USER_ID) AS objectName,
				(SELECT DIFF_NAME
				 FROM 	COM_CODE_MST 
				 WHERE 	TYPE_ID = 'C24' AND
						DIFF_NO = T1.AUTHORITY_ID)  AS objectType,
				<include refid="getCategoryNameItem"/>
				T1.CREATE_TIME AS createTime
			 
		FROM 	TT_QUANXIAN T1 
		<include refid="joinCategoryView"/>
	
	</select>
	
	<!-- 不整合数据总数取得-->
	<select id="getUnconformityDataCount" resultClass="Long">
		SELECT 
			SUM(CASE CATEGORY_STATUS 
			    WHEN 1 THEN AUTHORITY + COURSE + BOOK + EXAM + PAPER + QUESTION
			    WHEN 2 THEN QUESTION
			    END) AS TOTAL
		FROM 
			V_TT_FENLEI
		WHERE
			(CATEGORY_STATUS = 1 AND
			AUTHORITY + COURSE + BOOK + EXAM + PAPER + QUESTION > 0 )  OR
			(CATEGORY_STATUS = 2 AND
			QUESTION > 0)	
	</select>
	
	<!-- 子分类数目取得-->
	<select id="getChildrenNumber" resultClass="Integer">
		SELECT 
			COUNT(*) - 1
		FROM 
			V_TT_FENLEI
		WHERE
			CATEGORY_STATUS != 1
			<include refid="categoryIdSelectCondition"/>
	</select>
	
	<!-- 最大一级分类ID取得-->
	<select id="getMaxCategory1Id" resultClass="Integer">
		SELECT MAX(CATEGORY1_ID) 
		  FROM TT_FENLEI
	</select>
	
	<!-- 最大二级分类ID取得-->
	<select id="getMaxCategory2Id" parameterClass="Integer" resultClass="Integer">
		SELECT MAX(CATEGORY2_ID) 
		  FROM TT_FENLEI
		 WHERE CATEGORY1_ID = #category1Id#
	</select>
	
	<!-- 最大三级分类ID取得-->
	<select id="getMaxCategory3Id" resultClass="Integer" parameterClass="CategoryBusinessBean">
		SELECT MAX(CATEGORY3_ID) 
		  FROM TT_FENLEI
		 WHERE CATEGORY1_ID = #category1Id# AND
	  		   CATEGORY2_ID = #category2Id#
	</select>
	
	<!-- 分类信息取得-->
	<select id="getCategoryInfo" resultClass="CategoryBusinessBean" parameterClass="CategoryBusinessBean">
		SELECT 	CATEGORY1_ID AS category1Id, 
				CATEGORY2_ID AS category2Id, 
				CATEGORY3_ID AS category3Id,
				CATEGORY_ID AS categoryId,
				CATEGORY_STATUS AS categoryStatus,
				CATEGORY_LEVEL AS categoryLevel,
				AUTHORITY AS authority,
				COURSE AS course,
				BOOK AS book,
				EXAM AS exam,
				PAPER AS paper,
				QUESTION AS question
		  FROM 	V_TT_FENLEI
		 WHERE 	CATEGORY1_ID = #category1Id# AND
	  		   	CATEGORY2_ID = #category2Id# AND
	  		   	CATEGORY3_ID = #category3Id#
	</select>
	
	<!-- 分类ID组合码取得-->
	<select id="getCategoryId" resultClass="String" parameterClass="CategoryBusinessBean">
		SELECT CATEGORY_ID 
		  FROM V_TT_FENLEI
		 WHERE CATEGORY1_ID = #category1Id# AND
	  		   CATEGORY2_ID = #category2Id# AND
	  		   CATEGORY3_ID = #category3Id#
	</select>
	
	<!-- 区分列表取得-->
	<select id="getDiffInfoList" resultClass="DiffBusinessBean" >
		SELECT 	DISTINCT
				TYPE_ID AS typeId,
				TYPE_NAME AS typeName
				 
		  FROM  COM_CODE_MST 
		 WHERE  TYPE_ID NOT LIKE 'C%' AND
				SUB_SYS = 'TT'
	</select>
	
	<!-- 区分详细取得-->
	<select id="getDiffDetailInfoList" resultClass="DiffBusinessBean" >
		SELECT 	TYPE_ID AS typeId, 
				DIFF_NO AS diffNo, 
				TYPE_NAME AS typeName, 
				DIFF_NAME AS diffName,
				CASE 
				WHEN TYPE_ID = 'E01' THEN 
				IF((SELECT COUNT(*)
				FROM TT_TIKU 
				WHERE
					QUESTION_DIFFICULTY = DIFF_NO) > 0,'false','true')
				WHEN TYPE_ID = 'E02' OR TYPE_ID = 'E03' THEN 
				IF((SELECT COUNT(*)
				FROM TT_DAAN
				WHERE
					OPTION_TYPE_ID = TYPE_ID AND
					OPTION_TYPE = DIFF_NO) > 0,'false','true')
				ELSE 'false'
				END
				 AS editableFlag
				 
			FROM 
				COM_CODE_MST 
			
			WHERE
				TYPE_ID = #typeId# AND
				SUB_SYS = 'TT'
			ORDER BY DISP_SEQ
	</select>
	
	<!-- 区分码最大值取得-->
	<select id="getMaxDiffNo" resultClass="Integer" >
		SELECT MAX(DIFF_NO)
		FROM COM_CODE_MST
		WHERE TYPE_ID = #typeId#
	</select>
	
	<!-- 用户名取得-->
	<select id="getUserName" resultClass="String" >
		SELECT 	USER_CNM
		FROM 	V_TT_USER
		WHERE 	USER_ID = #userId#
	</select>
	
	<!-- 系统维护信息取得-->
	<select id="getSystemMaintainInfo" resultClass="String" >
		SELECT 	ITEM_VALUE	 
		FROM 	TT_PEIZHI
		WHERE	ITEM_NAME IN('SYS_M_FLAG', 'SYS_M_USER_ID','SYS_M_LOGIN_TIME')
		ORDER BY ITEM_NAME
	</select>
	
	<!-- 更新系统维护信息 -->
	<update id="updateSystemMaintainInfo" parameterClass="com.yds.tt.manager.bean.SystemMaintainInfo">
		 UPDATE	TT_PEIZHI
			SET	ITEM_VALUE = CASE ITEM_NAME 
						     WHEN 'SYS_M_FLAG' THEN #maintainFlag#
						     WHEN 'SYS_M_USER_ID' THEN #maintainer#
						     WHEN 'SYS_M_LOGIN_TIME' THEN #userLoginTime#
						     END
		 WHERE	ITEM_NAME IN ('SYS_M_FLAG','SYS_M_USER_ID','SYS_M_LOGIN_TIME')
	</update>
	
	<!-- 更新区分显示顺序 -->
	<update id="updateDispSeq" parameterClass="DiffBusinessBean">
		UPDATE  COM_CODE_MST
		   SET	DISP_SEQ = #dispSeq#
				
		 WHERE TYPE_ID = #typeId# AND
	  		   DIFF_NO = #diffNo#
	</update>
	
	<!-- 删除区分 --> 
	<delete id="deleteDiff" parameterClass="String"> 
		DELETE FROM
			COM_CODE_MST
		WHERE
			TYPE_ID = #typeId# AND
			SUB_SYS = 'TT'
	</delete>
	
	<!-- 登录区分 --> 
	<insert id="insertDiff" parameterClass="DiffBusinessBean"> 
		INSERT INTO COM_CODE_MST
		(TYPE_ID, 
		DIFF_NO, 
		TYPE_NAME, 
		DIFF_NAME, 
		DISP_SEQ, 
		SUB_SYS, 
		REFER
		)
		VALUES
		(#typeId#, 
		#diffNo#, 
		#typeName#, 
		#diffName#, 
		#dispSeq#, 
		'TT', 
		''
		)
	</insert>
	
	<!-- 更新分类名称 -->
	<update id="updateCategoryName" parameterClass="CategoryBusinessBean">
		UPDATE  TT_FENLEI
		   SET	CATEGORY_NAME = #categoryName# , 
				UPDATE_USER_ID = #updateUserId# , 
				UPDATE_TIME = NOW()
				
		 WHERE CATEGORY1_ID = #category1Id# AND
	  		   CATEGORY2_ID = #category2Id# AND
	  		   CATEGORY3_ID = #category3Id#
	</update>
	
	<!-- 更新分类状态 -->
	<update id="updateCategoryStatus" parameterClass="CategoryBusinessBean">
		UPDATE  TT_FENLEI
		   SET	CATEGORY_STATUS = #categoryStatus# , 
				UPDATE_USER_ID = #updateUserId# , 
				UPDATE_TIME = NOW()
				
		 WHERE CATEGORY1_ID = #category1Id# AND
	  		   CATEGORY2_ID = #category2Id# AND
	  		   CATEGORY3_ID = #category3Id#
	</update>
	
	<!-- 登录分类信息 -->
	<insert id="insertCategory" parameterClass="CategoryBusinessBean">
		INSERT INTO TT_FENLEI 
			(CATEGORY1_ID, 
			CATEGORY2_ID, 
			CATEGORY3_ID, 
			CATEGORY_LEVEL, 
			CATEGORY_NAME, 
			CATEGORY_STATUS, 
			CREATE_USER_ID, 
			CREATE_TIME, 
			UPDATE_USER_ID, 
			UPDATE_TIME
			)
			VALUES
			(#category1Id#, 
			#category2Id#, 
			#category3Id#, 
			#categoryLevel#, 
			#categoryName#, 
			#categoryStatus#, 
			#createUserId#, 
			NOW(), 
			#updateUserId#, 
			NOW()
			)
	</insert>
	
	
</sqlMap>