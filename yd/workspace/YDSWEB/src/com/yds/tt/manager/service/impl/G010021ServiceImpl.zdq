/*
 * @(#)G010021ServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 权限管理
 */

/**
 * 权限管理
 * 
 * @author guozhizhou
 * @version 1.00 2010/03/15
 */
package com.yds.tt.manager.service.impl;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;

import org.springframework.stereotype.Service;
import com.yds.base.service.AbstractBaseService;
import com.yds.common.service.SessionConstants;
import com.yds.tt.manager.bean.G010021aInfo;
import com.yds.tt.manager.dao.G010021Dao;
import com.yds.tt.manager.service.G010021Service;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtCommonUtil;
import com.yds.util.service.EncryptionPW;
import com.yds.util.service.Session;
import com.yds.util.service.StringUtil;

/**
 * @see com.yds.tt.manager.service.G010021Service
 */
@Service("g010021Service")
public class G010021ServiceImpl extends AbstractBaseService implements
		G010021Service {

	private G010021Dao g010021Dao;
	private TtCommonService ttCommonService;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<G010021aInfo> getG010021aInfo(G010021aInfo param,
			int offset, int perCounts) {	
		
		return (List<G010021aInfo>) g010021Dao
				.getG010021aInfo(param, offset, perCounts);	 
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<G010021aInfo> getG010021ApplicationInfo(G010021aInfo application,
			int offset, int perCounts) {	
		
		return (List<G010021aInfo>) g010021Dao
				.getG010021ApplicationInfo(application, offset, perCounts);	 
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<G010021aInfo> getG010021OtherInfo(G010021aInfo simple,
			int offset, int perCounts) {	
		
		return (List<G010021aInfo>) g010021Dao
				.getG010021OtherInfo(simple, offset, perCounts);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getTotalCount() {
		return g010021Dao.getTotalCount();
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean stampCheck() {
		
		//取得登录者ID
		String userId1 = TtCommonUtil.getLoginUserId();;
		
		//取得数据库配置ID
		String userId2 = g010021Dao.getUserId();
		
		//取得登录时间，STAMP检查
		String loginTime1 = (String) Session.get(SessionConstants.TT_G010021_ADMIN_TIME);
		String loginTime2 = g010021Dao.getLoginTime();
		
		if(userId2 == null || loginTime2 == null){
			return false;
		}

		//STAMP检查
		boolean bool = (userId2.equals(userId1) && loginTime2.equals(loginTime1));
		return bool;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long sameAuthority(G010021aInfo ainfo) {
		
		// 员工前加YD
		ainfo.setUserIdNum(StringUtil.leftPadYd(ainfo.getUserIdNum()));
		return g010021Dao.getSameAuthority(ainfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long sameOtherAuthority(G010021aInfo ainfo) {
		
		// 员工前加YD
		ainfo.setUserIdNum(StringUtil.leftPadYd(ainfo.getUserIdNum()));
		return g010021Dao.getSameOtherAuthority(ainfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long sameUpdateAuthority(G010021aInfo ainfo) {
		
		// 员工前加YD
		ainfo.setUserIdNum(StringUtil.leftPadYd(ainfo.getUserIdNum()));
		return g010021Dao.getSameUpdateAuthority(ainfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long sameUpdateOtherAuthority(G010021aInfo ainfo) {
		
		// 员工前加YD
		ainfo.setUserIdNum(StringUtil.leftPadYd(ainfo.getUserIdNum()));
		return g010021Dao.getSameUpdateOtherAuthority(ainfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getTotalCountApplication() {
		return g010021Dao.getTotalCountApplication();
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getTotalCountOther() {
		return g010021Dao.getTotalCountOther();
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean insertAuthority(G010021aInfo ainfo) {
		
		//取得登录者ID
		ainfo.setUserId(TtCommonUtil.getLoginUserId());
		
		// 员工前加YD
		ainfo.setUserIdNum(StringUtil.leftPadYd(ainfo.getUserIdNum()));
		
		// QIANGUORONG 7/26追加：更新全局Sesssion中的权限版本时间戳
		ttCommonService.authrityTimestampUpdate();

		return null != g010021Dao.insertAuthority(ainfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean insertOtherAuthority(G010021aInfo ainfo) {
		
		//取得登录者ID
		String userId = TtCommonUtil.getLoginUserId();
		ainfo.setUserId(userId);
		
		// 其他权限分配存在check
		ainfo.setUserIdNum(StringUtil.leftPadYd(ainfo.getUserIdNum()));
		
		// QIANGUORONG 7/26追加：更新全局Sesssion中的权限版本时间戳
		ttCommonService.authrityTimestampUpdate();

		return null != g010021Dao.insertOtherAuthority(ainfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean updateAuthority(G010021aInfo ainfo) {
		
		//取得登录者ID
		String userId = TtCommonUtil.getLoginUserId();
		ainfo.setUserId(userId);
		
		ainfo.setUserIdNum(StringUtil.leftPadYd(ainfo.getUserIdNum()));	
		
		// QIANGUORONG 7/26追加：更新全局Sesssion中的权限版本时间戳
		ttCommonService.authrityTimestampUpdate();

		return null != g010021Dao.updateAuthority(ainfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean updateOtherAuthority(G010021aInfo ainfo) {
		
		//取得登录者ID
		String userId = TtCommonUtil.getLoginUserId();
		ainfo.setUserId(userId);
	
		// 其他权限存在check
		ainfo.setUserIdNum(StringUtil.leftPadYd(ainfo.getUserIdNum()));
		
		// QIANGUORONG 7/26追加：更新全局Sesssion中的权限版本时间戳
		ttCommonService.authrityTimestampUpdate();

		return null != g010021Dao.updateOtherAuthority(ainfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean updatePasswordName(G010021aInfo ainfo) {
		
		// 输入原密码帐号，转换成MD5
		String oldAdminPswMd5 =EncryptionPW.md5(ainfo.getOldAdminPsw(),ainfo.getOldAdminId());
		String oldAdminIdMd5 =EncryptionPW.md5(ainfo.getOldAdminId(),ainfo.getOldAdminId());
		
		//取得数据库的密码，帐号
		G010021aInfo g010021aInfoDb = g010021Dao.item();
		
		if(oldAdminPswMd5.equals(g010021aInfoDb.getAdminPsw()) && 
				oldAdminIdMd5.equals(g010021aInfoDb.getAdminId())){
			
			// 新密码，帐号转换成MD5
			G010021aInfo tempInfo = new G010021aInfo();
			tempInfo.setNewAdminId(EncryptionPW.md5(ainfo.getNewAdminId(),ainfo.getNewAdminId()));
			tempInfo.setNewAdminPsw(EncryptionPW.md5(ainfo.getNewAdminPsw(),ainfo.getNewAdminId()));
			
			// 密码维护
			return (0 != g010021Dao.updatePassword(tempInfo)) && (0 !=g010021Dao.updateName(tempInfo));
			
		}
		return false;
	}
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean deleteAuthority(G010021aInfo ainfo) {
		// QIANGUORONG 7/26追加：更新全局Sesssion中的权限版本时间戳
		ttCommonService.authrityTimestampUpdate();

		return null != g010021Dao.deleteAuthority(ainfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean deleteOtherAuthority(G010021aInfo ainfo) {
		// QIANGUORONG 7/26追加：更新全局Sesssion中的权限版本时间戳
		ttCommonService.authrityTimestampUpdate();

		return null != g010021Dao.deleteOtherAuthority(ainfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean deleteApplicationAuthority(G010021aInfo ainfo) {
		DateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); 
		try {
			ainfo.setApplyTime(format.parse(ainfo.getStrApplyTime()));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		return null != g010021Dao.deleteApplicationAuthority(ainfo);

	}

	/**
	 * @param g010021Dao
	 *            the G010021Dao to set
	 */
	public void setG010021Dao(G010021Dao ainfo) {
		this.g010021Dao = ainfo;
	}

	/**
	 * @param ttCommonService the ttCommonService to set
	 */
	public void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}
}
