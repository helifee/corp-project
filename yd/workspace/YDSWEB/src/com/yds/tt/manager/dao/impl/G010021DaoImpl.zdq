/*
 * @(#)G010021DaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 权限管理
 */

package com.yds.tt.manager.dao.impl;

import java.util.List;
import org.springframework.stereotype.Repository;
import com.yds.base.dao.AbstractBaseDao;
import com.yds.tt.manager.bean.G010021aInfo;
import com.yds.tt.manager.dao.G010021Dao;
import com.yds.util.service.DateUtil;

/**
 * @see com.yds.tt.manager.dao.G010021Dao
 */
@Repository("g010021Dao")
public class G010021DaoImpl extends AbstractBaseDao implements G010021Dao{

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<G010021aInfo> getG010021aInfo(G010021aInfo param, int offset, int perCounts) {
		return super.queryForList(
				"G010021Dao.getG010021aInfo", param, offset, perCounts);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<G010021aInfo> getG010021ApplicationInfo(G010021aInfo application, int offset, int perCounts) {
		return super.queryForList(
				"G010021Dao.getG010021ApplicationInfo", application, offset, perCounts);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<G010021aInfo> getG010021OtherInfo(G010021aInfo simple, int offset, int perCounts) {
		return super.queryForList(
				"G010021Dao.getG010021OtherInfo", simple, offset, perCounts);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getTotalCount() {
		return  (Long)super.queryForObject("G010021Dao.getTotalCount", "");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public String getUserId() {
		return  (String) super.queryForObject("G010021Dao.getUserId", "");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public String getLoginTime() {
		return  (String) super.queryForObject("G010021Dao.getLoginTime", "");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getSameAuthority(G010021aInfo g010021aInfo) {
		timeConverter(g010021aInfo);
		return (Long)super.queryForObject("G010021Dao.getSameAuthority", g010021aInfo) ;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getSameOtherAuthority(G010021aInfo g010021aInfo) {
		timeConverter(g010021aInfo);
		return (Long)super.queryForObject("G010021Dao.getSameOtherAuthority", g010021aInfo) ;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getSameUpdateAuthority(G010021aInfo g010021aInfo) {
		timeConverter(g010021aInfo);
		return (Long)super.queryForObject("G010021Dao.getSameUpdateAuthority", g010021aInfo) ;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getSameUpdateOtherAuthority(G010021aInfo g010021aInfo) {
		timeConverter(g010021aInfo);
		return (Long)super.queryForObject("G010021Dao.getSameUpdateOtherAuthority", g010021aInfo) ;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getTotalCountApplication() {
		return  (Long)super.queryForObject("G010021Dao.getTotalCountApplication", "");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getTotalCountOther() {
		return  (Long)super.queryForObject("G010021Dao.getTotalCountOther", "");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object deleteAuthority(G010021aInfo g010021aInfo) {
		return super.delete("G010021Dao.deleteAuthority", g010021aInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object deleteOtherAuthority(G010021aInfo g010021aInfo) {
		return super.delete("G010021Dao.deleteOtherAuthority", g010021aInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object deleteApplicationAuthority(G010021aInfo g010021aInfo) {
		return super.delete("G010021Dao.deleteApplicationAuthority", g010021aInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object insertAuthority(G010021aInfo g010021aInfo) {
		timeConverter(g010021aInfo);
		
		return super.insert("G010021Dao.insertAuthority", g010021aInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object insertOtherAuthority(G010021aInfo g010021aInfo) {
		timeConverter(g010021aInfo);
		
		return super.insert("G010021Dao.insertOtherAuthority", g010021aInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object updateAuthority(G010021aInfo g010021aInfo) {
		timeConverter(g010021aInfo);
		
		return super.update("G010021Dao.updateAuthority", g010021aInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object updateOtherAuthority(G010021aInfo g010021aInfo) {
		timeConverter(g010021aInfo);
		
		return super.update("G010021Dao.updateOtherAuthority", g010021aInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updatePassword(G010021aInfo g010021aInfo) {
		return super.update("G010021Dao.updatePassword", g010021aInfo);
		
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateName(G010021aInfo g010021aInfo) {
		return super.update("G010021Dao.updateName", g010021aInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public G010021aInfo item() {
		return (G010021aInfo)super.queryForObject("G010021Dao.item");
	}
	
	private void timeConverter(G010021aInfo g010021aInfo){
		String strDate = null;
		if (g010021aInfo.getEndTimeNm() == null) {
			strDate = "9999-12-31 00:00:00";
		} else {
			strDate = DateUtil.dateToString(g010021aInfo.getEndTimeNm());
		}
		
		// 终了时间加"23:59:59"
		strDate = DateUtil.dateAdd(strDate , 23, DateUtil.HOUR);
		strDate = DateUtil.dateAdd(strDate , 59, DateUtil.MINUTE);
		strDate = DateUtil.dateAdd(strDate , 59, DateUtil.SECOND);
		String[] stringParam1 = new String[1];
		stringParam1[0] = strDate;
		g010021aInfo.setEndTimeNm(DateUtil.parse(strDate));
	}
	
}
