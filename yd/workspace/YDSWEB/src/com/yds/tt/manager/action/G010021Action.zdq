/*
 * @(#)G010021Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 权限管理
 */

package com.yds.tt.manager.action;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.Preparable;
import com.yds.base.action.BasePagerAction;
import com.yds.common.bean.SysCodeInfo;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.LogService;
import com.yds.tt.manager.bean.G010021aInfo;
import com.yds.tt.manager.service.G010021Service;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.util.service.DateUtil;

/**
 * 权限管理
 * 
 * @author guozhizhou
 * @version 1.00 2010/03/15
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("g010021Action")
public class G010021Action extends BasePagerAction  implements Preparable{

	private static final long serialVersionUID = -1397051695703253282L;
	private G010021Service g010021Service;
	private TtCommonService ttCommonService;
	
	/** 维护权限分配信息一览. */
	private List<G010021aInfo> g010021aInfoList;
	
	/** 其他权限分配信息一览. */
	private List<G010021aInfo> g010021OtherInfoList;

	/** 权限申请信息一览. */
	private List<G010021aInfo> g010021ApplicationInfoList;
	
	/** 权限分配信息. */
	private G010021aInfo g010021aInfo;

	/** 员工ID. */
	private String userIdNum; 
	
	/** 申请权限区分. */
	private String authorityId;
	
	/** 开始时间. */
	private Date startTimeNm;
	
	/** 结束时间. */
	private Date endTimeNm;
	
	/** 申请权限区分. */
	private String category1Id;
	
	/** 申请权限区分. */
	private String category2Id;
	
	/** 申请权限区分. */
	private String category3Id;
	
	/** 申请权限区分. */
	private String sltCategory1;
	
	/** 申请权限区分. */
	private String sltCategory2;
	
	/** 申请权限区分. */
	private String sltCategory3;

	/** 其他权限选择信息一览. */
	private List<SysCodeInfo> authorityOtherList;

	/** 维护权限选择信息一览. */
	private List<SysCodeInfo> authorityList;

	/** 提示信息 */
	private String fieldinfo;
	
	/** 错误信息 */
	private String errorMessage; 
	
	/** 选项卡参数 */
	private Integer parameter;
	
	/** 日志 */
	private LogService logService;
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void prepare() throws Exception {
		
		/** 维护权限选择下拉框信息取得. */
		this.authorityList = ttCommonService.getMaintAuthorityList();
		
		/** 其他维护权限选择下拉框信息取得. */
		this.authorityOtherList = ttCommonService.getOtherAuthorityList();
	}
	
	/**
	 * 维护权限分配检索信息取得
	 * 
	 * @return SUCCESS
	 */
	public String searchAction() throws Exception {
		
		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		}
		
		/** 分页，维护权限分配总数据取得. */
		super.setPagerParamter(g010021Service.getTotalCount(),
				"g010021PagedMaintPermList.action");

		/** 取得维护权限分配检索信息一览. */
		setG010021aInfoList(g010021Service.getG010021aInfo(g010021aInfo, pager
				.getOffset().intValue(), pager.getPerDisplayCount().intValue()));

		return SUCCESS;
	}
	
	/**
	 * 权限申请一览检索信息取得
	 * 
	 * @return SUCCESS
	 */
	public String jurisdictionApplicationAction() throws Exception {
		
		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		 }

		/** 分页，权限申请一览总数据取得. */
		super.setPagerParamter(g010021Service.getTotalCountApplication(),
				"g010021PagedPermRequestList.action");

		/** 取得权限申请一览检索信息一览. */
		setG010021ApplicationInfoList(g010021Service.getG010021ApplicationInfo(g010021aInfo, pager
				.getOffset().intValue(), pager.getPerDisplayCount().intValue()));

		return SUCCESS;
	}
	
	/**
	 * 其他权限分配检索信息取得
	 * 
	 * @return SUCCESS
	 */
	public String searchOtherAction() throws Exception {
		
		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		 }
		
		/** 分页，其他权限分配总数据取得. */
		super.setPagerParamter(g010021Service.getTotalCountOther(),
				"g010021SearchOtherPermList.action");

		/** 取得其他权限分配检索信息一览. */
		setG010021OtherInfoList(g010021Service.getG010021OtherInfo(g010021aInfo, pager
				.getOffset().intValue(), pager.getPerDisplayCount().intValue()));

		return SUCCESS;
	}

	/**
	 * 添加维护权限分配信息
	 * 
	 * @return SUCCESS
	 */
	public String insertAuthority() {
	
		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		 }
		
		relativeCheck();
		
		g010021aInfo.setSltCategory1(category1Id);
		g010021aInfo.setSltCategory2(category2Id);
		g010021aInfo.setSltCategory3(category3Id);
		g010021aInfo.setAuthorityId(authorityId);
		
		/** 相同权限添加检查. */
		if(0 != g010021Service.sameAuthority(g010021aInfo)){
			errorMessage = propMgr.getMessage("yds.tt.error.GLE09");
			return ERROR;
		 }
		
		/** 添加维护权限分配信息. */
		g010021Service.insertAuthority(g010021aInfo);

		/** 分页，维护权限分配总数据取得. */
		super.setPagerParamter(g010021Service.getTotalCount(),
				"g010021PagedMaintPermList.action");

		/** 重新取得维护权限分配一览和维护权限分配数. */
		this.g010021aInfoList = g010021Service.getG010021aInfo(
				g010021aInfo, pager.getOffset().intValue(), pager
						.getPerDisplayCount().intValue());
		
		// 根据权限菜单初期化位置
		ttCommonService.getMenuContorlInfo();
		
		// 日志记录:
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Not_Delete.toString(), CommonConstants.SubIdEnum.Sub_TT00.toString(), 
									g010021aInfo.getUserIdNum(), 
									"添加维护权限：" + g010021aInfo.getAuthorityId() + " " 
									+ g010021aInfo.getSltCategory1() + "-" 
									+ g010021aInfo.getSltCategory2() + "-" 
									+ g010021aInfo.getSltCategory3() + " " 
									+ DateUtil.setDateFormat(g010021aInfo.getStartTimeNm(), new SimpleDateFormat("yyyyMMdd HH:mm:ss")) + "-" 
									+ DateUtil.setDateFormat(g010021aInfo.getEndTimeNm(), new SimpleDateFormat("yyyyMMdd HH:mm:ss")),
									"格式：权限类别 分类1-分类2-分类3 开始时间-结束时间");
		return SUCCESS;
	}
	
	/**
	 * 添加其他权限分配信息
	 * 
	 * @return SUCCESS
	 */
	public String insertOtherAuthority() {
		
		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		 }
		
		relativeCheck();
		
		g010021aInfo.setAuthorityId(authorityId);
		
		/** 相同其他权限添加检查. */
		if(0 != g010021Service.sameOtherAuthority(g010021aInfo)){
			errorMessage = propMgr.getMessage("yds.tt.error.GLE09");
			return ERROR;
		 }

		/** 添加其他权限分配信息. */
		g010021Service.insertOtherAuthority(g010021aInfo);
		
		/** 分页，其他权限分配总数据取得. */
		super.setPagerParamter(g010021Service.getTotalCountOther(),
				"g010021SearchOtherPermList.action");

		/** 重新取得其他权限分配一览和其他权限分配数. */
		this.g010021OtherInfoList = g010021Service.getG010021OtherInfo(
				g010021aInfo, pager.getOffset().intValue(), pager
						.getPerDisplayCount().intValue());

		// 根据权限菜单初期化位置
		ttCommonService.getMenuContorlInfo();
		
		// 日志记录:
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Not_Delete.toString(), CommonConstants.SubIdEnum.Sub_TT00.toString(), 
									g010021aInfo.getUserIdNum(), 
									"添加其他权限：" + g010021aInfo.getAuthorityId() + " " 
									+ DateUtil.setDateFormat(g010021aInfo.getStartTimeNm(), new SimpleDateFormat("yyyyMMdd HH:mm:ss")) + "-" 
									+ DateUtil.setDateFormat(g010021aInfo.getEndTimeNm(), new SimpleDateFormat("yyyyMMdd HH:mm:ss")),
									"格式：权限类别 开始时间-结束时间");
		return SUCCESS;
	}

	/**
	 * 保存维护权限分配信息
	 * 
	 * @return SUCCESS
	 */
	public String updateAuthority() {
		
		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		 }
		
		relativeCheck();
		
		/** 相同权限保存检查. */
		if(0 != g010021Service.sameUpdateAuthority(g010021aInfo)){
			errorMessage = propMgr.getMessage("yds.tt.error.GLE09");
			return ERROR;
		 }
		
		/** 更新保存的维护权限数据. */
		g010021Service.updateAuthority(g010021aInfo);		

		/** 分页，维护权限分配总数据取得. */
		super.setPagerParamter(g010021Service.getTotalCount(),
				"g010021PagedMaintPermList.action");

		/** 重新取得维护权限分配一览和维护权限分配数. */
		this.g010021aInfoList = g010021Service.getG010021aInfo(g010021aInfo,
				pager.getOffset().intValue(), pager.getPerDisplayCount().intValue());
		
		// 根据权限菜单初期化位置
		ttCommonService.getMenuContorlInfo();
		
		// 日志记录:
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Not_Delete.toString(), CommonConstants.SubIdEnum.Sub_TT00.toString(), 
									g010021aInfo.getUserIdNum(), 
									"修改维护权限：" + g010021aInfo.getAuthorityId().trim() + " " 
									+ g010021aInfo.getSltCategory1().trim() + "-" 
									+ g010021aInfo.getSltCategory2().trim() + "-" 
									+ g010021aInfo.getSltCategory3().trim() + " " 
									+ DateUtil.setDateFormat(g010021aInfo.getStartTimeNm(), new SimpleDateFormat("yyyyMMdd HH:mm:ss")) + "-" 
									+ DateUtil.setDateFormat(g010021aInfo.getEndTimeNm(), new SimpleDateFormat("yyyyMMdd HH:mm:ss")),
									"格式：权限类别 分类1-分类2-分类3 开始时间-结束时间");

		return SUCCESS;
	}
	
	/**
	 * 保存其他权限分配信息
	 * 
	 * @return SUCCESS
	 */
	public String updateOtherAuthority() {
		
		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		}
		
		relativeCheck();
		
		/** 相同其他权限保存检查. */
		if(0 != g010021Service.sameUpdateOtherAuthority(g010021aInfo)){
			errorMessage = propMgr.getMessage("yds.tt.error.GLE09");
			return ERROR;
		 }
		
		/** 更新保存的维护权限数据. */
		g010021Service.updateOtherAuthority(g010021aInfo);

		/** 分页，其他权限分配总数据取得. */
		super.setPagerParamter(g010021Service.getTotalCountOther(),
				"g010021SearchOtherPermList.action");

		/** 重新取得其他权限分配一览和其他权限分配数. */
		this.g010021OtherInfoList = g010021Service.getG010021OtherInfo(g010021aInfo,
				pager.getOffset().intValue(), pager.getPerDisplayCount().intValue());
		
		// 根据权限菜单初期化位置
		ttCommonService.getMenuContorlInfo();
		
		// 日志记录:
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Not_Delete.toString(), CommonConstants.SubIdEnum.Sub_TT00.toString(), 
									g010021aInfo.getUserIdNum(), 
									"修改其他权限：" + g010021aInfo.getAuthorityId().trim() + " " 
									+ DateUtil.setDateFormat(g010021aInfo.getStartTimeNm(), new SimpleDateFormat("yyyyMMdd HH:mm:ss")) + "-" 
									+ DateUtil.setDateFormat(g010021aInfo.getEndTimeNm(), new SimpleDateFormat("yyyyMMdd HH:mm:ss")),
									"格式：权限类别 开始时间-结束时间");
		return SUCCESS;
	}
	
	/**
	 * 更新帐号密码信息
	 * 
	 * @return SUCCESS
	 */
	public String updateAdminCountInfo() {
		
		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		 }
		if(!g010021aInfo.getPasswordConfim().equals(g010021aInfo.getNewAdminPsw()) ){
			return ERROR;
		}
		
		/** 原管理员密码帐号校验. */
		g010021Service.updatePasswordName(g010021aInfo);
		
		// 日志记录:
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Not_Delete.toString(), CommonConstants.SubIdEnum.Sub_TT00.toString(), 
									"", 
									"超级管理员帐号和密码修改成功。", 
									"");
		
		// 显示操作成功消息
		putOpTip(propMgr.getMessage("yds.tt.info.GTT02"));

		return SUCCESS;
	}

	/**
	 * 删除维护权限分配信息
	 */
	public String deleteAuthority() {
		
		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		}

		/** 删除维护权限分配信息. */
		g010021Service.deleteAuthority(g010021aInfo);
		
		/** 分页，维护权限分配总数据取得. */
		super.setPagerParamter(g010021Service.getTotalCount(),
		"g010021PagedMaintPermList.action");

		/** 重新取得维护权限分配一览和维护权限分配数. */
		this.g010021aInfoList = g010021Service.getG010021aInfo(g010021aInfo,
				pager.getOffset().intValue(), pager.getPerDisplayCount().intValue());

		// 根据权限菜单初期化位置
		ttCommonService.getMenuContorlInfo();
		
		// 日志记录:
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Not_Delete.toString(), CommonConstants.SubIdEnum.Sub_TT00.toString(), 
									g010021aInfo.getUserIdNum(), 
									"删除维护权限：" + g010021aInfo.getAuthorityId() + " " 
									+ g010021aInfo.getSltCategory1() + "-" 
									+ g010021aInfo.getSltCategory2() + "-" 
									+ g010021aInfo.getSltCategory3() + " " 
									+ DateUtil.setDateFormat(g010021aInfo.getStartTimeNm(), new SimpleDateFormat("yyyyMMdd HH:mm:ss")) ,
									"格式：权限类别 分类1-分类2-分类3 开始时间");
		return SUCCESS;	
	}
	
	/**
	 * 删除其他权限分配信息
	 */
	public String deleteOtherAuthority() {
		
		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		}

		/** 删除其他权限分配信息. */ 
		g010021Service.deleteOtherAuthority(g010021aInfo);
		
		/** 分页，其他权限分配总数据取得. */
		super.setPagerParamter(g010021Service.getTotalCountOther(),
		"g010021SearchOtherPermList.action");

		/** 重新取得其他权限分配一览和其他权限分配数. */
		this.g010021OtherInfoList = g010021Service.getG010021OtherInfo(g010021aInfo,
				pager.getOffset().intValue(), pager.getPerDisplayCount().intValue());
		
		// 根据权限菜单初期化位置
		ttCommonService.getMenuContorlInfo();
		
		// 日志记录:
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Not_Delete.toString(), CommonConstants.SubIdEnum.Sub_TT00.toString(), 
									g010021aInfo.getUserIdNum(), 
									"删除其他权限：" + g010021aInfo.getAuthorityId() + " " 
									+ DateUtil.setDateFormat(g010021aInfo.getStartTimeNm(), new SimpleDateFormat("yyyyMMdd HH:mm:ss")),
									"格式：权限类别 开始时间");
		return SUCCESS;
	}
	
	/**
	 * 删除权限申请一览信息
	 */
	public String deleteApplyAuthority() {

		/** 排他处理检查. */
		if(!g010021Service.stampCheck()){
			errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		 }
		
		/** 删除权限申请一览信息. */
		g010021Service.deleteApplicationAuthority(g010021aInfo);
		
		/** 分页，权限申请一览总数据取得. */
		super.setPagerParamter(g010021Service.getTotalCountApplication(),
				"g010021PagedPermRequestList.action");

		/** 取得权限申请一览检索信息一览. */
		this.g010021ApplicationInfoList = g010021Service.getG010021ApplicationInfo(g010021aInfo, 
				pager.getOffset().intValue(), pager.getPerDisplayCount().intValue());
		
		return SUCCESS;
	}
	
	/**
	 * 刷新导航状态
	 * 
	 */
	public String refreshHead(){
		
		ttCommonService.getMenuContorlInfo();
		
		return SUCCESS;
	}
	
	/**
	 * 开始时间结束时间大小校验
	 * 
	 */
	private void relativeCheck(){
		
		/** 开始时间结束时间大小校验. */
		if (null != g010021aInfo.getEndTimeNm()){
			if(0 <(g010021aInfo.getStartTimeNm().compareTo(g010021aInfo.getEndTimeNm()) )){
				this.addFieldError("g010021aInfo.startTime",
						propMgr.getMessage("yds.tt.error.JYE05", g010021aInfo.getUserName()));
				this.addFieldError("g010021aInfo.endTime",
						propMgr.getMessage("yds.tt.error.JYE05", g010021aInfo.getUserName()));
			}
		}
	}

	/**
	 * @return the userIdNum
	 */
	public final String getUserIdNum() {
		return userIdNum;
	}

	/**
	 * @param userIdNum the userIdNum to set
	 */
	public final void setUserIdNum(String userIdNum) {
		this.userIdNum = userIdNum;
	}

	/**
	 * @return the userIdNum
	 */
	public String getAuthorityId() {
		return authorityId;
	}

	/**
	 * @param user_id
	 *            the user_id to set
	 */
	public void setAuthorityId(String authorityId) {
		this.authorityId = authorityId;
	}

	/**
	 * @return the g010021aInfoList
	 */
	public List<G010021aInfo> getG010021aInfoList() {
		return g010021aInfoList;
	}

	/**
	 * @param infoList
	 *            the g010021aInfoList to set
	 */
	public void setG010021aInfoList(List<G010021aInfo> infoList) {
		g010021aInfoList = infoList;
	}
	
	/**
	 * @return the g010021ApplicationInfoList
	 */
	public List<G010021aInfo> getG010021ApplicationInfoList() {
		return g010021ApplicationInfoList;
	}

	/**
	 * @param applicationInfoList the g010021ApplicationInfoList to set
	 */
	public void setG010021ApplicationInfoList(List<G010021aInfo> applicationInfoList) {
		g010021ApplicationInfoList = applicationInfoList;
	}

	/**
	 * @return the g010021aInfo
	 */
	public G010021aInfo getG010021aInfo() {
		return g010021aInfo;
	}

	/**
	 * @param info
	 *            the g010021aInfo to set
	 */
	public void setG010021aInfo(G010021aInfo info) {
		g010021aInfo = info;
	}

	/**
	 * @return the g010021Service
	 */
	public G010021Service getG010021Service() {
		return g010021Service;
	}

	/**
	 * @param sysLogSearchService
	 *            the sysLogSearchService to set
	 */
	public void setG010021Service(G010021Service g010021Service) {
		this.g010021Service = g010021Service;
	}

	/**
	 * @return the g010021bInfoList
	 */
	public List<G010021aInfo> getG010021OtherInfoList() {
		return g010021OtherInfoList;
	}

	/**
	 * @param infoList the g010021bInfoList to set
	 */
	public void setG010021OtherInfoList(List<G010021aInfo> infoList) {
		g010021OtherInfoList = infoList;
	}

	/**
	 * @return the startTimeNm
	 */
	public final Date getStartTimeNm() {
		return startTimeNm;
	}

	/**
	 * @param startTimeNm the startTimeNm to set
	 */
	public final void setStartTimeNm(Date startTimeNm) {
		this.startTimeNm = startTimeNm;
	}

	/**
	 * @return the endTimeNm
	 */
	public final Date getEndTimeNm() {
		return endTimeNm;
	}

	/**
	 * @param endTimeNm the endTimeNm to set
	 */
	public final void setEndTimeNm(Date endTimeNm) {
		this.endTimeNm = endTimeNm;
	}

	/**
	 * @return the authorityOtherList
	 */
	public final List<SysCodeInfo> getAuthorityOtherList() {
		return authorityOtherList;
	}

	/**
	 * @param authorityOtherList the authorityOtherList to set
	 */
	public final void setAuthorityOtherList(List<SysCodeInfo> authorityOtherList) {
		this.authorityOtherList = authorityOtherList;
	}

	/**
	 * @return the authorityList
	 */
	public final List<SysCodeInfo> getAuthorityList() {
		return authorityList;
	}

	/**
	 * @param authorityList the authorityList to set
	 */
	public final void setAuthorityList(List<SysCodeInfo> authorityList) {
		this.authorityList = authorityList;
	}

	/**
	 * @return the category1Id
	 */
	public final String getCategory1Id() {
		return category1Id;
	}

	/**
	 * @param category1Id the category1Id to set
	 */
	public final void setCategory1Id(String category1Id) {
		this.category1Id = category1Id;
	}

	/**
	 * @return the category2Id
	 */
	public final String getCategory2Id() {
		return category2Id;
	}

	/**
	 * @param category2Id the category2Id to set
	 */
	public final void setCategory2Id(String category2Id) {
		this.category2Id = category2Id;
	}

	/**
	 * @return the category3Id
	 */
	public final String getCategory3Id() {
		return category3Id;
	}

	/**
	 * @param category3Id the category3Id to set
	 */
	public final void setCategory3Id(String category3Id) {
		this.category3Id = category3Id;
	}
	
	/**
	 * @return the sltCategory1
	 */
	public final String getSltCategory1() {
		return sltCategory1;
	}

	/**
	 * @param sltCategory1 the sltCategory1 to set
	 */
	public final void setSltCategory1(String sltCategory1) {
		this.sltCategory1 = sltCategory1;
	}

	/**
	 * @return the sltCategory2
	 */
	public final String getSltCategory2() {
		return sltCategory2;
	}

	/**
	 * @param sltCategory2 the sltCategory2 to set
	 */
	public final void setSltCategory2(String sltCategory2) {
		this.sltCategory2 = sltCategory2;
	}

	/**
	 * @return the sltCategory3
	 */
	public final String getSltCategory3() {
		return sltCategory3;
	}

	/**
	 * @param sltCategory3 the sltCategory3 to set
	 */
	public final void setSltCategory3(String sltCategory3) {
		this.sltCategory3 = sltCategory3;
	}

	/**
	 * @return the fieldinfo
	 */
	public final String getFieldinfo() {
		return fieldinfo;
	}

	/**
	 * @param fieldinfo the fieldinfo to set
	 */
	public final void setFieldinfo(String fieldinfo) {
		this.fieldinfo = fieldinfo;
	}

	/**
	 * @return the errorMessage
	 */
	public final String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage the errorMessage to set
	 */
	public final void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

	/**
	 * @return the parameter
	 */
	public final Integer getParameter() {
		return parameter;
	}

	/**
	 * @param parameter the parameter to set
	 */
	public final void setParameter(Integer parameter) {
		this.parameter = parameter;
	}

	/**
	 * @return the ttCommonService
	 */
	public final TtCommonService getTtCommonService() {
		return ttCommonService;
	}

	/**
	 * @param ttCommonService the ttCommonService to set
	 */
	public final void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}

	/**
	 * @param logService
	 *            the logService to set
	 */
	public void setLogService(LogService logService) {
		this.logService = logService;
	}
}
