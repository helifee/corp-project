/*
 * @(#)C100021Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 共通子系统
 */

package com.yds.tt.manager.action;

import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.interceptor.annotations.InputConfig;
import com.yds.base.action.AbstractBaseAction;
import com.yds.tt.manager.bean.KeywordInfo;
import com.yds.tt.manager.service.C100021Service;

/**
 * 关键字选择处理
 * 
 * @author chenjunshuai
 * @version 1.00 2010/03/15
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("c100021Action")
public class C100021Action extends AbstractBaseAction {

	private static final long serialVersionUID = 7974233830480248095L;
	private C100021Service c100021Service;
	private Integer gateGroupId;// 分类ID
	private String gateName;// 分类名称
	private String keyStrOld;// 传递的关键字串
	private String keyStrId;// 显示关键字串控件ID
	private List<KeywordInfo> ttKeyInfoList;// 数据库中关键字信息
	private List<KeywordInfo> ttKeyInfoListOld;// 用户输入与数据库中不同的关键字信息
	private String errorMessage;// 错误信息
	
	/**
	 * 画面的初期显示 关键字显示一览取得
	 * 
	 * @return SUCCESS
	 */
	@Override
	@InputConfig(resultName = "error")	
	public String execute() throws Exception {

		// 取得数据库中关键字
		this.ttKeyInfoList = this.c100021Service.getKeywordList(keyStrOld, gateGroupId).get("ttKeyInfoList");
		
		// 与数据库中不同的关键字
		this.ttKeyInfoListOld = this.c100021Service.getKeywordList(keyStrOld, gateGroupId).get("keyInfoList");
		
		return SUCCESS;
	}
	
	/**
	 * 检查考试ID和分类ID是否传递
	 */
	@Override
	public void validate() {
		
		// 分类ID没有传过来时
		if (null == gateGroupId || 0 == gateGroupId) {
			errorMessage = propMgr.getMessage("yds.com.warning.0001", "分类ID");
			this.addActionError("error");
			return;			
		}
		
		// 控件ID没有传过来时
		if (null == keyStrId || keyStrId.isEmpty()) {
			errorMessage = propMgr.getMessage("yds.com.warning.0001", "控件ID");
			this.addActionError("error");
		}
	}

	/**
	 * @return the gateGroupId
	 */
	public Integer getGateGroupId() {
		return gateGroupId;
	}

	/**
	 * @param gateGroupId the gateGroupId to set
	 */
	public void setGateGroupId(Integer gateGroupId) {
		this.gateGroupId = gateGroupId;
	}


	/**
	 * @return the gateName
	 */	
	public String getGateName() {
		return gateName;
	}

	/**
	 * @param gateName
	 *            the gateName to set
	 */	
	public void setGateName(String gateName) {
		this.gateName = gateName;
	}

	/**
	 * @return the keyStrOld
	 */	
	public String getKeyStrOld() {
		return keyStrOld;
	}
	
	/**
	 * @param keyStrOld
	 *            the keyStrOld to set
	 */
	public void setKeyStrOld(String keyStrOld) {
		this.keyStrOld = keyStrOld;
	}

	/**
	 * @return the c100021Service
	 */
	public C100021Service getC100021Service() {
		return c100021Service;
	}

	/**
	 * @param service the c100021Service to set
	 */
	public void setC100021Service(C100021Service service) {
		c100021Service = service;
	}

	/**
	 * @return the ttKeyInfoListOld
	 */
	public List<KeywordInfo> getTtKeyInfoListOld() {
		return ttKeyInfoListOld;
	}

	/**
	 * @param ttKeyInfoListOld
	 *            the ttKeyInfoListOld to set
	 */
	public void setTtKeyInfoListOld(List<KeywordInfo> ttKeyInfoListOld) {
		this.ttKeyInfoListOld = ttKeyInfoListOld;
	}

	/**
	 * @return the keyStrId
	 */
	public String getKeyStrId() {
		return keyStrId;
	}
	
	/**
	 * @param keyStrId
	 *            the keyStrId to set
	 */
	public void setKeyStrId(String keyStrId) {
		this.keyStrId = keyStrId;
	}

	/**
	 * @return the ttKeyInfoList
	 */
	public List<KeywordInfo> getTtKeyInfoList() {
		return ttKeyInfoList;
	}

	/**
	 * @param ttKeyInfoList
	 *            the ttKeyInfoList to set
	 */
	public void setTtKeyInfoList(List<KeywordInfo> ttKeyInfoList) {
		this.ttKeyInfoList = ttKeyInfoList;
	}

	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}
}
