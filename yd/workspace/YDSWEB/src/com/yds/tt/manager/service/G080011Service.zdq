/*
 * @(#) G080011Service.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 管理
 */
package com.yds.tt.manager.service;

import java.util.List;

import com.yds.common.bean.Tree;
import com.yds.tt.manager.bean.G080011CategoryInfo;
import com.yds.tt.manager.bean.G080011Differentiation;
import com.yds.tt.manager.bean.G080011UnconformityDataInfo;

/**
 * 系统维护处理(业务逻辑)
 * 
 * @author zhanghaibo
 * @version 1.00 2010/04/22
 */
public interface G080011Service {

	/**
	 * 取得树结构
	 * 
	 * @return 树Bean
	 */
	public List<Tree> getTree();
	
	/**
	 * 添加一级分类
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return 新建分类和最末端的一级分类
	 */
	public String addRootCategory(G080011CategoryInfo categoryInfo);
	
	/**
	 * 添加子分类
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @param int 提交标识
	 * @return 新建分类组合ID
	 */
	public String addChildCategory(G080011CategoryInfo categoryInfo, int submitFlag);
	
	/**
	 * 保存分类
	 * 
	 * @param G080011CategoryInfo 分类信息
	 */
	public void saveCategory(G080011CategoryInfo categoryInfo);
	
	/**
	 * 不整合数据统计取得
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return List<G080011CategoryInfo> 不整合数据统计列表
	 */
	public List<G080011CategoryInfo> getUnconformityCountList(G080011CategoryInfo categoryInfo);
	
	/**
	 * 不整合一览数据取得（分页）
	 * 
	 * @return List<G080011UnconformityDataInfo> 不整合一览数据
	 */
	public List<G080011UnconformityDataInfo> getUnconformityDataList(int offset , int perCounts);
	
	/**
	 * 不整合数据总数取得（分页）
	 * 
	 * @return Long 不整合数据总数
	 */
	public Long getUnconformityDataCount();
	
	/**
	 * 警告信息替换参数取得
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @param int 处理区分 1：新建子类别，2:删除类别，3:取消删除
	 * @return String 警告信息替换参数
	 */
	public String getWarningMessageParams(G080011CategoryInfo categoryInfo, int accessFlag);
	
	/**
	 * 是否可以创建子类别判断
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return boolean true/false
	 */
	public boolean canNotHaveChildren(G080011CategoryInfo categoryInfo);
	
	/**
	 * 是否可以删除判断
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return boolean true/false
	 */
	public boolean canNotBeDeleted(G080011CategoryInfo categoryInfo);
	
	/**
	 * 是否可以取消删除判断
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return boolean true/false
	 */
	public boolean canNotBeUndone(G080011CategoryInfo categoryInfo);
	
	/**
	 * 是否可以修改判断
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return boolean true/false
	 */
	public boolean canNotBeModified(G080011CategoryInfo categoryInfo);
	
	/**
	 * 删除类别
	 * 
	 * @param G080011CategoryInfo 分类信息
	 */
	public void deleteCategory(G080011CategoryInfo categoryInfo);
	
	/**
	 * 取消删除类别
	 * 
	 * @param G080011CategoryInfo 分类信息
	 */
	public void deleteUndo(G080011CategoryInfo categoryInfo, int submitFlag);
	
	/**
	 * 区分列表取得
	 * 
	 * @return List<G080011Differentiation> 区分列表
	 */
	public List<G080011Differentiation> getDiffInfoList();
	
	/**
	 * 区分详细取得
	 * 
	 * @param String 类型ID
	 * @return List<G080011Differentiation> 区分详细列表
	 */
	public List<G080011Differentiation> getDiffDetailInfoList(String typeId);
	
	/**
	 * 保存区分编辑内容
	 * 
	 * @param String 类型ID
	 * @param String 类型名称
	 * @param String[] 区分No
	 * @param String[] 区分名称
	 */
	public void saveDiff(String typeId, String typeName, String[] diffNo, String[] diffName);
	
	/**
	 * 系统状态取得
	 * 
	 * @return String 系统状态
	 */
	public String getSystemStatus();
	
	/**
	 * 开始维护
	 * 
	 */
	public void updateSysMaintInfoForStart();
	
	/**
	 * 停止维护
	 * 
	 */
	public void updateSysMaintInfoForStop();
	
	/**
	 * 系统状态检查
	 * 
	 */
	public void checkSystemStatus();
}
