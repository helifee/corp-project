/*
 * @(#) G080011Dao.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 管理
 */
package com.yds.tt.manager.dao;

import java.util.List;

import com.yds.tt.manager.bean.G080011CategoryInfo;
import com.yds.tt.manager.bean.G080011Differentiation;
import com.yds.tt.manager.bean.G080011UnconformityDataInfo;
import com.yds.tt.manager.bean.SystemMaintainInfo;

/**
 * 系统维护处理（数据库访问）
 * 
 * @author zhanghaibo
 * @version 1.00 2010/04/22
 */
public interface G080011Dao {
	
	/**
	 * 分类信息列表取得
	 * 
	 * @return List<G080011CategoryInfo> 分类信息列表
	 */
	public List<G080011CategoryInfo> getCategoryInfoList(G080011CategoryInfo categoryInfo);
	
	/**
	 * 取得组合分类ID
	 * 
	 * @return String 组合分类ID
	 */
	public String getCategoryId(G080011CategoryInfo categoryInfo);
	
	/**
	 * 取得最大一级分类ID
	 * 
	 * @return Integer 最大一级分类ID
	 */
	public Integer getMaxCategory1Id();
	
	/**
	 * 取得最大二级分类ID
	 * 
	 * @param String 一级分类ID
	 * @return Integer 最大二级分类ID
	 */
	public Integer getMaxCategory2Id(Integer category1Id);
	
	/**
	 * 取得最大三级分类ID
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return Integer 最大三级分类ID
	 */
	public Integer getMaxCategory3Id(G080011CategoryInfo categoryInfo);
	
	/**
	 * 不整合数据统计取得
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return List<G080011CategoryInfo> 不整合数据统计列表
	 */
	public List<G080011CategoryInfo> getUnconformityCountList(G080011CategoryInfo categoryInfo);
	
	/**
	 * 子分类数目取得
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return Integer 子分类数目
	 */
	public Integer getChildrenNumber(G080011CategoryInfo categoryInfo);
	
	/**
	 * 分类信息取得
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return G080011CategoryInfo 分类信息
	 */
	public G080011CategoryInfo getCategoryInfo(G080011CategoryInfo categoryInfo);
	
	/**
	 * 区分列表取得
	 * 
	 * @return List<G080011Differentiation> 区分列表
	 */
	public List<G080011Differentiation> getDiffInfoList();
	
	/**
	 * 区分详细取得
	 * 
	 * @param String 类型ID
	 * @return List<G080011Differentiation> 区分详细列表
	 */
	public List<G080011Differentiation> getDiffDetailInfoList(String typeId);
	
	/**
	 * 区分No最大值取得
	 * 
	 * @param String 类型ID
	 * @return Integer 区分No最大值
	 */
	public Integer getMaxDiffNo(String typeId);
	
	/**
	 * 用户名取得
	 * 
	 * @param String 用户ID
	 * @return String 用户名
	 */
	public String getUserName(String userId);
	
	/**
	 * 不整合一览数据取得（分页）
	 * 
	 * @return List<G080011UnconformityDataInfo> 不整合一览数据
	 */
	public List<G080011UnconformityDataInfo> getUnconformityDataList(int offset , int perCounts);
	
	/**
	 * 不整合数据总数取得（分页）
	 * 
	 * @return Long 不整合数据总数
	 */
	public Long getUnconformityDataCount();
	
	/**
	 * 系统维护信息取得
	 * 
	 * @return List<String> 系统维护信息
	 */
	public List<String> getSystemMaintainInfo();
	
	/**
	 * 更新系统维护信息
	 * 
	 * @param SystemMaintainInfo 系统维护信息
	 */
	public void updateSystemMaintainInfo(SystemMaintainInfo systemMaintainInfo);
	
	/**
	 * 更新区分显示顺序
	 * 
	 * @param G080011Differentiation 区分信息
	 */
	public void updateDispSeq(G080011Differentiation differentiation);
	
	/**
	 * 更新分类名称
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return 更新行数
	 */
	public int updateCategoryName(G080011CategoryInfo categoryInfo);
	
	/**
	 * 更新分类状态
	 * 
	 * @param G080011CategoryInfo 分类信息
	 * @return 更新行数
	 */
	public int updateCategoryStatus(G080011CategoryInfo categoryInfo);
	
	/**
	 * 登录分类信息
	 * 
	 * @param G080011CategoryInfo 分类信息
	 */
	public void insertCategory(G080011CategoryInfo categoryInfo);
	
	/**
	 * 登录区分
	 * 
	 * @param G080011Differentiation 区分信息
	 */
	public void insertDiff(G080011Differentiation differentiation);
	
	/**
	 * 删除区分
	 * 
	 * @param G080011Differentiation 类型ID
	 */
	public void deleteDiff(String typeId);

}
