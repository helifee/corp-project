/*
 * @(#)FileDownloadAction.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 管理
 */
package com.yds.tt.manager.action;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.yds.base.action.AbstractBaseAction;
import com.yds.tt.manager.service.TtCommonUtil;
import com.yds.tt.manager.service.TtConstants;

/**
 * 文件下载处理
 * 
 * @author zhanghaibo
 * @version 1.00 2010/04/26
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("fileDownloadAction")
public class FileDownloadAction extends AbstractBaseAction {

	private static final long serialVersionUID = -5703776549933373528L;
	private String fileName; // 文件名
	private String flag; // 文件区分
	private String errorMessage; // 错误信息

	/**
	 * 文件流取得
	 * 
	 * @return 文件流
	 * @throws FileNotFoundException
	 * @throws Exception
	 */
	public InputStream getDownloadFile() throws FileNotFoundException {
		return (InputStream) new FileInputStream(this.getResource());
	}

	/**
	 * 文件下载权限检查
	 * 
	 * @return SUCCESS
	 */
	@Override
	public String execute() {

		// 权限检查
		// 检查文件所属ObjectId（教材ID，试题ID），如果当前用户拥有该对象的编辑权限
		// 或者审批权限，或者浏览权限（针对对象），则检查通过，否则返回错误。
		// 若检索不到ObjectId，说明该文件处于编辑中，编辑中的文件只有编辑者能看到，
		// 所以不用检查权限。
		
		// 由于当前表结构无法从试题ID追溯到试卷ID、考试ID，所以无法保证让所有有访问资源
		// 权限的用户都能访问资源，因此，暂定不做权限检查，只做登录检查。
		String strUserId = TtCommonUtil.getLoginUserId();
		if (null == strUserId || "".equals(strUserId)) {
			errorMessage = propMgr.getMessage("yds.tt.error.GTE01");
			return ERROR;
		}
		
		/*List<Integer> authoritys = new ArrayList<Integer>(); 
		
		switch (TtConstants.FILE_PATH.valueOf(flag)) {
		
		case BOOK_FILE :
		case BOOK_IMAGE:
		case BOOK_MEDIA:
			authoritys.add(TtConstants.C24.C24_1.value());
			authoritys.add(TtConstants.C24.C24_6.value());
			authoritys.add(TtConstants.C24.C24_7.value());
			authoritys.add(TtConstants.C24.C24_10.value());
			authoritys.add(TtConstants.C24.C24_11.value());
			break;
		case QUESTION_FILE:
		case QUESTION_IMAGE:
		case QUESTION_MEDIA:
		case QUESTION_ANSWER:
		case QUESTION_USERANSWER:
			
			
		}*/

		return SUCCESS;
	}

	/**
	 * 文件路径取得
	 * 
	 * @return 文件路径
	 */
	private String getResource() {

		return propMgr
				.getParameter(TtConstants.FILE_PATH.valueOf(flag).value())
				+ "/" + fileName;
	}

	/**
	 * @return the fileName
	 */
	public String getFileName() {
		return fileName;
	}

	/**
	 * @param fileName
	 *            the fileName to set
	 */
	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	/**
	 * @return the flag
	 */
	public String getFlag() {
		return flag;
	}

	/**
	 * @param flag
	 *            the flag to set
	 */
	public void setFlag(String flag) {
		this.flag = flag;
	}

	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

}
