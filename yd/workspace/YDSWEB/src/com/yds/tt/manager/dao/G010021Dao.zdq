/*
 * @(#) G010021Dao.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 权限管理
 */

package com.yds.tt.manager.dao;

import java.util.List;

import com.yds.tt.manager.bean.G010021aInfo;

/**
 * 权限管理
 * 
 * @author guozhizhou
 * @version 1.00 2010/03/15
 */
public interface G010021Dao {

	/**
	 * 取得维护权限分配信息一览 
	 * 
	 * @param  param
	 *          检索条件信息
	 * @param  offset 
	 *          取得维护权限分配信息 
	 * @param  perCounts
	 *          取得翻页信息
	 * @return G010021aInfo 维护权限信息一览 
	 */
	public List<G010021aInfo> getG010021aInfo(G010021aInfo param, int offset , int perCounts);
	
	/**
	 * 取得权限申请信息一览 
	 * 
	 * @param  application
	 *          检索条件信息
	 * @param  offset 
	 *          取得权限申请信息 
	 * @param  perCounts
	 *          取得翻页信息
	 * @return G010021aInfo 权限申请信息一览 
	 */
	public List<G010021aInfo> getG010021ApplicationInfo(G010021aInfo application, int offset , int perCounts);
	
	/**
	 * 取得其他权限分配信息一览 
	 * 
	 * @param  simple
	 *          检索条件信息
	 * @param  offset 
	 *          取得其他权限分配信息 
	 * @param  perCounts
	 *          取得翻页信息
	 * @return G010021aInfo 其他信息信息一览 
	 */
	public List<G010021aInfo> getG010021OtherInfo(G010021aInfo simple, int offset , int perCounts);
	
	/**
	 * 取得维护权限分配信息总数（分页）
	 * 
	 * @return 权限分配信息总数
	 */
	public Long getTotalCount();
	
	/**
	 *  更新登录者的排他
	 * 
	 * @return true/flase
	 */
	public String getUserId();
	
	/**
	 *  更新登录时间的排他
	 *  
	 *  @return true/flase
	 */
	public String getLoginTime();
	
	/**
	 * 取得维护权限重复件数
	 * 
	 * @return G010021aInfo 维护权限信息
	 */
	public Long getSameAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 取得其他权限信息重复件数
	 * 
	 * @return G010021aInfo 其他权限信息
	 */
	public Long getSameOtherAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 取得维护权限重复件数
	 * 
	 * @return G010021aInfo 维护权限信息
	 */
	public Long getSameUpdateAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 取得其他权限信息重复件数
	 * 
	 * @return G010021aInfo 其他权限信息
	 */
	public Long getSameUpdateOtherAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 取得权限申请一览信息总数（分页）
	 * 
	 * @return G010021aInfo 权限申请信息一览
	 */
	public Long getTotalCountApplication();
	
	/**
	 * 取得其他权限分配信息总数（分页）
	 * 
	 * @return G010021aInfo 其他权限信息一览
	 */
	public Long getTotalCountOther();
	
	/**
	 *  维护权限分配信息的添加
	 * 
	 * @param g010021aInfo
	 *            要添加维护权限分配信息
	 */
	public abstract Object insertAuthority(G010021aInfo g010021aInfo);

	/**
	 *  其他权限分配信息的添加
	 * 
	 * @param g010021aInfo
	 *            要添加其他权限分配信息
	 */
	public abstract Object insertOtherAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 维护权限信息的修改
	 * 
	 * @param g010021aInfo
	 *            要修改维护权限分配信息
	 */
	public abstract Object updateAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 其他权限信息的修改
	 * 
	 * @param g010021aInfo
	 *            要修改其他权限分配信息
	 */
	public abstract Object updateOtherAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 密码维护的修改
	 * 
	 * @param g010021aInfo
	 *            要修改密码维护信息
	 */
	public int updatePassword(G010021aInfo g010021aInfo);
	
	/**
	 * 帐号的修改
	 * 
	 * @param g010021aInfo
	 *            要修改帐号信息
	 */
	public int updateName(G010021aInfo g010021aInfo);

	/**
	 * 删除维护权限分配信息
	 * 
	 * @param g010021aInfo
	 *            员工ID,权限区分,一级分类ID,二级分类ID,三级分类ID,开始时间
	 */
	public abstract Object deleteAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 删除其他权限分配信息
	 * 
	 * @param g010021aInfo
	 *            员工ID,权限区分,开始时间
	 */
	public abstract Object deleteOtherAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 权限申请一览信息
	 * 
	 * @param g010021aInfo
	 *            员工ID,权限区分
	 */
	public abstract Object deleteApplicationAuthority(G010021aInfo g010021aInfo);
	
	/**
	 * 配置信息
	 * 
	 * @param g010021aInfo
	 *            配置信息
	 */
	public G010021aInfo item();

}
