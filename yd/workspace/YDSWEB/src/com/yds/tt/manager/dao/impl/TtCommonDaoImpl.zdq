/*
 * @(#) TtCommonDaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 共通
 */

package com.yds.tt.manager.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.common.bean.CheckAndLockInfo;
import com.yds.common.bean.SysCodeInfo;
import com.yds.common.bean.UserInfo;
import com.yds.tt.manager.bean.AuthorityCheckPara;
import com.yds.tt.manager.bean.AuthorityInfo;
import com.yds.tt.manager.bean.CategoryInfo;
import com.yds.tt.manager.bean.DisposeInfo;
import com.yds.tt.manager.bean.EmpOrgInfo;
import com.yds.tt.manager.bean.MessageReminding;
import com.yds.tt.manager.bean.PageStartupControl;
import com.yds.tt.manager.bean.SequenceInfo;
import com.yds.tt.manager.bean.SltCategoryConditionInfo;
import com.yds.tt.manager.bean.SltCategoryInfo;
import com.yds.tt.manager.dao.TtCommonDao;
import com.yds.util.service.DateUtil;

/**
 * @see com.yds.tt.manager.dao.TtCommonDao
 */
@Repository("ttCommonDao")
public class TtCommonDaoImpl extends AbstractBaseDao implements TtCommonDao {
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public SequenceInfo getSequenceInfo(String seqId) {
		return (SequenceInfo) super.queryForObject(
				"TtCommonDao.getSequenceInfo", seqId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateSequenceInfo(String seqId) {
		return super.update("TtCommonDao.updateSequenceInfo", seqId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateSequenceInfo(String seqId,Integer seqValue) {
		Map<String,Object> param = new HashMap<String,Object>();
		param.put("seqId", seqId);
		param.put("seqValue", seqValue);
		return super.update("TtCommonDao.updateSequenceInfo1", param);
	}	
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<SltCategoryInfo> getCategoryCategory1(
			SltCategoryConditionInfo sltCategoryConditionInfo) {

		return (List<SltCategoryInfo>) super.queryForList(
				"TtCommonDao.getCategoryCategory1", sltCategoryConditionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<SltCategoryInfo> getCategoryCategory2(
			SltCategoryConditionInfo sltCategoryConditionInfo) {

		return (List<SltCategoryInfo>) super.queryForList(
				"TtCommonDao.getCategoryCategory2", sltCategoryConditionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<SltCategoryInfo> getCategoryCategory3(
			SltCategoryConditionInfo sltCategoryConditionInfo) {

		return (List<SltCategoryInfo>) super.queryForList(
				"TtCommonDao.getCategoryCategory3", sltCategoryConditionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<SltCategoryInfo> getAuthorityCategory1(
			SltCategoryConditionInfo sltCategoryConditionInfo) {

		return (List<SltCategoryInfo>) super.queryForList(
				"TtCommonDao.getAuthorityCategory1", sltCategoryConditionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<SltCategoryInfo> getAuthorityCategory2(
			SltCategoryConditionInfo sltCategoryConditionInfo) {
		return (List<SltCategoryInfo>) super.queryForList(
				"TtCommonDao.getAuthorityCategory2", sltCategoryConditionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<SltCategoryInfo> getAuthorityCategory3(
			SltCategoryConditionInfo sltCategoryConditionInfo) {
		return (List<SltCategoryInfo>) super.queryForList(
				"TtCommonDao.getAuthorityCategory3", sltCategoryConditionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<SltCategoryInfo> getAuthority1(
			SltCategoryConditionInfo sltCategoryConditionInfo) {
		return (List<SltCategoryInfo>) super.queryForList(
				"TtCommonDao.getAuthority1", sltCategoryConditionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<SltCategoryInfo> getAuthority2(
			SltCategoryConditionInfo sltCategoryConditionInfo) {
		return (List<SltCategoryInfo>) super.queryForList(
				"TtCommonDao.getAuthority2", sltCategoryConditionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<SltCategoryInfo> getAuthority3(
			SltCategoryConditionInfo sltCategoryConditionInfo) {
		return (List<SltCategoryInfo>) super.queryForList(
				"TtCommonDao.getAuthority3", sltCategoryConditionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<CategoryInfo> getAuthorityCategory(
			SltCategoryConditionInfo sltCategoryConditionInfo) {

		return (List<CategoryInfo>) super.queryForList(
				"TtCommonDao.getAuthorityCategory", sltCategoryConditionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer objectAuthorityCheck1(AuthorityCheckPara checkPara) {
		return (Integer) super.queryForObject(
				"TtCommonDao.objectAuthorityCheck1", checkPara);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer objectAuthorityCheck2(AuthorityCheckPara checkPara) {
		return (Integer) super.queryForObject(
				"TtCommonDao.objectAuthorityCheck2", checkPara);

	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer objectAuthorityCheck3(AuthorityCheckPara checkPara) {
		return (Integer) super.queryForObject(
				"TtCommonDao.objectAuthorityCheck3", checkPara);

	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer objectAuthorityCheck4(AuthorityCheckPara checkPara) {
		return (Integer) super.queryForObject(
				"TtCommonDao.objectAuthorityCheck4", checkPara);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer objectAuthorityCheck5(AuthorityCheckPara checkPara) {
		return (Integer) super.queryForObject(
				"TtCommonDao.objectAuthorityCheck5", checkPara);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer categoryAuthorityCheck1(AuthorityInfo checkPara) {
		return (Integer) super.queryForObject(
				"TtCommonDao.categoryAuthorityCheck1", checkPara);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer categoryAuthorityCheck2(AuthorityInfo checkPara) {
		return (Integer) super.queryForObject(
				"TtCommonDao.categoryAuthorityCheck2", checkPara);

	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<PageStartupControl> getPageStartUpAuthorities(String pageId) {
		return (List<PageStartupControl>) super.queryForList(
				"TtCommonDao.getPageStartUpAuthorities", pageId);
	}
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<AuthorityInfo> getUserAuthorities(String userId) {
		return (List<AuthorityInfo>) super.queryForList(
				"TtCommonDao.getUserAuthorities", userId);
	}
	/**
	 * {@inheritDoc}
	 */
	@Override
	public String getMantainFlag() {
		return (String) super.queryForObject("TtCommonDao.getMaintainFlag", "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertMessageReminding(MessageReminding messageInfo) {
		super.insert("TtCommonDao.insertMessage", messageInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateMessageReminding(MessageReminding messageInfo) {
		super.insert("TtCommonDao.updateMessage", messageInfo);
	}	

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer checkAdminInfo(DisposeInfo adminInfo) {

		return (Integer) super.queryForObject("TtCommonDao.checkAdminInfo",
				adminInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateLoginTime(String loginTime) {

		return super.update("TtCommonDao.updateLoginTime", loginTime);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateLoginUserId(String loginUserId) {

		return super.update("TtCommonDao.updateLoginUserId", loginUserId);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<AuthorityInfo> getAuthorityInfoList(Map<String, String> paraMap) {
		return (List<AuthorityInfo>) super.queryForList(
				"TtCommonDao.getAuthorityInfoList", paraMap);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthorityInfo getAuthorityInfo(Map<String, String> paraMap) {
		return (AuthorityInfo) super.queryForObject(
				"TtCommonDao.getAuthorityInfo", paraMap);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertAuthority(AuthorityInfo authorityInfo) {
	
		if (authorityInfo.getEndTime() != null){
			String strDate = DateUtil.dateToString(authorityInfo.getEndTime());
			if(strDate != null && strDate.length() > 0){
				strDate = DateUtil.dateAdd(strDate , 23, DateUtil.HOUR);
				strDate = DateUtil.dateAdd(strDate , 59, DateUtil.MINUTE);
				strDate = DateUtil.dateAdd(strDate , 59, DateUtil.SECOND);
				String[] stringParam1 = new String[1];
				stringParam1[0] = strDate;
				authorityInfo.setEndTime(DateUtil.parse(strDate));
			}
		}
		
		super.insert("TtCommonDao.insertAuthority", authorityInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateAuthority(AuthorityInfo authorityInfo) {
		return super.update("TtCommonDao.updateAuthority", authorityInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteAuthority(Map<String, String> paraMap) {
		return super.delete("TtCommonDao.deleteAuthority", paraMap);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteCheckAndLockInfo(String lockId) {
		super.delete("TtCommonDao.deleteCheckAndLockInfo", lockId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<CheckAndLockInfo> getCheckAndLockInfo(
			CheckAndLockInfo checkAndLockInfo) {
		return (List<CheckAndLockInfo>) super.queryForList(
				"TtCommonDao.getCheckAndLockInfo", checkAndLockInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertCheckAndLockInfo(CheckAndLockInfo checkAndLockInfo) {
		super.insert("TtCommonDao.insertCheckAndLockInfo", checkAndLockInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateCurrentUpdateTime(String lockId) {
		super.update("TtCommonDao.updateCurrentUpdateTime", lockId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String getUserName(String userId) {
		return (String)super.queryForObject("TtCommonDao.getUserName", userId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<EmpOrgInfo> getOrgListByUserid(String userId) {
		return (List<EmpOrgInfo>) super.queryForList(
				"TtCommonDao.getOrgListByUserid", userId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<UserInfo> getUseridFromOrg(String orgId) {
		return (List<UserInfo>) super.queryForList(
				"TtCommonDao.getUseridFromOrg", orgId);
	}	
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public String getPeizhiInfo(String itemName) {
		return (String)super.queryForObject("TtCommonDao.getPeizhiInfo", itemName);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String getCategoryStatus(Map<String, Integer> paraMap) {
		return (String)super.queryForObject(
				"TtCommonDao.getCategoryStatus", paraMap);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<SysCodeInfo> getMaintAuthorityList() {
		return (List<SysCodeInfo>) super.queryForList(
				"TtCommonDao.getMaintAuthorityList");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<SysCodeInfo> getOtherAuthorityList() {
		return (List<SysCodeInfo>) super.queryForList(
				"TtCommonDao.getOtherAuthorityList");
	}

	@Override
	public Integer getMarkingTaskNum(AuthorityInfo authorityInfo) {
		return (Integer) super.queryForObject(
				"TtCommonDao.getMarkingTaskNum", authorityInfo);
	}
}
