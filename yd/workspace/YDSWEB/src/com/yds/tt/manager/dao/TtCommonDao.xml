<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="TtCommonDao">
<typeAlias alias="sltCategoryInfo" type="com.yds.tt.manager.bean.SltCategoryInfo"/>
<typeAlias alias="sltCategoryConditionInfo" type="com.yds.tt.manager.bean.SltCategoryConditionInfo"/>	
<typeAlias alias="authorityCheckPara" type="com.yds.tt.manager.bean.AuthorityCheckPara"/>
<typeAlias alias="authorityInfo" type="com.yds.tt.manager.bean.AuthorityInfo"/>
<typeAlias alias="pageStartupControl" type="com.yds.tt.manager.bean.PageStartupControl"/>
<typeAlias alias="disposeInfo" type="com.yds.tt.manager.bean.DisposeInfo"/>
<typeAlias alias="ttempOrgInfo" type="com.yds.tt.manager.bean.EmpOrgInfo"/>
<typeAlias alias="checkAndLockInfo" type="com.yds.common.bean.CheckAndLockInfo"/>
<typeAlias alias="g010021aInfo" type="com.yds.tt.manager.bean.G010021aInfo"/>
<typeAlias alias="sysCodeInfo" type="com.yds.common.bean.SysCodeInfo"/>

	<!-- 序列号取得 --> 
	<select id="getSequenceInfo" parameterClass="String" resultClass="com.yds.tt.manager.bean.SequenceInfo"> 
		SELECT 	
			SEQUENCE_ID AS sequenceId, 
			SEQUENCE_VALUE AS sequenceValue, 
			SEQUENCE_LENGTH AS sequenceLength, 
			MAX_VALUE AS maxValue
		FROM 
			TT_XULIEHAO
		WHERE
			SEQUENCE_ID = #sequenceId#
	</select>
	
	<!-- 更新序列号 -->
	<update id="updateSequenceInfo" parameterClass="String">
		UPDATE TT_XULIEHAO
		   SET
			   SEQUENCE_VALUE = SEQUENCE_VALUE + 1
		 WHERE
			   SEQUENCE_ID = #sequenceId#;
	</update>
	
	<!-- 直接更新序列号 -->
	<update id="updateSequenceInfo1" parameterClass="java.util.HashMap">
		UPDATE TT_XULIEHAO
		   SET
			   SEQUENCE_VALUE = #seqValue#
		 WHERE
			   SEQUENCE_ID = #seqId#;
	</update>	
	
	<!-- 分类表一级分类列表取得 -->
	<select id="getCategoryCategory1" parameterClass="sltCategoryConditionInfo" resultClass="sltCategoryInfo">
		SELECT 	
			CATEGORY1_ID AS categoryId, 
			CATEGORY_NAME AS categoryName, 
			CATEGORY_STATUS AS categoryStatus
		FROM 
			tt_fenlei
		WHERE
			CATEGORY_LEVEL = 1 AND
			CATEGORY_STATUS != 3 
			<isEqual prepend="AND" property="errorDataExist" compareValue="false">
				CATEGORY_STATUS != 1 
			</isEqual>
		ORDER BY
			CATEGORY1_ID

	</select>
	
	<!-- 权限表一级分类列表取得 -->
	<select id="getAuthorityCategory1" parameterClass="sltCategoryConditionInfo" resultClass="sltCategoryInfo">
		SELECT 	
			distinct(T1.CATEGORY1_ID) AS categoryId, 
			T2.CATEGORY_NAME AS categoryName, 
			T2.CATEGORY_STATUS AS categoryStatus
		FROM 
			tt_quanxian T1 ,
			tt_fenlei T2
			
		WHERE
			T1.AUTHORITY_ID = #authorityId# AND
			T1.USER_ID = #userId# AND
			T1.CATEGORY1_ID=T2.CATEGORY1_ID AND
			<![CDATA[ 
				T1.START_TIME <= now()
			]]>  AND 
		    <![CDATA[
				T1.END_TIME >= now()
			]]>  AND
			T2.CATEGORY2_ID = 0 AND
			T2.CATEGORY3_ID = 0 AND
			T2.CATEGORY_STATUS != 3
			<isEqual prepend="AND" property="errorDataExist" compareValue="false">
				T2.CATEGORY_STATUS != 1 
			</isEqual>
		ORDER BY
			T1.CATEGORY1_ID
	</select>	
	
	<!-- 分类表二级分类列表取得 -->
	<select id="getCategoryCategory2" parameterClass="sltCategoryConditionInfo" resultClass="sltCategoryInfo">
		SELECT 	
			CATEGORY2_ID AS categoryId, 
			CATEGORY_NAME AS categoryName, 
			CATEGORY_STATUS AS categoryStatus
		FROM 
			tt_fenlei
		WHERE
			CATEGORY_LEVEL = 2 AND
			CATEGORY1_ID = #category1Id# AND
			CATEGORY_STATUS != 3 
			<isEqual prepend="AND" property="errorDataExist" compareValue="false">
				CATEGORY_STATUS != 1 
			</isEqual>
		ORDER BY
			CATEGORY2_ID
	</select>
		
	<!-- 权限表二级分类列表取得 -->
	<select id="getAuthorityCategory2" parameterClass="sltCategoryConditionInfo" resultClass="sltCategoryInfo">
		SELECT 	
			distinct(T1.CATEGORY2_ID) AS categoryId, 
			T2.CATEGORY_NAME AS categoryName, 
			T2.CATEGORY_STATUS AS categoryStatus
		FROM 
			tt_quanxian T1, tt_fenlei T2

		WHERE
			T2.CATEGORY1_ID = #category1Id# AND
			T1.CATEGORY1_ID = T2.CATEGORY1_ID AND
			T1.CATEGORY2_ID = T2.CATEGORY2_ID AND
			T2.CATEGORY3_ID = 0 AND
			T2.CATEGORY_STATUS != 3 
			<isEqual prepend="AND" property="errorDataExist" compareValue="false">
				T2.CATEGORY_STATUS != 1 
			</isEqual> AND
			<![CDATA[ 
				T1.START_TIME <= now()
			]]>  AND 
			<![CDATA[
				T1.END_TIME >= now()
			]]>  AND
			T1.AUTHORITY_ID = #authorityId# AND
			T1.USER_ID = #userId#
			
		ORDER BY
			T1.CATEGORY2_ID
	</select>	
	
	<!-- 分类表三级分类列表取得 -->
	<select id="getCategoryCategory3" parameterClass="sltCategoryConditionInfo" resultClass="sltCategoryInfo">
		SELECT 	
			CATEGORY3_ID AS categoryId, 
			CATEGORY_NAME AS categoryName, 
			CATEGORY_STATUS AS categoryStatus
		FROM 
			tt_fenlei
		WHERE
			CATEGORY_LEVEL = 3 AND
			CATEGORY1_ID = #category1Id# AND
			CATEGORY2_ID = #category2Id# AND
			CATEGORY_STATUS != 3 
			<isEqual prepend="AND" property="errorDataExist" compareValue="false">
				CATEGORY_STATUS != 1 
			</isEqual>
		ORDER BY
			CATEGORY3_ID
	</select>
	

	<!-- 权限表三级分类列表取得 -->
	<select id="getAuthorityCategory3" parameterClass="sltCategoryConditionInfo" resultClass="sltCategoryInfo">
		SELECT 	
			distinct(T1.CATEGORY3_ID) AS categoryId, 
			T2.CATEGORY_NAME AS categoryName, 
			T2.CATEGORY_STATUS AS categoryStatus
		FROM 
			tt_quanxian T1, tt_fenlei T2

		WHERE
			T2.CATEGORY1_ID = #category1Id# AND
			T2.CATEGORY2_ID = #category2Id# AND
			T1.CATEGORY1_ID = T2.CATEGORY1_ID AND
			T1.CATEGORY2_ID = T2.CATEGORY2_ID AND
			T1.CATEGORY3_ID = T2.CATEGORY3_ID AND
			T2.CATEGORY_STATUS != 3 
			<isEqual prepend="AND" property="errorDataExist" compareValue="false">
				T2.CATEGORY_STATUS != 1 
			</isEqual> AND
			<![CDATA[ 
				T1.START_TIME <= now()
			]]>  AND 
			<![CDATA[
				T1.END_TIME >= now()
			]]>  AND
			T1.AUTHORITY_ID = #authorityId# AND
			T1.USER_ID = #userId#
			
		ORDER BY
			T1.CATEGORY2_ID
	</select>

	<!-- 权限一级分类id取得 -->
	<select id="getAuthority1" parameterClass="sltCategoryConditionInfo" resultClass="sltCategoryInfo">
		SELECT 	
			distinct(CATEGORY1_ID) AS categoryId
		FROM 
			tt_quanxian

		WHERE
			AUTHORITY_ID = #authorityId# AND
			USER_ID = #userId# AND
			<![CDATA[ 
				START_TIME <= now()
			]]>  AND 
			<![CDATA[
				END_TIME >= now()
			]]> 

		ORDER BY
			CATEGORY1_ID
	</select>

	<!-- 权限二级分类id取得 -->
	<select id="getAuthority2" parameterClass="sltCategoryConditionInfo" resultClass="sltCategoryInfo">
		SELECT 	
			distinct(CATEGORY2_ID) AS categoryId
		FROM 
			tt_quanxian

		WHERE
			AUTHORITY_ID = #authorityId# AND
			USER_ID = #userId# AND
			(
				CATEGORY1_ID = #category1Id# 
				OR
				CATEGORY1_ID = 0
			) AND
			<![CDATA[ 
				START_TIME <= now()
			]]>  AND 
			<![CDATA[
				END_TIME >= now()
			]]> 

		ORDER BY
			CATEGORY2_ID
	</select>

	<!-- 权限三级分类id取得 -->
	<select id="getAuthority3" parameterClass="sltCategoryConditionInfo" resultClass="sltCategoryInfo">
		SELECT 	
			distinct(CATEGORY3_ID) AS categoryId
		FROM 
			tt_quanxian

		WHERE
			AUTHORITY_ID = #authorityId# AND
			USER_ID = #userId# AND
			(
				(CATEGORY1_ID = #category1Id# AND
				 CATEGORY2_ID = #category2Id# ) 
				OR
				(CATEGORY1_ID = 0 AND
				 CATEGORY2_ID = 0 )
				 OR
				(CATEGORY1_ID = #category1Id# AND
				 CATEGORY2_ID = 0 )
			) AND
			<![CDATA[ 
				START_TIME <= now()
			]]>  AND 
			<![CDATA[
				END_TIME >= now()
			]]>

		ORDER BY
			CATEGORY3_ID
	</select>	
	
	<!-- 用户分类权限列表取得 -->
	<select id="getAuthorityCategory" parameterClass="sltCategoryConditionInfo" resultClass="com.yds.tt.manager.bean.CategoryInfo">
		SELECT 	DISTINCT
			T1.CATEGORY1_ID AS category1Id,
			T1.CATEGORY2_ID AS category2Id,
			T1.CATEGORY3_ID AS category3Id
		FROM 
			tt_quanxian T1,tt_fenlei T2

		WHERE
			T1.AUTHORITY_ID = #authorityId# AND
			T1.USER_ID = #userId# AND
			<![CDATA[ 
				T1.START_TIME <= now()
			]]>  AND 
			<![CDATA[
				T1.END_TIME >= now()
			]]>
			AND (T1.CATEGORY1_ID=0 OR T1.CATEGORY1_ID = T2.CATEGORY1_ID)
			AND (T1.CATEGORY2_ID=0 OR T1.CATEGORY2_ID = T2.CATEGORY2_ID)
			AND (T1.CATEGORY3_ID=0 OR T1.CATEGORY3_ID = T2.CATEGORY3_ID)

		ORDER BY
			category1Id,category2Id,category3Id
	</select>		

	<!-- 对象权限检查共通header-->
	<sql id="objectCheckHeader">
		   SELECT COUNT(*) 
	            FROM TT_QUANXIAN T1
	</sql>
	
	<!-- 对象权限检查动态生成table名 -->
	<sql id="dynamicTableName">
		 <isEqual prepend="," property="typeId" compareValue="1" >
			TT_KECHENG  T2
		 </isEqual> 
		 <isEqual prepend="," property="typeId" compareValue="2" >
			TT_JIAOCAI  T2
		 </isEqual> 
		 <isEqual prepend="," property="typeId" compareValue="3" >
			TT_KS_XINXI  T2
		 </isEqual> 
		 <isEqual prepend="," property="typeId" compareValue="4" >
			TT_SHIJUAN  T2
		 </isEqual> 
		 <isEqual prepend="," property="typeId" compareValue="5" >
			TT_SHIJUAN  T2
		 </isEqual>		 
		 <isEqual prepend="," property="typeId" compareValue="6" >
			TT_TIKU  T2
		 </isEqual>
	</sql>

	<!-- 对象权限检查动态添加对象ID -->
	<sql id="dynamicObjectId">
		  <isEqual property="typeId" compareValue="1" >
			T2.COURSE_ID =  #objectId#
		  </isEqual>
		  <isEqual property="typeId" compareValue="2" >
			T2.BOOK_ID =  #objectId#
		  </isEqual>
		  <isEqual property="typeId" compareValue="3" >
			T2.EXAMINE_ID =  #objectId#
		  </isEqual>
		  <isEqual property="typeId" compareValue="4" >
			T2.PAPER_ID =  #objectId#
		  </isEqual>
		  <isEqual property="typeId" compareValue="5" >
			T2.PAPER_ID =  #objectId#
		  </isEqual>
		  <isEqual property="typeId" compareValue="6" >
			T2.QUESTION_ID =  #objectId#
		  </isEqual>
	</sql>
	
	<!-- 对象权限检查1 有分类条件-->
	<select id="objectAuthorityCheck1" parameterClass="authorityCheckPara" resultClass="Integer">
		<include refid="objectCheckHeader"></include>
		<include refid="dynamicTableName"></include>
			 WHERE T1.USER_ID = #userId# 
			   <![CDATA[ 
				   AND now() BETWEEN T1.START_TIME AND T1.END_TIME
				   ]]>
				   AND T1.AUTHORITY_ID  = #authorityId#
				   AND (<include refid="dynamicObjectId" ></include>)
				   <isEqual prepend="AND" property="typeId" compareValue="2" >
				       T2.EDIT_NO =(SELECT MAX(EDIT_NO) FROM TT_JIAOCAI WHERE BOOK_ID = T2.BOOK_ID )
				   </isEqual>  
			       AND(T1.CATEGORY1_ID =0 OR (T1.CATEGORY1_ID = T2.CATEGORY1_ID 
		             AND(T1.CATEGORY2_ID =0 OR (T1.CATEGORY2_ID = T2.CATEGORY2_ID  
		               AND(T1.CATEGORY3_ID =0 OR (T1.CATEGORY3_ID = T2.CATEGORY3_ID))))))
	</select>
    
	<!-- 对象权限检查2 没有分类条件-->
	<select id="objectAuthorityCheck2" parameterClass="authorityCheckPara" resultClass="Integer">
		<include refid="objectCheckHeader"></include>
				 WHERE T1.USER_ID = #userId# 
				   <![CDATA[ 
				   AND now() BETWEEN T1.START_TIME AND T1.END_TIME
				   ]]>
				   AND T1.AUTHORITY_ID  = #authorityId#
				   AND T1.RELATEDOBJECT_ID =  #objectId#
	</select>

	<!-- 对象权限检查3 教材-->
	<select id="objectAuthorityCheck3" parameterClass="authorityCheckPara" resultClass="Integer">
		<include refid="objectCheckHeader"></include>
			,TT_JIAOCAI T2
			WHERE T1.USER_ID = #userId# 
		   <![CDATA[ 
			AND now() BETWEEN T1.START_TIME AND T1.END_TIME
		   ]]>
		   <isEqual prepend="AND" property="typeId" compareValue="2" >
			   T2.EDIT_NO =(SELECT MAX(EDIT_NO) FROM TT_JIAOCAI WHERE BOOK_ID = T2.BOOK_ID )
		   </isEqual>  
			AND T1.AUTHORITY_ID  = #authorityId#
			AND T1.RELATEDOBJECT_ID = T2.BELONG_COURSE_ID
			AND (<include refid="dynamicObjectId" ></include>)
	</select>

	<!-- 对象权限检查4 试卷 -->
	<select id="objectAuthorityCheck4" parameterClass="authorityCheckPara" resultClass="Integer">
		<include refid="objectCheckHeader"></include>
			,TT_SHIJUAN T2
			WHERE T1.USER_ID = #userId# 
		   <![CDATA[ 
			AND now() BETWEEN T1.START_TIME AND T1.END_TIME
		   ]]>
			AND T1.AUTHORITY_ID  = #authorityId#
			AND T1.RELATEDOBJECT_ID = T2.BELONG_ID
			AND (<include refid="dynamicObjectId" ></include>)
	</select>

	<!-- 对象权限检查5 试卷教材 -->
	<select id="objectAuthorityCheck5" parameterClass="authorityCheckPara" resultClass="Integer">
		<include refid="objectCheckHeader"></include>
			,TT_SHIJUAN T2
			,TT_JIAOCAI T3
			WHERE T1.USER_ID = #userId# 
		   <![CDATA[ 
			AND now() BETWEEN T1.START_TIME AND T1.END_TIME
		   ]]>
		   <isEqual prepend="AND" property="typeId" compareValue="2" >
			   T3.EDIT_NO =(SELECT MAX(EDIT_NO) FROM TT_JIAOCAI WHERE BOOK_ID = T3.BOOK_ID )
		   </isEqual>  
			AND T1.AUTHORITY_ID  = #authorityId#
			AND T1.RELATEDOBJECT_ID = T3.BELONG_COURSE_ID
			AND T3.BOOK_ID = T2.BELONG_ID
			AND (<include refid="dynamicObjectId" ></include>)
	</select>	
		
	<!-- 分类权限检查1 分类为空-->
	<select id="categoryAuthorityCheck1" parameterClass="authorityInfo" resultClass="Integer">
		SELECT COUNT(*) FROM TT_QUANXIAN
			WHERE USER_ID = #userId#
			<![CDATA[ 
			  AND now() BETWEEN START_TIME AND END_TIME
		    ]]> 
			 AND AUTHORITY_ID  = #authorityId#
	</select>	
	<!-- 分类权限检查2 分类不为空-->
	<select id="categoryAuthorityCheck2" parameterClass="authorityInfo" resultClass="Integer">
		SELECT COUNT(*) FROM TT_QUANXIAN
			WHERE USER_ID = #userId#
			<![CDATA[ 
			  AND now() BETWEEN START_TIME AND END_TIME
		    ]]> 
			 AND AUTHORITY_ID  = #authorityId#
			 AND(CATEGORY1_ID =0 OR (CATEGORY1_ID = #category1Id# 
				AND(CATEGORY3_ID =0 OR (CATEGORY2_ID = #category2Id#
					AND(CATEGORY2_ID =0 OR (CATEGORY3_ID = #category3Id#))))))
	</select>	
	<!-- 画面启动权限取得-->
	<select id="getPageStartUpAuthorities" parameterClass="String" resultClass="pageStartupControl">
		SELECT  EVENT_ID    AS eventId,
				AUTHORITY_1 AS authority1,								
				AUTHORITY_2 AS authority2,										
				AUTHORITY_3 AS authority3,									
				AUTHORITY_4 AS authority4,							
				AUTHORITY_5 AS authority5,							
				AUTHORITY_6 AS authority6,							
				AUTHORITY_7 AS authority7,							
				AUTHORITY_8 AS authority8,							
				AUTHORITY_9 AS authority9,							
				AUTHORITY_10 AS authority10,								
				AUTHORITY_11 AS authority11,								
				AUTHORITY_12 AS authority12,								
				AUTHORITY_13 AS authority13,								
				AUTHORITY_14 AS authority14,								
				AUTHORITY_15 AS authority15,								
				AUTHORITY_16 AS authority16,								
				AUTHORITY_17 AS authority17,								
				AUTHORITY_18 AS authority18,								
				AUTHORITY_19 AS authority19,								
				AUTHORITY_20 AS authority20								
		  FROM  TT_QDKONGZHI 
		 WHERE PAGE_ID =#pageId#
	</select>
	<!-- 用户权限取得 -->
	<select id="getUserAuthorities" parameterClass="String" resultClass="AuthorityInfo">
			SELECT
				AUTHORITY_ID     AS authorityId,
				CATEGORY1_ID     AS category1Id, 
				CATEGORY2_ID     AS category2Id,
				CATEGORY3_ID     AS category3Id,
				RELATEDOBJECT_ID AS relatedobjectId
			FROM TT_QUANXIAN
			WHERE USER_ID = #userId#
			<![CDATA[ 
			  AND now() BETWEEN START_TIME AND END_TIME
		    ]]> 

	</select>
	<!-- 维护状态取得 -->
	<select id="getMaintainFlag" resultClass="java.lang.String">
		SELECT ITEM_VALUE  AS maintainFlag
			FROM TT_PEIZHI
			WHERE ITEM_NAME ='SYS_M_FLAG'
	</select>	
	<!-- 登录提醒消息 -->
	<insert id="insertMessage" parameterClass="com.yds.tt.manager.bean.MessageReminding">
		INSERT INTO TT_TXXIAOXI (
        	INFORMATION_ID ,
        	USER_ID ,
        	MODE ,
        	PARAMETER ,
        	CONTENT ,
        	LOSETIME ,
        	INFORMATION_FLG
        )
		VALUES
		   (
		    #informationId#, 
			#userId#,
			#mode#, 
			#parameter#, 
			#content#, 
			DATE_FORMAT(#losetime#,'%Y-%m-%d %H:%i:%s'),
			#informationFlg#
		   );
	</insert>
	<!-- 提醒消息失效 -->
	<update id="updateMessage" parameterClass="com.yds.tt.manager.bean.MessageReminding">
		UPDATE TT_TXXIAOXI SET
        	LOSETIME = now()
		WHERE 
			MODE = #mode# AND
			PARAMETER = #parameter# AND
			<![CDATA[ 
			LOSETIME > now()
			]]>
		  ;
	</update>	
	<!-- 超级管理员帐号密码检查 -->
	<select id="checkAdminInfo" parameterClass="disposeInfo" resultClass="Integer">
		SELECT	((SELECT COUNT(*)
					FROM tt_peizhi
					WHERE ITEM_VALUE = #adminId#
							AND ITEM_NAME ='ADMIN_USER_ID')
			+
				(SELECT COUNT(*)
					FROM tt_peizhi
					WHERE ITEM_VALUE = #adminPw# 
							AND ITEM_NAME ='ADMIN_PASSWORD')) as rst
	</select>
	<!-- 排他处理更新登录者ID -->
	<update id="updateLoginUserId" parameterClass="String">
		UPDATE TT_PEIZHI
			SET ITEM_VALUE = #loginUserId#
		WHERE ITEM_NAME = 'UPDATE_USER_ID'
	</update>
	<!-- 排他处理更新登录者登录时间 -->
	<update id="updateLoginTime" parameterClass="String">
		UPDATE TT_PEIZHI
			SET ITEM_VALUE = #loginTime#
		WHERE ITEM_NAME = 'UPDATE_TIME'
	</update>
	

	<!-- 权限信息一览取得 --> 
    <select id="getAuthorityInfoList" parameterClass="java.util.HashMap" resultClass="AuthorityInfo"> 
		SELECT
        	USER_ID AS userId,
			(SELECT USER_CNM FROM v_tt_user WHERE USER_ID=t1.USER_ID) AS userName,
        	START_TIME AS startTime,
        	END_TIME AS endTime 
 		FROM 
			tt_quanxian	t1
		WHERE 
			RELATEDOBJECT_ID = #relatedobjectId# AND
			AUTHORITY_ID = #authorityId#
    </select>

	<!-- 权限信息取得 --> 
    <select id="getAuthorityInfo" parameterClass="java.util.HashMap" resultClass="AuthorityInfo"> 
        SELECT
        	USER_ID AS userId,
			(SELECT USER_CNM FROM v_tt_user WHERE USER_ID=t1.USER_ID) AS userName,
        	START_TIME AS startTime,
        	END_TIME AS endTime
        FROM
			tt_quanxian	t1
		WHERE 
			RELATEDOBJECT_ID = #relatedobjectId# AND
			AUTHORITY_ID = #authorityId#
    </select>
	<!-- 登录权限信息 -->
	<insert id="insertAuthority" parameterClass="authorityInfo">
		INSERT INTO 
			TT_QUANXIAN
		   (
			USER_ID ,
			AUTHORITY_ID,
			RELATEDOBJECT_ID ,
			START_TIME,
			END_TIME,
			CREATE_USER_ID,
			UPDATE_USER_ID,
			CREATE_TIME,
			UPDATE_TIME
		   )
		VALUES
		   (
			#userId# ,
			#authorityId# ,
			#relatedobjectId# ,
			<isNull prepend="" property="startTime">
				 '0000-00-00 00:00:00' ,
			</isNull>
			<isNotNull prepend="" property="startTime">
				 #startTime# ,
			</isNotNull>
			<isNull prepend="" property="endTime">
				 '9999-12-31 23:59:59' ,
			</isNull>
			<isNotNull prepend="" property="endTime">
				 #endTime# ,
			</isNotNull>
			#createUserId#,
			#updateUserId#,
			NOW(),
			NOW()
		   );
	</insert>
	<!-- 删除权限信息 -->
	<delete id="deleteAuthority" parameterClass="java.util.HashMap">
		DELETE 
		FROM 
			TT_QUANXIAN
		WHERE 
			RELATEDOBJECT_ID = #relatedobjectId# AND
			AUTHORITY_ID = #authorityId#
	</delete>
	<!-- 修改权限信息 --> 
	<update id="updateAuthority" parameterClass="authorityInfo">
		UPDATE 
			TT_QUANXIAN 
		SET
			USER_ID =#userId#,
			UPDATE_USER_ID =#updateUserId#	,
			UPDATE_TIME =NOW()			
		WHERE  
			RELATEDOBJECT_ID =#relatedobjectId# AND  
			AUTHORITY_ID = #authorityId#
	</update>
	
	<!-- 画面排他信息取得 --> 
    <select id="getCheckAndLockInfo" parameterClass="checkAndLockInfo" resultClass="checkAndLockInfo"> 
        SELECT 	USER_ID AS userId,
				IP AS urlIp, 
				CURRENT_UPDATE_TIME AS updateTime, 
				PRO2 AS pro2
		FROM	COM_PAGE_LOCK
		WHERE	PRO1 = #pro1#
				<isNotEmpty prepend="AND" property="pro2">
				PRO2 = #pro2#
				</isNotEmpty>
		ORDER BY LOGIN_TIME
				
    </select>
    
    <!-- 更新最近更新时间 --> 
	<update id="updateCurrentUpdateTime" parameterClass="String">
		UPDATE 	COM_PAGE_LOCK
		SET		CURRENT_UPDATE_TIME = NOW()
		WHERE	LOCK_ID = #lockId#
	</update>
	
	<!-- 登录画面排他信息 -->
	<insert id="insertCheckAndLockInfo" parameterClass="checkAndLockInfo">
		INSERT INTO COM_PAGE_LOCK
				(LOCK_ID, 
				USER_ID, 
				LOGIN_TIME, 
				PAGE_NAME, 
				STATE_FLAG, 
				IP, 
				CURRENT_UPDATE_TIME,
				PRO1,
				PRO2
				)
				VALUES
				(#lockId#, 
				#userId#, 
				#loginTime#, 
				#pageName#, 
				#stateFlag#, 
				#urlIp#, 
				#updateTime#,
				#pro1#,
				#pro2#
				)
	</insert>
	
	<!-- 删除权限信息 -->
	<delete id="deleteCheckAndLockInfo" parameterClass="String">
		DELETE FROM COM_PAGE_LOCK
		WHERE	LOCK_ID = #lockId#
	</delete>
	
	<!-- 用户名取得-->
	<select id="getUserName" resultClass="String" >
		SELECT 	USER_CNM
		FROM 	V_TT_USER
		WHERE 	USER_ID = #userId#
	</select>
	
	<!-- 项目组取得-->
	<select id="getOrgListByUserid" resultClass="ttempOrgInfo" parameterClass="String" >
		SELECT 	ORG_ID as orgId,
				ORG_NM as orgNm
		FROM 	v_emp_org_list
		WHERE 	EMP_ID = #userId#
	</select>
	<!-- 项目组成员ID取得-->
	<select id="getUseridFromOrg" resultClass="com.yds.common.bean.UserInfo" parameterClass="String" >
		SELECT 	EMP_ID as userId
		FROM 	v_emp_org_list
		WHERE 	ORG_ID = #orgId#
	</select>
	<!-- 配置信息取得-->
	<select id="getPeizhiInfo" resultClass="String" parameterClass="String" >
		SELECT 	ITEM_VALUE 
		FROM 	tt_peizhi
		WHERE 	ITEM_NAME = #itemName#
	</select>
	
	<!-- 分类整合检查用的分类状态取得 --> 
	<select id="getCategoryStatus" parameterClass="java.util.HashMap" resultClass="String"> 					
			SELECT CATEGORY_STATUS AS categoryStatus			
			FROM TT_FENLEI T1			  
			WHERE T1.CATEGORY1_ID = #category1Id#
			AND T1.CATEGORY2_ID = #category2Id#
			AND T1.CATEGORY3_ID = #category3Id#
	</select>	
	<!-- 维护权限权限选择下拉框查询语句 -->
    <select id="getMaintAuthorityList" resultClass="sysCodeInfo">
	    SELECT
			DIFF_NO AS diffNo,
			DIFF_NAME AS diffName
	        FROM COM_CODE_MST
		WHERE  TYPE_ID = 'R07'
	      AND  (DIFF_NO = '1'
		   OR   DIFF_NO = '2'
		   OR   DIFF_NO = '3')
		ORDER BY DISP_SEQ;
    </select>
	<!-- 其他权限权限选择下拉框查询语句 -->
	<select id="getOtherAuthorityList" resultClass="sysCodeInfo">
	    SELECT
			DIFF_NO AS diffNo,
			DIFF_NAME AS diffName
	        FROM COM_CODE_MST
		WHERE  TYPE_ID = 'R07'
	      AND  (DIFF_NO = '4'
		   OR   DIFF_NO = '5')
		ORDER BY DISP_SEQ;
    </select>
	
	<!-- 评分任务查询-->
	<select id="getMarkingTaskNum" parameterClass="authorityInfo" resultClass="Integer">
		SELECT COUNT(*) FROM tt_pingfenrenwu t1,tt_ks_xinxi t2
			WHERE t1.EXAMINE_MARKER_ID = #userId# and t1.EXAMINE_ID = t2.EXAMINE_ID and t2.EXAMINE_STATUS IN('8','9')
	</select>	
</sqlMap>  
