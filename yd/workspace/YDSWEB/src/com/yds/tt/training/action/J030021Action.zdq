/*
 * @(#) J030021Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育子系统
 */

package com.yds.tt.training.action;

import java.util.List;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.interceptor.annotations.InputConfig;
import com.yds.common.bean.SysCodeInfo;
import com.yds.common.service.SessionConstants;
import com.yds.common.service.SysCodeInfoService;
import com.yds.tt.manager.action.TtBasePagerAction;
import com.yds.tt.manager.bean.TtCheckResult;
import com.yds.tt.manager.service.TtConstants.R01;
import com.yds.tt.training.bean.BookInfo;
import com.yds.tt.training.bean.J030021Info;
import com.yds.tt.training.service.J030021Service;
import com.yds.util.service.Session;
import com.yds.util.service.StringUtil;

/**
 * 教材一览处理
 * 
 * @author sundefu
 * @version 1.00 2010/03/16
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("j030021Action")
public class J030021Action extends TtBasePagerAction {

	private static final long serialVersionUID = -5492559466195594902L;
	/** 教材一览画面模式 */
	private Integer mode;
	/** 启动画面ID */
	private String callScreenId;
	/** 课程ID */
	private String courseId;
	/** 一级分类ID */
	private Integer sltCategory1;
	/** 二级分类ID */
	private Integer sltCategory2;
	/** 三级分类ID */
	private Integer sltCategory3;
	/** 一级分类可用标识 */
	private String sltCategory11Enable;
	/** 二级分类可用标识 */
	private String sltCategory21Enable;
	/** 三级分类可用标识 */
	private String sltCategory31Enable;
	/** 教材状态 */
	private List<SysCodeInfo> bookStatusList;
	/** 教材信息列表 */
	private List<BookInfo> bookInfoList;
	/** 是否课程管理者 */
	private boolean courseManager;
	/** checkBox状态JSON字符串 */
	private String checkBoxStatusJson;
	/** 返回类型 */
	private String flag;
	/** 选中的教材Id */
	private String selectedBookId;
	/** 错误消息 */
	private String errorMessage;
	private J030021Service j030021Service;
	private SysCodeInfoService sysCodeInfoService;
	private J030021Info j030021Info;
	private BookInfo bookInfo;

	/**
	 * 画面的初期显示（追加模式） 教材一览
	 * 
	 * @return SUCCESS
	 */
	@InputConfig(resultName = "error")
	public String initAddMode() throws Exception {

		// 追加模式
		mode = J030021Service.ADD_MODE;

		// 一级分类ID
		if (sltCategory1 == null || sltCategory1.toString().isEmpty()
				|| sltCategory1 == 0) {
			sltCategory1 = 0;
			sltCategory11Enable = "1";
		} else {
			sltCategory11Enable = "0";
		}

		// 二级分类ID
		if (sltCategory2 == null || sltCategory2.toString().isEmpty()
				|| sltCategory2 == 0) {
			sltCategory2 = 0;
			sltCategory21Enable = "1";
		} else {
			sltCategory21Enable = "0";
		}

		// 三级分类ID
		if (sltCategory3 == null || sltCategory3.toString().isEmpty()
				|| sltCategory3 == 0) {
			sltCategory3 = 0;
			sltCategory31Enable = "1";
		} else {
			sltCategory31Enable = "0";
		}

		// 设置画面session情报
		Session.set(SessionConstants.TT_J030021_COURSEID, courseId);

		// 初期处理（启动权限检查）
		TtCheckResult checkResult = j030021Service.initProcess(mode);
		// 无权限
		if (!checkResult.getRetFlag()) {
			errorMessage = checkResult.getRetMessage();
			return ERROR;
		}
		// 教材一览检索条件
		j030021Info = new J030021Info();
		j030021Info.setCategory1Id(sltCategory1);
		j030021Info.setCategory2Id(sltCategory2);
		j030021Info.setCategory3Id(sltCategory3);
		setPagerParamter(j030021Service.selectCountBookInfo(j030021Info),
				"j030021GetBookList.action");
		bookInfoList = j030021Service.getBookInfoList(j030021Info, pager
				.getOffset().intValue(), pager.getPerDisplayCount().intValue());

		return SUCCESS;
	}

	/**
	 * 画面的初期显示（一览模式） 教材一览
	 * 
	 * @return SUCCESS
	 */
	public String initShowListMode() throws Exception {

		// 一览模式
		mode = J030021Service.SHOWLIST_MODE;

		// 初期处理（启动权限检查）
		TtCheckResult checkResult = j030021Service.initProcess(mode);
		// 无权限
		if (!checkResult.getRetFlag()) {
			errorMessage = checkResult.getRetMessage();
			return ERROR;
		}

		// 取得教材条件初始化
		j030021Info = new J030021Info();
		j030021Info.setCategory1Id(0);
		j030021Info.setCategory2Id(0);
		j030021Info.setCategory3Id(0);
		setPagerParamter(j030021Service.selectCountBookInfo(j030021Info),
				"j030021GetBookList.action");

		// 操作返回模式
		if ("1".equals(getReloadFlg())) {
			J030021Info sessionJ030021Info = (J030021Info) Session
					.get(SessionConstants.TT_J030021_SEARCHINFO);
			if (sessionJ030021Info != null) {
				j030021Info = sessionJ030021Info;
				sltCategory1 = j030021Info.getCategory1Id();
				sltCategory2 = j030021Info.getCategory2Id();
				sltCategory3 = j030021Info.getCategory3Id();
				pageNumber = j030021Info.getPageNum();
				setPagerParamter(j030021Service
						.selectCountBookInfo(j030021Info),
						"j030021GetBookList.action");
				pager.setOffset(j030021Info.getPageOffset());
			}
		}

		bookInfoList = j030021Service.getBookInfoList(j030021Info, pager
				.getOffset().intValue(), pager.getPerDisplayCount().intValue());
		this.courseManager = (Boolean) Session
				.get(SessionConstants.TT_J030021_COURSEMANAGER);

		// 教材状态下拉列表设置
		this.setBookStatusList(sysCodeInfoService.getSysCodeInfo(R01
				.getEnumName(), ""));
		
		// 记住检索条件
		j030021Info.setPageNum(pageNumber);
		j030021Info.setPageOffset(pager.getOffset());
		Session.set(SessionConstants.TT_J030021_SEARCHINFO, j030021Info);
		return SUCCESS;
	}

	/**
	 * 取得教材信息一览
	 * 
	 * @return SUCCESS
	 */
	public String createBookInfos() throws Exception {
		// 取得session情报
		this.mode = (Integer) Session.get(SessionConstants.TT_J030021_MODE);
		// 权限检查
		TtCheckResult checkResult = j030021Service.initProcess(mode);
		// 无权限
		if (!checkResult.getRetFlag()) {
			errorMessage = checkResult.getRetMessage();
			return ERROR;
		}

		// 如果检索条件未被设置
		if (j030021Info == null) {
			// 设置session中检索条件
			j030021Info = (J030021Info) Session
					.get(SessionConstants.TT_J030021_SEARCHINFO);
			if (j030021Info == null) {
				errorMessage = propMgr.getMessage("yds.com.error.0001");
				return ERROR;
			}
		}
		// 员工ID加YD
		j030021Info.setCreateUserId(StringUtil.leftPadYd(j030021Info
				.getCreateUserId()));
		j030021Info.setUpdateUserId(StringUtil.leftPadYd(j030021Info
				.getUpdateUserId()));

		// 取得教材信息
		setPagerParamter(j030021Service.selectCountBookInfo(j030021Info),
				"j030021GetBookList.action");
		bookInfoList = j030021Service.getBookInfoList(j030021Info, pager
				.getOffset().intValue(), pager.getPerDisplayCount().intValue());

		this.courseManager = (Boolean) Session
				.get(SessionConstants.TT_J030021_COURSEMANAGER);

		// 记住检索条件
		j030021Info.setPageNum(pageNumber);
		j030021Info.setPageOffset(pager.getOffset());
		Session.set(SessionConstants.TT_J030021_SEARCHINFO, j030021Info);

		return SUCCESS;
	}

	/**
	 * 加入课程
	 * 
	 * @return SUCCESS
	 */
	public String addToCourse() throws Exception {

		// 取得session情报
		this.mode = (Integer) Session.get(SessionConstants.TT_J030021_MODE);
		// 权限检查
		TtCheckResult checkResult = j030021Service.initProcess(mode);
		// 无权限
		if (!checkResult.getRetFlag()) {
			errorMessage = checkResult.getRetMessage();
			return ERROR;
		}

		// 取得画面教材选中信息
		JSONObject json = JSONObject.fromObject(checkBoxStatusJson);

		// 课程检查
		checkResult = j030021Service.checkEditCourse();
		if (!checkResult.getRetFlag()) {
			this.errorMessage = propMgr.getMessage("yds.tt.error.GTE02");
			return ERROR;
		}

		// 将所选教材加入课程
		j030021Service.addToCourse(json);

		this.errorMessage = SUCCESS;
		return SUCCESS;
	}

	/**
	 * 初期化（追加模式）校验
	 * 
	 */
	public void validateInitAddMode() throws Exception {
		// 课程ID未传递
		if (courseId == null || courseId.isEmpty()) {
			errorMessage = "课程ID未传递！";
			this.addFieldError("courseId", errorMessage);
		}
	}

	/**
	 * 取得教材信息一览输入校验
	 * 
	 */
	public void validateCreateBookInfos() throws Exception {
		// 画面对应检查
		boolean checkResult = j030021Service.checkBookInfo(j030021Info);
		if (!checkResult) {
			this.addFieldError("createTime", propMgr
					.getMessage("yds.tt.info.JYT11"));
		}
		// 取得session情报
		this.mode = (Integer) Session.get(SessionConstants.TT_J030021_MODE);
		this.courseManager = (Boolean) Session
				.get(SessionConstants.TT_J030021_COURSEMANAGER);
	}

	/**
	 * 加入课程业务校验
	 * 
	 */
	public void validateAddToCourse() throws Exception {
		// 课程存在性检查
		if (!j030021Service.checkCourseInfo()) {
			// 设置错误消息
			String thisCourseId = Session.get(
					SessionConstants.TT_J030021_COURSEID).toString();
			this.errorMessage = propMgr.getMessage("yds.tt.error.JYE12",
					thisCourseId);
			this.addFieldError("courseId", this.errorMessage);
		}
	}

	/**
	 * @return the mode
	 */
	public Integer getMode() {
		return mode;
	}

	/**
	 * @param mode
	 *            the mode to set
	 */
	public void setMode(Integer mode) {
		this.mode = mode;
	}

	/**
	 * @return the callScreenId
	 */
	public String getCallScreenId() {
		return callScreenId;
	}

	/**
	 * @param callScreenId
	 *            the callScreenId to set
	 */
	public void setCallScreenId(String callScreenId) {
		this.callScreenId = callScreenId;
	}

	/**
	 * @return the courseId
	 */
	public String getCourseId() {
		return courseId;
	}

	/**
	 * @param courseId
	 *            the courseId to set
	 */
	public void setCourseId(String courseId) {
		this.courseId = courseId;
	}

	/**
	 * @return the j030021Service
	 */
	public J030021Service getJ030021Service() {
		return j030021Service;
	}

	/**
	 * @param service
	 *            the j030021Service to set
	 */
	public void setJ030021Service(J030021Service service) {
		j030021Service = service;
	}

	/**
	 * @return the bookInfoList
	 */
	public List<BookInfo> getBookInfoList() {
		return bookInfoList;
	}

	/**
	 * @param bookInfoList
	 *            the bookInfoList to set
	 */
	public void setBookInfoList(List<BookInfo> bookInfoList) {
		this.bookInfoList = bookInfoList;
	}

	/**
	 * @return the courseManager
	 */
	public boolean isCourseManager() {
		return courseManager;
	}

	/**
	 * @param courseManager
	 *            the courseManager to set
	 */
	public void setCourseManager(boolean courseManager) {
		this.courseManager = courseManager;
	}

	/**
	 * @return the checkBoxStatusJson
	 */
	public String getCheckBoxStatusJson() {
		return checkBoxStatusJson;
	}

	/**
	 * @param checkBoxStatusJson
	 *            the checkBoxStatusJson to set
	 */
	public void setCheckBoxStatusJson(String checkBoxStatusJson) {
		this.checkBoxStatusJson = checkBoxStatusJson;
	}

	/**
	 * @return the flag
	 */
	public String getFlag() {
		return flag;
	}

	/**
	 * @param flag
	 *            the flag to set
	 */
	public void setFlag(String flag) {
		this.flag = flag;
	}

	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage
	 *            the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

	/**
	 * @return the j030021Info
	 */
	public J030021Info getJ030021Info() {
		return j030021Info;
	}

	/**
	 * @param info
	 *            the j030021Info to set
	 */
	public void setJ030021Info(J030021Info info) {
		j030021Info = info;
	}

	/**
	 * @return the sltCategory1
	 */
	public Integer getSltCategory1() {
		return sltCategory1;
	}

	/**
	 * @param sltCategory1
	 *            the sltCategory1 to set
	 */
	public void setSltCategory1(Integer sltCategory1) {
		this.sltCategory1 = sltCategory1;
	}

	/**
	 * @return the sltCategory2
	 */
	public Integer getSltCategory2() {
		return sltCategory2;
	}

	/**
	 * @param sltCategory2
	 *            the sltCategory2 to set
	 */
	public void setSltCategory2(Integer sltCategory2) {
		this.sltCategory2 = sltCategory2;
	}

	/**
	 * @return the sltCategory3
	 */
	public Integer getSltCategory3() {
		return sltCategory3;
	}

	/**
	 * @param sltCategory3
	 *            the sltCategory3 to set
	 */
	public void setSltCategory3(Integer sltCategory3) {
		this.sltCategory3 = sltCategory3;
	}

	/**
	 * @return the sltCategory11Enable
	 */
	public String getSltCategory11Enable() {
		return sltCategory11Enable;
	}

	/**
	 * @param sltCategory11Enable
	 *            the sltCategory11Enable to set
	 */
	public void setSltCategory11Enable(String sltCategory11Enable) {
		this.sltCategory11Enable = sltCategory11Enable;
	}

	/**
	 * @return the sltCategory21Enable
	 */
	public String getSltCategory21Enable() {
		return sltCategory21Enable;
	}

	/**
	 * @param sltCategory21Enable
	 *            the sltCategory21Enable to set
	 */
	public void setSltCategory21Enable(String sltCategory21Enable) {
		this.sltCategory21Enable = sltCategory21Enable;
	}

	/**
	 * @return the sltCategory31Enable
	 */
	public String getSltCategory31Enable() {
		return sltCategory31Enable;
	}

	/**
	 * @param sltCategory31Enable
	 *            the sltCategory31Enable to set
	 */
	public void setSltCategory31Enable(String sltCategory31Enable) {
		this.sltCategory31Enable = sltCategory31Enable;
	}

	/**
	 * @return the selectedBookId
	 */
	public String getSelectedBookId() {
		return selectedBookId;
	}

	/**
	 * @param selectedBookId
	 *            the selectedBookId to set
	 */
	public void setSelectedBookId(String selectedBookId) {
		this.selectedBookId = selectedBookId;
	}

	/**
	 * @param bookInfo
	 *            the bookInfo to set
	 */
	public void setBookInfo(BookInfo bookInfo) {
		this.bookInfo = bookInfo;
	}

	/**
	 * @return the bookInfo
	 */
	public BookInfo getBookInfo() {
		return bookInfo;
	}

	/**
	 * @param bookStatusList the bookStatusList to set
	 */
	public void setBookStatusList(List<SysCodeInfo> bookStatusList) {
		this.bookStatusList = bookStatusList;
	}

	/**
	 * @return the bookStatusList
	 */
	public List<SysCodeInfo> getBookStatusList() {
		return bookStatusList;
	}

	/**
	 * @return the sysCodeInfoService
	 */
	public SysCodeInfoService getSysCodeInfoService() {
		return sysCodeInfoService;
	}

	/**
	 * @param sysCodeInfoService the sysCodeInfoService to set
	 */
	public void setSysCodeInfoService(SysCodeInfoService sysCodeInfoService) {
		this.sysCodeInfoService = sysCodeInfoService;
	}
}
