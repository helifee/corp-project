/*
 * @(#)J020041ServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育子系统
 */
package com.yds.tt.training.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtCommonUtil;
import com.yds.tt.manager.service.TtConstants;
import com.yds.tt.manager.service.TtException;
import com.yds.tt.manager.service.TtExclusiveException;
import com.yds.tt.training.bean.BookInfo;
import com.yds.tt.training.bean.Bookmark;
import com.yds.tt.training.bean.CourseAttentionInfo;
import com.yds.tt.training.bean.CourseInfo;
import com.yds.tt.training.dao.J020041Dao;
import com.yds.tt.training.dao.TrainingCommonDao;
import com.yds.tt.training.service.J020041Service;

/**
 * @see com.yds.tt.training.service.J020041Service
 */
@Service("j020041Service")
public class J020041ServiceImpl extends AbstractBaseService implements J020041Service {
	private J020041Dao j020041Dao;
	private TtCommonService ttCommonService;
	private TrainingCommonDao trainingCommonDao;
	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<BookInfo> getBookInfoList(String courseId) {
		
		// 从session中得到登录者
		String userId = TtCommonUtil.getLoginUserId();		
		List<BookInfo> bookInfoList = this.j020041Dao.getBookInfoList(courseId);
		for (BookInfo manaBookUserInfo : bookInfoList) {
			Bookmark bookMark = new Bookmark();
			
			// 设置教材ID
			bookMark.setBookId(manaBookUserInfo.getBookId());
			
			// 设置员工ID
			bookMark.setEmployeesId(userId);
			
			// 设置编辑号
			bookMark.setEditNo(manaBookUserInfo.getEditNo());
			
			//取得书签的章节号
			Object chapterNo = this.trainingCommonDao.getChapterNo(bookMark);
			
			if (null == chapterNo) {
				
				//取得教材的章节号
				Object bookChapterNo = this.trainingCommonDao.getBookChapterNo(bookMark);
				
				if(bookChapterNo == null){
					// 设置章节标识
					manaBookUserInfo.setChapterNoFlag(0);
				}else{
					// 设置章节标识
					manaBookUserInfo.setChapterNoFlag(1);
				}
				
			// 书签章节号不为空	
			} else if (null != chapterNo) {
				
				// 设置章节标识
				manaBookUserInfo.setChapterNoFlag(1);			
			}
		}
		return bookInfoList;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public CourseInfo getCourseUserInfo(String courseId) {
		
		// 取得课程信息
		return this.j020041Dao.getCourseUserInfo(courseId);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public CourseInfo getStudyViewCourseInfo(String courseId) {
		
		// 取得课程信息
		return this.j020041Dao.getStudyViewCourseInfo(courseId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override	
	public int deleteCourse(String courseId) {
		
		// 排他检索
		CourseInfo courseInfo = this.j020041Dao.getCourseUserInfo(courseId);
		Date timestamp = courseInfo.getUpdateTime();
		
		// 排他检查
		if (this.ttCommonService.checkTimeStamp(TtConstants.PageId.J020041, timestamp) == false) {
			throw new TtExclusiveException();
		}
	
		// 开课状态检查:已开课时，不可删除。
		if (TtCommonUtil.isEquals(courseInfo.getCoursePublishStatus(),
		          TtConstants.R05.R05_2.value())) {
			throw new TtException(propMgr.getMessage("yds.tt.error.JYE18"));
		}
		
		// 课程删除
		return this.j020041Dao.deleteCourse(courseId);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public CourseAttentionInfo getCourseAttention(String courseId) {
		
		// 从session中得到登录者
		String userId = TtCommonUtil.getLoginUserId();
		
		CourseAttentionInfo attention = new CourseAttentionInfo();
		
		// 设置课程ID
		attention.setCourseId(courseId);
		
		// 设置员工ID
		attention.setEmployeesId(userId);
		Object object = this.j020041Dao.getCourseAttention(attention) ;
		
		// 检索出来的数据为空
		if (null == object) {
			CourseAttentionInfo courseAttentionInfo = new CourseAttentionInfo();
			courseAttentionInfo.setAttentionFlag(2);
			return courseAttentionInfo;
		}
		
		// 不是空的情况下
		CourseAttentionInfo courseAttention = new CourseAttentionInfo();
		
		// 设置关注度
		courseAttention.setAttentionFlag((Integer)object);
		return courseAttention;

	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateAttention(int attentionFlag, String courseId) {
		
		// 从session中得到登录者
		String userId = TtCommonUtil.getLoginUserId();		
		CourseAttentionInfo courseAttention = new CourseAttentionInfo();
		
		// 设置课程ID
		courseAttention.setCourseId(courseId);
		
		// 设置员工ID
		courseAttention.setEmployeesId(userId);
		
		// 设置关注度
		courseAttention.setAttentionFlag(attentionFlag);
		
		// 删除关注度信息
		this.j020041Dao.deleteAttention(courseAttention);
		
		// 插入关注度信息
		this.j020041Dao.insertAttention(courseAttention);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override	
	public Long getCourseViewPermission(String courseId) {

		// 从session中得到登录者
		String userId = TtCommonUtil.getLoginUserId();;		
		CourseAttentionInfo courseAttention = new CourseAttentionInfo();
		
		// 设置课程ID
		courseAttention.setCourseId(courseId);
		
		// 设置员工ID
		courseAttention.setEmployeesId(userId);
		return this.trainingCommonDao.getViewPermission(courseAttention);
	}
	
	/**
	 * {@inheritDoc}
	 */
	public String getEditPer(String courseId){
		
		// 取得的编辑者的信息
		List<String> editList = this.j020041Dao.getEditPer(courseId);
		StringBuffer editStr = new StringBuffer("");
		if (editList.size() > 0) {
			editStr.append(editList.get(0));
			if (editList.size() > 1) {
				for (int i = 1; i < editList.size(); i++) {
					editStr.append(",");
					editStr.append(editList.get(i));
				}				
			}
		}
		return editStr.toString();
	}
	
	/**
	 * @param dao the j020041Dao to set
	 */
	public void setJ020041Dao(J020041Dao dao) {
		j020041Dao = dao;
	}

	/**
	 * @return the ttCommonService
	 */
	public TtCommonService getTtCommonService() {
		return ttCommonService;
	}

	/**
	 * @param ttCommonService the ttCommonService to set
	 */
	public void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}

	/**
	 * @param trainingCommonDao the trainingCommonDao to set
	 */
	public void setTrainingCommonDao(TrainingCommonDao trainingCommonDao) {
		this.trainingCommonDao = trainingCommonDao;
	}	
}
