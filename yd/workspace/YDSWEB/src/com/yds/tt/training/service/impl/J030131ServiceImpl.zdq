/*
 * @(#) J030131ServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育
 */
package com.yds.tt.training.service.impl;

import java.io.File;
import java.util.List;

import org.apache.commons.io.FileUtils;
import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.tt.manager.service.TtCommonUtil;
import com.yds.tt.manager.service.TtConstants;
import com.yds.tt.testing.bean.QuestionAttachments;
import com.yds.tt.training.bean.BookAttachments;
import com.yds.tt.training.bean.BookInfo;
import com.yds.tt.training.dao.TrainingCommonDao;
import com.yds.tt.training.service.J030131Service;

/**
 * @see com.yds.tt.training.service.J030131Service
 */
@Service("j030131Service")
public class J030131ServiceImpl extends AbstractBaseService implements
		J030131Service {

	// 画面模式定数
	private static final String TT_J030131MODE_BOOK = "1";
	private static final String TT_J030131MODE_QUESTION = "2";

	private TrainingCommonDao trainingCommonDao;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer getBookInfo(String bookId, Integer editNo) {

		// 设置参数
		BookInfo bookInfo = new BookInfo();
		bookInfo.setBookId(bookId);
		bookInfo.setEditNo(editNo);

		// 取得教材状态
		return trainingCommonDao.getBookInfo(bookInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<BookAttachments> getBookAttachmentsList(String bookId) {

		BookAttachments bookAttachments = new BookAttachments();
		bookAttachments.setBookId(bookId);
		bookAttachments.setType(TtConstants.C34.C34_3.toString());

		return trainingCommonDao.getBookAttachmentsList(bookAttachments);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<QuestionAttachments> getQuestionAttachmentsList(
			String questionId) {

		QuestionAttachments questionAttachments = new QuestionAttachments();
		questionAttachments.setQuestionId(questionId);
		questionAttachments.setFileType(TtConstants.C34.C34_3.toString());

		return trainingCommonDao
				.getQuestionAttachmentsList(questionAttachments);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @throws Exception
	 */
	@Override
	public void saveAndUploadFile(File uploadFile, String fileName,
			String objectId, String mode, String fileRemark) throws Exception {

		// 生成文件名
		String targetFileName = TtCommonUtil.generateFileName(fileName);

		// 生成文件
		if (TT_J030131MODE_BOOK.equals(mode)) {

			// 生成文件
			File target = new File(propMgr
					.getParameter(TtConstants.FILE_PATH.BOOK_FILE.value()),
					targetFileName);

			// 上传文件
			FileUtils.copyFile(uploadFile, target);

			// 教材信息编辑插入至资料表
			BookAttachments bookAttachments = new BookAttachments();
			bookAttachments.setBookId(objectId);
			bookAttachments.setDataId(targetFileName);
			bookAttachments.setDataName(fileName);
			bookAttachments.setRemark(fileRemark);
			bookAttachments.setSize(String.valueOf(uploadFile.length()));
			bookAttachments.setType(TtConstants.C34.C34_3.toString());
			bookAttachments.setCreateUserId(TtCommonUtil.getLoginUserId());
			bookAttachments.setDeleteFlag(TtConstants.C25.C25_1.value());

			this.trainingCommonDao.insertBookAttachments(bookAttachments);
		} else if (TT_J030131MODE_QUESTION.equals(mode)) {

			// 生成文件
			File target = new File(propMgr
					.getParameter(TtConstants.FILE_PATH.QUESTION_FILE.value()),
					targetFileName);

			// 上传文件
			FileUtils.copyFile(uploadFile, target);

			// 题库信息编辑插入至资料表
			QuestionAttachments questionAttachments = new QuestionAttachments();
			questionAttachments.setQuestionId(objectId);
			questionAttachments.setFileId(targetFileName);
			questionAttachments.setFileName(fileName);
			questionAttachments.setComment(fileRemark);
			questionAttachments
					.setFileSize(String.valueOf(uploadFile.length()));
			questionAttachments.setFileType(TtConstants.C34.C34_3.toString());
			questionAttachments.setCreateUserId(TtCommonUtil.getLoginUserId());

			this.trainingCommonDao
					.insertQuestionAttachments(questionAttachments);
		}

	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateFile(String objectId, String dataId) {

		BookAttachments bookAttachments = new BookAttachments();
		bookAttachments.setBookId(objectId);
		bookAttachments.setDataId(dataId);

		trainingCommonDao.updateBookAttachments(bookAttachments);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @throws Exception
	 */
	@Override
	public void deleteFile(String objectId, String fileId) throws Exception {

		// 删除题库资料表
		QuestionAttachments questionAttachments = new QuestionAttachments();
		questionAttachments.setQuestionId(objectId);
		questionAttachments.setFileId(fileId);

		trainingCommonDao.deleteQuestionAttachments(questionAttachments);

		// 删除服务器上文件
		String filePath = propMgr
				.getParameter(TtConstants.FILE_PATH.QUESTION_FILE.value());
		File file = new File(filePath + "/" + fileId);

		if (file.exists()) {
			FileUtils.forceDelete(file);
		}
	}

	/**
	 * @param trainingCommonDao
	 *            the trainingCommonDao to set
	 */
	public void setTrainingCommonDao(TrainingCommonDao trainingCommonDao) {
		this.trainingCommonDao = trainingCommonDao;
	}

}
