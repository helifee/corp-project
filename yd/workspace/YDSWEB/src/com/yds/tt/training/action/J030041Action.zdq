/*
 * @(#)J030041Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育
 */

package com.yds.tt.training.action;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.yds.base.action.AbstractBaseAction;
import com.yds.tt.manager.bean.TtCheckResult;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtConstants;
import com.yds.tt.manager.service.TtExclusiveException;
import com.yds.tt.training.bean.BookContent;
import com.yds.tt.training.bean.BookInfo;
import com.yds.tt.training.service.J030041Service;
import com.yds.util.service.Session;

/**
 * 教材详细编辑处理
 * 
 * @author zhanghaibo
 * @version 1.00 2010/03/15
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("j030041Action")
public class J030041Action extends AbstractBaseAction {

	private static final long serialVersionUID = 2505718484515763172L;
	private static final String UPGRADE = "upgrade"; // 版本升级时的返回结果
	private J030041Service j030041Service;
	private BookInfo bookInfo; // 教材详细信息
	private List<BookContent> chapterInfoList; // 章节信息列表
	private String errorMessage; //错误信息
	
	private TtCommonService ttCommonService;

	/**
	 * 画面的初期显示 教材详细信息取得
	 * 
	 * @return SUCCESS
	 */
	@Override
	public String execute() throws Exception {

		// 权限检查
		if (!checkAutority()){
			return ERROR;
		}
		
		// 教材详细信息取得
		this.bookInfo = j030041Service.getBookInfo(this.bookInfo.getBookId());
		
		if (this.bookInfo == null){
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12","教材");
			return ERROR;
		}
		
		//保存时间戳检查用的更新时间
		ttCommonService.setTimestamp(TtConstants.PageId.J030041, bookInfo.getUpdateTime());
		
		// 章节列表信息取得
		this.chapterInfoList = j030041Service.getBookChapterInfoList(
				this.bookInfo.getBookId(), this.bookInfo.getEditNo());
		
		return SUCCESS;
	}
	
	/**
	 * 初期化校验
	 */
	public void validateExecute(){
		
		if (this.bookInfo == null){
			errorMessage = propMgr.getMessage("yds.com.warning.0001","接口参数");
			addFieldError("","");
		}
		
	}
	
	/**
	 * 权限校验
	 */
	private boolean checkAutority(){
		
		List<String> objectId = new ArrayList<String>();
		objectId.add(bookInfo.getBookId());
		
		// 权限检查
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				TtConstants.PageId.J030041.value(), TtConstants.PageId.J030041.value(), 0, 0, 0,
				TtConstants.C43.C43_2.value(), objectId);
		
		if (!checkResult.getRetFlag()){
			errorMessage = checkResult.getRetMessage();
			return false;
		}
		return true;
	}
	
	/**
	 * 上传校验
	 * 
	 * @return SUCCESS
	 */
	public String uploadValidate(){
		
		// 权限检查
		if (!checkAutority()){
			return ERROR;
		}
		
		return SUCCESS;
	}

	/**
	 * 教材详细信息更新
	 * 
	 * @return SUCCESS
	 */
	public String updateBookInfo() {
		
		// 权限检查
		if (!checkAutority()){
			return ERROR;
		}
		
		try{
			
			j030041Service.updateBookInfo(bookInfo);
			
		} catch (TtExclusiveException e){
			errorMessage = propMgr.getMessage("yds.tt.error.KSE56");
			return ERROR;
		}
		
		putOpTip(propMgr.getMessage("yds.tt.info.GTT02"));

		return SUCCESS;
	}

	/**
	 * 提交审批
	 * 
	 * @return SUCCESS
	 */
	public String sendToApproval() {

		// 权限检查
		if (!checkAutority()){
			return ERROR;
		}
		
		// 排他检查
		if(!j030041Service.checkTimestamp(bookInfo)){
			errorMessage = propMgr.getMessage("yds.tt.error.KSE56");
			return ERROR;
		}
		// 画面.编辑号
		int editNo = this.bookInfo.getEditNo();

		if (editNo == 1) {

			// 教材没有发布版本的情况下，更新教材信息
			j030041Service.saveAndSendToApproval(bookInfo);
		} else if (editNo > 1) {

			// 教材有发布版本的情况下，迁移到变更履历画面
			bookInfo.setUpdateTime((Date) Session
					.get(TtConstants.PageId.J030041.getSessionKeyTS()));
			
			return UPGRADE;
		}

		putOpTip(propMgr.getMessage("yds.tt.info.GTT02"));

		return SUCCESS;
	}

	/**
	 * 再编辑
	 * 
	 * @return SUCCESS
	 */
	public String reEditBook() {

		// 权限检查
		if (!checkAutority()){
			return ERROR;
		}
		
		try{
			// 再编辑教材信息数据处理
			j030041Service.insertOrUpdateBookInfo(bookInfo);
			
		} catch (TtExclusiveException e){
			errorMessage = propMgr.getMessage("yds.tt.error.KSE56");
			return ERROR;
		}

		putOpTip(propMgr.getMessage("yds.tt.info.GTT02"));

		return SUCCESS;
	}
	
	/**
	 * 取得章节列表
	 * 
	 * @return SUCCESS
	 */
	public String getChapterList() {
	
		// 章节列表信息取得
		this.chapterInfoList = j030041Service.getBookChapterInfoList(
				this.bookInfo.getBookId(), this.bookInfo.getEditNo());

		return SUCCESS;
	}
	
	/**
	 * @return the j030041Service
	 */
	public J030041Service getJ030041Service() {
		return j030041Service;
	}

	/**
	 * @param service
	 *            the j030041Service to set
	 */
	public void setJ030041Service(J030041Service service) {
		j030041Service = service;
	}

	/**
	 * @return the bookInfo
	 */
	public BookInfo getBookInfo() {
		return bookInfo;
	}

	/**
	 * @param bookInfo
	 *            the bookInfo to set
	 */
	public void setBookInfo(BookInfo bookInfo) {
		this.bookInfo = bookInfo;
	}

	/**
	 * @return the chapterInfoList
	 */
	public List<BookContent> getChapterInfoList() {
		return chapterInfoList;
	}

	/**
	 * @param chapterInfoList
	 *            the chapterInfoList to set
	 */
	public void setChapterInfoList(List<BookContent> chapterInfoList) {
		this.chapterInfoList = chapterInfoList;
	}
	
	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

	/**
	 * @param ttCommonService the ttCommonService to set
	 */
	public void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}

}
