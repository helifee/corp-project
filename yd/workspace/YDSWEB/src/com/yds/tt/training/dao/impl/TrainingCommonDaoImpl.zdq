/*
 * @(#) TrainingCommonDaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育子系统
 */
package com.yds.tt.training.dao.impl;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.common.bean.UserInfo;
import com.yds.tt.testing.bean.QuestionAttachments;
import com.yds.tt.training.bean.BookAttachments;
import com.yds.tt.training.bean.BookInfo;
import com.yds.tt.training.bean.Bookmark;
import com.yds.tt.training.bean.CourseAttentionInfo;
import com.yds.tt.training.dao.TrainingCommonDao;

/**
 * @see com.yds.tt.testing.dao.TrainingCommonDao
 * 
 */
@Repository("trainingCommonDao")
public class TrainingCommonDaoImpl extends AbstractBaseDao implements
		TrainingCommonDao {

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer getBookInfo(BookInfo bookInfo) {
		return (Integer) super.queryForObject("TrainingCommonDao.getBookInfo",
				bookInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<BookAttachments> getBookAttachmentsList(
			BookAttachments bookAttachments) {
		return (List<BookAttachments>) super.queryForList(
				"TrainingCommonDao.getBookAttachmentsList", bookAttachments);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<QuestionAttachments> getQuestionAttachmentsList(
			QuestionAttachments questionAttachments) {
		return (List<QuestionAttachments>) super.queryForList(
				"TrainingCommonDao.getQuestionAttachmentsList",
				questionAttachments);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertBookAttachments(BookAttachments bookAttachments) {
		super
				.insert("TrainingCommonDao.insertBookAttachments",
						bookAttachments);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertQuestionAttachments(
			QuestionAttachments questionAttachments) {
		super.insert("TrainingCommonDao.insertQuestionAttachments",
				questionAttachments);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateBookAttachments(BookAttachments bookAttachments) {
		super
				.update("TrainingCommonDao.updateBookAttachments",
						bookAttachments);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteQuestionAttachments(
			QuestionAttachments questionAttachments) {
		super.delete("TrainingCommonDao.deleteQuestionAttachments",
				questionAttachments);
	}
	
	/**
	 * {@inheritDoc}
	 */		
	@SuppressWarnings("unchecked")
	@Override
	public List<UserInfo> getUserList(String courseId) {
		
		return (List<UserInfo>)super.queryForList("TrainingCommonDao.getUserList",courseId);
		
	}
	
	/**
	 * {@inheritDoc}
	 */	
	@Override
	public Object insertUserList(CourseAttentionInfo courseAttentionInfo) {
		return super.insert("TrainingCommonDao.insertUserList", courseAttentionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteUserList(String courseId) {
		return super.delete("TrainingCommonDao.deleteUserList", courseId);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getViewPermission (CourseAttentionInfo courseAttentionInfo){
		return (Long)super.queryForObject("TrainingCommonDao.getViewPermission", courseAttentionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<String> getCourseIdByBookId(String bookId) {
		List<String> queryForList = (List<String>) super.queryForList(
				"TrainingCommonDao.getCourseIdByBookId", bookId);
		return queryForList;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object getChapterNo(Bookmark bookMark){
		return super.queryForObject("TrainingCommonDao.getChapterNo", bookMark);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object getBookChapterNo(Bookmark bookMark){
		return super.queryForObject("TrainingCommonDao.getBookChapterNo", bookMark);
	}
}
