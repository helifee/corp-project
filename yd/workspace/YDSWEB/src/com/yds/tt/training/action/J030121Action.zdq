/*
 * @(#)J030121Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育
 */

package com.yds.tt.training.action;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.yds.base.action.AbstractBaseAction;
import com.yds.tt.manager.bean.TtCheckResult;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtConstants;
import com.yds.tt.testing.bean.TestPaperInfo;
import com.yds.tt.training.service.J030121Service;

/**
 * 插入练习
 * 
 * @author shiyanyan
 * @version 1.00 2010/05/17
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("j030121Action")
public class J030121Action extends AbstractBaseAction {

	private static final long serialVersionUID = 2513454447273910133L;
	private J030121Service j030121Service;
	private List<TestPaperInfo> testPaperInfos; // 试卷表
	private String bookId; // 教材ID
	private Integer editNo; // 编辑号
	private String paperId; // 试卷ID
	private Integer paperVersionNo; // 试卷版本号
	private String errorMessage;
	private TtCommonService ttCommonService;
	/**
	 * 画面的初期显示
	 * 
	 * @return SUCCESS
	 * @throws Exception
	 */
	@Override
	public String execute() throws Exception {
		// 画面启动限制检查
		if (!checkAutority()) {
			return ERROR;
		}
		// 教材状态判断
		if (!getBookStatus()) {

			return ERROR;
		}

		// 教材练习取得
		this.testPaperInfos = j030121Service.getTestPaperInfos(bookId);

		return SUCCESS;

	}
	
	/**
	 * 新建练习
	 * 
	 * @return SUCCESS
	 * @throws Exception
	 */
	public String createNewTest() throws Exception {
		// 画面启动限制检查
		if (!checkAutority()) {
			return ERROR;
		}
		// 教材状态判断
		if (!getBookStatus()) {

			return ERROR;
		}

		// 更新试卷表
		this.j030121Service.insertNewTest(bookId, editNo);

		// 教材练习取得（刷新页面）
		this.testPaperInfos = j030121Service.getTestPaperInfos(bookId);

		return SUCCESS;

	}

	/**
	 * 删除练习
	 * 
	 * @return SUCCESS
	 * @throws Exception
	 */
	public String deleteTest() throws Exception {
		// 画面启动限制检查
		if (!checkAutority()) {
			return ERROR;
		}
		// 教材状态判断
		if (!getBookStatus()) {

			return ERROR;
		}

		// 删除试卷表
		this.j030121Service.deleteTest(paperId, paperVersionNo);

		// 教材练习取得（刷新页面）
		this.testPaperInfos = j030121Service.getTestPaperInfos(bookId);

		return SUCCESS;

	}
	
	/**
	 * 编辑练习
	 * 
	 * @return SUCCESS
	 * @throws Exception
	 */
	public String editTest() throws Exception {
		// 画面启动限制检查
		if (!checkAutority()) {
			return ERROR;
		}
		// 教材状态判断
		if (!getBookStatus()) {

			return ERROR;
		}

		return SUCCESS;

	}

	/**
	 * 教材状态判断
	 * 
	 * @return true
	 */
	private boolean getBookStatus() {

		// 教材状态取得
		Integer bookStatus = j030121Service.getBookInfo(bookId, editNo);

		// 教材状态判断
		if (bookStatus == null) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12", "教材");
			return false;
		}

		if (bookStatus != TtConstants.R01.R01_1.value()) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE15");
			return false;
		}

		return true;
	}
	
	/**
	 * 权限校验
	 */
	private boolean checkAutority() {
		// 对象Id
		List<String> objectList = new ArrayList<String>();
		objectList.add(bookId);
		
		// 画面Id
		String pageId = TtConstants.PageId.J030121.value();
		
		// Event Id
		String eventId = "J030121";
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				pageId, eventId, 0, 0, 0, TtConstants.C43.C43_2.value(),
				objectList);

		if (!checkResult.getRetFlag()) {
			errorMessage = checkResult.getRetMessage();
			return false;
		}
		
		return true;
	}
	
	/**
	 * @return the j030121Service
	 */
	public J030121Service getJ030121Service() {
		return j030121Service;
	}

	/**
	 * @param service
	 *            the j030121Service to set
	 */
	public void setJ030121Service(J030121Service service) {
		j030121Service = service;
	}

	/**
	 * @return the testPaperInfos
	 */
	public List<TestPaperInfo> getTestPaperInfos() {
		return testPaperInfos;
	}

	/**
	 * @param testPaperInfos
	 *            the testPaperInfos to set
	 */
	public void setTestPaperInfos(List<TestPaperInfo> testPaperInfos) {
		this.testPaperInfos = testPaperInfos;
	}

	/**
	 * @return the bookId
	 */
	public String getBookId() {
		return bookId;
	}

	/**
	 * @param bookId
	 *            the bookId to set
	 */
	public void setBookId(String bookId) {
		this.bookId = bookId;
	}

	/**
	 * @return the editNo
	 */
	public Integer getEditNo() {
		return editNo;
	}

	/**
	 * @param editNo
	 *            the editNo to set
	 */
	public void setEditNo(Integer editNo) {
		this.editNo = editNo;
	}

	/**
	 * @return the paperId
	 */
	public String getPaperId() {
		return paperId;
	}

	/**
	 * @param paperId
	 *            the paperId to set
	 */
	public void setPaperId(String paperId) {
		this.paperId = paperId;
	}

	/**
	 * @return the paperVersionNo
	 */
	public Integer getPaperVersionNo() {
		return paperVersionNo;
	}

	/**
	 * @param paperVersionNo
	 *            the paperVersionNo to set
	 */
	public void setPaperVersionNo(Integer paperVersionNo) {
		this.paperVersionNo = paperVersionNo;
	}

	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage
	 *            the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

	/**
	 * @return the ttCommonService
	 */
	public TtCommonService getTtCommonService() {
		return ttCommonService;
	}

	/**
	 * @param ttCommonService the ttCommonService to set
	 */
	public void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}

}
