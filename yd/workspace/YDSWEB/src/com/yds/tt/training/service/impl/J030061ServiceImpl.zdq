/*
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育子系统
 */

package com.yds.tt.training.service.impl;

import java.util.List;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.tt.manager.service.TtCommonUtil;
import com.yds.tt.training.bean.BookContent;
import com.yds.tt.training.dao.J030061Dao;
import com.yds.tt.training.service.J030061Service;
/**
 * @see com.yds.tt.training.service.J030061Service
 */
@Service("j030061Service")
public class J030061ServiceImpl extends AbstractBaseService implements
		J030061Service {

	private J030061Dao j030061Dao;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<BookContent> getChapterInfos(BookContent bookContent) {
				
		// 章节信息一览取得	
		List<BookContent> chapterInfos = j030061Dao.getChapterInfos(bookContent);
		
		return chapterInfos;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean updateChapterInfo(List<BookContent> chapterInfos) throws Exception{
				
		int listSize = chapterInfos.size();// 章节信息一览长度
		int deleteFlag ; // 删除Flag
		Integer chapterNo;// 章节编号 
		Integer maxChapterNo;// 最大章节编号
		
		// 用户Id
		String userId = TtCommonUtil.getLoginUserId();
		
		int newShowOrder = 1;
		for (int i = 0; i < listSize; i++) {
			deleteFlag = chapterInfos.get(i).getHideFlg();
			chapterNo = chapterInfos.get(i).getChapterNo();
			
			// flag为0时，数据删除
			if (0 == deleteFlag){
				j030061Dao.deleteChapterInfos(chapterInfos.get(i));
				
			// flag不为0时，数据更新或插入
			} else{
				
				// 章节编号为空时，数据插入
				if(null == chapterNo){
					
					// 最大章节编号取得
					maxChapterNo = j030061Dao.getMaxChapterNo(chapterInfos.get(i));
					if(null != maxChapterNo){
						
						// 章节编号设定
						chapterInfos.get(i).setChapterNo(maxChapterNo+1);
					}else{
						
						// 章节编号设定
						chapterInfos.get(i).setChapterNo(0);
						
					}
					
					// 显示顺序设定
					chapterInfos.get(i).setShowOrder(newShowOrder);
					newShowOrder++;
					
					// 章节标题设定(去除全角空格)
					chapterInfos.get(i).setChapterTitle(chapterInfos.get(i).getChapterTitle().replace((char) 12288, ' ').trim());
										
					// 教材内容设定
					chapterInfos.get(i).setBookContent("");
					
					// 创建者设定
					chapterInfos.get(i).setCreateUserId(userId);
					
					// 更新者设定
					chapterInfos.get(i).setUpdateUserId(userId);
					
					// 数据插入
					j030061Dao.insertChapterInfos(chapterInfos.get(i));	
					
				// 数据更新	
				} else {
					
					// 显示顺序设定
					chapterInfos.get(i).setShowOrder(newShowOrder);
					newShowOrder++;
					
					// 章节标题设定(去除全角空格)
					chapterInfos.get(i).setChapterTitle(chapterInfos.get(i).getChapterTitle().replace((char) 12288, ' ').trim());

					j030061Dao.updateChapterInfos(chapterInfos.get(i));
				}
			
			} 
			
		}
		return true;
	}
	
	/**
	 * 检索教材版本数
	 */
	@Override
	public int searchBookEditNum(String bookId) {

		return j030061Dao.searchBookEditNum(bookId);
		
	}
	
	/**
	 * @param j030061Dao
	 *            the j030061Dao to set
	 */
	public void setJ030061Dao(J030061Dao j030061Dao) {
		this.j030061Dao = j030061Dao;
	}

}
