/*
 * @(#) J030031DaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育
 */
package com.yds.tt.training.dao.impl;

import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.tt.training.bean.BookContent;

import com.yds.tt.training.bean.BookInfo;
import com.yds.tt.training.dao.J030031Dao;


@Repository("j030031Dao")
public class J030031DaoImpl extends AbstractBaseDao implements J030031Dao {
	
	/**
	 * 教材基本信息取得
	 */
	@Override
	public BookInfo getBookBaseInfo(BookContent bookContentPara) {
		
		return (BookInfo)super.queryForObject(
				"J030031Dao.getBookBaseInfo", bookContentPara);
		
	}
	
	/**
	 * 查看编辑号取得
	 */
	@Override
	public BookInfo getViewEditNo(BookContent bookContentPara) {
		
		return (BookInfo)super.queryForObject(
				"J030031Dao.getViewEditNo", bookContentPara);
		
	}

	/**
	 * 最大编辑号取得
	 */
	@Override
	public BookInfo getMaxEditNo(BookContent bookContentPara) {
		
		return (BookInfo)super.queryForObject(
				"J030031Dao.getMaxEditNo", bookContentPara);
		
	}

	/**
	 * 最小编辑号取得
	 */
	@Override
	public BookInfo getMinEditNo(BookContent bookContentPara) {
		
		return (BookInfo)super.queryForObject(
				"J030031Dao.getMinEditNo", bookContentPara);
		
	}

	/**
	 * 取得章节列表
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<BookContent> getMenuList(BookContent bookContentPara) {
		
		return (List<BookContent>) super.queryForList(
				"J030031Dao.getMenuList", bookContentPara);
		
	}
	
	/**
	 * 取得编辑者列表
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<BookInfo> getUpdateUserList(BookContent bookContentPara) {
		
		return (List<BookInfo>) super.queryForList(
				"J030031Dao.getUpdateUserList", bookContentPara);
		
	}

	/**
	 * 取得发布者列表
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<BookInfo> getCreateUserList(BookContent bookContentPara) {
		
		return (List<BookInfo>) super.queryForList(
				"J030031Dao.getCreateUserList", bookContentPara);
		
	}

	/**
	 * 取得教材被引用数
	 */
	@Override
	public Integer bookUseCheck(String bookId) {
		
		return (Integer) super.queryForObject(
				"J030031Dao.bookUseCheck", bookId);
	}

	/**
	 * 删除书签表内容
	 */
	@Override
	public int deleteBookMark(String bookId) {

		return super.delete("J030031Dao.deleteBookMark", bookId);
		
	}
	
	/**
	 * 删除教材内容表内容
	 */
	@Override
	public int deleteBookContent(String bookId) {

		return super.delete("J030031Dao.deleteBookContent", bookId);
		
	}
	
	/**
	 * 删除教材资料表内容
	 */
	@Override
	public int deleteBookData(String bookId) {

		return super.delete("J030031Dao.deleteBookData", bookId);
		
	}
	
	/**
	 * 删除课程教材关联表内容
	 */
	@Override
	public int deleteCourseAndBook(String bookId) {

		return super.delete("J030031Dao.deleteCourseAndBook", bookId);
		
	}
	
	/**
	 * 删除教材表内容
	 */
	@Override
	public int deleteBookInfo(String bookId) {

		return super.delete("J030031Dao.deleteBookInfo", bookId);
		
	}

	/**
	 * 删除权限表内容
	 */
	@Override
	public int deleteUserRight(String bookId) {

		return super.delete("J030031Dao.deleteUserRight", bookId);
		
	}

	/**
	 * 删除试卷表内容
	 */
	@Override
	public int deleteTestPaper(String bookId) {

		return super.delete("J030031Dao.deleteTestPaper", bookId);
		
	}
	
	/**
	 * 取得教材版本数
	 */
	@Override
	public int searchBookEditNum(String bookId) {
		
		return (Integer) super.queryForObject(
				"J030031Dao.searchBookEditNum", bookId);
	}

	/**
	 * 单一版本教材状态更新
	 */
	@Override
	public int updateSingleVersionBook(BookInfo bookInfo) {

		return super.update("J030031Dao.updateSingleVersionBook", bookInfo);
		
	}
	
	/**
	 * 多版本教材状态更新
	 */
	@Override
	public int updatePluralVersionBook(BookInfo bookInfo) {

		return super.update("J030031Dao.updatePluralVersionBook", bookInfo);
		
	}

	/**
	 * 删除旧版本教材内容表内容
	 */
	@Override
	public int deleteOldBookContent(BookInfo bookInfo) {
		
		return super.delete("J030031Dao.deleteOldBookContent", bookInfo);
		
	}
	
	/**
	 * 删除旧版本教材资料表内容
	 */
	@Override
	public int deleteOldBookData(BookInfo bookInfo) {
		
		return super.delete("J030031Dao.deleteOldBookData", bookInfo);
		
	}

	/**
	 * 删除旧版本教材表内容
	 */
	@Override
	public int deleteOldBookInfo(BookInfo bookInfo) {
		
		return super.delete("J030031Dao.deleteOldBookInfo", bookInfo);
		
	}

	/**
	 * 删除旧版本教材表内容
	 */
	@Override
	public int deleteOldTestPaper(BookInfo bookInfo) {
		
		return super.delete("J030031Dao.deleteOldTestPaper", bookInfo);
		
	}
	
	/**
	 * 试卷表内容更新
	 */
	@Override
	public int updateTestPaper(BookInfo bookInfo) {
		
		return super.update("J030031Dao.updateTestPaper", bookInfo);
		
	}
	
	/**
	 * 取得更新时间
	 */
	@Override
	public Date getUpdateTime(String bookId) {
		
		return (Date)super.queryForObject("J030031Dao.getUpdateTime", bookId);
		
	}

	/**
	 * 教材状态更新为不批准
	 */
	@Override
	public int updateRefuseBook(BookInfo bookInfo) {

		return super.update("J030031Dao.updateRefuseBook", bookInfo);
		
	}

}
