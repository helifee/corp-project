/*
 * @(#)J030051Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育
 */

package com.yds.tt.training.action;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.interceptor.annotations.InputConfig;
import com.yds.base.action.AbstractBaseAction;
import com.yds.tt.manager.bean.TtCheckResult;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtConstants;
import com.yds.tt.manager.service.TtExclusiveException;
import com.yds.tt.manager.service.TtExclusiveExtException;
import com.yds.tt.training.bean.BookContent;
import com.yds.tt.training.service.J030051Service;

/**
 * 教材內容编辑处理
 * 
 * @author zhanghaibo
 * @version 1.00 2010/04/01
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("j030051Action")
public class J030051Action extends AbstractBaseAction {

	private static final long serialVersionUID = -7610654059804258184L;
	private BookContent bookContentInfo; // 教材内容
	private J030051Service j030051Service;
	private String errorMessage; // 错误信息

	private TtCommonService ttCommonService;

	/**
	 * 画面的初期显示 章节内容取得
	 * 
	 * @return SUCCESS
	 */
	@Override
	@InputConfig(resultName = ERROR)
	public String execute() throws Exception {
		
		// 教材内容取得
		bookContentInfo = j030051Service.getBookContentInfo(bookContentInfo);

		if (bookContentInfo == null) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12", "教材");
			return ERROR;
		}

		return SUCCESS;
	}

	/**
	 * 保存
	 * 
	 * @return SUCCESS
	 */
	@InputConfig(resultName = ERROR)
	public String save() {
		// 教材内容更新
		if (j030051Service.updateBookContentInfo(bookContentInfo) == 0) {
			return ERROR;
		}

		return SUCCESS;
	}
	
	/**
	 * 退出编辑
	 * 
	 * @return SUCCESS
	 */
	public String quitEdit(){
		
		// 权限检查
		if (!checkAutority()){
			return ERROR;
		}
		
		// 解锁数据
		ttCommonService.removeLock(bookContentInfo.getBookId(),
				bookContentInfo.getChapterNo().toString());
		
		return SUCCESS;
	}
	
	/**
	 * 更新排他锁
	 * 
	 * @return SUCCESS
	 */
	public String updateLock(){
		
		// 权限检查
		if (!checkAutority()){
			return ERROR;
		}
		
		// 更新锁时间
		ttCommonService.updateLock(bookContentInfo.getBookId(),
				bookContentInfo.getChapterNo().toString());
		return SUCCESS;
	}

	/**
	 * 初期化校验
	 */
	public void validateExecute() {
		
		if (this.bookContentInfo == null) {
			errorMessage = propMgr.getMessage("yds.com.warning.0001", "接口参数");
			this.addActionError(ERROR);
			return;
		}
		
		if (!checkAutority()){
			this.addActionError(ERROR);
			return;
			
		}

		// 教材状态检查
		String bookStatus = j030051Service.getBookStatus(bookContentInfo);
		if (bookStatus == null) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12", "教材");
			this.addActionError(ERROR);
			return;
		} else if (!bookStatus.equals(TtConstants.R01.R01_1.toString())) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE15");
			this.addActionError(ERROR);
			return;
		}
		
		try {
			// 锁定当前编辑章节内容
			ttCommonService.addLock(bookContentInfo.getBookId(),
					bookContentInfo.getChapterNo().toString());
		} catch (TtExclusiveException e) {
			// 出现单键锁冲突意味着有人在进行章节编辑
			String userName = e.getMessage();
			errorMessage = propMgr.getMessage("yds.tt.error.JYE19", userName);
			this.addActionError(ERROR);
		} catch (TtExclusiveExtException e) {
			
			// 出现双键锁冲突说明有人在编辑现在要访问的数据
			String userName = e.getMessage();
			errorMessage = propMgr.getMessage("yds.tt.error.JYE20", userName);
			this.addActionError(ERROR);
		}

	}

	/**
	 * 保存校验
	 */
	public void validateSave() {
		if (!checkAutority()){
			this.addActionError(ERROR);
			return;
		}

		// 教材状态检查
		String bookStatus = j030051Service.getBookStatus(bookContentInfo);
		if (bookStatus == null) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12", "教材");
			this.addActionError(ERROR);
		} else if (!bookStatus.equals(TtConstants.R01.R01_1.toString())) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE15");
			this.addActionError(ERROR);
		}

	}

	/**
	 * 权限校验
	 */
	private boolean checkAutority() {

		List<String> objectId = new ArrayList<String>();
		objectId.add(bookContentInfo.getBookId());

		// 权限检查
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				TtConstants.PageId.J030051.value(), TtConstants.PageId.J030051.value(), 0, 0, 0,
				TtConstants.C43.C43_2.value(), objectId);

		if (!checkResult.getRetFlag()) {
			errorMessage = checkResult.getRetMessage();
			return false;
		}
		
		return true;

	}

	/**
	 * @return the bookContentInfo
	 */
	public BookContent getBookContentInfo() {
		return bookContentInfo;
	}

	/**
	 * @param bookContentInfo
	 *            the bookContentInfo to set
	 */
	public void setBookContentInfo(BookContent bookContentInfo) {
		this.bookContentInfo = bookContentInfo;
	}

	/**
	 * @return the j030051Service
	 */
	public J030051Service getJ030051Service() {
		return j030051Service;
	}

	/**
	 * @param service
	 *            the j030051Service to set
	 */
	public void setJ030051Service(J030051Service service) {
		j030051Service = service;
	}

	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage
	 *            the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

	/**
	 * @param ttCommonService
	 *            the ttCommonService to set
	 */
	public void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}
}
