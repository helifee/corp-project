/*
 * @(#)J020041Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育子系统
 */
package com.yds.tt.training.action;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.interceptor.annotations.InputConfig;
import com.yds.base.action.AbstractBaseAction;
import com.yds.common.bean.SysCodeInfo;
import com.yds.common.service.SessionConstants;
import com.yds.common.service.SysCodeInfoService;
import com.yds.tt.manager.bean.TtCheckResult;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtConstants;
import com.yds.tt.manager.service.TtException;
import com.yds.tt.manager.service.TtExclusiveException;
import com.yds.tt.training.bean.BookInfo;
import com.yds.tt.training.bean.CourseAttentionInfo;
import com.yds.tt.training.bean.CourseInfo;
import com.yds.tt.training.service.J020041Service;
import com.yds.util.service.Session;

/**
 * 课程详细（用户）一览处理
 * 
 * @author chenjunshuai
 * @version 1.00 2010/03/23
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("j020041Action")
public class J020041Action extends AbstractBaseAction {

	private static final long serialVersionUID = -8917546487128899693L;
	private J020041Service j020041Service;
	private SysCodeInfoService sysCodeInfoService;
	private TtCommonService ttCommonService;
	private String modelId;// 模式ID
	private String courseId;// 课程ID
	private String examineId;// 考试ID
	private List<BookInfo> bookInfoList;// 教材详细列表
	private CourseInfo courseUserInfo;// 课程信息
	private List<SysCodeInfo> attentionList;// 关注度下拉框
	private CourseAttentionInfo courseAttention;// 课程关注度信息
	private int attentionFlag;// 关注度
	private String editPer;// 编辑人员
	private String errorMessage;// 错误信息
	
	/**
	 * 删除模式时画面的初期显示 教材和课程信息一览取得
	 * 
	 * @return SUCCESS/ERROR
	 */
	@InputConfig(resultName = "error")
	public String initModelDel() {
		
		// 画面启动检查
		List<String> objectId = new ArrayList<String>();
		objectId.add(this.courseId);
		
		// 权限检查
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				TtConstants.PageId.J020041.value(), "J020041_1", 
				0, 0, 0,
				TtConstants.C43.C43_1.value(), objectId);

		if (checkResult.getRetFlag() == false) {
			
			// 设置错误信息
			errorMessage = checkResult.getRetMessage();
			return ERROR;	
		}
		
		this.modelId = String.valueOf(TtConstants.Mode.Delete_Mode);
	
		// 课程信息取得
		this.courseUserInfo = j020041Service.getCourseUserInfo(courseId);
		
		// 课程信息检索为空
		if (null == courseUserInfo) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12", courseId);
			return ERROR;
		}	
		
		// 画面的初期显示 教材和关注度信息取得
		this.initCourseBook();
		
		// 更新时间存入session中
		this.ttCommonService.setTimestamp(TtConstants.PageId.J020041, courseUserInfo.getUpdateTime());		
		return SUCCESS;
	}
	
	/**
	 * 管理模式时画面的初期显示 教材和课程信息取得
	 * 
	 * @return SUCCESS/ERROR
	 */
	@InputConfig(resultName = "error")
	public String initModelManage() {
		
		// 画面启动检查
		List<String> objectId = new ArrayList<String>();
		objectId.add(this.courseId);
		
		// 权限检查
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				TtConstants.PageId.J020041.value(), "J020041_2", 
				0, 0, 0,
				TtConstants.C43.C43_1.value(), objectId);

		if (checkResult.getRetFlag() == false) {
			
			// 设置错误信息
			errorMessage = checkResult.getRetMessage();
			return ERROR;
		}
		
		this.modelId = String.valueOf(TtConstants.Mode.Manage_View_Mode);
		
		// 课程信息取得
		this.courseUserInfo = j020041Service.getCourseUserInfo(courseId);
		
		// 课程信息检索为空
		if (null == courseUserInfo) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12", courseId);
			return ERROR;
		} 
		
		// 画面的初期显示 教材和关注度信息取得
		this.initCourseBook();
		
		// 更新时间存入session中
		this.ttCommonService.setTimestamp(TtConstants.PageId.J020041, courseUserInfo.getUpdateTime());
		return SUCCESS;
	}
	
	/**
	 * 查看模式时画面的初期显示 教材和课程信息取得
	 * 
	 * @return SUCCESS/ERROR
	 */
	@InputConfig(resultName = "error")
	public String initModelView() {
		
		// 画面启动检查
		List<String> objectId = new ArrayList<String>();
		objectId.add(this.examineId);
		
		// 权限检查
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				TtConstants.PageId.J020041.value(), "J020041_3", 
				0, 0, 0,
				TtConstants.C43.C43_3.value(), objectId);

		if (checkResult.getRetFlag() == false) {
			
			// 设置错误信息
			errorMessage = checkResult.getRetMessage();
			return ERROR;
		}
		this.modelId = String.valueOf(TtConstants.Mode.User_View_Mode);
		
		// 课程信息取得
		this.courseUserInfo = j020041Service.getStudyViewCourseInfo(courseId);
		
		// 课程信息检索为空
		if (null == courseUserInfo) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12", courseId);
			return ERROR;
		} 
		
		// 画面的初期显示 教材和关注度信息取得
		this.initCourseBook();
		
		// 更新时间存入session中
		this.ttCommonService.setTimestamp(TtConstants.PageId.J020041, courseUserInfo.getUpdateTime());		
		return SUCCESS;
	}
	
	/**
	 * 学习模式时画面的初期显示 教材和课程信息取得
	 * 
	 * @return SUCCESS/ERROR
	 */
	@InputConfig(resultName = "error")
	public String initModelStudy() {
		
		// 没有查看权限时
		if (0 == this.j020041Service.getCourseViewPermission(courseId)) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE02");
			return ERROR;
		} 
		this.modelId = String.valueOf(TtConstants.Mode.Approve_Mode);
		
		// 课程信息取得
		this.courseUserInfo = j020041Service.getStudyViewCourseInfo(courseId);	
		
		// 课程信息检索为空
		if (null == courseUserInfo) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12", courseId);
			return ERROR;
		} 
		
		// 画面的初期显示 教材和课程信息取得
		this.initCourseBook();
		
		// 更新时间存入session中
		this.ttCommonService.setTimestamp(TtConstants.PageId.J020041, courseUserInfo.getUpdateTime());		
		return SUCCESS;
	}	
	
	/**
	 * 画面的初期显示 教材和关注度信息取得
	 */
	public void initCourseBook() {

		// 取的课程关注度信息
		this.courseAttention = this.j020041Service.getCourseAttention(courseId);
		
		// 取的编辑人员信息
		this.editPer = this.j020041Service.getEditPer(courseId);
		
		// 调用共通取得课程关注度信息
		this.attentionList = this.sysCodeInfoService.getSysCodeInfo("R18");

		// 教材详细信息一览
		this.bookInfoList = j020041Service.getBookInfoList(courseId);
	}
	
	/**
	 * 更新关注度
	 * @return SUCCESS
	 */	
	public String updateAttention() {
		// 画面启动检查
		List<String> objectId = new ArrayList<String>();
		objectId.add(this.courseId);
		
		// 权限检查
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				TtConstants.PageId.J020041.value(), "J020041_2", 
				0, 0, 0,
				TtConstants.C43.C43_1.value(), objectId);

		if (checkResult.getRetFlag() == false) {
			
			// 设置错误信息
			errorMessage = checkResult.getRetMessage();
			return ERROR;
		}
		
		// 更新关注度
		this.j020041Service.updateAttention(attentionFlag,courseId);
		return SUCCESS;
	}
	
	/**
	 * 删除课程信息
	 * @return SUCCESS/ERROR
	 */	
	public String deleteCourse() {
		// 画面启动检查
		List<String> objectId = new ArrayList<String>();
		objectId.add(this.courseId);
		
		// 权限检查
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				TtConstants.PageId.J020041.value(), "J020041_1", 
				0, 0, 0,
				TtConstants.C43.C43_1.value(), objectId);

		if (checkResult.getRetFlag() == false) {
			
			// 设置错误信息
			errorMessage = checkResult.getRetMessage();
			return ERROR;	
		}
		
		try {
			// 删除课程信息
			this.j020041Service.deleteCourse(courseId);
		} catch (TtExclusiveException e){
			errorMessage = propMgr.getMessage("yds.tt.error.KSE56");
			return ERROR;			
		} catch (TtException e){
			errorMessage = e.getMessage();
			return ERROR;			
		}
		
		// 显示操作成功消息
		putOpTip(propMgr.getMessage("yds.tt.info.GTT02"));
		return SUCCESS;
	}
	
	/**
	 * 删除检查课程ID
	 */	
	public void validateInitModelDel() {
		
		// 检查课程ID是否传递
		checkCoueseId();
	}

	/**
	 * 管理模式检查考试ID
	 */	
	public void validateInitModelManage() {
		
		// 检查课程ID是否传递
		checkCoueseId();
	}
	
	/**
	 * 查看模式检查课程ID和考试ID
	 */	
	public void validateInitModelView() {
		
		// 课程ID参数的读取:未传递的话，从Session取得
		if (null == courseId || courseId.isEmpty()) {
			courseId =(String)Session.get(SessionConstants.TT_CURRENT_COURSEID);
		}
		
		// 课程ID未传递
		if (null == courseId || courseId.isEmpty()) {
			errorMessage = propMgr.getMessage("yds.com.warning.0001", "课程ID");
			this.addActionError("error");
			return;
		}
		
		// 考试ID未传递
		if (null == examineId || examineId.isEmpty()) {
			errorMessage = propMgr.getMessage("yds.com.warning.0001", "考试ID");
			this.addActionError("error");
		}
		
		// 当前课程ID保存
		Session.set(SessionConstants.TT_CURRENT_COURSEID,courseId);
	}
	
	/**
	 * 学习模式检查课程ID
	 */	
	public void validateInitModelStudy() {
		
		// 检查课程ID是否传递
		checkCoueseId();
	}
	
	/**
	 * 检查课程ID是否传递
	 */	
	public void checkCoueseId(){
		
		// 课程ID参数的读取:未传递的话，从Session取得
		if (null == courseId || courseId.isEmpty()) {
			courseId =(String)Session.get(SessionConstants.TT_CURRENT_COURSEID);
		}
		
		// 课程ID未传递
		if (null == courseId || courseId.isEmpty()) {
			errorMessage = propMgr.getMessage("yds.com.warning.0001", "课程ID");
			this.addActionError("error");
		}
		
		// 当前课程ID保存
		Session.set(SessionConstants.TT_CURRENT_COURSEID,courseId);
	}
	
	/**
	 * @return the modelId
	 */
	public String getModelId() {
		return modelId;
	}
	
	/**
	 * @param modelId the modelId to set
	 */
	public void setModelId(String modelId) {
		this.modelId = modelId;
	}
	
	/**
	 * @return the courseId
	 */
	public String getCourseId() {
		return courseId;
	}
	
	/**
	 * @param courseId the courseId to set
	 */
	public void setCourseId(String courseId) {
		this.courseId = courseId;
	}
	
	/**
	 * @return the examineId
	 */
	public String getExamineId() {
		return examineId;
	}
	
	/**
	 * @param examineId the examineId to set
	 */
	public void setExamineId(String examineId) {
		this.examineId = examineId;
	}
	
	/**
	 * @return the bookInfoList
	 */
	public List<BookInfo> getBookInfoList() {
		return bookInfoList;
	}
	
	/**
	 * @param bookInfoList the bookInfoList to set
	 */
	public void setBookInfoList(List<BookInfo> bookInfoList) {
		this.bookInfoList = bookInfoList;
	}
	
	/**
	 * @return the courseUserInfo
	 */
	public CourseInfo getCourseUserInfo() {
		return courseUserInfo;
	}
	
	/**
	 * @param courseUserInfo the courseUserInfo to set
	 */
	public void setCourseUserInfo(CourseInfo courseUserInfo) {
		this.courseUserInfo = courseUserInfo;
	}
	
	/**
	 * @return the j020041Service
	 */
	public J020041Service getJ020041Service() {
		return j020041Service;
	}
	
	/**
	 * @param service the j020041Service to set
	 */
	public void setJ020041Service(J020041Service service) {
		j020041Service = service;
	}

	/**
	 * @return the ttCommonService
	 */
	public TtCommonService getTtCommonService() {
		return ttCommonService;
	}

	/**
	 * @param ttCommonService the ttCommonService to set
	 */
	public void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}

	/**
	 * @return the attentionList
	 */
	public List<SysCodeInfo> getAttentionList() {
		return attentionList;
	}

	/**
	 * @param attentionList the attentionList to set
	 */
	public void setAttentionList(List<SysCodeInfo> attentionList) {
		this.attentionList = attentionList;
	}

	/**
	 * @return the sysCodeInfoService
	 */
	public SysCodeInfoService getSysCodeInfoService() {
		return sysCodeInfoService;
	}

	/**
	 * @param sysCodeInfoService the sysCodeInfoService to set
	 */
	public void setSysCodeInfoService(SysCodeInfoService sysCodeInfoService) {
		this.sysCodeInfoService = sysCodeInfoService;
	}

	/**
	 * @return the courseAttention
	 */
	public CourseAttentionInfo getCourseAttention() {
		return courseAttention;
	}

	/**
	 * @param courseAttention the courseAttention to set
	 */
	public void setCourseAttention(CourseAttentionInfo courseAttention) {
		this.courseAttention = courseAttention;
	}

	/**
	 * @return the attentionFlag
	 */
	public int getAttentionFlag() {
		return attentionFlag;
	}

	/**
	 * @param attentionFlag the attentionFlag to set
	 */
	public void setAttentionFlag(int attentionFlag) {
		this.attentionFlag = attentionFlag;
	}

	/**
	 * @return the editPer
	 */
	public String getEditPer() {
		return editPer;
	}

	/**
	 * @param editPer the editPer to set
	 */
	public void setEditPer(String editPer) {
		this.editPer = editPer;
	}

	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}
}
