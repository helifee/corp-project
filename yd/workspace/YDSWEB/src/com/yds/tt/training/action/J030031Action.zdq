/*
 * @(#) J030031Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育
 */
package com.yds.tt.training.action;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.yds.base.action.AbstractBaseAction;
import com.yds.common.service.SessionConstants;
import com.yds.tt.manager.bean.TtCheckResult;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtCommonUtil;
import com.yds.tt.manager.service.TtConstants;
import com.yds.tt.manager.service.TtExclusiveException;
import com.yds.tt.training.bean.BookContent;
import com.yds.tt.training.bean.BookInfo;
import com.yds.tt.training.bean.CourseAttentionInfo;
import com.yds.tt.training.service.J030031Service;
import com.yds.tt.training.service.TrainingCommonService;
import com.yds.util.service.Session;


/**
 * 教材详细处理
 * 
 * @author xinzhipeng
 * @version 1.00 2010/03/16
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("j030031Action")
public class J030031Action extends AbstractBaseAction {

	private static final long serialVersionUID = -4102134330920260713L;
	// 教材信息
	private BookInfo bookInfo;
	// 教材内容信息
	private BookContent bookContent;

	private J030031Service j030031Service;

	// 章节目录
	private List<BookContent> bookMenuList;

	// 编辑者列表
	private List<BookInfo> updateUserNameList;
	// 发布者列表
	private List<BookInfo> createUserNameList;
	// 错误信息
	private String errorMessage;
	// 共通部分
	private TtCommonService ttCommonService;
	private TrainingCommonService trainingCommonService;

	// 接口参数-教材详细模式
	private int mode;
	// 接口参数-教材ID
	private String bookId;
	
	// 参数BEAN
	private BookContent bookContentPara;
	
	private CourseAttentionInfo courseAttentionInfo;

	// 课程与教材关联数
	private Integer relateBookNum = 0;
	
	// 教材编辑号
	private Integer bookEditNo;
	// 教材版本号
	private Integer bookVersionNo;
	// 教材修改号
	private Integer bookUpdateNo;
	// 教材章节号
	private Integer bookChapterNo;
	// 教材章节数
	private Integer bookChapterNum;
	
	/**
	 * 画面的初期显示(用户一览模式)
	 * 
	 * @return SUCCESS
	 */
	public String initBookDetailsMode1() throws Exception{
		mode = 1;
		return initBookDetails();
	}
	
	/**
	 * 画面的初期显示(管理一览模式)
	 * 
	 * @return SUCCESS
	 */
	public String initBookDetailsMode2() throws Exception{
		mode = 2;
		return initBookDetails();
	}
	
	/**
	 * 画面的初期显示(审批模式)
	 * 
	 * @return SUCCESS
	 */
	public String initBookDetailsMode3() throws Exception{
		mode = 3;
		return initBookDetails();
	}
	
	/**
	 * 画面的初期显示(删除模式)
	 * 
	 * @return SUCCESS
	 */
	public String initBookDetailsMode4() throws Exception{
		mode = 4;
		return initBookDetails();
	}
	
	/**
	 * 画面的初期显示
	 * 
	 * @return SUCCESS
	 */
	public String initBookDetails() throws Exception {
		// 接口参数读取及检查
		if (interfaceCheck()) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE07");
			return ERROR;
		}
		
		// 画面启动限制检查
		if (!checkAutority()) {
			return ERROR;
		}

		// 教材是否存在检查
		if(0 == j030031Service.searchBookEditNum(bookId)){
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12","教材");
			return ERROR;
		}

		// 检索参数设定
		bookContentPara = new BookContent();
		//  操作人ID取得
		String operaterID = TtCommonUtil.getLoginUserId();
		
		//用户查看权限判断
		courseAttentionInfo = new CourseAttentionInfo();
		
		if (mode == 1){
			// 没有查看权限时:非课程针对对象
			if (0 == trainingCommonService.getBookViewPermission(bookId)) {
				errorMessage = propMgr.getMessage("yds.tt.error.JYE02");
				return ERROR;
			} 
		}

		//初期检索
		// 教材编辑号取得
		
		bookContentPara.setBookId(bookId);//教材ID  
		
		int editNo = j030031Service.searchEditNo(bookContentPara,mode);
		
		if (-1 == editNo) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12","教材");
			return ERROR;
		}

		bookContentPara.setCreateUserId(operaterID);//操作人ID
		bookContentPara.setEditNo(editNo);//教材编辑号
		
		// 1.检索教材基本信息
		bookInfo = j030031Service.searchBookBaseInfo(bookContentPara);

		if (null == bookInfo) {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE12","教材");
			return ERROR;
		}
		
		bookInfo.setEditNo(editNo);
		
		// 2.章节目录取得
		bookMenuList = j030031Service.getMenuList(bookContentPara);

		if (0 == bookMenuList.size()) {
			bookChapterNo = 0;
			bookChapterNum = 0;
		} else {
			bookChapterNo = bookMenuList.get(0).getChapterNo();
			bookChapterNum = bookMenuList.size();
		}

		// 3.编辑者检索
		updateUserNameList = j030031Service.getUpdateUserList(bookContentPara);

		if (!(null == updateUserNameList || updateUserNameList.isEmpty())) {

			StringBuffer tempstring = new StringBuffer();

			for (BookInfo updateUserInfo : updateUserNameList) {
				tempstring.append(updateUserInfo.getUpdateUserName());
				tempstring.append(",");
			}

			bookInfo.setUpdateUserName(tempstring.substring(0,
					tempstring.length() - 1));
		}

		// 4.发布者者检索
		createUserNameList = j030031Service.getCreateUserList(bookContentPara);
		
		if (!(null == createUserNameList || createUserNameList.isEmpty())) {
			
			StringBuffer tempstring = new StringBuffer();

			for (BookInfo creatUserInfo : createUserNameList) {
				tempstring.append(creatUserInfo.getCreateUserName());
			}

			bookInfo.setCreateUserName(tempstring.toString());
		}
		
		// 保存时间戳检查用的更新时间
		ttCommonService.setTimestamp(TtConstants.PageId.J030031, bookInfo.getUpdateTime());
		
		return SUCCESS;
	}

	/**
	 * 打开按钮
	 * 
	 * @return SUCCESS
	 */
	public String openBookContent() throws Exception {

		return SUCCESS;

	}

	/**
	 * 删除按钮
	 * 
	 * @return SUCCESS
	 */
	public String deleteBook() throws Exception {
		bookId = bookInfo.getBookId();
		// 调用共通权限检查处理
		if(!checkAutority()){
			return ERROR;
		}
		
		// 教材是否被课程使用处理
		relateBookNum = j030031Service.bookUseCheck(bookInfo.getBookId());
		if (0 == relateBookNum) {
			try{
				// 删除未被引用的教材
				if(!(j030031Service.deleteBooks(bookInfo.getBookId()))){
					return ERROR;
				}
			} catch (TtExclusiveException e){
				errorMessage = propMgr.getMessage("yds.tt.error.KSE56");
				return ERROR;			
			}
		} else {
			errorMessage = propMgr.getMessage("yds.tt.error.JYE17");
			return ERROR;
		}
		
		// 显示操作成功消息
		putOpTip(propMgr.getMessage("yds.tt.info.GTT02"));
		
		return SUCCESS;
	}

	/**
	 * 批准按钮
	 * 
	 * @return SUCCESS
	 */
	public String ratifyBook() throws Exception {

		bookId = bookInfo.getBookId();

		// 调用共通权限检查处理
		if(!checkAutority()){
			return ERROR;
		}
		
		// 从Session中获取操作人ID
		String operaterID = TtCommonUtil.getLoginUserId();
		
		bookInfo.setApproverUserId(operaterID);
		
		try {
			// 更新教材信息
			if(!j030031Service.updateRatifyBook(bookInfo)){
				return ERROR;
			}
			
		} catch (TtExclusiveException e){
			errorMessage = propMgr.getMessage("yds.tt.error.KSE56");
			return ERROR;			
		}
		
		// 显示操作成功消息
		putOpTip(propMgr.getMessage("yds.tt.info.GTT02"));
		
		return SUCCESS;
	}

	/**
	 * 不批准按钮
	 * 
	 * @return SUCCESS
	 */
	public String refuseBook() throws Exception {

		bookId = bookInfo.getBookId();
		// 调用共通权限检查处理
		if(!checkAutority()){
			return ERROR;
		}

		// 从Session中获取操作人ID
		String operaterID = TtCommonUtil.getLoginUserId();
		
		bookInfo.setApproverUserId(operaterID);

		try {	
			// 教材表内容更新（不批准）
			if(!j030031Service.updateRefuseBook(bookInfo)){
				return ERROR;
			}
			
		} catch (TtExclusiveException e){
			errorMessage = propMgr.getMessage("yds.tt.error.KSE56");
			return ERROR;			
		}
		
		// 显示操作成功消息
		putOpTip(propMgr.getMessage("yds.tt.info.GTT02"));
		
		return SUCCESS;
	}

	/**
	 * 接口参数检查
	 */
	public boolean interfaceCheck() {

		// 教材ID参数的读取:未传递的话，从Session取得
		if (null == bookId || bookId.isEmpty()) {
			bookId =(String)Session.get(SessionConstants.TT_CURRENT_BOOKID);
		}
		
		// 参数检测
		if (null== bookId ||bookId.isEmpty()){
			
			return true;
		}
		
		// 当前课程ID保存
		Session.set(SessionConstants.TT_CURRENT_BOOKID, bookId);
		return false;
	}
	
	/**
	 * 权限校验
	 */

	private boolean checkAutority( ) {
		
		// 用户查看模式，不检验权限
		if (mode ==1){
			return true;
		}

		List<String> objectId = new ArrayList<String>();
		objectId.add(bookId);
		// 画面Id
		String pageId = TtConstants.PageId.J030031.value();
		
		// Event Id
		String eventId = "J030031_1";
		if (mode == 2) {
			eventId = "J030031_1";
		} else if (mode == 3) {
			eventId = "J030031_2";
		} else if (mode == 4) {
			eventId = "J030031_3";
		}
		// 权限检查
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				pageId, eventId, 0, 0, 0,
				TtConstants.C43.C43_2.value(), objectId);

		if (!checkResult.getRetFlag()) {
			errorMessage = checkResult.getRetMessage();
			return false;
		}
		
		return true;
	}
	
	/**
	 * @return the j030031Service
	 */
	public J030031Service getJ030031Service() {
		return j030031Service;
	}

	/**
	 * @param service the j030031Service to set
	 */
	public void setJ030031Service(J030031Service service) {
		j030031Service = service;
	}

	/**
	 * @return the bookMenuList
	 */
	public List<BookContent> getBookMenuList() {
		return bookMenuList;
	}

	/**
	 * @param bookMenuList the bookMenuList to set
	 */
	public void setBookMenuList(List<BookContent> bookMenuList) {
		this.bookMenuList = bookMenuList;
	}

	/**
	 * @return the bookInfo
	 */
	public BookInfo getBookInfo() {
		return bookInfo;
	}

	/**
	 * @param bookInfo
	 *            the bookInfo to set
	 */
	public void setBookInfo(BookInfo bookInfo) {
		this.bookInfo = bookInfo;
	}

	/**
	 * @return the bookContent
	 */
	public BookContent getBookContent() {
		return bookContent;
	}

	/**
	 * @param bookContent
	 *            the bookContent to set
	 */
	public void setBookContent(BookContent bookContent) {
		this.bookContent = bookContent;
	}

	/**
	 * @return the updateUserNameList
	 */
	public List<BookInfo> getUpdateUserNameList() {
		return updateUserNameList;
	}

	/**
	 * @param updateUserNameList
	 *            the updateUserNameList to set
	 */
	public void setUpdateUserNameList(List<BookInfo> updateUserNameList) {
		this.updateUserNameList = updateUserNameList;
	}

	/**
	 * @return the createUserNameList
	 */
	public List<BookInfo> getCreateUserNameList() {
		return createUserNameList;
	}

	/**
	 * @return the relateBookNum
	 */
	public Integer getRelateBookNum() {
		return relateBookNum;
	}

	/**
	 * @param relateBookNum the relateBookNum to set
	 */
	public void setRelateBookNum(Integer relateBookNum) {
		this.relateBookNum = relateBookNum;
	}

	/**
	 * @param createUserNameList
	 *            the createUserNameList to set
	 */
	public void setCreateUserNameList(List<BookInfo> createUserNameList) {
		this.createUserNameList = createUserNameList;
	}

	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}
	
	/**
	 * @return the bookEditNo
	 */
	public Integer getBookEditNo() {
		return bookEditNo;
	}

	/**
	 * @param bookEditNo the bookEditNo to set
	 */
	public void setBookEditNo(Integer bookEditNo) {
		this.bookEditNo = bookEditNo;
	}
	
	/**
	 * @return the bookVersionNo
	 */
	public Integer getBookVersionNo() {
		return bookVersionNo;
	}

	/**
	 * @param bookVersionNo the bookVersionNo to set
	 */
	public void setBookVersionNo(Integer bookVersionNo) {
		this.bookVersionNo = bookVersionNo;
	}

	/**
	 * @return the bookUpdateNo
	 */
	public Integer getBookUpdateNo() {
		return bookUpdateNo;
	}

	/**
	 * @param bookUpdateNo the bookUpdateNo to set
	 */
	public void setBookUpdateNo(Integer bookUpdateNo) {
		this.bookUpdateNo = bookUpdateNo;
	}
	/**
	 * @return the bookChapterNo
	 */
	public Integer getBookChapterNo() {
		return bookChapterNo;
	}

	/**
	 * @param bookChapterNo the bookChapterNo to set
	 */
	public void setBookChapterNo(Integer bookChapterNo) {
		this.bookChapterNo = bookChapterNo;
	}
	
	/**
	 * @return the bookChapterNum
	 */
	public Integer getBookChapterNum() {
		return bookChapterNum;
	}

	/**
	 * @param bookChapterNum the bookChapterNum to set
	 */
	public void setBookChapterNum(Integer bookChapterNum) {
		this.bookChapterNum = bookChapterNum;
	}

	/**
	 * @return the mode
	 */
	public Integer getMode() {
		return mode;
	}

	/**
	 * @param mode the mode to set
	 */
	public void setMode(Integer mode) {
		this.mode = mode;
	}

	/**
	 * @return the bookId
	 */
	public String getBookId() {
		return bookId;
	}

	/**
	 * @param bookId the bookId to set
	 */
	public void setBookId(String bookId) {
		this.bookId = bookId;
	}

	/**
	 * @return the ttCommonService
	 */
	public TtCommonService getTtCommonService() {
		return ttCommonService;
	}

	/**
	 * @param ttCommonService the ttCommonService to set
	 */
	public void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}
	/**
	 * @return the courseAttentionInfo
	 */
	public CourseAttentionInfo getCourseAttentionInfo() {
		return courseAttentionInfo;
	}

	/**
	 * @param courseAttentionInfo the courseAttentionInfo to set
	 */
	public void setCourseAttentionInfo(CourseAttentionInfo courseAttentionInfo) {
		this.courseAttentionInfo = courseAttentionInfo;
	}

	/**
	 * @param trainingCommonService the trainingCommonService to set
	 */
	public void setTrainingCommonService(TrainingCommonService trainingCommonService) {
		this.trainingCommonService = trainingCommonService;
	}

	/**
	 * @return the trainingCommonService
	 */
	public TrainingCommonService getTrainingCommonService() {
		return trainingCommonService;
	}
}
