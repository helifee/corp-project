/*
 * @(#)K060031SingleQuesInfo.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */

package com.yds.tt.testing.bean;

import java.util.ArrayList;
import java.util.List;

import com.yds.base.bean.BaseBean;
import com.yds.tt.manager.service.TtConstants;

/**
 * 组合题单题信息Bean
 * 
 * @author sundefu
 * @version 1.0 2010/04/08
 */
public class K060031SingleQuesInfo extends BaseBean {

	private static final long serialVersionUID = 4518251054346429035L;
	private static final String COMMA = ",";
	private static final String SLASH = "/";
	/** 大题编号. */
	private Integer bigquestionSerialNo;
	/** 试题ID. */
	private String questionId; 
	/** 试题版本号. */
	private Integer questionVersionNo;		
	/** 大题内显示顺序. */
	private Integer questionOrder;
	/** 答案编号. */
	private Integer answerSerialNo;
	/** 组合题号. */
	private String answerQuesNo;
	/** 答案题型. */
	private Integer answerType;
	/** 选项数. */
	private Integer optionNumber;
	/** 选项表示方式区分Id. */
	private String optionTypeId;
	/** 选项内容. */
	private String optionContent;
	/** 填空数. */
	private Integer blankNumber;
	/** 考生答案内容. */
	private String answerContent;
	/** 选项列表. */
	private List<String> optionList;
	/** 字数限制. */
	private Integer wordLimits;
	/** 标准答案. */
	private String standardAnswer;
	/** 附件地址. */
	private String attachFilePath;
	/** 答案分数. */
	private Integer answerScore;
	/** 评分区分. */
	private Integer markFlg;
	/** 得分. */
	private Integer questionPoint;
	/** 得分点. */
	private List<String> pointOfScore;	
	/** 试卷中试题分数. */
	private Integer paperQuestionScore;
	/** 题库设置试题分数. */
	private Integer questionScore;
	/** 试题分数明细. */
	private String questionScoreDetails;
	
	/**
	 * @return the answerSerialNo
	 */
	public Integer getAnswerSerialNo() {
		return answerSerialNo;
	}
	/**
	 * @param answerSerialNo the answerSerialNo to set
	 */
	public void setAnswerSerialNo(Integer answerSerialNo) {
		this.answerSerialNo = answerSerialNo;
	}
	/**
	 * @return the answerQuesNo
	 */
	public String getAnswerQuesNo() {
		return answerQuesNo;
	}
	/**
	 * @param answerQuesNo the answerQuesNo to set
	 */
	public void setAnswerQuesNo(String answerQuesNo) {
		this.answerQuesNo = answerQuesNo;
	}
	/**
	 * @return the answerType
	 */
	public Integer getAnswerType() {
		return answerType;
	}
	/**
	 * @param answerType the answerType to set
	 */
	public void setAnswerType(Integer answerType) {
		this.answerType = answerType;
	}
	/**
	 * @return the optionNumber
	 */
	public Integer getOptionNumber() {
		return optionNumber;
	}
	/**
	 * @param optionNumber the optionNumber to set
	 */
	public void setOptionNumber(Integer optionNumber) {
		this.optionNumber = optionNumber;
	}
	/**
	 * @return the blankNumber
	 */
	public Integer getBlankNumber() {
		return blankNumber;
	}
	/**
	 * @param blankNumber the blankNumber to set
	 */
	public void setBlankNumber(Integer blankNumber) {
		this.blankNumber = blankNumber;
	}
	/**
	 * @return the answerContent
	 */
	public String getAnswerContent() {
		return answerContent;
	}
	/**
	 * @param answerContent the answerContent to set
	 */
	public void setAnswerContent(String answerContent) {
		this.answerContent = answerContent;
	}
	/**
	 * @return the optionList
	 */
	public List<String> getOptionList() {
		if (optionList != null) {
			return optionList;
		}
		if (optionContent == null || optionContent.isEmpty()) {
			return optionList;
		}
		optionList = new ArrayList<String>();
		String[] options;
		if ((TtConstants.R03.R03_1.toString()).equals(answerType.toString())
				|| (TtConstants.R03.R03_2.toString()).equals(answerType
						.toString())) {
			options = optionContent.split(COMMA);
		} else if ((TtConstants.R03.R03_3.toString()).equals(answerType.toString())) {
			options = optionContent.split(SLASH);
		} else {
			return optionList;
		}
		for (int i = 0;i < optionNumber;i++) {
			optionList.add(options[i]);
		}
		
		return optionList;
	}
	/**
	 * @param optionList the optionList to set
	 */
	public void setOptionList(List<String> optionList) {
		this.optionList = optionList;
	}
	/**
	 * @return the wordLimits
	 */
	public Integer getWordLimits() {
		return wordLimits;
	}
	/**
	 * @param wordLimits the wordLimits to set
	 */
	public void setWordLimits(Integer wordLimits) {
		this.wordLimits = wordLimits;
	}
	/**
	 * @return the optionContent
	 */
	public String getOptionContent() {
		return optionContent;
	}
	/**
	 * @param optionContent the optionContent to set
	 */
	public void setOptionContent(String optionContent) {
		this.optionContent = optionContent;
	}
	/**
	 * @return the optionTypeId
	 */
	public String getOptionTypeId() {
		return optionTypeId;
	}
	/**
	 * @param optionTypeId the optionTypeId to set
	 */
	public void setOptionTypeId(String optionTypeId) {
		this.optionTypeId = optionTypeId;
	}
	/**
	 * @return the standardAnswer
	 */
	public String getStandardAnswer() {
		return standardAnswer;
	}
	/**
	 * @param standardAnswer the standardAnswer to set
	 */
	public void setStandardAnswer(String standardAnswer) {
		this.standardAnswer = standardAnswer;
	}
	/**
	 * @return the attachFilePath
	 */
	public String getAttachFilePath() {
		return attachFilePath;
	}
	/**
	 * @param attachFilePath the attachFilePath to set
	 */
	public void setAttachFilePath(String attachFilePath) {
		this.attachFilePath = attachFilePath;
	}
	/**
	 * @return the answerScore
	 */
	public Integer getAnswerScore() {
		return answerScore;
	}
	/**
	 * @param answerScore the answerScore to set
	 */
	public void setAnswerScore(Integer answerScore) {
		this.answerScore = answerScore;
	}
	/**
	 * @return the markFlg
	 */
	public Integer getMarkFlg() {
		return markFlg;
	}
	/**
	 * @param markFlg the markFlg to set
	 */
	public void setMarkFlg(Integer markFlg) {
		this.markFlg = markFlg;
	}
	/**
	 * @return the questionPoint
	 */
	public Integer getQuestionPoint() {
		return questionPoint;
	}
	/**
	 * @param questionPoint the questionPoint to set
	 */
	public void setQuestionPoint(Integer questionPoint) {
		this.questionPoint = questionPoint;
	}
	/**
	 * @return the pointOfScore
	 */
	public List<String> getPointOfScore() {
		return pointOfScore;
	}
	/**
	 * @param pointOfScore the pointOfScore to set
	 */
	public void setPointOfScore(List<String> pointOfScore) {
		this.pointOfScore = pointOfScore;
	}
	/**
	 * @param bigquestionSerialNo the bigquestionSerialNo to set
	 */
	public void setBigquestionSerialNo(Integer bigquestionSerialNo) {
		this.bigquestionSerialNo = bigquestionSerialNo;
	}
	/**
	 * @return the bigquestionSerialNo
	 */
	public Integer getBigquestionSerialNo() {
		return bigquestionSerialNo;
	}
	/**
	 * @param questionId the questionId to set
	 */
	public void setQuestionId(String questionId) {
		this.questionId = questionId;
	}
	/**
	 * @return the questionId
	 */
	public String getQuestionId() {
		return questionId;
	}
	/**
	 * @param questionVersionNo the questionVersionNo to set
	 */
	public void setQuestionVersionNo(Integer questionVersionNo) {
		this.questionVersionNo = questionVersionNo;
	}
	/**
	 * @return the questionVersionNo
	 */
	public Integer getQuestionVersionNo() {
		return questionVersionNo;
	}
	/**
	 * @param questionOrder the questionOrder to set
	 */
	public void setQuestionOrder(Integer questionOrder) {
		this.questionOrder = questionOrder;
	}
	/**
	 * @return the questionOrder
	 */
	public Integer getQuestionOrder() {
		return questionOrder;
	}
	/**
	 * @param paperQuestionScore the paperQuestionScore to set
	 */
	public void setPaperQuestionScore(Integer paperQuestionScore) {
		this.paperQuestionScore = paperQuestionScore;
	}
	/**
	 * @return the paperQuestionScore
	 */
	public Integer getPaperQuestionScore() {
		return paperQuestionScore;
	}
	/**
	 * @param questionScore the questionScore to set
	 */
	public void setQuestionScore(Integer questionScore) {
		this.questionScore = questionScore;
	}
	/**
	 * @return the questionScore
	 */
	public Integer getQuestionScore() {
		return questionScore;
	}
	/**
	 * @return the questionScoreDetails
	 */
	public String getQuestionScoreDetails() {
		return questionScoreDetails;
	}
	/**
	 * @param questionScoreDetails the questionScoreDetails to set
	 */
	public void setQuestionScoreDetails(String questionScoreDetails) {
		this.questionScoreDetails = questionScoreDetails;
	}

}
