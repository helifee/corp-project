/*
 * @(#) K070011Dao.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试系统
 *    SubSystem: 考试子系统
 */
package com.yds.tt.testing.dao;

import java.util.List;
import java.util.Map;


import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.testing.bean.K070011Info;
import com.yds.tt.testing.bean.K070011SearchPostionInfo;
import com.yds.tt.testing.bean.TestResultsInfo;

public interface K070011Dao {
	
	/**
	 * 取得考试查询考试一览信息列表 
	 * 
	 * @param  k070011Info 检索条件信息
	 * 
	 * @param  offset 取得日志信息 
	 * 
	 * @param  perCounts 取得翻页信息
	 * 
	 * @return List<ExamineInfo> 考试信息一览 
	 */
	public List<ExamineInfo> getExamineInfoList(K070011Info k070011Info, int offset , int perCounts);
	
	/**
	 * 取得考试查询考试一览信息总数(分页)
	 * 
	 * @param  k070011Info 检索条件信息
	 * 
	 * @return Long 信息总数
	 */
	public Long getTotalCount(K070011Info k070011Info);
	
	/**
	 * 取得考试查询汇总考试信息
	 * 
	 * @param  examineId 考试Id
	 * 
	 * @return ExamineInfo 汇总考试信息
	 */
	public ExamineInfo getExamineAllInfo(String examineId);
	
	/**
	 * 取得考试查询具体考试信息
	 * 
	 * @param  examineId 考试Id
	 * 
	 * @return List<CourseResultsInfo> 具体考试信息
	 */
	public List<TestResultsInfo> getExamineSpecificList(String examineId);
	
	/**
	 * 取得考试查询参加考试人数
	 * 
	 * @param  examineId 考试Id
	 */	
	public Integer getExamineCountNum(K070011Info k070011Info);
	
	/**
	 * 取得员工查询考试一览信息列表 
	 * 
	 * @param  employeesId 员工ID
	 * 
	 * @param  offset 取得日志信息 
	 * 
	 * @param  perCounts 取得翻页信息
	 * 
	 * @return List<ExamineInfo> 考试信息一览 
	 */	
	public List<ExamineInfo> getEmpExamineInfoList(String employeesId, int offset , int perCounts);
	
	/**
	 * 取得员工查询考试一览信息总数(分页)
	 * 
	 * @param  employeesId 员工ID
	 * 
	 * @param  k070011Info 检索条件信息
	 * 
	 * @return Long 信息总数
	 */
	public Long getEmpTotalCount(String employeesId);
	
	/**
	 * 取得员工查询考试一览信息列表 
	 * 
	 * @param  examineInfo
	 * 			
	 * @return List<TestResultsInfo> 有效考试信息一览 
	 */		
	public List<TestResultsInfo> getEmpEffectiveInfoList(ExamineInfo examineInfo);
	
	/**
	 * 取得员工查询考试一览信息列表 
	 * 
	 * @param  examineInfo
	 * 			
	 * @return List<TestResultsInfo> 全部考试信息一览 
	 */		
	public List<TestResultsInfo> getEmpAllInfoList(ExamineInfo examineInfo);
	
	/**
	 * 取得定位检索考试名称和档次 
	 * 
	 * @param  examineId 考试ID
	 * 			
	 * @return ExamineInfo 全部考试信息一览 
	 */		
	public ExamineInfo getExamineNameLevelInfo(Map<String, String> examineIdMap);

	/**
	 * 定位检索检索条件是OR时 
	 * 
	 * @param  listMap 检索条件Map
	 * 			
	 * @return List<TestResultsInfo> 全部考试信息一览 
	 */	
	public List<TestResultsInfo> getPostionExamineList(
			Map<String, List<K070011SearchPostionInfo>> listMap, int offset , int perCounts);
	
	/**
	 * 定位检索检索条件是AND时 
	 * 
	 * @param  listMap 检索条件Map
	 * 			
	 * @return List<TestResultsInfo> 全部考试信息一览 
	 */	
	public List<TestResultsInfo> getPostionAndExamineList(
			Map<String, List<K070011SearchPostionInfo>> listMap,int offset , int perCounts);
	
	/**
	 * 定位检索检索条件是AND时 
	 * 
	 * @param  listMap 检索条件Map
	 * 			
	 * @return Long 全部考试信息总数
	 */		
	public Long getPosTotalCountAnd(Map<String, List<K070011SearchPostionInfo>> listMap);
	
	/**
	 * 定位检索检索条件是OR时 
	 * 
	 * @param  listMap 检索条件Map
	 * 			
	 * @return Long 全部考试信息总数 
	 */		
	public Long getPosTotalCountOr(Map<String, List<K070011SearchPostionInfo>> listMap);

}
