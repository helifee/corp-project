<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="K060071Dao">
	<typeAlias alias="k060071ExamineInfo" type="com.yds.tt.testing.bean.ExamineInfo"/>
	<typeAlias alias="k060071CourseInfo" type="com.yds.tt.training.bean.CourseInfo"/>
	<typeAlias alias="k060071TestPaperInfo" type="com.yds.tt.testing.bean.TestPaperInfo"/>
	<typeAlias alias="k060071UserInfo" type="com.yds.common.bean.UserInfo"/>
	<typeAlias alias="k060071ExamEmployeeInfo" type="com.yds.tt.testing.bean.ExamEmployeeInfo"/>

	<!-- 考试基本信息取得 -->
	<select id="getExamineInfo" parameterClass="java.util.HashMap" resultClass="k060071ExamineInfo"> 
		 SELECT  t1.EXAMINE_ID          AS examineId,
		        t1.EXAMINE_NAME        AS examineName,
				t1.CATEGORY1_ID        AS category1Id,
				t1.CATEGORY2_ID        AS category2Id,
				t1.CATEGORY3_ID        AS category3Id,
				<!-- 分类名称：一级分类名-二级分类名-三级分类名 --> 
				CONCAT
				(CASE t1.CATEGORY1_ID 
					WHEN 0 THEN ""
					ELSE 
						(SELECT CATEGORY_NAME 
						   FROM tt_fenlei
						  WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND
								CATEGORY_LEVEL = 1)
				END,
				CASE t1.CATEGORY2_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY_LEVEL = 2))
				END ,
				CASE t1.CATEGORY3_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei 
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY3_ID = t1.CATEGORY3_ID AND
									 CATEGORY_LEVEL = 3))
				END) AS categoryName,
				<!-- 考试时间 -->
		        t1.EXAMINE_TIME        AS examineTime, 
				<!-- 参阅答案标志 -->
				t1.CHECK_ANSWER_FLG  AS checkAnswerFlg,
				<!-- 再考试标志 -->
		        t1.AGAIN_EXAMINE_FLG     AS againExamineFlg,
				<!-- 必考标志 -->
		        t1.MUST_EXAMINE_FLG     AS mustExamineFlg,
				<!-- 考试可见标志 -->
		        t1.EXAMINE_VISIBLE_FLG     AS examineVisibleFlg,
				<!-- 父考试Id -->
				t1.PARENT_EXAMINE_ID AS parentExamineId,
				<!-- 考试说明 -->
		        t1.EXAMINE_COMMENT   AS examineComment,
				<!-- 针对对象类型 -->
		        t1.OBJECT_TYPE   AS objectType,
				<!-- 针对对象值 -->
		        t1.OBJECT_VALUE   AS objectValue,
				<!-- 评定等级数量 -->
		        t1.RESULTLEVEL_NUM   AS resultlevelNum,
				<!-- 通过考试评定等级 -->
				t1.PASSEXAMINE_LEVEL   AS passexamineLevel,
				<!-- 评定等级一的分数 -->
				t1.RESULTLEVEL1_SCORE  AS resultlevel1Score,
				<!-- 评定等级一的名称 -->
		        t1.RESULTLEVEL1_NAME   AS resultlevel1Name,
				<!-- 评定等级二的分数 -->
				t1.RESULTLEVEL2_SCORE  AS resultlevel2Score,
				<!-- 评定等级二的名称 -->
		        t1.RESULTLEVEL2_NAME   AS resultlevel2Name,
				<!-- 评定等级三的分数 -->
				t1.RESULTLEVEL3_SCORE  AS resultlevel3Score,
				<!-- 评定等级三的名称 -->
		        t1.RESULTLEVEL3_NAME   AS resultlevel3Name,
				<!-- 评定等级四的分数 -->
				t1.RESULTLEVEL4_SCORE  AS resultlevel4Score,
				<!-- 评定等级四的名称 -->
		        t1.RESULTLEVEL4_NAME   AS resultlevel4Name,
				<!-- 评定等级五的分数 -->
				t1.RESULTLEVEL5_SCORE  AS resultlevel5Score,
				<!-- 评定等级五的名称 -->
		        t1.RESULTLEVEL5_NAME   AS resultlevel5Name,
				<!-- 有效成绩标志 -->
		        t1.SCORE_VALID_FLG   AS scoreValidFlg,
				<!-- 考试开始日期 -->
		        DATE_FORMAT(t1.EXAMINE_START_TIME,'%Y-%m-%d')   AS examineStartDate,
				<!-- 考试开始时刻 -->
				DATE_FORMAT(IFNULL(t1.EXAMINE_START_TIME,'00:00:00'),'%H:%i') AS examineStartTimeStr,
				<!-- 考试结束日期 -->
		        DATE_FORMAT(t1.EXAMINE_END_TIME,'%Y-%m-%d')   AS examineEndDate,
				<!-- 考试结束时刻 -->
				DATE_FORMAT(IFNULL(t1.EXAMINE_END_TIME,'00:00:00'),'%H:%i') AS examineEndTimeStr, 
				<!-- 通知提醒日期 -->
		        DATE_FORMAT(t1.EXAMINE_NOTIFY_DATE,'%Y-%m-%d')   AS examineNotifyDate,
				<!-- 报名截止日期 -->
		        DATE_FORMAT(t1.APPLY_CLOSING_TIME,'%Y-%m-%d')   AS applyClosingDate,
				<!-- 报名截止时刻 -->
				DATE_FORMAT(IFNULL(t1.APPLY_CLOSING_TIME,'00:00:00'),'%H:%i') AS applyClosingTimeStr,
				<!-- 不批准原因 -->
		        t1.REFUSE_REASON    AS refuseReason,
				<!-- 考试状态 -->
		        t1.EXAMINE_STATUS    AS examineStatus,
				t1.APPLY_CONFIRM_FLG    AS applyConfirmFlg,
				<!-- 状态 -->
		        (SELECT
						DIFF_NAME
					FROM com_code_mst
					WHERE 
					TYPE_ID = 'R12' AND
					DIFF_NO = t1.EXAMINE_STATUS) AS examineStatusName,
				<!-- 更新时间 -->
				t1.UPDATE_TIME AS updateTime,
				<!-- 考试标志 -->	
				t1.EXAMINE_FLG AS examineFlg,
				<!-- 考试标志名 -->
				(SELECT
						DIFF_NAME
					FROM com_code_mst
					WHERE 
					TYPE_ID = 'C08' AND
					DIFF_NO = t1.EXAMINE_FLG) AS examineFlgName				
		  FROM  tt_ks_xinxi             t1
		 WHERE  t1.EXAMINE_ID     =     #examineId#
		 <!-- 编辑模式 --> 
		 <isEqual property="mode" compareValue="2" prepend="AND">
			<!-- 编辑中 --> 
			(t1.EXAMINE_STATUS =  '1' OR
			<!-- 待审批 --> 
			t1.EXAMINE_STATUS =  '2' OR
			<!-- 不批准 --> 
			t1.EXAMINE_STATUS =  '4' OR
			<!-- 已批准 -->
			t1.EXAMINE_STATUS =  '3' OR
			<!-- 报名已批准 -->
			t1.EXAMINE_STATUS =  '6')
		 </isEqual>
		 <!--  调整模式 --> 
		 <isEqual property="mode" compareValue="5" prepend="AND">
			 <!--  考试开始日时 --> 
			<![CDATA[ 
				  t1.EXAMINE_START_TIME > now()
			]]>
		 </isEqual>
		 <!-- 审批模式 --> 
		 <isEqual property="mode" compareValue="3" prepend="AND">
			<!-- 编辑中 --> 
			(t1.EXAMINE_STATUS =  '1' OR
			<!-- 待审批 --> 
			t1.EXAMINE_STATUS =  '2' OR
			<!-- 不批准 --> 
			t1.EXAMINE_STATUS =  '4' OR
			<!-- 已批准 -->
			t1.EXAMINE_STATUS =  '3' OR
			<!-- 报名已批准 -->
			t1.EXAMINE_STATUS =  '6')
		 </isEqual>
	</select>
	<!-- 考试信息 --> 
	<delete id="deleteExamineInfo" parameterClass="String">
		DELETE 	
			FROM 
				tt_ks_xinxi
		WHERE   EXAMINE_ID = #examineId# 
	</delete>
	<!-- 报名已批准的员工ID检索 --> 
	<select id="getApprovedUserList" parameterClass="String" resultClass="k060071UserInfo">
		SELECT 	DISTINCT EMPLOYEES_ID AS userId
			FROM 
				tt_ks_yuangong
		WHERE   EXAMINE_ID = #examineId# AND
				EMP_EXAM_STATUS = 6;
	</select>
	<!-- 已报名的员工ID检索 --> 
	<select id="getEnrollUserList" parameterClass="String" resultClass="k060071UserInfo">
		SELECT 	DISTINCT EMPLOYEES_ID AS userId
			FROM 
				tt_ks_yuangong
		WHERE   EXAMINE_ID = #examineId# 
	</select>
	<!-- 删除已报名的员工 --> 
	<delete id="deleteEnrollUserList" parameterClass="String">
		DELETE 	
			FROM 
				tt_ks_yuangong
		WHERE   EXAMINE_ID = #examineId# 
	</delete>
	<!-- 删除已报名的员工的相关提醒信息 --> 
	<delete id="deleteRemindingMessage" parameterClass="String">
		DELETE 	
			FROM 
				tt_txxiaoxi
		WHERE   PARAMETER LIKE #examineId# AND
				(MODE = '07' OR
				MODE = '11' OR
				MODE = '12' OR
				MODE = '13' 
				)
	</delete>
	<!-- 考试实施者检索 -->
	<select id="getExamineApprover" parameterClass="String" resultClass="k060071UserInfo">
		SELECT 	USER_ID AS userId
		  FROM 
				tt_quanxian
		WHERE   AUTHORITY_ID = 12
		  AND   RELATEDOBJECT_ID = #examineId#
	</select>
	<!-- 考试针对对象人员检索 --> 
	<select id="getUserList" parameterClass="String" resultClass="k060071UserInfo">
		SELECT 	t1.EXAMINE_OBJECT_ID AS userId, 
				(SELECT USER_CNM FROM v_tt_user WHERE USER_ID = t1.EXAMINE_OBJECT_ID)AS userName			
			FROM 
				tt_ks_duixiang t1
		WHERE   t1.EXAMINE_ID = #examineId#;
	</select>
	<!-- 所需参加的考试检索 --> 
	<select id="getSelectedExamine" parameterClass="String" resultClass="k060071ExamineInfo">
		SELECT 	t1.EXAMINE_ID          AS examineId,
		        t1.EXAMINE_NAME        AS examineName
			FROM 
				tt_ks_xinxi t1,tt_xuyaokaoshi t2
		WHERE   t2.EXAMINE_ID = #examineId# AND
				t2.NECESSARY_EXAMINE_ID = t1.EXAMINE_ID
	</select>
	<!-- 所需学习的课程检索 --> 
	<select id="getSelectedCourse" parameterClass="String" resultClass="k060071CourseInfo">
		SELECT 	t1.COURSE_ID          AS courseId,
		        t1.COURSE_NAME        AS courseName
			FROM 
				tt_kecheng t1,tt_xuyaokecheng t2
		WHERE   t2.EXAMINE_ID = #examineId# AND
				t2.NECESSARY_COURSE_ID = t1.COURSE_ID
	</select>	
	<!-- 考试所选试卷一览 -->
	<select id="getSelectedPaperList" parameterClass="String" resultClass="k060071TestPaperInfo">
	SELECT 	paperId,
			paperVersionNo,
			paperTitle,
			randomBigquestFlgNM,
			categoryName,
			paperTotalScore,
			paperTime,
			updateTime,
			paperStatus,
			paperStatusName,
			updateUserName,
			autoMarkFlg
	FROM (		
		<!-- 如果是已批准,则检索最新版本号 -->
		SELECT 	t1.PAPER_ID         AS paperId,
				t1.PAPER_VERSION_NO AS paperVersionNo,
				t1.PAPER_TITLE AS paperTitle,
				(CASE T1.RANDOM_BIGQUEST_FLG
					WHEN 1 THEN "有"
					ELSE "无" 
					END) AS randomBigquestFlgNM,
				<!-- 分类名称：一级分类名-二级分类名-三级分类名 --> 
				CONCAT
				(CASE t1.CATEGORY1_ID 
					WHEN 0 THEN ""
					ELSE 
						(SELECT CATEGORY_NAME 
						   FROM tt_fenlei
						  WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
								CATEGORY_LEVEL = 1)
				END,
				CASE t1.CATEGORY2_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY_LEVEL = 2))
				END ,
				CASE t1.CATEGORY3_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei 
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY3_ID = t1.CATEGORY3_ID AND
									 CATEGORY_LEVEL = 3))
				END) AS categoryName,
				t1.PAPER_TOTAL_SCORE AS paperTotalScore,
				t1.PAPER_TIME AS paperTime,
				t1.UPDATE_TIME AS updateTime,
				t1.PAPER_STATUS AS paperStatus,
				<!-- 试卷状态 -->
		        (SELECT
						DIFF_NAME
					FROM com_code_mst
					WHERE 
					TYPE_ID = 'R10' AND
					DIFF_NO = t1.PAPER_STATUS) AS paperStatusName,
				<!-- 用审批者姓名暂时存储更新者姓名 -->
				(SELECT USER_CNM FROM v_tt_user WHERE USER_ID = t1.UPDATE_USER_ID)AS updateUserName ,
				<!-- 检索该试卷中大题的自动判题区分为存在手动判题的大题数量 -->
				(SELECT COUNT(*) FROM tt_sj_datixinxi WHERE PAPER_ID = paperId AND PAPER_VERSION_NO=paperVersionNo AND ATUO_MARK_FLG ='2')  AS autoMarkFlg   
			FROM 
				tt_shijuan t1,
				(SELECT t2.PAPER_ID AS PAPER_ID,
						MAX(t2.PAPER_VERSION_NO) AS PAPER_VERSION_NO
				   FROM tt_shijuan t2,
						tt_ks_shijuang t3
				  WHERE t3.EXAMINE_ID = #examineId#	AND
						t2.PAPER_ID = t3.PAPER_ID AND
						<!-- 试卷状态为已批准 -->
						t2.PAPER_STATUS = '3'
						group by PAPER_ID) t4
		WHERE   t1.PAPER_ID = t4.PAPER_ID AND
				t1.PAPER_VERSION_NO = t4.PAPER_VERSION_NO
				
UNION 	
		<!-- 如果不是已批准,则检索版本号=1 -->
		SELECT 	t1.PAPER_ID         AS paperId,
				t1.PAPER_VERSION_NO AS paperVersionNo,
				t1.PAPER_TITLE AS paperTitle,
				(CASE T1.RANDOM_BIGQUEST_FLG
					WHEN 1 THEN "有"
					ELSE "无" 
					END) AS randomBigquestFlgNM,
				<!-- 分类名称：一级分类名-二级分类名-三级分类名 --> 
				CONCAT
				(CASE t1.CATEGORY1_ID 
					WHEN 0 THEN ""
					ELSE 
						(SELECT CATEGORY_NAME 
						   FROM tt_fenlei
						  WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
								CATEGORY_LEVEL = 1)
				END,
				CASE t1.CATEGORY2_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY_LEVEL = 2))
				END ,
				CASE t1.CATEGORY3_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei 
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY3_ID = t1.CATEGORY3_ID AND
									 CATEGORY_LEVEL = 3))
				END) AS categoryName,
				t1.PAPER_TOTAL_SCORE AS paperTotalScore,
				t1.PAPER_TIME AS paperTime,
				t1.UPDATE_TIME AS updateTime,
				t1.PAPER_STATUS AS paperStatus,
				<!-- 试卷状态 -->
		        (SELECT
						DIFF_NAME
					FROM com_code_mst
					WHERE 
					TYPE_ID = 'R10' AND
					DIFF_NO = t1.PAPER_STATUS) AS paperStatusName,
				<!-- 用审批者姓名暂时存储更新者姓名 -->
				(SELECT USER_CNM FROM v_tt_user WHERE USER_ID = t1.UPDATE_USER_ID)AS updateUserName ,
				<!-- 检索该试卷中大题的自动判题区分为存在手动判题的大题数量 -->
				(SELECT COUNT(*) FROM tt_sj_datixinxi WHERE PAPER_ID = paperId AND PAPER_VERSION_NO=paperVersionNo AND ATUO_MARK_FLG ='2')  AS autoMarkFlg  			
		FROM 
				tt_shijuan t1,
				tt_ks_shijuang t2
		WHERE   t2.EXAMINE_ID = #examineId#	AND
				t2.PAPER_ID = t1.PAPER_ID AND
				t1.PAPER_VERSION_NO = 1	AND
				t1.PAPER_STATUS != '3'
		) tempTable
	ORDER BY paperId;
	</select>	
	
	<!-- 调整考试基本信息 -->
	<update id="updateRepairExamineInfo" parameterClass="k060071ExamineInfo">
		UPDATE tt_ks_xinxi
			SET
			<!-- 考试开始日时 -->
		    EXAMINE_START_TIME = DATE_FORMAT(CONCAT(SUBSTRING(#examineStartDate#,1,10),' ',IFNULL(#examineStartTimeStr#,'00:00'),':00'),'%Y-%m-%d %H:%i:%s'),
			<!-- 考试结束日时 -->
			EXAMINE_END_TIME =	DATE_FORMAT(CONCAT(SUBSTRING(#examineEndDate#,1,10),' ',IFNULL(#examineEndTimeStr#,'23:59'),':00'),'%Y-%m-%d %H:%i:%s'),
			<!-- 更新者 -->
			UPDATE_USER_ID = #updateUserId#,
			<!-- 更新时间 -->
			UPDATE_TIME = now()			
		WHERE
			EXAMINE_ID = #examineId#;
	</update>

	<!-- 更新考试基本信息 --> 
	<update id="updateExamineInfo" parameterClass="k060071ExamineInfo">
		UPDATE tt_ks_xinxi 
			SET
			EXAMINE_NAME = #examineName#,
			<!-- 考试时间 -->
		    EXAMINE_TIME = #examineTime#,
			<!-- 参阅答案标志 -->
			CHECK_ANSWER_FLG =#checkAnswerFlg#,
			<!-- 必考标志 -->
		    MUST_EXAMINE_FLG =#mustExamineFlg#,
			<!-- 考试说明 -->
		    EXAMINE_COMMENT = #examineComment#,
			<!-- 针对对象类型 -->
		    OBJECT_TYPE = #objectType#,
			<!-- 针对对象值 -->
		    OBJECT_VALUE = #objectValue#,
			<!-- 满分 -->
			TOTAL_SCORE = #totalScore#,
			<!-- 考试开始日时 -->
		    EXAMINE_START_TIME = DATE_FORMAT(CONCAT(SUBSTRING(#examineStartDate#,1,10),' ',IFNULL(#examineStartTimeStr#,'00:00'),':00'),'%Y-%m-%d %H:%i:%s'),
			<!-- 考试结束日时 -->
			EXAMINE_END_TIME =	DATE_FORMAT(CONCAT(SUBSTRING(#examineEndDate#,1,10),' ',IFNULL(#examineEndTimeStr#,'23:59'),':00'),'%Y-%m-%d %H:%i:%s'),
			<!-- 报名截止日时 -->
			<isNotEmpty close="," property="applyClosingDate">
				APPLY_CLOSING_TIME = DATE_FORMAT(CONCAT(SUBSTRING(#applyClosingDate#,1,10),' ',IFNULL(#applyClosingTimeStr#,'23:59'),':00'),'%Y-%m-%d %H:%i:%s')
			</isNotEmpty>
			<!-- 通知提醒日期 -->
			<isNotEmpty close="," property="examineNotifyDate">
				EXAMINE_NOTIFY_DATE = #examineNotifyDate#
			</isNotEmpty>
			<!-- 报名批准标志 -->
			<isNotEmpty close="," property="applyClosingDate">
				APPLY_CONFIRM_FLG = #applyConfirmFlg#
			</isNotEmpty>	
			<!-- 评定等级 -->
			RESULTLEVEL1_SCORE = #resultlevel1Score#,
			RESULTLEVEL2_SCORE = #resultlevel2Score#,
			<isNotEmpty close="," property="resultlevel3Score">
				RESULTLEVEL3_SCORE = #resultlevel3Score#
			</isNotEmpty>
			<isNotEmpty close="," property="resultlevel4Score">
				RESULTLEVEL4_SCORE = #resultlevel4Score#
			</isNotEmpty>
			<isNotEmpty close="," property="resultlevel5Score">
				RESULTLEVEL5_SCORE = #resultlevel5Score#
			</isNotEmpty>
			<!-- 更新者 -->
			UPDATE_USER_ID = #updateUserId#,
			<!-- 更新时间 -->
			UPDATE_TIME = now()			
		WHERE
			EXAMINE_ID = #examineId# ;
	</update>

<!-- 提交申请考试基本信息 --> 
	<update id="updateApplyExamineInfo" parameterClass="k060071ExamineInfo">
		UPDATE tt_ks_xinxi
			SET
			EXAMINE_NAME = #examineName#,
			<!-- 考试时间 -->
		    EXAMINE_TIME = #examineTime#,
			<!-- 参阅答案标志 -->
			CHECK_ANSWER_FLG =#checkAnswerFlg#,
			<!-- 必考标志 -->
		    MUST_EXAMINE_FLG =#mustExamineFlg#,
			<!-- 考试说明 -->
		    EXAMINE_COMMENT = #examineComment#,
			<!-- 针对对象类型 -->
		    OBJECT_TYPE = #objectType#,
			<!-- 针对对象值 -->
		    OBJECT_VALUE = #objectValue#,
			<!-- 满分 -->
			TOTAL_SCORE = #totalScore#,
			<!-- 考试开始日时 -->
		    EXAMINE_START_TIME = DATE_FORMAT(CONCAT(SUBSTRING(#examineStartDate#,1,10),' ',IFNULL(#examineStartTimeStr#,'00:00'),':00'),'%Y-%m-%d %H:%i:%s'),
			<!-- 考试结束日时 -->
			EXAMINE_END_TIME =	DATE_FORMAT(CONCAT(SUBSTRING(#examineEndDate#,1,10),' ',IFNULL(#examineEndTimeStr#,'23:59'),':00'),'%Y-%m-%d %H:%i:%s'),
			<!-- 报名截止日时 -->
			<isNotEmpty close="," property="applyClosingDate">
				APPLY_CLOSING_TIME = DATE_FORMAT(CONCAT(SUBSTRING(#applyClosingDate#,1,10),' ',IFNULL(#applyClosingTimeStr#,'23:59'),':00'),'%Y-%m-%d %H:%i:%s')
			</isNotEmpty>
			<!-- 通知提醒日期 -->
			EXAMINE_NOTIFY_DATE = #examineNotifyDate#,
			<!-- 报名批准标志 -->
			<isNotEmpty close="," property="applyClosingDate">
				APPLY_CONFIRM_FLG = #applyConfirmFlg#
			</isNotEmpty>	
			<!-- 更新者 -->
			UPDATE_USER_ID = #updateUserId#,
			<!-- 更新时间 -->
			UPDATE_TIME = now()	,
			<!-- 考试状态 -->
			EXAMINE_STATUS  = #examineStatus#,
			<!-- 申请者 -->
			APPLY_USER_ID = #applyUserId#,
			<!-- 申请时间 -->
			APPLY_TIME = now()
					
		WHERE
			EXAMINE_ID = #examineId# ;
	</update>

<!-- 再编辑考试基本信息 -->
	<update id="updateReEditExamineInfo" parameterClass="k060071ExamineInfo">
		UPDATE tt_ks_xinxi
			SET
			<!-- 考试状态 -->
		    EXAMINE_STATUS  = #examineStatus#,
			<!-- 更新者 -->
			UPDATE_USER_ID = #updateUserId#,
			<!-- 更新时间 -->
			UPDATE_TIME = now()			
		WHERE
			EXAMINE_ID = #examineId# ;
	</update>

	<!-- 审批考试基本信息（批准/不批准） -->
	<update id="updateApproveExamineInfo" parameterClass="k060071ExamineInfo">
		UPDATE tt_ks_xinxi
			SET
			<!-- 考试状态 -->
		    EXAMINE_STATUS  = #examineStatus#,
			<!-- 不批准原因 -->
			REFUSE_REASON = #refuseReason#,
			<!-- 审批者 -->
			APPROVER_USER_ID = #approverUserId#,
			<!-- 审批时间 -->
			APPROVER_TIME = now(),
			<!-- 更新者 -->
			UPDATE_USER_ID = #updateUserId#,
			<!-- 更新时间 -->
			UPDATE_TIME = now()			
		WHERE
			EXAMINE_ID = #examineId# ;
	</update>
	<!-- 取消批准 -->
	<update id="updateCancelExamineInfo" parameterClass="k060071ExamineInfo">
		UPDATE tt_ks_xinxi
			SET
			<!-- 考试状态 -->
		    EXAMINE_VISIBLE_FLG  = 0,
			<!-- 更新者 -->
			UPDATE_USER_ID = #updateUserId#,
			<!-- 更新时间 -->
			UPDATE_TIME = now()			
		WHERE
			EXAMINE_ID = #examineId# ;
	</update>	
	<!-- 根据工龄检索员工 -->
	<select id="getUserListByYear" parameterClass="String" resultClass="k060071UserInfo">
		SELECT 	USER_ID AS userId
			FROM 
				v_tt_user
		WHERE   ADDDATE(START_DATE,INTERVAL TRIM(#year#) YEAR)>= NOW()
				
	</select>
	<!--添加审批者数据处理-->
	<insert id="insertExamEmployeeInfo" parameterClass="k060071ExamEmployeeInfo">
		INSERT INTO tt_ks_yuangong 
		(
			EXAMINE_ID,
			EMPLOYEES_ID,
			EXAMINE_JOIN_TIMES,
			EMP_EXAM_STATUS
		) 
		VALUES 
		(
			#examineId#,
			#employeesId#,
			#examineJoinTimes#,
			#empExamStatus#
		);
	</insert>
	<!-- 根据试卷选择画面返回的试卷ID检索试卷信息 -->
	<select id="getPaperListByPaperId" parameterClass="java.util.List" resultClass="k060071TestPaperInfo">
		SELECT 	t1.PAPER_ID         AS paperId,
				t1.PAPER_VERSION_NO AS paperVersionNo,
				t1.PAPER_TITLE AS paperTitle,
				<!-- 分类名称：一级分类名-二级分类名-三级分类名 -->
				CONCAT
				(CASE t1.CATEGORY1_ID 
					WHEN 0 THEN ""
					ELSE 
						(SELECT CATEGORY_NAME 
						   FROM tt_fenlei
						  WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
								CATEGORY_LEVEL = 1)
				END,
				CASE t1.CATEGORY2_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY_LEVEL = 2))
				END ,
				CASE t1.CATEGORY3_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei 
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY3_ID = t1.CATEGORY3_ID AND
									 CATEGORY_LEVEL = 3))
				END) AS categoryName,
				t1.PAPER_TOTAL_SCORE AS paperTotalScore,
				t1.PAPER_TIME AS paperTime,
				t1.UPDATE_TIME AS updateTime,
				t1.PAPER_STATUS AS paperStatus,
				<!-- 试卷状态 -->
		        (SELECT
						DIFF_NAME
					FROM com_code_mst
					WHERE 
					TYPE_ID = 'R10' AND
					DIFF_NO = t1.PAPER_STATUS) AS paperStatusName,
				<!-- 用审批者姓名暂时存储更新者姓名 -->
				(SELECT USER_CNM FROM v_tt_user WHERE USER_ID = t1.UPDATE_USER_ID)AS updateUserName
			FROM 
				tt_shijuan t1
		WHERE   <!-- 试卷状态为已批准 -->
				t1.PAPER_STATUS = '3' AND
				t1.NEW_FLG = 1 AND
				<iterate conjunction="," open="t1.PAPER_ID in (" close=")" >
					#[]#
				</iterate>
	</select>
	<!-- 时间戳检索 --> 
	<select id="getTimeStamp" parameterClass="String" resultClass="Date">
		SELECT 	t1.UPDATE_TIME AS timeStamp
			FROM 
				tt_ks_xinxi t1
		WHERE   t1.EXAMINE_ID = #examineId#
		FOR UPDATE;
	</select>
	<!-- 考试开始时间,通知提醒日期,报名截止日期检索 --> 
	<select id="getTimeForCheck" parameterClass="String" resultClass="Date">
		SELECT 	EXAMINE_START_TIME AS examineStartTimeStr
			FROM 
				tt_ks_xinxi
		WHERE   EXAMINE_ID = #examineId#
	</select>
	<!-- 删除针对对象人员 --> 
	<delete id="deleteUserList" parameterClass="String">
		DELETE FROM tt_ks_duixiang
		 WHERE EXAMINE_ID=#examineId#;
	</delete>

	<!-- 添加针对对象人员 --> 
	<insert id="insertUserList" parameterClass="java.util.Map">
		INSERT INTO tt_ks_duixiang
		   (
		    EXAMINE_ID, 
			EXAMINE_OBJECT_ID,
			ATTENTION_FLAG
		   )
		VALUES
		   (
		    #examineId#, 
			#employeesId#,
			#attentionFlag#
		   );
	</insert>
	<!-- 删除所选试卷 --> 
	<delete id="deleteSelectedPaper" parameterClass="String">
		DELETE FROM tt_ks_shijuang
		 WHERE EXAMINE_ID=#examineId#;
	</delete>

	<!-- 添加所选试卷 --> 
	<insert id="insertSelectedPaper" parameterClass="java.util.Map">
		INSERT INTO tt_ks_shijuang
		   (
		    EXAMINE_ID, 
			PAPER_ID
		   )
		VALUES
		   (
		    #examineId#, 
			#paperId#
		   );
	</insert>
	
	<!-- 删除关联考试 --> 
	<delete id="deleteSelectedExamine" parameterClass="java.util.Map">
		DELETE FROM tt_xuyaokaoshi
		 WHERE EXAMINE_ID=#examineId#
		 <isNotEmpty property="selectedExamineId">
			And NECESSARY_EXAMINE_ID = #selectedExamineId#
		 </isNotEmpty>
	</delete>
	
	<!-- 删除关联课程 --> 
	<delete id="deleteSelectedCourse" parameterClass="java.util.Map">
		DELETE FROM tt_xuyaokecheng
		 WHERE EXAMINE_ID=#examineId#
		 <isNotEmpty property="selectedCourseId">
			And NECESSARY_COURSE_ID= #selectedCourseId#
		 </isNotEmpty>
	</delete>
</sqlMap>  
