/*
 * @(#) K060071DaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */

package com.yds.tt.testing.dao.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.common.bean.UserInfo;
import com.yds.tt.testing.bean.ExamEmployeeInfo;
import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.testing.bean.TestPaperInfo;
import com.yds.tt.testing.dao.K060071Dao;
import com.yds.tt.training.bean.CourseInfo;

/**
 * @see com.yds.tt.testing.dao.K060071Dao
 */
@Repository("k060071Dao")
public class K060071DaoImpl extends AbstractBaseDao implements K060071Dao {

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamineInfo getExamineInfo(String examineId,String mode) {
		Map<String,String> searchCondition = new HashMap<String,String>();
		searchCondition.put("examineId", examineId);
		searchCondition.put("mode", mode);
		
		return (ExamineInfo) super.queryForObject("K060071Dao.getExamineInfo", searchCondition);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteExamineInfo(String examineId) {
		super.delete("K060071Dao.deleteExamineInfo", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateExamineInfo(ExamineInfo examineInfo) {
		
		return super.update("K060071Dao.updateExamineInfo",examineInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateRepairExamineInfo(ExamineInfo examineInfo) {
		
		return super.update("K060071Dao.updateRepairExamineInfo",examineInfo);
	}	
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateApplyExamineInfo(ExamineInfo examineInfo) {
		
		return super.update("K060071Dao.updateApplyExamineInfo",examineInfo);
	}	
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<UserInfo> getUserList(String examineId) {
		return (List<UserInfo>) super.queryForList("K060071Dao.getUserList", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<UserInfo> getApprovedUserList(String examineId) {
		return (List<UserInfo>) super.queryForList("K060071Dao.getApprovedUserList", examineId);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<UserInfo> getEnrollUserList(String examineId) {
		return (List<UserInfo>) super.queryForList("K060071Dao.getEnrollUserList", examineId);
	}	
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override	
	public String getExamineApprover(String examineId){
		List<UserInfo> result = (List<UserInfo>)super.queryForList("K060071Dao.getExamineApprover", examineId);
		if(result == null || result.size() == 0){
			return "";
		}else{
			return result.get(0).getUserId();
		}
		
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<TestPaperInfo> getSelectedPaperList(String examineId) {
		return (List<TestPaperInfo>) super.queryForList("K060071Dao.getSelectedPaperList", examineId);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<CourseInfo> getSelectedCourse(String examineId){
		
		return (List<CourseInfo>) super.queryForList("K060071Dao.getSelectedCourse", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<ExamineInfo> getSelectedExamine(String examineId) {
		
		return (List<ExamineInfo>) super.queryForList("K060071Dao.getSelectedExamine", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateApproveExamineInfo(ExamineInfo examineInfo){
		return super.update("K060071Dao.updateApproveExamineInfo",examineInfo);
	};
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateCancelExamineInfo(ExamineInfo examineInfo){
		return super.update("K060071Dao.updateCancelExamineInfo",examineInfo);
	};	
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateReEditExamineInfo(ExamineInfo examineInfo) {
		
		return super.update("K060071Dao.updateReEditExamineInfo",examineInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<UserInfo> getUserListByYear(String year) {
		return (List<UserInfo>) super.queryForList("K060071Dao.getUserListByYear", year);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertExamEmployeeInfo(ExamEmployeeInfo examEmployeeInfo) {
		
		super.insert("K060071Dao.insertExamEmployeeInfo", examEmployeeInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date getTimeStamp(String examineId) {
		return (Date)super.queryForObject("K060071Dao.getTimeStamp",
				examineId);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date getTimeForCheck(String examineId){
		return (Date)super.queryForObject("K060071Dao.getTimeForCheck",
				examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteUserList(String examineId) {
		return super.delete("K060071Dao.deleteUserList", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertUserList(Map<String, String> examineAttentionInfo) {
		super.insert("K060071Dao.insertUserList", examineAttentionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteSelectedPaper(String examineId) {
		return super.delete("K060071Dao.deleteSelectedPaper", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertSelectedPaper(Map<String, String> examinePaper) {
		super.insert("K060071Dao.insertSelectedPaper", examinePaper);
		
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteSelectedCourse(Map<String, String> examineCourseRelationMap) {
		return super.delete("K060071Dao.deleteSelectedCourse", examineCourseRelationMap);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteSelectedExamine(Map<String, String> examineRelationMap) {
		return super.delete("K060071Dao.deleteSelectedExamine", examineRelationMap);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteEnrollUserList(String examineId) {
		return super.delete("K060071Dao.deleteEnrollUserList", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteRemindingMessage(String examineId) {
		return super.delete("K060071Dao.deleteRemindingMessage", examineId);
	}	
}
