/*
 * @(#) K040021DaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育子系统
 */
package com.yds.tt.testing.dao.impl;

import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.tt.testing.bean.AnswerInfo;
import com.yds.tt.testing.bean.AnswerPointInfo;
import com.yds.tt.testing.bean.QuestionInfo;
import com.yds.tt.testing.dao.K040021Dao;

/**
 * @see com.yds.tt.testing.dao.K040021Dao
 */
@Repository("k040021Dao")
public class K040021DaoImpl extends AbstractBaseDao implements K040021Dao {
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object insertQuestionInfo(QuestionInfo questionInfo) {
		
		// 添加试题信息
		return super.insert("K040021Dao.insertQuestionInfo", questionInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object insertAnswerInfo(AnswerInfo answerInfo) {
		
		// 添加答案信息
		return super.insert("K040021Dao.insertAnswerInfo", answerInfo);
	}	
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object insertAnswerPointInfo(AnswerPointInfo answerPointInfo) {
		
		// 添加答案得分点信息
		return super.insert("K040021Dao.insertAnswerPointInfo", answerPointInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer getKeyWordExist(QuestionInfo questionInfo) {
		
		// 检查关键字是否存在
		return (Integer)super.queryForObject(
				"K040021Dao.getKeyWordExist", questionInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object insertKeyWord(QuestionInfo questionInfo) {
		
		// 添加答案得分点信息
		return super.insert("K040021Dao.insertKeyWord", questionInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestionInfo getQuestionInfo(QuestionInfo questionInfo) {
		
		// 检索试题信息
		return (QuestionInfo)super.queryForObject(
				"K040021Dao.getQuestionInfo", questionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<AnswerInfo> getAnswerInfoList(AnswerInfo answerInfo) {
		
		// 检索答案信息
		return (List<AnswerInfo>) super.queryForList(
				"K040021Dao.getAnswerInfoList", answerInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<AnswerPointInfo> getAnswerPointInfoList(AnswerPointInfo answerPointInfo) {
		
		// 检索答案得分点信息
		return (List<AnswerPointInfo>) super.queryForList(
				"K040021Dao.getAnswerPointInfoList", answerPointInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date getUpdateTime(QuestionInfo questionInfo) {
		
		// 获取最新修改时间
		return (Date)super.queryForObject("K040021Dao.getUpdateTime", questionInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateQuestionVersionNo(QuestionInfo questionInfo) {
		
		// 修改旧版本试题的最新标识
		return super.update("K040021Dao.updateQuestionVersionNo", questionInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateQuestionInfo(QuestionInfo questionInfo) {
		
		// 修改试题信息
		return super.update("K040021Dao.updateQuestionInfo", questionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteAnswerInfo(AnswerInfo answerInfo) {
		
		// 删除答案信息
		return super.delete("K040021Dao.deleteAnswerInfo", answerInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteAnswerPointInfo(AnswerPointInfo answerPointInfo) {
		
		// 删除答案得分点信息
		return super.delete("K040021Dao.deleteAnswerPointInfo", answerPointInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestionInfo getPaperCategory(String paperId) {
		
		// 检索试卷分类信息
		return (QuestionInfo)super.queryForObject(
				"K040021Dao.getPaperCategory", paperId);
	}
}
