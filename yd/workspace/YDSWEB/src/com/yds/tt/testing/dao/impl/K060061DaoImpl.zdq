/*
 * @(#) K060061DaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */

package com.yds.tt.testing.dao.impl;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.testing.bean.TestPaperInfo;
import com.yds.tt.testing.dao.K060061Dao;
import com.yds.tt.training.bean.CourseInfo;

/**
 * @see com.yds.tt.testing.dao.K060061Dao
 */
@Repository("k060061Dao")
public class K060061DaoImpl extends AbstractBaseDao implements K060061Dao {

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamineInfo getExamineInfo(String examineId) {

		return (ExamineInfo) super.queryForObject("K060061Dao.getExamineInfo", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<TestPaperInfo> getTestPaperInfoList(String examineId) {
		
		return (List<TestPaperInfo>) super.queryForList("K060061Dao.getTestPaperInfoList", examineId);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<ExamineInfo> getSelectedExamineList(String examineId) {
		return (List<ExamineInfo>) super.queryForList("K060061Dao.getSelectedExamineList", examineId);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<CourseInfo> getSelectedCourseList(String examineId){
		
		return (List<CourseInfo>) super.queryForList("K060061Dao.getSelectedCourseList", examineId);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<ExamineInfo> getChildExamineInfoList(String examineId) {
		return (List<ExamineInfo>) super.queryForList("K060061Dao.getChildExamineInfoList", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteExamine(String examineId) {
		super.delete("K060061Dao.deleteExamine", examineId);
		
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteMustCourseRelation(String examineId) {
		super.delete("K060061Dao.deleteMustCourseRelation", examineId);
		
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteMustExamineRelation(String examineId) {
		super.delete("K060061Dao.deleteMustExamineRelation", examineId);
		
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deletePaperRelation(String examineId) {
		super.delete("K060061Dao.deletePaperRelation", examineId);
		
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateExamineInfo(ExamineInfo examineInfo) {
		super.update("K060061Dao.updateExamineInfo", examineInfo);
		
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteSelectedPaper(Map<String, String> examinePaper) {
		return super.delete("K060061Dao.deleteSelectedPaper", examinePaper);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertSelectedPaper(Map<String, String> examinePaper) {
		super.insert("K060061Dao.insertSelectedPaper", examinePaper);
		
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteSelectedCourse(Map<String, String> neededExamine) {
		return super.delete("K060061Dao.deleteSelectedCourse", neededExamine);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int deleteSelectedExamine(Map<String, String> neededCourse) {
		return super.delete("K060061Dao.deleteSelectedExamine", neededCourse);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertSelectedCourse(Map<String, String> neededCourse) {
		super.insert("K060061Dao.insertSelectedCourse", neededCourse);
		
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamineInfo getChildExamineInfo(String examineId) {
		return (ExamineInfo) super.queryForObject("K060061Dao.getChildExamineInfo", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertSelectedExamine(Map<String, String> neededExamine) {
		super.insert("K060061Dao.insertSelectedExamine", neededExamine);
		
	}
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertExamineObject(Map<String, String> mapExamineId) {
		super.insert("K060061Dao.insertExamineObject", mapExamineId);
		
	}
	/**
	 * {@inheritDoc}
	 */
	@Override
	public String getMaxChildExamineId(String examineId) {
		return (String) super.queryForObject("K060061Dao.getMaxChildExamineId", examineId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertExamineInfo(ExamineInfo examineInfo) {
		super.insert("K060061Dao.insertExamineInfo", examineInfo);
		
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertNeedPassCourse(Map<String, String> mapExamineId) {
		super.insert("K060061Dao.insertNeedPassCourse", mapExamineId);
		
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertNeedPassExamine(Map<String, String> mapExamineId) {
		super.insert("K060061Dao.insertNeedPassExamine", mapExamineId);
		
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertPaperRelation(Map<String, String> mapExamineId) {
		super.insert("K060061Dao.insertPaperRelation", mapExamineId);
		
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date getUpdateTime(String examineId) {
		return (Date)super.queryForObject("K060061Dao.getUpdateTime", examineId);
	}	
}
