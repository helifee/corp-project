/*
 * @(#) K060121ServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */
package com.yds.tt.testing.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.bean.CheckAndLockInfo;
import com.yds.common.dao.SysCodeInfoDao;
import com.yds.tt.manager.dao.TtCommonDao;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtCommonUtil;
import com.yds.tt.manager.service.TtConstants;
import com.yds.tt.testing.bean.K060121SearchInfo;
import com.yds.tt.testing.dao.K060121Dao;
import com.yds.tt.testing.service.K060121Service;

/**
 * @see com.yds.tt.testing.service.K060121Service
 */
@Service("k060121Service")
public class K060121ServiceImpl extends AbstractBaseService implements
		K060121Service{
	
	private static final String[] MARK_TASK_STATUS_NAMES = {"不在评分", "正在评分", "正在分配"};
	private K060121Dao k060121Dao;
	private String examineId;
	private TtCommonDao ttCommonDao;
	private TtCommonService ttCommonService;
	private SysCodeInfoDao sysCodeInfoDao;
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public int checkExamineMarker(String paraExamineId) {
		this.setExamineId(paraExamineId);
		return k060121Dao.checkExamineMarker(this.getParaMap());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public K060121SearchInfo getExamineDetailInfo(String paraExamineId, boolean flg) {
		this.setExamineId(paraExamineId);
		return k060121Dao.getExamineDetailInfo(this.getParaMap(), flg);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<K060121SearchInfo> getExamineDetailInfoList(String paraExamineId,
			Integer markmissionFlg,boolean flag) {
		if (flag) {
			return editMarkTaskList(k060121Dao.getExamineDetailInfoList(
					paraExamineId, markmissionFlg));
		}
		return editMarkTaskList(k060121Dao.getExamineDetailInfoList(this
				.getParaMap(), markmissionFlg));
	}
	
	/**
	 * 编辑parameter
	 * 
	 * @return parameter Map
	 */
	private Map<String, String> getParaMap(){
		Map<String, String> paraMap = new HashMap<String, String>();
		paraMap.put("examineId", this.examineId);
		paraMap.put("sessionUserId", TtCommonUtil.getLoginUserId());
		return paraMap;
	}
	
	/**
	 * 编辑评分任务信息
	 * 
	 * @param markTaskList
	 * 			待编辑评分任务信息
	 * @return List<K060121SearchInfo>
	 * 			编辑评分任务状态后的评分任务信息
	 */
	private List<K060121SearchInfo> editMarkTaskList(
			List<K060121SearchInfo> markTaskList) {
		// 排他锁检查
		CheckAndLockInfo checkAndLockInfo = new CheckAndLockInfo();
		checkAndLockInfo.setPro1(examineId);
		List<CheckAndLockInfo> locks = ttCommonDao
				.getCheckAndLockInfo(checkAndLockInfo);

		// 评分任务状态Map
		Map<String, String> markStatusMap = new HashMap<String, String>();
		for (CheckAndLockInfo lock : locks) {
			// 单键锁，记录评分任务分配者
			if (lock.getPro2() == null || lock.getPro2().trim().isEmpty()) {
				markStatusMap.put(examineId, ttCommonService.getUserName(lock
						.getUserId()));
			} else {
				// 双键锁，记录评分者
				StringBuilder markTaskkey = new StringBuilder(); 
				markStatusMap.put(markTaskkey.append(examineId).append("_").append(
						lock.getPro2()).toString(), ttCommonService
						.getUserName(lock.getUserId()));
			}
		}
		
		// 转记评分任务状态信息
		for (K060121SearchInfo markTask : markTaskList) {
			// 正在进行评分任务分配
			if (markStatusMap.get(examineId) != null) {
				markTask.setMarkStatusName(MARK_TASK_STATUS_NAMES[TtConstants.C35.C35_3.value() - 1]);
				markTask.setPresentMarker(markStatusMap.get(examineId));
				continue;
			}
			StringBuilder markTaskkey = new StringBuilder();
			String taskKey = markTaskkey.append(examineId).append("_").append(
					markTask.getMissionId()).toString();
			// 正在评分
			if (markStatusMap.get(taskKey) != null) {
				markTask.setMarkStatusName(MARK_TASK_STATUS_NAMES[TtConstants.C35.C35_2.value() - 1]);
				markTask.setPresentMarker(markStatusMap.get(taskKey));
				continue;
			}
			// 不在评分
			markTask.setMarkStatusName(MARK_TASK_STATUS_NAMES[TtConstants.C35.C35_1.value() - 1]);
		}
		
		return markTaskList;
	}
	
	/**
	 * @return the examineId
	 */
	public String getExamineId() {
		return examineId;
	}

	/**
	 * @param examineId the examineId to set
	 */
	public void setExamineId(String examineId) {
		this.examineId = examineId;
	}

	/**
	 * @param dao the k060121Dao to set
	 */
	public void setK060121Dao(K060121Dao dao) {
		k060121Dao = dao;
	}

	/**
	 * @return the ttCommonDao
	 */
	public TtCommonDao getTtCommonDao() {
		return ttCommonDao;
	}

	/**
	 * @param ttCommonDao the ttCommonDao to set
	 */
	public void setTtCommonDao(TtCommonDao ttCommonDao) {
		this.ttCommonDao = ttCommonDao;
	}

	/**
	 * @return the ttCommonService
	 */
	public TtCommonService getTtCommonService() {
		return ttCommonService;
	}

	/**
	 * @param ttCommonService the ttCommonService to set
	 */
	public void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}

	/**
	 * @param sysCodeInfoDao the sysCodeInfoDao to set
	 */
	public void setSysCodeInfoDao(SysCodeInfoDao sysCodeInfoDao) {
		this.sysCodeInfoDao = sysCodeInfoDao;
	}

	/**
	 * @return the sysCodeInfoDao
	 */
	public SysCodeInfoDao getSysCodeInfoDao() {
		return sysCodeInfoDao;
	}
}
