/*
 * @(#) K050021ServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */
package com.yds.tt.testing.service.impl;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import net.sf.json.JSONObject;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.SessionConstants;
import com.yds.tt.manager.bean.CategoryInfo;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtCommonUtil;
import com.yds.tt.manager.service.TtConstants.C24;
import com.yds.tt.testing.bean.K050021SearchInfo;
import com.yds.tt.testing.bean.TestPaperInfo;
import com.yds.tt.testing.dao.K050021Dao;
import com.yds.tt.testing.service.K050021Service;
import com.yds.util.service.Session;

/**
 * @see com.yds.tt.testing.service.K050021Service
 */
@Service("k050021Service")
public class K050021ServiceImpl extends AbstractBaseService implements
		K050021Service {

	private TtCommonService ttCommonService;
	private K050021Dao k050021Dao;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void editUserId(K050021SearchInfo paperListInfo) {

		// 更新者ID编辑
		if (!(null == paperListInfo.getUpdateUserId() || ""
				.equals(paperListInfo.getUpdateUserId()))) {
			paperListInfo.setUpdateUserId(CommonConstants.YD
					+ paperListInfo.getUpdateUserId());
		}
		// 创建者ID编辑
		if (!(null == paperListInfo.getCreateUserId() || ""
				.equals(paperListInfo.getCreateUserId()))) {
			paperListInfo.setCreateUserId(CommonConstants.YD
					+ paperListInfo.getCreateUserId());
		}
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean isTestManager() {

		// 从session中得到考试管理员区分
		boolean testManager = (Boolean) Session
				.get(SessionConstants.TT_K050021_TESTMANAGER);

		return testManager;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void initProcess(int modeKbn) {

		// 设置画面session情报
		Session.set(SessionConstants.TT_K050021_MODE, modeKbn);
		Session.set(SessionConstants.TT_K050021_TESTMANAGER, this
				.checkTestManager(TtCommonUtil.getLoginUserId()));
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getPaperTotalCount(Integer modeKbn,
			K050021SearchInfo paperListInfo) {

		// 管理模式下，设定分类检索条件List并保存检索条件
		if (TT_K050021MODE_MANAGE.equals(modeKbn)) {
			// 判断是否是考试管理员
			if (paperListInfo.isTestManager()) {
				// 调用分类检索部品
				List<CategoryInfo> categoryInfosList = ttCommonService
						.getCategoryCondition(paperListInfo.getLoginUserId(),
								C24.C24_2.value(), paperListInfo
										.getCategory1Id(), paperListInfo
										.getCategory2Id(), paperListInfo
										.getCategory3Id());

				// 根据分类检索条件List，设定考试管理员区分
				if (null == categoryInfosList || 0 == categoryInfosList.size()) {
					paperListInfo.setTestManager(false);
				} else {
					paperListInfo.setCategoryInfos(categoryInfosList);
				}
			}
		}

		return k050021Dao.getPaperTotalCount(modeKbn, paperListInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public void addToExam(JSONObject json) {

		// 取得examineId
		String examineId = Session.get(SessionConstants.TT_K050021_EXAMINEID)
				.toString();

		// 考试下已存在试卷检索
		List<String> courseHadPapers = k050021Dao
				.getExaminePaperRelation(examineId);

		// 考试试卷关联关系设定
		Map<String, String> examinePaperRelation = new HashMap<String, String>();

		// 取得画面选中教材
		Set<String> jsonSet = json.keySet();
		Iterator<String> jsonIterator = jsonSet.iterator();
		examinePaperRelation.put("examineId", examineId);
		while (jsonIterator.hasNext()) {

			// 画面选中的试卷ID
			String paperId = jsonIterator.next().trim();

			// 添加考试下不存在的试卷
			if (!courseHadPapers.contains(paperId)) {
				examinePaperRelation.put("paperId", paperId);
				k050021Dao.insertExaminePaperRelation(examinePaperRelation);
			}

		}
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<TestPaperInfo> getPaperListInfos(Integer modeKbn,
			K050021SearchInfo paperListInfo, int offset, int perCounts) {

		return k050021Dao.getPaperListInfos(modeKbn, paperListInfo, offset,
				perCounts);
	}

	/**
	 * 取得用户是否是考试管理员区分
	 * 
	 * @return boolean 用户是否是考试管理员区分
	 */
	private boolean checkTestManager(String loginUserId) {

		return k050021Dao.checkTestManager(loginUserId);
	}

	/**
	 * @param dao
	 *            the k050021Dao to set
	 */
	public void setK050021Dao(K050021Dao dao) {
		k050021Dao = dao;
	}

	/**
	 * @param ttCommonService
	 *            the ttCommonService to set
	 */
	public void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}
}
