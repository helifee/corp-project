/*
 * @(#) K040051Dao.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育子系统
 */
package com.yds.tt.testing.dao;

import java.util.Date;
import java.util.List;

import com.yds.tt.manager.bean.KeywordInfo;
import com.yds.tt.testing.bean.AnswerInfo;
import com.yds.tt.testing.bean.AnswerPointInfo;
import com.yds.tt.testing.bean.QuestionLibrary;

/**
 * 试题预览核对删除（数据库访问）.
 * 
 * @author liyanrui
 * @version 1.00 2010/04/22
 */
public interface K040051Dao {

	/**
	 * 题库更新处理.
	 * 
	 * @param question
	 *            题库对象
	 */
	public void updateCheckPass(QuestionLibrary question);

	/**
	 * 题库删除处理.
	 * 
	 * @param questionInfo
	 *            题库对象列表
	 * @param userId
	 *            用户id
	 */
	public void deleteQuestion(List<QuestionLibrary> questionInfo,String userId);

	/**
	 * 排他处理.
	 * 
	 * @param question
	 *            题库对象
	 * @return Date 日期
	 */
	public Date getUpdateTime(QuestionLibrary question);

	/**
	 * 批量排他处理.
	 * 
	 * @param question
	 *            题库对象列表
	 * @return List<Date> 日期列表
	 */
	public List<Date> getUpdateTimeList(List<QuestionLibrary> question);

	/**
	 * 题库表登录处理.
	 * 
	 * @param question
	 *            题库对象
	 * @param mode
	 *            模式
	 */
	public void insertTikuTable(QuestionLibrary question ,Integer mode);

	/**
	 * 答案表登录处理.
	 * 
	 * @param keyParam
	 *            数据库操作语句
	 * @param answer
	 *            答案对象
	 */
	public void insertDaanTable(AnswerInfo answer);

	/**
	 * 得分点表登录处理.
	 * 
	 * @param keyParam
	 *            数据库操作语句
	 * @param answerPoint
	 *            得分点对象
	 */
	public void insertDefendianTable(AnswerPointInfo answerPoint);

	/**
	 * 关键字表登录处理.
	 * 
	 * @param keyParam
	 *            数据库操作语句
	 * @param keyWord
	 *            关键字对象
	 */
	public void insertKeyWordTable(KeywordInfo keyWord);

	/**
	 * 题库资料表登录处理.
	 * 
	 * @param keyParam
	 *            数据库操作语句
	 * @param question
	 *            关键字对象
	 */
	public void insertTikuziliaoTable(QuestionLibrary question);

	/**
	 * 题库更新处理.
	 * 
	 * @param keyParam
	 *            数据库操作语句
	 * @param question
	 *            题库对象
	 */
	public void updateTikuTable(QuestionLibrary question);

	/**
	 * 关键字表排他处理.
	 * 
	 * @param keyParam
	 *            数据库操作语句
	 * @param keyWord
	 *            关键字对象
	 */
	public KeywordInfo selWordTable(KeywordInfo keyWord);

	/**
	 * 分类名称取得.
	 * 
	 * @param category1
	 *            一级分类ID
	 * @param category2
	 *            二级分类ID
	 * @param category3
	 *            三级分类ID
	 */
	public String getCategoryName(Integer category1,Integer category2,Integer category3);
	
	/**
	 * 题库信息检索处理.
	 * 
	 * @param qb
	 *            String对象
	 * @return List<QuestionLibrary> 题库信息
	 */
	public List<QuestionLibrary> getQuestionLibraryList(
			List<String> queIdlist);

}
