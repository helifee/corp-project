/*
 * @(#) K050031DaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */

package com.yds.tt.testing.dao.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.tt.testing.bean.PaperBigQuestionInfo;
import com.yds.tt.testing.bean.PaperRandomQuestionInfo;
import com.yds.tt.testing.bean.PaperStableQuestionInfo;
import com.yds.tt.testing.bean.TestPaperInfo;
import com.yds.tt.testing.dao.K050031Dao;

/**
 * @see com.yds.tt.testing.dao.K050031Dao
 */
@Repository("k050031Dao")
public class K050031DaoImpl extends AbstractBaseDao implements K050031Dao {

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestPaperInfo getPaperInfo(TestPaperInfo tpInfo) {
		return (TestPaperInfo) super.queryForObject("K050031Dao.getPaperInfo",
				tpInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<PaperBigQuestionInfo> getPaperBigQuestionInfos(
			TestPaperInfo tpInfo) {
		return (List<PaperBigQuestionInfo>) super.queryForList(
				"K050031Dao.getPaperBigQuestionInfos", tpInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<PaperStableQuestionInfo> getPaperStableQuestionInfos(
			PaperBigQuestionInfo pbqInfo) {
		List<PaperStableQuestionInfo> resultList = (List<PaperStableQuestionInfo>) super
				.queryForList("K050031Dao.getPaperStableQuestionInfos", pbqInfo);
		if (null == resultList || 0 == resultList.size()) {
			return new ArrayList<PaperStableQuestionInfo>();
		}
		return resultList;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<PaperRandomQuestionInfo> getPaperRandomQuestionInfos(
			PaperBigQuestionInfo pbqInfo) {
		List<PaperRandomQuestionInfo> resultList = (List<PaperRandomQuestionInfo>) super
				.queryForList("K050031Dao.getPaperRandomQuestionInfos", pbqInfo);
		if (null == resultList || 0 == resultList.size()) {
			return new ArrayList<PaperRandomQuestionInfo>();
		}
		return resultList;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String getPaperApproveUserId(String paperId) {
		return (String) super.queryForObject(
				"K050031Dao.getPaperApproveUserId", paperId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updatePaperStatus(TestPaperInfo tpInfo) {
		return super.update("K050031Dao.updatePaperStatus", tpInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updatePaperNewFlg(TestPaperInfo tpInfo) {
		return super.update("K050031Dao.updatePaperNewFlg", tpInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updatePaperInfo(TestPaperInfo tpInfo) {
		return super.update("K050031Dao.updatePaperInfo", tpInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object insertPaperInfo(TestPaperInfo tpInfo) {
		return super.insert("K050031Dao.insertPaperInfo", tpInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object insertPaperBigQuestionInfo(
			PaperBigQuestionInfo paperBigQuestionInfo) {
		return super.insert("K050031Dao.insertPaperBigQuestionInfo",
				paperBigQuestionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object insertPaperStableQuestionInfo(
			PaperStableQuestionInfo paperStableQuestionInfo) {
		return super.insert("K050031Dao.insertPaperStableQuestionInfo",
				paperStableQuestionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object insertPaperRandomQuestionInfo(
			PaperRandomQuestionInfo paperRandomQuestionInfo) {
		return super.insert("K050031Dao.insertPaperRandomQuestionInfo",
				paperRandomQuestionInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date getTimeStamp(TestPaperInfo tpInfo) {
		return (Date) super.queryForObject("K050031Dao.getTimeStamp", tpInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deletePaperBigQuestionInfo(TestPaperInfo tpInfo) {
		super.delete("K050031Dao.deletePaperBigQuestionInfo", tpInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deletePaperStableQuestionInfo(TestPaperInfo tpInfo) {
		super.delete("K050031Dao.deletePaperStableQuestionInfo", tpInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deletePaperRandomQuestionInfo(TestPaperInfo tpInfo) {
		super.delete("K050031Dao.deletePaperRandomQuestionInfo", tpInfo);
	}

}
