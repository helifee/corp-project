/*
 * @(#) K060131Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试系统
 *    SubSystem: 考试子系统
 */

package com.yds.tt.testing.action;

import java.util.ArrayList;
import java.util.List;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.interceptor.annotations.InputConfig;
import com.yds.base.action.BasePagerAction;
import com.yds.common.service.SessionConstants;
import com.yds.tt.manager.bean.TtCheckResult;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtConstants;
import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.testing.bean.K060131SearchInfo;
import com.yds.tt.testing.service.K060131Service;
import com.yds.util.service.Session;

/**
 * 考试选择
 * 
 * @author liyanrui
 * @version 1.00 2010/03/30
 */
/**
 * @author yinfuyan
 * 
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("k060131Action")
public class K060131Action extends BasePagerAction {

	private static final long serialVersionUID = 4500784689475611907L;
	private K060131Service k060131Service;
	private TtCommonService ttCommonService;
	// 画面检索条件
	private K060131SearchInfo searchInfo;

	// 考试一览信息列表
	private List<ExamineInfo> searchInfoList;

	// 参数一级分类ID
	private Integer category1Id;

	// 参数二级分类ID
	private Integer category2Id;

	// 参数三级分类ID
	private Integer category3Id;

	// 父画面考试ID
	private String parenetId;

	// 选中考试ID
	private String checkBoxIdStatusJson;

	// 错误信息
	private String errorMessage;

	/**
	 * 取得考试一览初始化信息列表
	 * 
	 * @return ErrorPage
	 * @return SUCCESS
	 */
	@Override
	@InputConfig(resultName = "error")
	public String execute() throws Exception {
		// 画面启动控制检查
		this.checkAuthority();

		K060131SearchInfo searchInfo1 = new K060131SearchInfo();
		searchInfo1.setParenetId(parenetId);
		// 设置父画面考试ID
		Session.set(SessionConstants.TT_K060131_EXAMINEID, this.parenetId);
		// 画面初期检索
		super.setPagerParamter(k060131Service.getTotalCount(searchInfo1),
				"k060131GetExamineList.action");
		searchInfoList = k060131Service.getSearchList(searchInfo1, pager
				.getOffset().intValue(), pager.getPerDisplayCount().intValue());
		return SUCCESS;
	}

	/**
	 * 取得考试一览信息列表
	 * 
	 * @return ErrorPage
	 * @return SUCCESS
	 */
	@InputConfig(resultName = "error")
	public String searchList() throws Exception {

		// 画面启动控制检查
		this.checkAuthority();
		// 设置画面取得的一级分类ID、二级分类ID、三级分类ID
		if (category1Id != null) {
			searchInfo.setCategory1Id(category1Id);
			searchInfo.setCategory2Id(category2Id);
			searchInfo.setCategory3Id(category3Id);
		}

		searchInfo.setParenetId(parenetId);
		super.setPagerParamter(k060131Service.getTotalCount(searchInfo),
				"k060131GetExamineList.action");
		searchInfoList = k060131Service.getSearchList(searchInfo, pager
				.getOffset().intValue(), pager.getPerDisplayCount().intValue());

		return SUCCESS;
	}

	/**
	 * 添加需要通过考试
	 * 
	 * @return SUCCESS
	 */
	@InputConfig(resultName = "error")
	public String addExamine() throws Exception {

		// 画面启动检查
		TtCheckResult checkResult = checkAuthority();
		// 无权限
		if (!checkResult.getRetFlag()) {
			errorMessage = checkResult.getRetMessage();
			if ("GTE01".equals(checkResult.getErrLevel())) {
				return LOGIN;
			} else {
				return ERROR;
			}
		}

		// 取得画面教材选中信息
		JSONObject json = JSONObject.fromObject(checkBoxIdStatusJson);

		// 将所选试卷加入考试试卷关联表中
		k060131Service.addExamine(json);

		this.errorMessage = SUCCESS;
		return SUCCESS;
	}

	/**
	 * 校验是否存在参数parentId
	 * 
	 */
	public void validateExecute() {
		if (null == parenetId || "".equals(parenetId)) {
			setErrorMessage(propMgr.getMessage("yds.tt.error.JYE07"));
			this.addActionError("error");
		}
	}

	/**
	 * 画面启动控制检查
	 * 
	 * @param mode
	 *            画面启动模式
	 * 
	 */
	private TtCheckResult checkAuthority() {

		List<String> objectId = new ArrayList<String>();

		// 权限检查
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				TtConstants.PageId.K050021.value(), "K060131", 0, objectId);

		return checkResult;
	}

	/**
	 * @param service
	 *            the k060131Service to set
	 */
	public void setK060131Service(K060131Service service) {
		k060131Service = service;
	}

	/**
	 * @param ttCommonService
	 *            the ttCommonService to set
	 */
	public void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}

	/**
	 * @return the searchInfo
	 */
	public K060131SearchInfo getSearchInfo() {
		return searchInfo;
	}

	/**
	 * @param searchInfo
	 *            the searchInfo to set
	 */
	public void setSearchInfo(K060131SearchInfo searchInfo) {
		this.searchInfo = searchInfo;
	}

	/**
	 * @return the searchInfoList
	 */
	public List<ExamineInfo> getSearchInfoList() {
		return searchInfoList;
	}

	/**
	 * @param searchInfoList
	 *            the searchInfoList to set
	 */
	public void setSearchInfoList(List<ExamineInfo> searchInfoList) {
		this.searchInfoList = searchInfoList;
	}

	/**
	 * @return the category1Id
	 */
	public Integer getCategory1Id() {
		return category1Id;
	}

	/**
	 * @param category1Id
	 *            the category1Id to set
	 */
	public void setCategory1Id(Integer category1Id) {
		this.category1Id = category1Id;
	}

	/**
	 * @return the category2Id
	 */
	public Integer getCategory2Id() {
		return category2Id;
	}

	/**
	 * @param category2Id
	 *            the category2Id to set
	 */
	public void setCategory2Id(Integer category2Id) {
		this.category2Id = category2Id;
	}

	/**
	 * @return the category3Id
	 */
	public Integer getCategory3Id() {
		return category3Id;
	}

	/**
	 * @param category3Id
	 *            the category3Id to set
	 */
	public void setCategory3Id(Integer category3Id) {
		this.category3Id = category3Id;
	}

	/**
	 * @return the parenetId
	 */
	public String getParenetId() {
		return parenetId;
	}

	/**
	 * @param parenetId
	 *            the parenetId to set
	 */
	public void setParenetId(String parenetId) {
		this.parenetId = parenetId;
	}

	/**
	 * @return the checkBoxIdStatusJson
	 */
	public String getCheckBoxIdStatusJson() {
		return checkBoxIdStatusJson;
	}

	/**
	 * @param checkBoxIdStatusJson
	 *            the checkBoxIdStatusJson to set
	 */
	public void setCheckBoxIdStatusJson(String checkBoxIdStatusJson) {
		this.checkBoxIdStatusJson = checkBoxIdStatusJson;
	}

	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage
	 *            the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

	/**
	 * @return the serialVersionUID
	 */
	public static long getSerialVersionUID() {
		return serialVersionUID;
	}

}
