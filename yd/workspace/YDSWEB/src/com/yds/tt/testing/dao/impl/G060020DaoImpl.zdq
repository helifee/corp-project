/*
 * @(#)G060020DaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */
package com.yds.tt.testing.dao.impl;

import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.common.bean.UserInfo;
import com.yds.tt.manager.bean.MessageReminding;
import com.yds.tt.testing.bean.G060020ExamineInfo;
import com.yds.tt.testing.dao.G060020Dao;

/**
 * @see G060020Dao
 */
@Repository("g060020Dao")
public class G060020DaoImpl extends AbstractBaseDao implements G060020Dao {
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateExamVisible() {
		super.update("G060020Dao.updateExamVisible", null);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<G060020ExamineInfo> getPublishedExams() {
		return super.queryForList("G060020Dao.getPublishedExams");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean hasSameMsg(MessageReminding msg) {
		return ((Integer) super.queryForObject("G060020Dao.getSameExamMsgCount", msg))
			.intValue() != 0;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateDropExamEmployee() {
		super.update("G060020Dao.updateDropExamEmployee", null);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateToMarking() {
		super.update("G060020Dao.updateToMarking", null);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<G060020ExamineInfo> getExamsForApproval() {
		return super.queryForList("G060020Dao.getExamsForApproval");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<G060020ExamineInfo> getEntryEndExams() {
		return super.queryForList("G060020Dao.getEntryEndExams");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean hasEntrant(G060020ExamineInfo examineInfo) {
		return ((Integer) super.queryForObject("G060020Dao.getExamEntrantCount", examineInfo))
		.intValue() != 0;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateExamineStatus(G060020ExamineInfo examineInfo) {
		super.update("G060020Dao.updateExamineStatus", examineInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<G060020ExamineInfo> getEnrollTomorrowEndExams(G060020ExamineInfo examineInfo) {
		return super.queryForList("G060020Dao.getRemindExams", examineInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<UserInfo> getProjectUsers(G060020ExamineInfo examineInfo) {
		return super.queryForList("G060020Dao.getProjectUsers", examineInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<UserInfo> getWorkAgeUsers(Date limitDate) {
		return super.queryForList("G060020Dao.getWorkAgeUsers", limitDate);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<UserInfo> getPersonalUsers(G060020ExamineInfo examineInfo) {
		return super.queryForList("G060020Dao.getPersonalUsers", examineInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<G060020ExamineInfo> getTodayExams(G060020ExamineInfo examineInfo) {
		return super.queryForList("G060020Dao.getTodayExams", examineInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<UserInfo> getExamEntrantUsers(G060020ExamineInfo examineInfo) {
		return super.queryForList("G060020Dao.getExamEntrantUsers", examineInfo);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<G060020ExamineInfo> getMarkingExams() {
		return super.queryForList("G060020Dao.getMarkingExams");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<UserInfo> getExamMarker(G060020ExamineInfo examineInfo) {
		return super.queryForList("G060020Dao.getExamMarker", examineInfo);
	}
}
