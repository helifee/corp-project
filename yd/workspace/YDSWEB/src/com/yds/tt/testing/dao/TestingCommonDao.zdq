/*
 * @(#) TestingCommonDao.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */
package com.yds.tt.testing.dao;

import java.util.List;
import java.util.Map;

import com.yds.tt.testing.bean.AnswerPointInfo;
import com.yds.tt.testing.bean.ExamEmployeeInfo;
import com.yds.tt.testing.bean.K060031ExamQuestionInfo;
import com.yds.tt.testing.bean.K060031SingleQuesInfo;
import com.yds.tt.testing.bean.PaperBigQuestionInfo;
import com.yds.tt.testing.bean.PaperRandomQuestionInfo;
import com.yds.tt.testing.bean.TestEmployeeAnswerInfo;
import com.yds.tt.testing.bean.TestPaperInfo;

/**
 * 考试试卷取得检索（数据库访问）
 * 
 * @author sundefu
 * @version 1.00 2010/05/12
 */
public interface TestingCommonDao {

	/**
	 * 员工考试信息取得 (员工考试信息主Key检索)
	 * 
	 * @param examEmployeeSearchInfo
	 *            考试员工信息检索条件
	 * @return ExamEmployeeInfo 考试员工信息
	 * 
	 */
	public ExamEmployeeInfo getExamEmpInfo(
			ExamEmployeeInfo examEmployeeSearchInfo);

	/**
	 * 试卷基本信息取得 1.试卷基本信息主Key检索（para：试卷ID，试卷版本号） 2.练习试卷取得（para：试卷ID，最新标记）
	 * 
	 * @param TestPaperInfo
	 *            试卷信息
	 * @return TestPaperInfo 试卷信息
	 * 
	 */
	public TestPaperInfo getPaperBasicInfo(TestPaperInfo testPaperInfo);

	/**
	 * 试卷大题信息取得 （指定试卷大题信息一览检索）
	 * 
	 * @param PaperBigQuestionInfo
	 *            大题信息
	 * @return List<PaperBigQuestionInfo> 大题信息列表
	 * 
	 */
	public List<PaperBigQuestionInfo> getBigQuestionInfos(
			PaperBigQuestionInfo bigQuestionInfo);

	/**
	 * 取得固定试题
	 * 
	 * @param questionSearchMap
	 *            固定试题取得条件
	 * @return List<K060031ExamQuestionInfo> 小题列表
	 */
	public List<K060031ExamQuestionInfo> getStableQuestions(
			Map<String, Object> questionSearchMap);

	/**
	 * 取得固定试题答案信息
	 * 
	 * @param answerSearchMap
	 *            答案信息检索Map
	 * @return List<K060031SingleQuesInfo> 组合题单题列表
	 */
	public List<K060031SingleQuesInfo> getStableAnswerInfos(
			Map<String, Object> answerSearchMap);

	/**
	 * 取得试题随机条件
	 * 
	 * @param PaperRandomQuestionInfo
	 *            试题随机条件
	 * @return List<PaperRandomQuestionInfo> 考试试卷试题随机条件列表
	 */
	public List<PaperRandomQuestionInfo> getRandomConditions(
			PaperRandomQuestionInfo paperRandomQuestionInfo);

	/**
	 * 取得随机试题
	 * 
	 * @param PaperRandomQuestionInfo
	 *            试题随机条件
	 * @return List<K060031ExamQuestionInfo> 考试小题列表
	 */
	public List<K060031ExamQuestionInfo> getRandomQuestions(
			PaperRandomQuestionInfo paperRandomQuestionInfo);

	/**
	 * 取得随机试题答案信息
	 * 
	 * @param PaperRandomQuestionInfo
	 *            试题随机条件
	 * @return List<K060031SingleQuesInfo> 随机试题答案信息
	 */
	public List<K060031SingleQuesInfo> getRandomQuestionAnswers(
			PaperRandomQuestionInfo paperRandomQuestionInfo);

	/**
	 * 取得考试试题
	 * 
	 * @param examEmployeeInfoMap
	 *            员工考试信息Map
	 * @return List<K060031ExamQuestionInfo> 考试小题列表
	 */
	public List<K060031ExamQuestionInfo> getExamQuestions(
			Map<String, Object> examEmployeeInfoMap);

	/**
	 * 取得考试答案信息
	 * 
	 * @param examEmployeeInfoMap
	 *            员工考试信息Map
	 * @return List<K060031SingleQuesInfo> 组合题单题列表
	 */
	public List<K060031SingleQuesInfo> getTestAnswerInfo(
			Map<String, Object> examEmployeeInfoMap);

	/**
	 * 取得小题答案得分点信息.
	 * 
	 * @param k060031SingleQuesInfo
	 *            答案信息
	 * @return AnswerPointInfo 得分点信息
	 */
	public List<AnswerPointInfo> getAnswerPointInfos(
			AnswerPointInfo answerPointInfo);

	/**
	 * 取得考试员工答卷信息.
	 * 
	 * @param testEmployeeAnswerInfo
	 *            考试员工答卷信息Bean
	 * @return 考试员工答卷信息
	 */
	public TestEmployeeAnswerInfo getTestEmployeeAnswerInfo(
			TestEmployeeAnswerInfo testEmployeeAnswerInfo);

	/**
	 * 更新考试员工答卷信息(评分).
	 * 
	 * @param testEmployeeAnswerInfo
	 *            考试员工答卷信息Bean
	 */
	public void updateTestEmployeeAnswerInfo(
			TestEmployeeAnswerInfo testEmployeeAnswerInfo);

	/**
	 * 插入考试员工答卷信息(评分).
	 * 
	 * @param testEmployeeAnswerInfo
	 *            考试员工答卷信息Bean
	 */
	public void insertTestEmployeeAnswerInfo(
			TestEmployeeAnswerInfo testEmployeeAnswerInfo);

	/**
	 * 插入考试试卷关联信息
	 * 
	 * @param Map
	 *            考试试卷关联信息
	 */
	public void insertExaminePaperRelation(
			Map<String, String> examinePaperRelation);

	/**
	 * 取得关键字
	 * 
	 * @param category1Id
	 *            分类ID
	 * 
	 * @return List<String> 关键字
	 */
	public List<String> getKeywordList(Map<String, Integer> catemap);
}
