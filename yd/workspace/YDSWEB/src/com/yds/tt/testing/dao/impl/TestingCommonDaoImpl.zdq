/*
 * @(#) TestPaperCommonDaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */
package com.yds.tt.testing.dao.impl;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.tt.testing.bean.AnswerPointInfo;
import com.yds.tt.testing.bean.ExamEmployeeInfo;
import com.yds.tt.testing.bean.K060031ExamQuestionInfo;
import com.yds.tt.testing.bean.K060031SingleQuesInfo;
import com.yds.tt.testing.bean.PaperBigQuestionInfo;
import com.yds.tt.testing.bean.PaperRandomQuestionInfo;
import com.yds.tt.testing.bean.TestEmployeeAnswerInfo;
import com.yds.tt.testing.bean.TestPaperInfo;
import com.yds.tt.testing.dao.TestingCommonDao;

/**
 * @see com.yds.tt.testing.dao.TestingCommonDao
 * 
 */
@Repository("testingCommonDao")
public class TestingCommonDaoImpl extends AbstractBaseDao implements
		TestingCommonDao {

	@Override
	public ExamEmployeeInfo getExamEmpInfo(
			ExamEmployeeInfo examEmployeeSearchInfo) {

		return (ExamEmployeeInfo) super.queryForObject(
				"TestingCommonDao.getExamEmpInfo", examEmployeeSearchInfo);
	}

	@Override
	public TestPaperInfo getPaperBasicInfo(TestPaperInfo testPaperInfo) {
		return (TestPaperInfo) super.queryForObject(
				"TestingCommonDao.getPaperBasicInfo", testPaperInfo);
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<PaperBigQuestionInfo> getBigQuestionInfos(
			PaperBigQuestionInfo bigQuestionInfo) {
		return (List<PaperBigQuestionInfo>) super.queryForList(
				"TestingCommonDao.getBigQuestionInfos", bigQuestionInfo);
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<K060031ExamQuestionInfo> getStableQuestions(
			Map<String, Object> questionSearchMap) {
		return (List<K060031ExamQuestionInfo>) super.queryForList(
				"TestingCommonDao.getStableQuestions", questionSearchMap);
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<K060031SingleQuesInfo> getStableAnswerInfos(
			Map<String, Object> questionSearchMap) {
		return (List<K060031SingleQuesInfo>) super.queryForList(
				"TestingCommonDao.getStableAnswerInfos", questionSearchMap);
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<PaperRandomQuestionInfo> getRandomConditions(
			PaperRandomQuestionInfo paperRandomQuestionInfo) {
		return (List<PaperRandomQuestionInfo>) super
				.queryForList("TestingCommonDao.getRandomConditions",
						paperRandomQuestionInfo);
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<K060031ExamQuestionInfo> getRandomQuestions(
			PaperRandomQuestionInfo paperRandomQuestionInfo) {
		return (List<K060031ExamQuestionInfo>) super.queryForList(
				"TestingCommonDao.getRandomQuestions", paperRandomQuestionInfo);
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<K060031SingleQuesInfo> getRandomQuestionAnswers(
			PaperRandomQuestionInfo paperRandomQuestionInfo) {
		return (List<K060031SingleQuesInfo>) super.queryForList(
				"TestingCommonDao.getRandomQuestionAnswers",
				paperRandomQuestionInfo);
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<K060031ExamQuestionInfo> getExamQuestions(
			Map<String, Object> examEmployeeInfoMap) {
		return (List<K060031ExamQuestionInfo>) super.queryForList(
				"TestingCommonDao.getExamQuestions", examEmployeeInfoMap);
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<K060031SingleQuesInfo> getTestAnswerInfo(
			Map<String, Object> answerSearchMap) {
		return (List<K060031SingleQuesInfo>) super.queryForList(
				"TestingCommonDao.getTestAnswerInfo", answerSearchMap);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<AnswerPointInfo> getAnswerPointInfos(
			AnswerPointInfo answerPointInfo) {
		return (List<AnswerPointInfo>) super.smcTemplate.queryForList(
				"TestingCommonDao.getAnswerPointInfos", answerPointInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestEmployeeAnswerInfo getTestEmployeeAnswerInfo(
			TestEmployeeAnswerInfo testEmployeeAnswerInfo) {
		return (TestEmployeeAnswerInfo) super.smcTemplate.queryForObject(
				"TestingCommonDao.getTestEmployeeAnswerInfo",
				testEmployeeAnswerInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateTestEmployeeAnswerInfo(
			TestEmployeeAnswerInfo testEmployeeAnswerInfo) {
		super.update("TestingCommonDao.updateTestEmployeeAnswerInfo",
				testEmployeeAnswerInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertTestEmployeeAnswerInfo(
			TestEmployeeAnswerInfo testEmployeeAnswerInfo) {
		super.insert("TestingCommonDao.insertTestEmployeeAnswerInfo",
				testEmployeeAnswerInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertExaminePaperRelation(
			Map<String, String> examinePaperRelation) {
		super.insert("TestingCommonDao.insertExaminePaperRelation",
				examinePaperRelation);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<String> getKeywordList(Map<String, Integer> catemap) {
		return (List<String>) super.queryForList("K040011Dao.getKeywordList",
				catemap);
	}
}
