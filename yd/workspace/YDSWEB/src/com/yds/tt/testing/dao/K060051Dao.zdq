/*
 * @(#) K060051Dao.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育子系统
 */

package com.yds.tt.testing.dao;

import java.util.List;
import java.util.Map;

import com.yds.common.bean.SysCodeInfo;
import com.yds.tt.manager.bean.MessageReminding;
import com.yds.tt.testing.bean.ExamEmployeeInfo;
import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.testing.bean.K060051SearchInfo;
import com.yds.tt.testing.bean.TestEmployeeAnswerInfo;
import com.yds.tt.testing.bean.TestResultsInfo;

/**
 * 取得考试信息（数据库访问）
 * 
 * @author wangqingzhu
 * @version 1.00 2010/03/30
 */

public interface K060051Dao {

	/**
	 * 取得编辑考试一览信息
	 * 
	 * @param param
	 *            检索条件信息
	 * @param offset
	 *            取得日志信息
	 * @param perCounts
	 *            取得翻页信息
	 * @return List<ExamineInfo> 编辑考试一览信息
	 */
	public List<ExamineInfo> getK060051EditInfo(K060051SearchInfo param,
			int offset, int perCounts);

	/**
	 * 取得编辑考试一览信息总数(分页)
	 * 
	 * @param param
	 *            检索的信息内容
	 * @return K060051editInfo 编辑考试信息一览信息总数
	 */
	public Long getEditTC(K060051SearchInfo param);

	/**
	 * 取得实施考试一览信息
	 * 
	 * @param param
	 *            检索条件信息
	 * @param offset
	 *            取得日志信息
	 * @param perCounts
	 *            取得翻页信息
	 * @return List<ExamineInfo> 实施考试一览信息
	 */
	public List<ExamineInfo> getK060051ImplementInfo(K060051SearchInfo param,
			int offset, int perCounts);

	/**
	 * 取得实施考试一览信息总数(分页)
	 * 
	 * @param param
	 *            检索的信息内容
	 * @return K060051editInfo 实施考试信息一览信息总数
	 */
	public Long getImplementTC(K060051SearchInfo param);

	/**
	 * 取得考试状态信息
	 * 
	 * @return List<SysCodeInfo> 考试状态信息
	 */
	public List<SysCodeInfo> getExamstus();

	/**
	 * 取得考试信息
	 * 
	 * @param examineId
	 *            考试ID
	 * @return Date 考试信息
	 */
	public ExamineInfo getExamineInfoById(String examineId);

	/**
	 * 更新考试信息
	 * 
	 * @param examineId
	 *            考试ID
	 * @return
	 */
	public void updateExamineInfo(ExamineInfo examineInfo);

	/**
	 * 更新考试员工信息
	 * 
	 * @param examineId
	 *            考试ID
	 * @return
	 */
	public void updateExamineEmployee(ExamEmployeeInfo examEmployeeInfo);

	/**
	 * 取得未评分结果数量
	 * 
	 * @param examineId
	 *            考试ID
	 * @return
	 */
	public Integer getCheckGradeCT(String examineId);

	/**
	 * 取得组合题分数
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<TestEmployeeAnswerInfo> 组合题分数
	 */
	public List<TestEmployeeAnswerInfo> getAssociezInfo(String examineId);

	/**
	 * 更新考试员工答卷
	 * 
	 * @param updateEmployeeAnswer
	 *            考试员工答卷信息
	 * @return
	 */
	public void updateEmployeeAnswerInfo(
			TestEmployeeAnswerInfo updateEmployeeAnswer);

	/**
	 * 取得个人成绩
	 * 
	 * @param examineId
	 *            考试ID
	 * @return (List<TestEmployeeAnswerInfo>) 个人成绩
	 */
	public List<TestEmployeeAnswerInfo> getPersonalInfo(String examineId);

	/**
	 * 取得考试的评定等级信息
	 * 
	 * @param examineId
	 *            考试ID
	 * @return ExamineInfo 考试的评定等级信息
	 */

	public ExamineInfo getRatings(String examineId);

	/**
	 * 更新个人成绩
	 * 
	 * @param examEmployeeInfo
	 *            员工信息
	 * @return
	 */
	public void updatexamEmployee(ExamEmployeeInfo examEmployeeInfo);

	/**
	 * 取得考试员工汇总信息
	 * 
	 * @param examineId
	 *            考试ID
	 * @return CourseResultsInfo 考试员工汇总信息
	 */
	public TestResultsInfo getExamEmployeeTotal(String examineId);

	/**
	 * 取得考试成绩汇总信息
	 * 
	 * @param examineId
	 *            考试ID
	 * @return int 考试成绩汇总信息
	 */
	public Integer getCountgather(String examineId);

	/**
	 * 更新考试成绩汇总信息
	 * 
	 * @param testResultsInfo
	 *            考试汇总信息
	 * @return
	 */
	public void updateCountgather(TestResultsInfo testResultsInfo);

	/**
	 * 添加考试成绩汇总信息
	 * 
	 * @param testResultsInfo
	 *            考试汇总信息
	 * @return
	 */
	public void insertCountgather(TestResultsInfo testResultsInfo);

	/**
	 * 取得参加考试的员工ID
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<Map<String, String>> 
	 */
	public List<Map<String, String>> getEmployeeId(String examineId);
	
	/**
	 * 取得员工的提醒消息条数
	 * 
	 * @param messageInfo
	 *            提醒信息
	 * @return int 员工的提醒信息条数 
	 */
	public Integer getCountEmp(MessageReminding messageInfo);
	
	/**
	 * 更新失效时间
	 * 
	 * @param messageInfo
	 *            提醒信息
	 * @return
	 */
	public void updateLosetime(MessageReminding messageInfo);

	/**
	 * 取得评分者ID
	 * 
	 * @return List<Map<String, String>> 评分者ID
	 */
	public List<Map<String, String>> getMarkingEmpId();
	
	
}
