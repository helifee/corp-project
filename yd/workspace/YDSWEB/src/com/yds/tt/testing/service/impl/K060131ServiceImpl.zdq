/*
 * @(#) K060131ServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试系统
 *    SubSystem: 考试子系统
 */

package com.yds.tt.testing.service.impl;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import net.sf.json.JSONObject;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.service.SessionConstants;
import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.testing.bean.K060131SearchInfo;
import com.yds.tt.testing.dao.K060131Dao;
import com.yds.tt.testing.service.K060131Service;
import com.yds.util.service.Session;

/**
 * @see com.yds.tt.testing.service.K060131Service
 */
@Service("k060131Service")
public class K060131ServiceImpl extends AbstractBaseService implements
		K060131Service {

	private K060131Dao k060131Dao;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ExamineInfo> getSearchList(K060131SearchInfo searchInfo,
			int offset, int perCounts) {
		return k060131Dao.getSearchList(searchInfo, offset, perCounts);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getTotalCount(K060131SearchInfo param) {
		return k060131Dao.getTotalCount(param);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public void addExamine(JSONObject json) {

		// 取得examineId
		String examineId = Session.get(SessionConstants.TT_K060131_EXAMINEID)
				.toString();

		// 考试下已存在试卷检索
		List<String> hadExamines = k060131Dao.getHadExamines(examineId);

		// 需要通过考试设定
		Map<String, String> necessaryExamines = new HashMap<String, String>();

		// 取得画面选中考试
		Set<String> jsonSet = json.keySet();
		Iterator<String> jsonIterator = jsonSet.iterator();
		necessaryExamines.put("examineId", examineId);
		while (jsonIterator.hasNext()) {

			// 画面选中的试卷ID
			String necessaryExamineId = jsonIterator.next().trim();

			// 添加不存在的考试
			if (!hadExamines.contains(necessaryExamineId)) {
				necessaryExamines.put("necessaryExamineId", necessaryExamineId);
				k060131Dao.insertNecessaryExamines(necessaryExamines);
			}
		}
	}

	/**
	 * @param k060131Dao
	 *            the k060131Dao to set
	 */
	public void setK060131Dao(K060131Dao k060131Dao) {
		this.k060131Dao = k060131Dao;
	}
}
