/*
 * @(#) K060051DaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 教育子系统
 */

package com.yds.tt.testing.dao.impl;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.common.bean.SysCodeInfo;
import com.yds.tt.manager.bean.MessageReminding;
import com.yds.tt.testing.bean.ExamEmployeeInfo;
import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.testing.bean.K060051SearchInfo;
import com.yds.tt.testing.bean.TestEmployeeAnswerInfo;
import com.yds.tt.testing.bean.TestResultsInfo;
import com.yds.tt.testing.dao.K060051Dao;

/**
 * @see com.yds.tt.testing.dao.K060051Dao
 */
@Repository("k060051Dao")
public class K060051DaoImpl extends AbstractBaseDao implements K060051Dao {

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<ExamineInfo> getK060051EditInfo(K060051SearchInfo param,
			int offset, int perCounts) {

		return (List<ExamineInfo>) super.queryForList(
				"K060051Dao.getK060051editinfo", param, offset, perCounts);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getEditTC(K060051SearchInfo param) {
		return (Long) super.queryForObject("K060051Dao.getEditTC", param);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<ExamineInfo> getK060051ImplementInfo(K060051SearchInfo param,
			int offset, int perCounts) {

		return (List<ExamineInfo>) super.queryForList(
				"K060051Dao.getK060051implementinfo", param, offset, perCounts);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long getImplementTC(K060051SearchInfo param) {
		return (Long) super.queryForObject("K060051Dao.getImplementTC", param);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<SysCodeInfo> getExamstus() {
		return (List<SysCodeInfo>) super.queryForList("K060051Dao.getExamstus");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamineInfo getExamineInfoById(String examineId) {
		return (ExamineInfo) super.queryForObject(
				"K060051Dao.getExamineInfoById", examineId);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public void updateExamineInfo(ExamineInfo examineInfo) {
		super.update("K060051Dao.updateExamineInfo", examineInfo);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public void updateExamineEmployee(ExamEmployeeInfo examEmployeeInfo) {
		super.update("K060051Dao.updateExamineEmployee", examEmployeeInfo);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public Integer getCheckGradeCT(String examineId) {
		return (Integer) super.queryForObject("K060051Dao.getCheckGradeCT",
				examineId);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<TestEmployeeAnswerInfo> getAssociezInfo(String examineId) {
		return (List<TestEmployeeAnswerInfo>) super.queryForList(
				"K060051Dao.getAssociezInfo", examineId);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public void updateEmployeeAnswerInfo(
			TestEmployeeAnswerInfo updateEmployeeAnswer) {
		super.update("K060051Dao.updateEmployeeAnswerInfo",
				updateEmployeeAnswer);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<TestEmployeeAnswerInfo> getPersonalInfo(String examineId) {
		return (List<TestEmployeeAnswerInfo>) super.queryForList(
				"K060051Dao.getPersonalInfo", examineId);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public ExamineInfo getRatings(String examineId) {
		return (ExamineInfo) super.queryForObject("K060051Dao.getRatings",
				examineId);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public void updatexamEmployee(ExamEmployeeInfo examEmployeeInfo) {
		super.update("K060051Dao.updatexamEmployee", examEmployeeInfo);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public TestResultsInfo getExamEmployeeTotal(String examineId) {
		return (TestResultsInfo) super.queryForObject(
				"K060051Dao.getExamEmployeeTotal", examineId);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public Integer getCountgather(String examineId) {
		return (Integer) super.queryForObject("K060051Dao.getCountgather",
				examineId);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public void updateCountgather(TestResultsInfo testResultsInfo) {
		super.update("K060051Dao.updateCountgather", testResultsInfo);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public void insertCountgather(TestResultsInfo testResultsInfo) {
		super.insert("K060051Dao.insertCountgather", testResultsInfo);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<Map<String, String>> getEmployeeId(String examineId) {
		return (List<Map<String, String>>)super.queryForList("K060051Dao.getEmployeeId", examineId);
	}
	
	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public Integer getCountEmp(MessageReminding messageInfo) {
		return (Integer) super.queryForObject("K060051Dao.getCountEmp", messageInfo);
	}
	
	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@Override
	public void updateLosetime(MessageReminding messageInfo) {
		super.update("K060051Dao.updateLosetime", messageInfo);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @return
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<Map<String, String>> getMarkingEmpId() {
		return (List<Map<String, String>>)super.queryForList("K060051Dao.getMarkingEmpId");
	}
}
