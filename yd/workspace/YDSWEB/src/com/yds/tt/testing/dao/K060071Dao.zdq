/*
 * @(#) K060071Dao.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */

package com.yds.tt.testing.dao;

import java.util.Date;
import java.util.List;
import java.util.Map;

import com.yds.common.bean.UserInfo;
import com.yds.tt.testing.bean.ExamEmployeeInfo;
import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.testing.bean.TestPaperInfo;
import com.yds.tt.training.bean.CourseInfo;

/**
 * 考试详细（数据库访问）
 * 
 * @author zhangaijun
 * @version 1.00 2010/04/14
 */

public interface K060071Dao {

	/**
	 * 取得考试信息
	 * 
	 * @param examineId
	 *            考试ID
	 * @param mode
	 *            操作模式
	 * @return ExamineInfo 考试信息
	 */
	public ExamineInfo getExamineInfo(String examineId,String mode);
	
	/**
	 * 删除考试信息
	 * 
	 * @param examineId
	 *            考试ID
	 */
	public void deleteExamineInfo(String examineId);

	/**
	 * 取得针对对象人员
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<UserInfo> 针对对象人员
	 */
	public List<UserInfo> getUserList(String examineId);

	/**
	 * 取得报名已批准的人员
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<UserInfo> 已报名的人员
	 */
	public List<UserInfo> getApprovedUserList(String examineId);	

	/**
	 * 取得已报名的人员
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<UserInfo> 已报名的人员
	 */
	public List<UserInfo> getEnrollUserList(String examineId);
	
	/**
	 * 删除已报名的人员
	 * 
	 * @param examineId
	 *            考试ID
	 */	
	public int deleteEnrollUserList(String examineId);
	
	/**
	 * 删除提醒消息
	 * 
	 * @param examineId
	 *            考试ID
	 */	
	public int deleteRemindingMessage(String examineId);
	
	/**
	 * 取得考试实施者
	 * 
	 * @param examineId
	 *            考试ID
	 * @return String 考试实施者
	 */
	public String getExamineApprover(String examineId);		
	
	/**
	 * 取得考试所选试卷
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<TestPaperInfo> 考试所选试卷
	 */
	public List<TestPaperInfo> getSelectedPaperList(String examineId);
	
	/**
	 * 取得需要参加的考试
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<ExamineInfo> 需要参加的考试
	 */
	public List<ExamineInfo> getSelectedExamine(String examineId);
	
	/**
	 * 取得需要学习的课程
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<CourseInfo> 需要学习的课程
	 */
	public List<CourseInfo> getSelectedCourse(String examineId);
	
	/**
	 * 更新考试信息
	 * 
	 * @param ExamineInfo
	 *            考试信息
	 */
	public int updateExamineInfo(ExamineInfo examineInfo);
	
	/**
	 * 调整考试信息
	 * 
	 * @param ExamineInfo
	 *            考试信息
	 */
	public int updateRepairExamineInfo(ExamineInfo examineInfo);

	/**
	 * 提交审批考试信息
	 * 
	 * @param ExamineInfo
	 *            考试信息
	 */
	public int updateApplyExamineInfo(ExamineInfo examineInfo);	
	
	/**
	 * 审批考试信息（批准/不批准）
	 * 
	 * @param ExamineInfo
	 *            考试信息
	 */
	public int updateApproveExamineInfo(ExamineInfo examineInfo);
	
	/**
	 * 取消批准
	 * 
	 * @param ExamineInfo
	 *            考试信息
	 */
	public int updateCancelExamineInfo(ExamineInfo examineInfo);		
	
	/**
	 * 再编辑考试信息
	 * 
	 * @param ExamineInfo
	 *            考试信息
	 */
	public int updateReEditExamineInfo(ExamineInfo examineInfo);
	
	/**
	 * 根据工龄取得员工ID
	 * 
	 * @param year
	 *            工龄
	 * @return List<UserInfo> 满足工龄员工ID
	 */
	public List<UserInfo> getUserListByYear(String year);
	
	/**
	 * 插入考试员工信息表
	 * 
	 * @param ExamEmployeeInfo
	 *            考试员工信息
	 */	
	public void insertExamEmployeeInfo(ExamEmployeeInfo examEmployeeInfo);
	
	/**
	 * 时间戳取得
	 * 
	 * @param examineId
	 *            考试ID
	 * @return Date 当前数据的更新时间
	 */
	public Date getTimeStamp(String examineId);	
	
	/**
	 * 考试开始时间的检索
	 * 
	 * @param examineId
	 *            考试ID
	 * @return Date 考试开始时间
	 */
	public Date getTimeForCheck(String examineId);
	
	/**
	 * 插入针对对象人员
	 * 
	 * @param examineAttentionInfo
	 *            考试个人关联信息
	 */	
	public void insertUserList(Map<String,String> examineAttentionInfo);

	/**
	 * 删除针对对象人员
	 * 
	 * @param examineId
	 *            考试ID
	 */	
	public int deleteUserList(String examineId);
	
	/**
	 * 插入所选试卷
	 * 
	 * @param examinePaper
	 *            考试关联试卷
	 */	
	public void insertSelectedPaper(Map<String,String> examinePaper);

	/**
	 * 删除所选试卷
	 * 
	 * @param examineId
	 *            考试ID
	 */	
	public int deleteSelectedPaper(String examineId);

	/**
	 * 删除所选考试
	 * 
	 * @param examineId
	 *            考试ID
	 */	
	public int deleteSelectedExamine(Map<String, String> examineRelationMap);

	/**
	 * 删除所选课程
	 * 
	 * @param examineId
	 *            考试ID
	 */	
	public int deleteSelectedCourse(Map<String, String> examineCourseRelationMap);
}
