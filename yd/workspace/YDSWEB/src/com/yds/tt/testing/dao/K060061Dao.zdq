/*
 * @(#) K060061Dao.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试培训系统
 *    SubSystem: 考试子系统
 */

package com.yds.tt.testing.dao;

import java.util.Date;
import java.util.List;
import java.util.Map;
import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.testing.bean.TestPaperInfo;
import com.yds.tt.training.bean.CourseInfo;

/**
 * 考试总体设定及生成（数据库访问）
 * 
 * @author qiliqiang
 * @version 1.00 2010/04/28
 */

public interface K060061Dao {

	/**
	 * 取得考试信息
	 * 
	 * @param examineId
	 *            考试ID
	 * @return ExamineInfo 考试信息
	 */
	public ExamineInfo getExamineInfo(String examineId);

	/**
	 * 取得所选试卷信息
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<TestPaperInfo> 所选试卷信息
	 */
	public List<TestPaperInfo> getTestPaperInfoList(String examineId);

	/**
	 * 取得需要参加的考试
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<ExamineInfo> 需要参加的考试
	 */
	public List<ExamineInfo> getSelectedExamineList(String examineId);
	
	/**
	 * 取得需要学习的课程
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<CourseInfo> 需要学习的课程
	 */
	public List<CourseInfo> getSelectedCourseList(String examineId);

	/**
	 * 取得子考试一览
	 * 
	 * @param examineId
	 *            考试ID
	 * @return List<ExamineInfo> 子考试一览
	 */
	public List<ExamineInfo> getChildExamineInfoList(String examineId);
	
	/**
	 * 删除考试试卷关联表
	 * 
	 * @param examineId
	 *                考试ID
	 * @return 
	 */
	public void deletePaperRelation(String examineId);
	
	/**
	 * 删除需要通过考试关联表
	 * 
	 * @param examineId
	 *                考试ID
	 * @return 
	 */
	public void deleteMustExamineRelation(String examineId);
	
	/**
	 * 删除需要学习课程关联表
	 * 
	 * @param examineId
	 *                考试ID
	 * @return 
	 */
	public void deleteMustCourseRelation(String examineId);
	
	/**
	 * 删除考试信息
	 * 
	 * @param examineId
	 *                考试ID
	 * @return 
	 */
	public void deleteExamine(String examineId);
	
	/**
	 * 更新考试信息
	 * 
	 * @param examineInfo
	 *                考试信息
	 * @return 
	 */
	public void updateExamineInfo(ExamineInfo examineInfo);

	/**
	 * 插入所选试卷
	 * 
	 * @param examinePaper
	 *            考试关联试卷
	 */	
	public void insertSelectedPaper(Map<String,String> examinePaper);

	/**
	 * 删除所选试卷
	 * 
	 * @param examinePaper
	 *            考试试卷关联信息
	 */	
	public int deleteSelectedPaper(Map<String, String> examinePaper);
	
	/**
	 * 插入所选考试
	 * 
	 * @param examineNeedExamine
	 *            需要参加的考试
	 */	
	public void insertSelectedExamine(Map<String,String> neededExamine);

	/**
	 * 删除所选考试
	 * 
	 * @param examineNeedExamine
	 *            需要参加的考试
	 */	
	public int deleteSelectedExamine(Map<String,String> neededExamine);
	
	/**
	 * 插入所选课程
	 * 
	 * @param examineNeedExamine
	 *            需要学习的课程
	 */	
	public void insertSelectedCourse(Map<String,String> neededCourse);

	/**
	 * 删除所选课程
	 * 
	 * @param examineNeedExamine
	 *            需要学习的课程
	 */	
	public int deleteSelectedCourse(Map<String,String> neededCourse);
	
	/**
	 * 取得子考试基本信息
	 * 
	 * @param examineId
	 *            考试ID
	 * @return ExamineInfo 子考试基本信息
	 */
	public ExamineInfo getChildExamineInfo(String examineId);
	
	/**
	 * 取得最大的子考试ID
	 * 
	 * @param examineId
	 *            考试ID
	 */	
	public String getMaxChildExamineId(String examineId);
	
	/**
	 * 插入子考试信息
	 * 
	 * @param examineInfo
	 *            考试信息
	 */	
	public void insertExamineInfo(ExamineInfo examineInfo);
	
	/**
	 * 插入试卷关联信息
	 * 
	 * @param mapExamineId
	 *            关联考试ID
	 */	
	public void insertPaperRelation(Map<String,String> mapExamineId);
	
	/**
	 * 插入需要通过考试关联信息
	 * 
	 * @param mapExamineId
	 *            关联考试ID
	 */	
	public void insertNeedPassExamine(Map<String,String> mapExamineId);
	
	/**
	 * 插入需要通过课程关联信息
	 * 
	 * @param mapExamineId
	 *            关联考试ID
	 */	
	public void insertNeedPassCourse(Map<String,String> mapExamineId);
	
	/**
	 * 插入考试针对对象
	 * 
	 * @param mapExamineId
	 *            关联考试ID
	 */	
	public void insertExamineObject(Map<String,String> mapExamineId);
		
	/**
	 * 取得更新时间
	 * 
	 * @param examineId 考试ID
	 * @return Date 更新时间
	 */
	public Date getUpdateTime(String examineId);
}
