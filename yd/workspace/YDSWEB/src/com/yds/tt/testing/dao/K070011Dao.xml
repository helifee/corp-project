<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="K070011Dao">
	<typeAlias alias="examineInfo" type="com.yds.tt.testing.bean.ExamineInfo"/>
	<typeAlias alias="k070011Info" type="com.yds.tt.testing.bean.K070011Info"/>
	<typeAlias alias="testResultsInfo" type="com.yds.tt.testing.bean.TestResultsInfo"/>
	
	<!-- 共通取分类名称 -->
	<sql id="categoryNameSql">
		
		 <!-- 分类名称：一级分类名-二级分类名-三级分类名 -->
		  CONCAT
				(CASE  T1.CATEGORY1_ID 
					WHEN 0 THEN ""
					ELSE 
						(SELECT CATEGORY_NAME 
						   FROM TT_FENLEI 
						  WHERE CATEGORY1_ID =  T1.CATEGORY1_ID AND 
								CATEGORY_LEVEL = 1)
				END,
				CASE  T1.CATEGORY2_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM TT_FENLEI
							   WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
									 CATEGORY2_ID =  T1.CATEGORY2_ID AND
									 CATEGORY_LEVEL = 2))
				END ,
				CASE  T1.CATEGORY3_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM TT_FENLEI 
							   WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
									 CATEGORY2_ID = T1.CATEGORY2_ID AND
									 CATEGORY3_ID = T1.CATEGORY3_ID AND
									 CATEGORY_LEVEL = 3))
				END) AS categoryName
	</sql>
	<!-- 考试信息一览取得 -->
	<select id="getExamineInfoList" parameterClass="k070011Info" resultClass="examineInfo">
		SELECT 
		  T1.EXAMINE_ID AS examineId,
		  T1.EXAMINE_NAME AS examineName,
		  <include refid="categoryNameSql"/>
		FROM 
		  TT_KS_XINXI T1
		WHERE
		  0 = 0
		  <isNotEmpty property="examineId" prepend="AND">
				T1.EXAMINE_ID = CONCAT(#examineId#, '00')
		  </isNotEmpty> 
		  <isNotEmpty prepend="AND" property="examineName">
				T1.EXAMINE_NAME LIKE CONCAT('%' ,CONCAT(#examineName#, '%'))
		  </isNotEmpty>
		  <isNotEmpty  property="category1Id">
				<isNotEqual property="category1Id" compareValue="0" prepend="AND">
					T1.CATEGORY1_ID = #category1Id#
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="category2Id">
				<isNotEqual property="category2Id" compareValue="0" prepend="AND" >
					T1.CATEGORY2_ID = #category2Id#
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty  property="category3Id">
				<isNotEqual property="category3Id" compareValue="0" prepend="AND">
					T1.CATEGORY3_ID = #category3Id#
				</isNotEqual>
			</isNotEmpty> AND 
		   T1.PARENT_EXAMINE_ID IS NULL AND						   
		   T1.EXAMINE_FLG !=3
		   ORDER BY T1.EXAMINE_ID ASC 
	</select>
	
	<!-- 考试一览信息总数取得 -->
	<select id="getTotalCount" parameterClass="k070011Info" resultClass="Long">
		SELECT COUNT(*) 
		FROM 
		  TT_KS_XINXI T1
		WHERE
		  0 = 0
		  <isNotEmpty property="examineId" prepend="AND">
				T1.EXAMINE_ID = CONCAT(#examineId#, '00')
		  </isNotEmpty> 
		  <isNotEmpty prepend="AND" property="examineName">
				T1.EXAMINE_NAME LIKE CONCAT('%' ,CONCAT(#examineName#, '%'))
		  </isNotEmpty>
		  <isNotEmpty  property="category1Id">
				<isNotEqual property="category1Id" compareValue="0" prepend="AND">
				T1.CATEGORY1_ID = #category1Id#
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="category2Id">
				<isNotEqual property="category2Id" compareValue="0" prepend="AND" >
				T1.CATEGORY2_ID = #category2Id#
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty  property="category3Id">
				<isNotEqual property="category3Id" compareValue="0" prepend="AND">
				T1.CATEGORY3_ID = #category3Id#
				</isNotEqual>
			</isNotEmpty> AND
		   T1.PARENT_EXAMINE_ID IS NULL AND					   
		   T1.EXAMINE_FLG !=3
	</select>
	
	<!-- 考试汇总信息取得 -->
	<select id="getExamineAllInfo" parameterClass="String" resultClass="examineInfo">
		SELECT 
		   T1.EXAMINE_TIME AS examineTime,
		   T1.EXAMINE_COMMENT AS examineComment,
		   T1.RESULTLEVEL_NUM AS resultlevelNum,
		   T1.PASSEXAMINE_LEVEL AS passexamineLevel,
		   T1.RESULTLEVEL1_SCORE AS resultlevel1Score,
		   T1.RESULTLEVEL1_NAME AS resultlevel1Name,
		   T1.RESULTLEVEL2_SCORE AS resultlevel2Score,
		   T1.RESULTLEVEL2_NAME AS resultlevel2Name,		   
		   T1.RESULTLEVEL3_SCORE AS resultlevel3Score,
		   T1.RESULTLEVEL3_NAME AS resultlevel3Name,		
		   T1.RESULTLEVEL4_SCORE AS resultlevel4Score,
		   T1.RESULTLEVEL4_NAME AS resultlevel4Name,		
		   T1.RESULTLEVEL5_SCORE AS resultlevel5Score,
		   T1.RESULTLEVEL5_NAME AS resultlevel5Name		
		FROM 
		   TT_KS_XINXI T1
		WHERE
		   T1.EXAMINE_ID = #examineId#	
	</select>

	<!-- 具体考试信息取得 -->
	<select id="getExamineSpecificList" parameterClass="String" resultClass="testResultsInfo">
		SELECT 
		  T1.EXAMINE_ID AS examineId,
		  T1.EXAMINE_NAME AS examineName,
		  T1.EXAMINE_START_TIME AS examineStartDate,
		  T2.PASSEXAMINE_NUM AS passExamineNum,
		  T2.NOT_PASSEXAMINE_NUM AS notPassExamineNum,
		  T2.JOINEXAMINE_NUM AS joinExamineNum,
		  T2.AVERAGE_SCORE AS averageScore
		FROM 
		  TT_KS_XINXI T1, TT_KS_CHENGJIHUIZONG T2
		WHERE
		  T1.PARENT_EXAMINE_ID = #examineId# AND
		  T1.EXAMINE_FLG != 3 AND
		  T1.EXAMINE_STATUS = 11 AND
		  T2.EXAMINE_ID = T1.EXAMINE_ID
	</select>
	
	<!-- 人数取得 -->
	<select id="getExamineCountNum" parameterClass="k070011Info" resultClass="Integer">
		SELECT 
		  COUNT(*)
		FROM 
		  V_TT_KS_YOUXIAOCHENGJI T1
		WHERE 
		  T1.F_EXAMINE_ID = #examineId# AND
		  <![CDATA[ (T1.SCORE >= #temporaryVariable2# AND
		  T1.SCORE < #temporaryVariable1#
		  )]]>	  
	</select>
	
	<!-- 员工查询考试信息一览取得 --> 
	<select id="getEmpExamineInfoList" parameterClass="String" resultClass="examineInfo">
		SELECT
		  T1.F_EXAMINE_ID AS parentExamineId,
		  T1.F_EXAMINE_NAME AS examineName,
		  
		  <!-- 分类名称：一级分类名-二级分类名-三级分类名 -->
		  <include refid="categoryNameSql"/>
		FROM 
		  V_TT_KS_YOUXIAOCHENGJI T1
		  
		WHERE 
		  T1.EMPLOYEES_ID = #employeesId#
		  ORDER BY T1.F_EXAMINE_ID ASC
	</select>
	
	<!-- 考试一览信息总数取得 -->
	<select id="getEmpTotalCount" parameterClass="String" resultClass="Long">
		SELECT COUNT(*) 
		FROM 
		  V_TT_KS_YOUXIAOCHENGJI T1
		WHERE 
		  T1.EMPLOYEES_ID = #employeesId#
	</select>
	
	<!-- 有效考试成绩一览信息取得 -->
	<select id="getEmpEffectiveInfoList" parameterClass="examineInfo" resultClass="testResultsInfo">
		SELECT
		  T1.EXAMINE_ID AS examineId,
		  T1.EXAMINE_NAME AS examineName,
			
		  <!-- 分类名称：一级分类名-二级分类名-三级分类名 -->
		  <include refid="categoryNameSql"/>,
		  T1.EXAMINE_START_TIME AS examineStartDate,
		  T1.JOINEXAMINE_NUM AS joinExamineNum,
		  T1.PASSEXAMINE_NUM AS passExamineNum,
		  T1.AVERAGE_SCORE AS averageScore,
		  T1.PASSEXAMINE_FLG AS passExamineFlag,
		  T1.RESULTLEVEL_NAME AS resultlevelName,
		  T1.SCORE AS totalScore,
		  T1.EXAMINE_JOIN_TIMES AS examineJoinTimes					
		FROM 
		  V_TT_KS_YOUXIAOCHENGJI T1
		WHERE
		  T1.F_EXAMINE_ID = #parentExamineId# AND 
		  T1.EMPLOYEES_ID = #applyUserId#
		  ORDER BY T1.EXAMINE_ID ASC
	</select>
	
	<!-- 全部考试成绩一览信息取得 -->
	<select id="getEmpAllInfoList" parameterClass="examineInfo" resultClass="testResultsInfo">
		SELECT
		  T1.EXAMINE_ID AS examineId,
		  T1.EXAMINE_NAME AS examineName,
			
		  <!-- 分类名称：一级分类名-二级分类名-三级分类名 -->
		  <include refid="categoryNameSql"/>,
		  T1.EXAMINE_START_TIME AS examineStartDate,
		  T1.JOINEXAMINE_NUM AS joinExamineNum,
		  T1.PASSEXAMINE_NUM AS passExamineNum,
		  T1.AVERAGE_SCORE AS averageScore,
		  T1.PASSEXAMINE_FLG AS passExamineFlag,
		  T1.RESULTLEVEL_NAME AS resultlevelName,
		  T1.SCORE AS totalScore,
		  T1.EXAMINE_JOIN_TIMES AS examineJoinTimes					
		FROM 
		  V_TT_KS_CHENGJI T1
		WHERE
		  T1.F_EXAMINE_ID = #parentExamineId# AND 
		  T1.EMPLOYEES_ID = #applyUserId#
		  ORDER BY T1.EXAMINE_ID ASC
	</select>
	
	<!-- 考试名称和档次信息取得 -->
	<select id="getExamineNameLevelInfo" parameterClass="java.util.Map" resultClass="examineInfo">
		SELECT 
		   T1.EXAMINE_NAME AS examineName,
		   T1.RESULTLEVEL_NUM AS resultlevelNum,
		   T1.RESULTLEVEL1_ID AS resultlevel1Id,
		   T1.RESULTLEVEL1_NAME AS resultlevel1Name,
		   T1.RESULTLEVEL2_ID AS resultlevel2Id,
		   T1.RESULTLEVEL2_NAME AS resultlevel2Name,		   
		   T1.RESULTLEVEL3_ID AS resultlevel3Id,
		   T1.RESULTLEVEL3_NAME AS resultlevel3Name,		
		   T1.RESULTLEVEL4_ID AS resultlevel4Id,
		   T1.RESULTLEVEL4_NAME AS resultlevel4Name,		
		   T1.RESULTLEVEL5_ID AS resultlevel5Id,
		   T1.RESULTLEVEL5_NAME AS resultlevel5Name		
		FROM 
		   TT_KS_XINXI T1
		WHERE 
		  0 = 0 
		  <isNotEmpty property="examineId" prepend="AND">
				T1.EXAMINE_ID = CONCAT(#examineId#, '00')
		  </isNotEmpty>  AND
		  T1.PARENT_EXAMINE_ID IS NULL
	</select>

	<!-- 共通检索考试一览项目 -->
	<sql id="getObjSql">
		SELECT
		  T1.EMPLOYEES_ID AS employeesId,
		  (SELECT USER_CNM FROM V_TT_USER WHERE USER_ID = T1.EMPLOYEES_ID) AS employeesName,
		  T1.EXAMINE_ID AS examineId,
		  T1.F_EXAMINE_ID AS parentExamineId,
		  T1.F_EXAMINE_NAME AS examineName,
			
		  <!-- 分类名称：一级分类名-二级分类名-三级分类名 -->
		  <include refid="categoryNameSql"/>,
		  T1.EXAMINE_START_TIME AS examineStartDate,
		  T1.JOINEXAMINE_NUM AS joinExamineNum,
		  T1.PASSEXAMINE_NUM AS passExamineNum,		  
		  T1.AVERAGE_SCORE AS averageScore,
		  T1.PASSEXAMINE_FLG AS passExamineFlag,
		  T1.RESULTLEVEL_NAME AS resultlevelName,
		  T1.SCORE AS totalScore,
		  T1.EXAMINE_JOIN_TIMES AS examineJoinTimes					
		FROM 
		  V_TT_KS_YOUXIAOCHENGJI T1		
	</sql>	

	<!-- 定位检索条件是OR时WHERE条件 -->
	<sql id="whereSqlOr">
		<iterate  conjunction="or"  open="WHERE" property="searchPostionList">
			<isNotEmpty property="searchPostionList" open="( 0=0 " close=")">
				  <isNotEmpty property="searchPostionList[].examineId" prepend="AND">
						T1.F_EXAMINE_ID = CONCAT(#searchPostionList[].examineId#, '00') 
				  </isNotEmpty>
				  <isNotEmpty property="searchPostionList[].resultlevelId">
					<isNotEqual property="searchPostionList[].resultlevelId" compareValue="0" prepend="AND">
						<![CDATA[ T1.RESULTLEVEL_ID <= #searchPostionList[].resultlevelId# ]]>
					</isNotEqual>
				  </isNotEmpty>	
				  <isNotEmpty  property="searchPostionList[].category1Id">
						<isNotEqual property="searchPostionList[].category1Id" compareValue="0" prepend="AND">
							T1.F_CATEGORY1_ID = #searchPostionList[].category1Id#
						</isNotEqual>
				  </isNotEmpty>
				  <isNotEmpty property="searchPostionList[].category2Id">
					   <isNotEqual property="searchPostionList[].category2Id" compareValue="0" prepend="AND" >
							T1.F_CATEGORY2_ID = #searchPostionList[].category2Id#
						</isNotEqual>
				  </isNotEmpty>
				  <isNotEmpty  property="searchPostionList[].category3Id">
						<isNotEqual property="searchPostionList[].category3Id" compareValue="0" prepend="AND">
							T1.F_CATEGORY3_ID = #searchPostionList[].category3Id#
						</isNotEqual>
				  </isNotEmpty>	
			 </isNotEmpty>	 
		</iterate>
		ORDER BY T1.EMPLOYEES_ID ASC,T1.EXAMINE_ID ASC		
	</sql>	
	
	<!-- 定位查询条件是OR时考试信息取得 -->	
	<select id="getPostionExamineList" parameterClass="java.util.Map" resultClass="testResultsInfo">
		<include refid="getObjSql"/>
		<include refid="whereSqlOr"/>
	</select>
	
	<!-- 定位检索条件是OR时考试一览信息总数取得 -->
	<select id="getPosTotalCountOr" parameterClass="java.util.Map" resultClass="Long">
		SELECT COUNT(*) 
		FROM 
		  V_TT_KS_YOUXIAOCHENGJI T1
		  <include refid="whereSqlOr"/>
	</select>
	
	<!-- 定位检索条件是AND时WHERE条件 -->
    <sql id="whereSqlAnd">
		WHERE 0=0 
		  <iterate  conjunction="or" property="searchPostionList" open="AND (" close=")">
			<isNotEmpty property="searchPostionList" open="(0=0" close=")">
				  <isNotEmpty property="searchPostionList[].examineId" prepend="AND">
					  T1.F_EXAMINE_ID = CONCAT(#searchPostionList[].examineId#, '00')
				  </isNotEmpty>
				  <isNotEmpty property="searchPostionList[].resultlevelId">
					<isNotEqual property="searchPostionList[].resultlevelId" compareValue="0" prepend="AND">
						<![CDATA[ T1.RESULTLEVEL_ID <= #searchPostionList[].resultlevelId# ]]>
					</isNotEqual>
				  </isNotEmpty>	
				  <isNotEmpty  property="searchPostionList[].category1Id">
						<isNotEqual property="searchPostionList[].category1Id" compareValue="0" prepend="AND">
							T1.F_CATEGORY1_ID = #searchPostionList[].category1Id#
						</isNotEqual>
				  </isNotEmpty>
				  <isNotEmpty property="searchPostionList[].category2Id">
					   <isNotEqual property="searchPostionList[].category2Id" compareValue="0" prepend="AND" >
							T1.F_CATEGORY2_ID = #searchPostionList[].category2Id#
						</isNotEqual>
				  </isNotEmpty>
				  <isNotEmpty  property="searchPostionList[].category3Id">
						<isNotEqual property="searchPostionList[].category3Id" compareValue="0" prepend="AND">
							T1.F_CATEGORY3_ID = #searchPostionList[].category3Id#
						</isNotEqual>
				  </isNotEmpty>	
			 </isNotEmpty>	 
		  </iterate> AND T1.EMPLOYEES_ID IN(
			SELECT EMPLOYEES_ID
			FROM V_TT_KS_YOUXIAOCHENGJI
			WHERE
			0=0 
		    <isNotEmpty property="searchPostionList[2].examineId" prepend="AND">
				F_EXAMINE_ID = CONCAT(#searchPostionList[2].examineId#, '00')
		    </isNotEmpty>
		    <isNotEmpty property="searchPostionList[2].resultlevelId">
			  <isNotEqual property="searchPostionList[2].resultlevelId" compareValue="0" prepend="AND">
				  <![CDATA[ RESULTLEVEL_ID <= #searchPostionList[2].resultlevelId# ]]>
			  </isNotEqual>
		    </isNotEmpty>	
		    <isNotEmpty  property="searchPostionList[2].category1Id">
				<isNotEqual property="searchPostionList[2].category1Id" compareValue="0" prepend="AND">
					F_CATEGORY1_ID = #searchPostionList[2].category1Id#
				</isNotEqual>
		    </isNotEmpty>
		    <isNotEmpty property="searchPostionList[2].category2Id">
			   <isNotEqual property="searchPostionList[2].category2Id" compareValue="0" prepend="AND" >
					F_CATEGORY2_ID = #searchPostionList[2].category2Id#
				</isNotEqual>
		    </isNotEmpty>
		    <isNotEmpty  property="searchPostionList[2].category3Id">
				<isNotEqual property="searchPostionList[2].category3Id" compareValue="0" prepend="AND">
					F_CATEGORY3_ID = #searchPostionList[2].category3Id#
				</isNotEqual>
		    </isNotEmpty>	 AND EMPLOYEES_ID IN(
			SELECT EMPLOYEES_ID
			FROM V_TT_KS_YOUXIAOCHENGJI
			WHERE
			  0=0 
			    <isNotEmpty property="searchPostionList[1].examineId" prepend="AND">
					F_EXAMINE_ID = CONCAT(#searchPostionList[1].examineId#, '00')
			    </isNotEmpty>
			    <isNotEmpty property="searchPostionList[1].resultlevelId">
				  <isNotEqual property="searchPostionList[1].resultlevelId" compareValue="0" prepend="AND">
					<![CDATA[ RESULTLEVEL_ID <= #searchPostionList[1].resultlevelId# ]]>
				  </isNotEqual>
			    </isNotEmpty>	
			    <isNotEmpty  property="searchPostionList[1].category1Id">
					<isNotEqual property="searchPostionList[1].category1Id" compareValue="0" prepend="AND">
						F_CATEGORY1_ID = #searchPostionList[1].category1Id#
					</isNotEqual>
			    </isNotEmpty>
			    <isNotEmpty property="searchPostionList[1].category2Id">
				    <isNotEqual property="searchPostionList[1].category2Id" compareValue="0" prepend="AND" >
						F_CATEGORY2_ID = #searchPostionList[1].category2Id#
					</isNotEqual>
			    </isNotEmpty>
			    <isNotEmpty  property="searchPostionList[1].category3Id">
					<isNotEqual property="searchPostionList[1].category3Id" compareValue="0" prepend="AND">
						F_CATEGORY3_ID = #searchPostionList[1].category3Id#
					</isNotEqual>				
			    </isNotEmpty> AND EMPLOYEES_ID IN (
				SELECT EMPLOYEES_ID
				FROM V_TT_KS_YOUXIAOCHENGJI
				WHERE 0=0
				  <isNotEmpty property="searchPostionList[0].examineId" prepend="AND">
					  F_EXAMINE_ID = CONCAT(#searchPostionList[0].examineId#, '00')
				  </isNotEmpty>
				  <isNotEmpty property="searchPostionList[0].resultlevelId">
					<isNotEqual property="searchPostionList[0].resultlevelId" compareValue="0" prepend="AND">
						<![CDATA[ RESULTLEVEL_ID <= #searchPostionList[0].resultlevelId# ]]>
					</isNotEqual>
				  </isNotEmpty>	
				  <isNotEmpty  property="searchPostionList[0].category1Id">
						<isNotEqual property="searchPostionList[0].category1Id" compareValue="0" prepend="AND">
							F_CATEGORY1_ID = #searchPostionList[0].category1Id#
						</isNotEqual>
				  </isNotEmpty>
				  <isNotEmpty property="searchPostionList[0].category2Id">
					   <isNotEqual property="searchPostionList[0].category2Id" compareValue="0" prepend="AND" >
							F_CATEGORY2_ID = #searchPostionList[0].category2Id#
						</isNotEqual>
				  </isNotEmpty>
				  <isNotEmpty  property="searchPostionList[0].category3Id">
						<isNotEqual property="searchPostionList[0].category3Id" compareValue="0" prepend="AND">
							F_CATEGORY3_ID = #searchPostionList[0].category3Id#
						</isNotEqual>				
				  </isNotEmpty>				  
				)
			 )
		  )
		ORDER BY T1.EMPLOYEES_ID ASC,T1.EXAMINE_ID ASC		
    </sql>
	
	<!-- 定位查询条件是AND时考试信息取得 -->	
	<select id="getPostionAndExamineList" parameterClass="java.util.Map" resultClass="testResultsInfo">
		<include refid="getObjSql"/>
		<include refid="whereSqlAnd"/>
	</select>
	
	<!-- 定位检索条件是AND时考试一览信息总数取得 -->
	<select id="getPosTotalCountAnd" parameterClass="java.util.Map" resultClass="Long">
		SELECT COUNT(*) 
		FROM 
		  V_TT_KS_YOUXIAOCHENGJI T1
		  <include refid="whereSqlAnd"/>
	</select>
</sqlMap> 