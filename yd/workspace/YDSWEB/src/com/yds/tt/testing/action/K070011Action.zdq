/*
 * @(#) K070011Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 教育考试系统
 *    SubSystem: 考试子系统
 */
package com.yds.tt.testing.action;

import java.util.List;

import net.sf.json.JSONArray;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.yds.base.action.BasePagerAction;
import com.yds.common.bean.SysCodeInfo;
import com.yds.tt.manager.bean.TtCheckResult;
import com.yds.tt.manager.service.TtCommonService;
import com.yds.tt.manager.service.TtConstants;
import com.yds.tt.testing.bean.K070011SearchPostionInfo;
import com.yds.tt.testing.bean.TestResultsInfo;
import com.yds.tt.testing.bean.ExamineInfo;
import com.yds.tt.testing.bean.K070011Info;
import com.yds.tt.testing.service.K070011Service;

/**
 * 考试选择信息一览
 * 
 * @author chenjunshuai
 * @version 1.00 2010/04/12
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("k070011Action")
public class K070011Action extends BasePagerAction {

	private static final long serialVersionUID = 5913156540209562247L;
	private TtCommonService ttCommonService;
	private static final int PAGE_LIST_SIZE = 5;// 每页显示的件数
	private String examineId;// 考试ID
	private String examineName;// 考试名称
	private String categoryName;// 分类名	
	private K070011Service k070011Service;
	private K070011Info k070011Info;
	private List<ExamineInfo> examineInfoList;// 考试信息一览
	private ExamineInfo examineAllInfo;
	private TestResultsInfo testResultsInfo;
	private List<TestResultsInfo> examineSpecificList;// 具体考试信息一览
	private Integer examineCountNum;// 参加人数
	private List<ExamineInfo> empExamineList;// 员工查询考试一览
	private String employeesId;// 员工ID
	private String parentExamineId;// 父考试ID
	private String examineRadioValue;// 员工查询单选按钮的值
	private List<SysCodeInfo> levellist;// 档次信息一览
	private String strLevelObj;
	private List<K070011SearchPostionInfo> searchPostionList;// 检索条件
	private String postionRadioValue;// 定位检索单选按钮的数值
	private K070011SearchPostionInfo k070011SearchPostionInfo;
	private String errorMessage;// 错误信息

	/**
	 * 取得考试一览初始化信息列表
	 * 
	 * @return ErrorPage
	 * @return SUCCESS
	 */
	@Override
	public String execute() throws Exception {
		
		// 权限检查
		if (!checkAuthority()) {
			return ERROR;
		}
		super.setPagerParamter(this.k070011Service.getTotalCount(examineId, k070011Info), 
								"k070011GetExamineList.action", PAGE_LIST_SIZE);
		
		// 考试信息一览取的
		setExamineInfoList(this.k070011Service.getExamineInfoList(examineId, k070011Info,
							pager.getOffset().intValue(), pager.getPerDisplayCount().intValue()));

		return SUCCESS;

	}
	
	/**
	 * 考试成绩信息取得
	 * 
	 * @return SUCCESS
	 */
	public String obtainExamineResults()  throws Exception {
		
		// 权限检查
		if (!checkAuthority()) {
			return ERROR;
		}
		
		// 汇总信息一览
		this.examineAllInfo = this.k070011Service.getExamineAllInfo(examineId);
		
		// 参加考试人数
		this.examineCountNum = this.k070011Service.getExamineCountNum(examineId);
		if (this.examineCountNum > 0) {
			this.testResultsInfo = this.k070011Service.getTestResultsInfo(examineId);
		}
		
		// 具体考试信息一览
		this.examineSpecificList = this.k070011Service.getExamineSpecificList(examineId);

		return SUCCESS;
	}
	
	/**
	 * 取得员工查询考试一览初始化信息列表
	 * 
	 * @return ErrorPage
	 * @return SUCCESS
	 */
	public String obtainEmpExamineInfoList() throws Exception {
		
		// 权限检查
		if (!checkAuthority()) {
			return ERROR;
		}
		super.setPagerParamter(this.k070011Service.getEmpTotalCount(employeesId), 
								"k070011GetEmpExamineInfo.action", PAGE_LIST_SIZE);
		
		// 考试信息一览取的
		this.setEmpExamineList(this.k070011Service.getEmpExamineInfoList(employeesId, 
								pager.getOffset().intValue(), pager.getPerDisplayCount().intValue()));

		return SUCCESS;
	}
	
	/**
	 * 取得员工查询具体考试一览信息列表
	 * 
	 * @return ErrorPage
	 * @return SUCCESS
	 */	
	public String obtainEmpSpecificInfoList() throws Exception {
		
		// 权限检查
		if (!checkAuthority()) {
			return ERROR;
		}
		
		// 取得具体考试信息
		this.examineSpecificList = this.k070011Service.getEmpSpecificInfoList(employeesId, 
									parentExamineId, examineRadioValue);
		
		return SUCCESS;
	}
	
	/**
	 * 取得考试名称和档次信息
	 * 
	 * @return ErrorPage
	 * @return SUCCESS
	 */		
	public String obtainExamineNameLevelInfo() throws Exception {
		
		// 权限检查
		if (!checkAuthority()) {
			return ERROR;
		}
		
		// 档次信息取的
		levellist = this.k070011Service.getExamineNameLevelInfo(k070011SearchPostionInfo);
		
		// 档次信息 不为空时
		if (levellist.size() > 0) {
			
			// 档次信息转化为JSON
			JSONArray jsobj = JSONArray.fromObject(levellist);
			setStrLevelObj(jsobj.toString());
		} else {
			setStrLevelObj("");
		}
		return SUCCESS;
	}

	/**
	 * 定位检索取得考试信息一览列表
	 * 
	 * @return ErrorPage
	 * @return SUCCESS
	 */	
	public String obtainPostionExamineList() throws Exception {
		
		// 权限检查
		if (!checkAuthority()) {
			return ERROR;
		}
		super.setPagerParamter(this.k070011Service.getPosTotalCount(postionRadioValue, searchPostionList), 
								"k070011GetPostionExamineList.action", PAGE_LIST_SIZE);
		
		// 考试信息一览取的
		this.setExamineSpecificList(this.k070011Service.getPostionExamineList(postionRadioValue, 
				searchPostionList, pager.getOffset().intValue(), pager.getPerDisplayCount().intValue()));		

		return SUCCESS;
	}
	
	/**
	 * 权限检查.
	 * 
	 * @return true/false
	 */
	private boolean checkAuthority(){
		
		// 权限检查
		TtCheckResult checkResult = ttCommonService.checkStartupAuthority(
				TtConstants.PageId.K070011.value(), "K070011", null, null);
		if (!checkResult.getRetFlag()) {
			setErrorMessage(checkResult.getRetMessage());
			return false;
		}
		return true;
	}
	
	/**
	 * @return the examineId
	 */
	public String getExamineId() {
		return examineId; 
	}

	/**
	 * @param examineId the examineId to set
	 */
	public void setExamineId(String examineId) {
		this.examineId = examineId;
	}

	/**
	 * @return the examineName
	 */
	public String getExamineName() {
		return examineName;
	}

	/**
	 * @param examineName the examineName to set
	 */
	public void setExamineName(String examineName) {
		this.examineName = examineName;
	}

	/**
	 * @return the categoryName
	 */
	public String getCategoryName() {
		return categoryName;
	}

	/**
	 * @param categoryName the categoryName to set
	 */
	public void setCategoryName(String categoryName) {
		this.categoryName = categoryName;
	}

	/**
	 * @return the k070011Service
	 */
	public K070011Service getK070011Service() {
		return k070011Service;
	}

	/**
	 * @param service the k070011Service to set
	 */
	public void setK070011Service(K070011Service service) {
		k070011Service = service;
	}

	/**
	 * @return the k070011Info
	 */
	public K070011Info getK070011Info() {
		return k070011Info;
	}

	/**
	 * @param info the k070011Info to set
	 */
	public void setK070011Info(K070011Info info) {
		k070011Info = info;
	}

	/**
	 * @return the examineIdInfoList
	 */
	public List<ExamineInfo> getExamineInfoList() {
		return examineInfoList;
	}

	/**
	 * @param examineInfoList the examineInfoList to set
	 */
	public void setExamineInfoList(List<ExamineInfo> examineInfoList) {
		this.examineInfoList = examineInfoList;
	}

	/**
	 * @return the examineSpecificList
	 */
	public List<TestResultsInfo> getExamineSpecificList() {
		return examineSpecificList;
	}

	/**
	 * @param examineSpecificList the examineSpecificList to set
	 */
	public void setExamineSpecificList(List<TestResultsInfo> examineSpecificList) {
		this.examineSpecificList = examineSpecificList;
	}

	/**
	 * @return the examineAllInfo
	 */
	public ExamineInfo getExamineAllInfo() {
		return examineAllInfo;
	}

	/**
	 * @param examineAllInfo the examineAllInfo to set
	 */
	public void setExamineAllInfo(ExamineInfo examineAllInfo) {
		this.examineAllInfo = examineAllInfo;
	}

	/**
	 * @return the testResultsInfo
	 */
	public TestResultsInfo getTestResultsInfo() {
		return testResultsInfo;
	}

	/**
	 * @param testResultsInfo the testResultsInfo to set
	 */
	public void setTestResultsInfo(TestResultsInfo testResultsInfo) {
		this.testResultsInfo = testResultsInfo;
	}

	/**
	 * @return the examineCountNum
	 */
	public Integer getExamineCountNum() {
		return examineCountNum;
	}

	/**
	 * @param examineCountNum the examineCountNum to set
	 */
	public void setExamineCountNum(Integer examineCountNum) {
		this.examineCountNum = examineCountNum;
	}

	/**
	 * @return the empExamineList
	 */
	public List<ExamineInfo> getEmpExamineList() {
		return empExamineList;
	}

	/**
	 * @param empExamineList the empExamineList to set
	 */
	public void setEmpExamineList(List<ExamineInfo> empExamineList) {
		this.empExamineList = empExamineList;
	}

	/**
	 * @return the employeesId
	 */
	public String getEmployeesId() {
		return employeesId;
	}

	/**
	 * @param employeesId the employeesId to set
	 */
	public void setEmployeesId(String employeesId) {
		this.employeesId = employeesId;
	}

	/**
	 * @return the parentExamineId
	 */
	public String getParentExamineId() {
		return parentExamineId;
	}

	/**
	 * @param parentExamineId the parentExamineId to set
	 */
	public void setParentExamineId(String parentExamineId) {
		this.parentExamineId = parentExamineId;
	}

	/**
	 * @return the examineRadioValue
	 */
	public String getExamineRadioValue() {
		return examineRadioValue;
	}

	/**
	 * @param examineRadioValue the examineRadioValue to set
	 */
	public void setExamineRadioValue(String examineRadioValue) {
		this.examineRadioValue = examineRadioValue;
	}

	/**
	 * @return the levellist
	 */
	public List<SysCodeInfo> getLevellist() {
		return levellist;
	}

	/**
	 * @param levellist the levellist to set
	 */
	public void setLevellist(List<SysCodeInfo> levellist) {
		this.levellist = levellist;
	}

	/**
	 * @return the strLevelObj
	 */
	public String getStrLevelObj() {
		return strLevelObj;
	}

	/**
	 * @param strLevelObj the strLevelObj to set
	 */
	public void setStrLevelObj(String strLevelObj) {
		this.strLevelObj = strLevelObj;
	}

	/**
	 * @return the searchPostionList
	 */
	public List<K070011SearchPostionInfo> getSearchPostionList() {
		return searchPostionList;
	}

	/**
	 * @param searchPostionList the searchPostionList to set
	 */
	public void setSearchPostionList(
			List<K070011SearchPostionInfo> searchPostionList) {
		this.searchPostionList = searchPostionList;
	}

	/**
	 * @return the postionRadioValue
	 */
	public String getPostionRadioValue() {
		return postionRadioValue;
	}

	/**
	 * @param postionRadioValue the postionRadioValue to set
	 */
	public void setPostionRadioValue(String postionRadioValue) {
		this.postionRadioValue = postionRadioValue;
	}

	/**
	 * @return the k070011SearchPostionInfo
	 */
	public K070011SearchPostionInfo getK070011SearchPostionInfo() {
		return k070011SearchPostionInfo;
	}

	/**
	 * @param searchPostionInfo the k070011SearchPostionInfo to set
	 */
	public void setK070011SearchPostionInfo(
			K070011SearchPostionInfo searchPostionInfo) {
		k070011SearchPostionInfo = searchPostionInfo;
	}

	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

	/**
	 * @return the ttCommonService
	 */
	public final TtCommonService getTtCommonService() {
		return ttCommonService;
	}

	/**
	 * @param ttCommonService the ttCommonService to set
	 */
	public final void setTtCommonService(TtCommonService ttCommonService) {
		this.ttCommonService = ttCommonService;
	}
	
}
