/*
 * @(#) BookinsertServiceImpl.java
 * Copyright (c) 2010-2011 大连远东计算机系统有限公司
 * All rights reserved.
 * Project: 远东公司内部网
 * SubSystem: 图书管理系统
 */
package com.yds.library.service.impl;

import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.SocketAddress;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.library.bean.Bookinfo;
import com.yds.library.bean.Booklendinguserbklimit;
import com.yds.library.bean.Finishheadinfo;
import com.yds.library.bean.Finishinfo;
import com.yds.library.dao.BookuserinsertDao;
import com.yds.library.service.BookinsertService;
import com.yds.library.util.CommonConstants;
import com.yds.util.service.Session;

/**
 * 书籍的登陆信息操作
 * 
 * @author 李艺
 * @version 1.00 2011/12/06
 */

@Service("bookinsertService")
public class BookinsertServiceImpl extends AbstractBaseService implements
		BookinsertService {
	private BookuserinsertDao bookuserinsertDao;

	/**
	 * 图书用户登陆处理
	 * 
	 * @param bookinfouserinsert
	 *            ,booknum
	 * @return
	 */
	public void insertuserbookInfo(Bookinfo bookinfouserinsert, Integer booknum) {
		// 出版日期的空设置
		if ("".equals(bookinfouserinsert.getBookpublishdate())) {
			bookinfouserinsert.setBookpublishdate("0000-00-00");
		}
		// 出版日期的设置例如：2008-05
		if (bookinfouserinsert.getBookpublishdate().length() == 7) {
			bookinfouserinsert.setBookpublishdate(bookinfouserinsert
					.getBookpublishdate()
					+ "-01");
		}
		if (booknum == 1) {
			this.bookuserinsertDao.insertuserbook(bookinfouserinsert);
		}
		if (booknum > 1) {
			for (int i = 0; i < booknum; i++) {
				this.bookuserinsertDao.insertuserbook(bookinfouserinsert);
			}

		}

	}

	/**
	 * 成功页面头部的取得
	 * 
	 * @param
	 * @return Booklending_userbklimit 员工借书上限
	 */
	public Finishheadinfo getbooklimitsuccess(String userid, String username,
			Integer booknum, List<Finishinfo> finishinfo) {
		// 取得用户session
		// UserInfo loginuser = (UserInfo)
		// Session.get(SessionConstants.USERINFO);
		// userid = loginuser.getUserId();
		// Finishheadinfo finishheadinfo
		// =bookuserinsertDao.getbooklimitsuccess(userid);
		// // 若没有书籍默认设为0
		// if(finishheadinfo==null)
		// {
		// finishheadinfo= new Finishheadinfo();
		// finishheadinfo.setBooknumlimit(0);
		// finishheadinfo.setBooklendednum(0);
		// finishheadinfo.setBookreadnum(0);
		// }
		Finishheadinfo finishheadinfo = new Finishheadinfo();
		finishheadinfo.setUsername(username);
		Integer num = 0;
		num = num + booknum;
		if (finishinfo != null) {
			for (int i = 0; i < finishinfo.size(); i++) {
				num = num + finishinfo.get(i).getBooknum();
			}
		}
		finishheadinfo.setBooklendednum(num);

		Booklendinguserbklimit userlimit = (Booklendinguserbklimit) Session
				.get(com.yds.library.util.SessionConstants.USERLIMIT);

		Integer booknumlimit = userlimit.getBooknumlimit();

		Integer booklendednum = userlimit.getBooklendednum();

		Integer bookreadnum = userlimit.getBookreadnum();

		finishheadinfo.setBooknumlimit(booknumlimit);

		finishheadinfo.setBooklendednum(booklendednum);

		finishheadinfo.setBookreadnum(bookreadnum);
		// 成功提示信息
		String successInfo = propMgr.getMessage("yds.ydb.info.0004", num
				.toString(), finishheadinfo.getBooknumlimit(), finishheadinfo
				.getBookreadnum());

		finishheadinfo.setNeirong(successInfo);

		return finishheadinfo;

	}

	/**
	 * 成功页面明细的取得
	 * 
	 * @param bookinfo finishinfo finishinfohm
	 *            
	 * @return finishinfo
	 */

	public List<Finishinfo> getbookmxinfo(Bookinfo bookinfo,List<Finishinfo> finishinfo, List<Finishinfo> finishinfohm,Integer booknumaction) {
		

		if (finishinfohm != null) {
			for (int i = 0; i < finishinfohm.size(); i++) {
				for (int j = 0; j < finishinfohm.get(i).getBooknum(); j++) {
					Finishinfo b11 = new Finishinfo();
					b11.setIsbn(finishinfohm.get(i).getIsbn());
					b11.setBookname(finishinfohm.get(i).getBookname());
					finishinfo.add(b11);
				}
			}
		}

		return finishinfo;
	}

	/**
	 * 图片 para 检索条件bookinfo
	 * 
	 * @return 成功页面
	 * @throws  
	 */
	public Bookinfo getpic(Bookinfo bookinfo) throws Exception {
		FileOutputStream fos = null;
		BufferedInputStream bis = null;
		HttpURLConnection httpUrl = null;
		URL url = null;
		int BUFFER_SIZE = 1024;

		byte[] buf = new byte[BUFFER_SIZE];
		int size = 0;

		url = new URL(bookinfo.getBookpicadd());
		SocketAddress addr = new InetSocketAddress("192.168.80.168", 8080);
		Proxy typeProxy = new Proxy(Proxy.Type.HTTP, addr);
		httpUrl = (HttpURLConnection) url.openConnection(typeProxy);
		httpUrl.connect();
		bis = new BufferedInputStream(httpUrl.getInputStream());
			try {
			// 取系统时间
			Date nowTime = new Date(System.currentTimeMillis());
			// 设定格式
			SimpleDateFormat sDateFormat = new SimpleDateFormat(
					"yyyyMMddHHmmss");
			String pathName1 = sDateFormat.format(nowTime);

			String libraryfilepath = propMgr
					.getParameter(CommonConstants.DataSourceEnum.LIBRARY_IMAGE
							.value())
					+ "/" + pathName1 + ".png";
			fos = new FileOutputStream(libraryfilepath);
			bookinfo.setBookpicadd(libraryfilepath);
			while ((size = bis.read(buf)) != -1) {
				fos.write(buf, 0, size);
			}
			fos.flush();
		} catch (IOException e) {
			bookinfo.setBookpicadd("");

		} catch (ClassCastException e) {
			bookinfo.setBookpicadd("");
		} finally {
			try {
				fos.close();
				bis.close();
				httpUrl.disconnect();
			} catch (IOException e) {
				bookinfo.setBookpicadd("");
				bis.close();
			} catch (NullPointerException e) {
				bookinfo.setBookpicadd("");
			}
		}
		return bookinfo;
	}

	/**
	 * @return the bookuserinsertDao
	 */
	public BookuserinsertDao getBookuserinsertDao() {
		return bookuserinsertDao;
	}

	/**
	 * @param bookuserinsertDao
	 *            the bookuserinsertDao to set
	 */
	public void setBookuserinsertDao(BookuserinsertDao bookuserinsertDao) {
		this.bookuserinsertDao = bookuserinsertDao;
	}

}
