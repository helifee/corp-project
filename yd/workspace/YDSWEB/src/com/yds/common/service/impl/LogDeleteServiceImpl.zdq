/*
 * @(#)LogDeleteServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */
package com.yds.common.service.impl;


import java.util.Calendar;
import java.util.Date;
import org.springframework.stereotype.Service;

import com.yds.batch.service.BatchJobRun;
import com.yds.common.bean.LogInfo;
import com.yds.common.dao.LogDeleteDao;
import com.yds.common.service.LogDeleteService;
import com.yds.common.service.CommonConstants.LoglevelEnum;


/**
 * log日志删除
 * 
 * @author pengchuan
 * @version 1.00 2010/09/20
 */
@Service("logDeleteService")
public class LogDeleteServiceImpl implements LogDeleteService,BatchJobRun {
	
	private LogDeleteDao logDeleteDao;
	
	@Override
	public void logMstDelete() {

		String logLevel = "";
		Date time;

		/** 每年删除一次 */
		logLevel = LoglevelEnum.Every_Year_Delete.toString();
		LogInfo logInfoYear = new LogInfo();
		logInfoYear.setLogLevel(logLevel);
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(new Date());
		calendar.add(Calendar.YEAR, -1);
		time = calendar.getTime();
		logInfoYear.setOpTime(time);
		logDeleteDao.logMstDelete(logInfoYear);

		/** 每季度删除 */
		logLevel = LoglevelEnum.Every_Season_Delete.toString();
		LogInfo logInfoSeason = new LogInfo();
		logInfoSeason.setLogLevel(logLevel);
		Calendar calendar2 = Calendar.getInstance();
		calendar2.setTime(new Date());
		calendar2.add(Calendar.MONTH, -3);
		time = calendar2.getTime();
		logInfoSeason.setOpTime(time);
		logDeleteDao.logMstDelete(logInfoSeason);

		/** 每个月删除 */
		logLevel = LoglevelEnum.Every_Month_Delete.toString();
		LogInfo logInfoMonth = new LogInfo();
		logInfoMonth.setLogLevel(logLevel);
		calendar.setTime(new Date());
		calendar.add(Calendar.MONTH, -1);
		time = calendar.getTime();
		logInfoMonth.setOpTime(time);
		logDeleteDao.logMstDelete(logInfoMonth);

		/** 每个星期删除 */
		logLevel = LoglevelEnum.Every_Week_Delete.toString();
		LogInfo logIngoWeek = new LogInfo();
		logIngoWeek.setLogLevel(logLevel);
		calendar.setTime(new Date());
		calendar.add(Calendar.WEEK_OF_YEAR, -1);
		time = calendar.getTime();
		logIngoWeek.setOpTime(time);
		logDeleteDao.logMstDelete(logIngoWeek);

		/* 每天删除 */
		logLevel = LoglevelEnum.Every_Day_Delete.toString();
		LogInfo logInfoDay = new LogInfo();
		logInfoDay.setLogLevel(logLevel);
		calendar.setTime(new Date());
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		time = calendar.getTime();
		logInfoDay.setOpTime(time);
		logDeleteDao.logMstDelete(logInfoDay);

	}
	
	@Override
	public void jobRun() throws Throwable {
		logMstDelete();
		
	}

	/**
	 * @param logDeleteDao the logDeleteDao to set
	 */
	public void setLogDeleteDao(LogDeleteDao logDeleteDao) {
		this.logDeleteDao = logDeleteDao;
	}



}
