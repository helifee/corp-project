/*
 * @(#)CommonConstants.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */

package com.yds.common.service;

/**
 * 共通定数一览
 * 
 * @author zhaodong
 * @version 1.00 2009/09/22
 */
public interface CommonConstants {

	// ============ 全局共通 Start ============
	/** 社内用户（员工）ID前缀. */
	public static final String YD = "YD"; // 用户名头
	
	/** 最大系统时间. */
	public static final String MAX_DATE_TIME = "9999-12-31 23:59:59"; 
	
	/** 模拟浏览器的USER_AGENT标识 */
	public static final String USER_AGENT = "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)";
	
	/** 读取文件的缓冲时间(秒) */
	public static final int BUFFER_TIME = 60 * 10 ;
	// ============ 全局共通 End ============

	// ============ 共通 Start ============
	/** 域地址. */
	public static final String DOMAIN_NAME = "yds.yd";
	// ============ 共通 End ============

	// ============ 路径、页面名称 Start ============
	/** 登录页面. */
	public static final String PAGE_LOGIN = "login.jsp";
	/** 登录后主页面. */
	public static final String PAGE_MAIN = "main.jsp";
	/** 登录后索引页面. */
	public static final String PAGE_INDEX = "index.jsp";
	/** action结尾名称. */
	public static final String ACTIONNAME = "action";
	/** RSS配置文件名. */
	public static final String RSSFILENAME = "rss.xml";

	// ============ 路径、页面名称 End ============

	// ============ 分页共通 Start ============
	/** 每页显示的记录数设置. */
	public static final int PER_COUNT = 20;
	public static final int PER_PAGE_COUNT = 14;
	/** 分页导航条显示的页码数量设置. */
	public static final int PAGER_INDEX_COUNT = 10;
	// ============ 分页共通 End ============

	/** 职位信息 FLAG 修改. */
	public static final String STATE_FLAG_UPDATE = "1";
	/** 登录页面 FLAG 新建. */
	public static final String STATE_FLAG_NEW = "2";
	/** reloadFlg. */
	public static final String RELOAD_FLG = "reloadFlg";
	// ============ 系统日志检索 Start ============	
	public static final String LOG_LEVEL = "loglevel";
	public static final String AUTHORITY = "authority";
	public static final String SUB_SYS1 = "COM";
	/** 机能. */
	public static final String PERMGROUP = "permgroup";
	/** 全部. */
	public static final String ALL = "全部";
	// ============ 系统日志检索 End ============	

	/**
	 * 数据库源Enum .
	 */
	public static enum DataSourceEnum {
		
		
		/** 新数据库源. */
		NEW("ds0"),
		/** 旧数据库源. */
		OLD("ds1"),
		/** 座席，图书等数据源. */
		SEAT("ds2");

		private String value;

		DataSourceEnum(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
	}
	
	/**
	 * 日志记录等级Enum .
	 */
	public static enum LoglevelEnum {
		/** 不删除. */
		Not_Delete("0"),
		/** 每年删除一次. */
		Every_Year_Delete("1"),
		/** 每季度删除一次. */
		Every_Season_Delete("2"),
		/** 每月删除一次. */
		Every_Month_Delete("3"),
		/** 每周删除一次. */
		Every_Week_Delete("4"),
		/** 每天删除一次. */
		Every_Day_Delete("5"),
		/** 系统启动时删除一次. */
		Every_Start_Delete("6"),

		/** 预留1. */
		Every_Reserve1("7"),
		/** 预留2. */
		Every_Reserve2("8"),
		/** 预留3. */
		Every_Reserve3("9");

		private String value;

		LoglevelEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
	}
	
	/**
	 * 子系统ID Enum .
	 */
	public static enum SubIdEnum {
		/** 共通子系统. */
		Sub_COMMON("CM00"),
		/** SQL日志. */
		Sub_SQL("SQL"),
		/** TT子系统. */
		Sub_TT00("TT00"),
		/** 员工子系统. */
		Sub_EMP("EMP"),
		/** 会议室子系统. */
		Sub_MEET("MEET"),
		/** 权限子系统. */
		Sub_PERM("PERM"),
		/** 社内团购子系统. */
		Sub_GPS("GPS");
		private String value;

		SubIdEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
	}
	
	/**
	 * 字符串类型Enum .
	 */
	public static enum StrTypeEnum {
		
		
		/** 数字类型. */
		Num_Type(0),
		/** 字母类型. */
		Letter_Type(1),
		/** 汉字类型. */
		Chinese_Type(2),
		/** 其他类型. */
		Other_Type(3),

		/** 预留1. */
		Reserve1_Type(4),
		/** 预留2. */
		Reserve2_Type(5),
		/** 预留3. */
		Reserve3_Type(6);

		private Integer value;

		StrTypeEnum(Integer value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return String.valueOf(this.value);
		}
	}

	/**
	 * SQL检索条件关系运算符类型Enum .
	 */
	public static enum SQLConditionEnum {
		/** 等于. */
		Equal("0"),
		/** 不等于. */
		Not_Equal("1"),
		/** 大于. */
		Greater_Than("2"),
		/** 大于等于. */
		Greater_Equal_Than("3"),
		/** 小于. */
		Less_Than("4"),
		/** 小于等于. */
		Less_Equal_Than("5"),
		/** LIKE. */
		Like("6"),
		/** BETWEEN. */
		Between("7"),
		/** IN. */
		In("8");

		private String value;

		SQLConditionEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
	}

    /**
     * 文件路径Enum.
     */
    public static enum FILE_PATH {
        /** 员工照片. */
        EMP_IMAGE("yds.com.path.emp.image"),
        
        /** 临时目录. */
        TEMP_PATH("yds.com.path.temp"),
        
        /** 团购商品图片. */
        GPS_IMAGE("yds.com.path.gps.image");

        private String value;

        FILE_PATH(String value) { 
            this.value = value;
        }

        public static String getEnumName(){
            return "FILE_PATH";
        }

        @Override
        public String toString() {
            return this.value;
        }

        public String value() {
            return this.value;
        }
    }
    
    /**
     * action重载方式
     */
    public static enum ActionReloadFlg {
    	
    	/** 不进行重载. */
    	Reload_None("0"),
    	/** 对条件重载. */
    	Reload_Condition("1"),
    	/** 对录入数据重载. */
    	Reload_Data("2"),
    	/** 对条件和录入都重载. */
    	Reload_Both("3"),
    	/** 销毁重载数据. */
    	Destroy("4");

        private String value;

        ActionReloadFlg(String value) { 
            this.value = value;
        }

        @Override
        public String toString() {
            return this.value;
        }

        public String value() {
            return this.value;
        }
    }
    
 // ============ 页面排他 Start ============	
	public static final String PAGElOCK_SUCCESS = "success";
	public static final String PAGElOCK_ERROR = "error";
	public static final String PAGElOCK_USERNAME = "userName";
	public static final String PAGElOCK_INIT_CHECK = "initCheck";
	public static final String PAGElOCK_UPDATE_CHECK = "updateCheck";
	public static final String PAGElOCK_AUTO_CHECK = "autoCheck";
	public static final String PAGElOCK_RECHECK = "reCheck";
	public static final String PAGElOCK_KICK_CHECK = "kickCheck";
	
	
	// ============ 页面排他 End ============	 
    /**
	 * 返回flg
	 */
	  public static enum BackFlg {
	    	
	    	/** 没有返回. */
		    Back_No("0"),
	    	/** 有返回. */
	    	Back_Yes("1");
	
	        private String value;
	
		    BackFlg(String value) { 
	            this.value = value;
	        }
	
	        @Override
	        public String toString() {
	            return this.value;
	        }
	
	        public String value() {
	            return this.value;
	        }
	    }
	/**
	 * 组织区分.
	 */
	public static enum OrgFlgEnum {
		/** 公司. */
		COMP("comp"),
		/** 部门. */
		DEPT("dept"),
		/** 部门. */
		DEPT_PRJT("dept_prjt"),
		/** 项目组. */
		PRJT("prjt");

		private String value;

		OrgFlgEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
		
		public String value() {
            return this.value;
        }
	}
	
	/**
     * 组修改权限flg.
     */
    public static enum PERMIT_FLG {
        /** 无权限. */
        NO(0),
        /** 有权限. */
        YES(1);

        private Integer value;

        PERMIT_FLG(Integer value) { 
            this.value = value;
        }

        public static String getEnumName(){
            return "PERMIT_FLG";
        }

        @Override
        public String toString() {
            return String.valueOf(this.value);
        }

        public Integer value() {
            return this.value;
        }
    }
    
	/**
     * 组申请权限flg.
     */
    public static enum APPLY_FLG {
        /** 退出. */
        QUIT(0),
        /** 加入. */
        JOIN(1),
        /** 退出中. */
        QUITING(3),
        /** 加入中. */
        JOINING(4),
        /** 无权限. */
        NO(2);

        private Integer value;

        APPLY_FLG(Integer value) { 
            this.value = value;
        }

        public static String getEnumName(){
            return "APPLY_FLG";
        }

        @Override
        public String toString() {
            return String.valueOf(this.value);
        }

        public Integer value() {
            return this.value;
        }
    }

	/**
	 * 成员状态区分.
	 */
	public static enum UserStateFlgEnum {
		/** 已是成员. */
		INFLG("01"),
		/** 申请加入. */
		JOINFLG("02"),
		/** 申请退出. */
		QUITFLG("03"),
		/** 申请加入. */
		JOIN("申请加入"),
		/** 申请退出. */
		QUIT("申请退出");

		private String value;

		UserStateFlgEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
		
		public String value() {
            return this.value;
        }
	}
	/**
	 * NameSpace.
	 */
	public static enum NameSpaceEnum {
		/** 人员. */
		EMP("employee"),
		/** 考勤./*/
		ATT("att"),
		/** 会议室. */
		MEET("meet");

		private String value;

		NameSpaceEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
		
		public String value() {
            return this.value;
        }
	}
	/**
	 * 是否需要申请区分.
	 */
	public static enum JoinApplyFlgEnum {
		/** 需要申请. */
		YES("1"),
		/** 不需要申请. */
		NO("0");
	

		private String value;

		JoinApplyFlgEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
		
		public String value() {
            return this.value;
        }
	}
	
	/**
     * 取得小时OR分钟OR秒Flg.
     */
    public static enum TIME_FLG {
        /** 取得小时. */
        HH(0),
        /** 取得分钟. */
        MM(1),
        /** 取得秒. */
        SS(2);
        private int value;

        TIME_FLG(Integer value) { 
            this.value = value;
        }

        public static String getEnumName(){
            return "TIME_FLG";
        }

        @Override
        public String toString() {
            return String.valueOf(this.value);
        }

        public int value() {
            return this.value;
        }
    }
    
	/**
	 * spark消息类型.
	 */
	public static enum MsgTypeEnum {
		/** 新增. */
		INSERT("0"),
		/** 更新. */
		UPDATE("1"),
		/** 删除. */
		DELETE("2");

		private String value;

		MsgTypeEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
		
		public String value() {
            return this.value;
        }
	}
	
	/**
	 * spark消息内部用ID.
	 */
	public static enum SparkSignEnum {
		/** 考勤系统. */
		ATT("00");
		
		private String value;

		SparkSignEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
		
		public String value() {
            return this.value;
        }
	}

	
	/**
	 * spark系统ID.
	 */
	public static enum SparkSysIDEnum {
		/** 会议室系统. */
		HY("HY"),
		/** 团购系统. */
		GP("GP"),
		/** 个人账户. */
		AC("AC"),
		/** 咖啡消费. */
		CF("CF"),
		/** 共通系统*/
		CM("CM"),
		/** 考勤系统*/
		AT("AT");

		private String value;

		SparkSysIDEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
		
		public String value() {
            return this.value;
        }
	}
	
	/**
	 * spark消息ID.
	 */
	public static enum SparkMsgIDEnum {
		/** 预约会议通知. */
		HY("HY01"),
		/** 个人账户. */
		AC("AC00"),
		/** 存款. */
		GP_CK("CK01"),
		/** 团购. */
		GP_GP("DD01"),
		/** 转账. */
		GP_ZZ("ZZ01"),
		/** 咖啡扣款. */
		CF_KK("KK01"),
		/** 咖啡中奖. */
		CF_ZJ("ZJ01"),
		/** 意见反馈. */
		CM_AD("CM01"),
		/** 考勤数据不完整. */
		AT_0("AT00"),
		/** 考勤更正未审批. */
		AT_1("AT01"),
		/** 请假未审批. */
		AT_2("AT02"),
		/** 加班未审批. */
		AT_3("AT03");


		private String value;

		SparkMsgIDEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}
		
		public String value() {
            return this.value;
        }
	}

}
