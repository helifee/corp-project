/*
 * @(#)ComSequenceServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */
package com.yds.common.service.impl;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.bean.ComSeq;
import com.yds.common.dao.ComSequenceDao;
import com.yds.common.service.ComSequenceService;
import com.yds.util.service.StringUtil;

/**
 * @see ComSequenceService
 *
 */
@Service("comSequenceService")
public class ComSequenceServiceImpl extends AbstractBaseService implements ComSequenceService {
	private ComSequenceDao comSequenceDao;
	private static final String defaultMaxValue = "999999";
	private static final Log LOG = LogFactory.getLog(ComSequenceServiceImpl.class);

	/* (non-Javadoc)
	 * @see com.yds.common.service.ComSequenceService#getNextSequence(java.lang.String, java.lang.String, int)
	 */
	@Override
	public String getNextSequence(String table, String colunm, int valueSize) throws Exception{
		// 往表Bean里设定检索条件
		ComSeq comSeq = new ComSeq();
		int nextSeq = 0;
		try{
			comSeq.setTableNm(table);
			comSeq.setColunmNm(colunm);
			
			// 得到当前序列
			comSeq = getSequence(table, colunm, valueSize);
			
			// 得到下一个序列
			nextSeq = comSeq.getSeqValue() + comSeq.getSeqStep();
			
			// 如果所取序列+递增长度 > 序列最大值抛出异常
			if(nextSeq > comSeq.getSeqMax()){
				throw new Exception("所取序列已经超过最大值");
			}
			
			// 把最新的序列值更新到序列表里
			ComSeq nextComSeq = new ComSeq();
			nextComSeq.setSeqValue(nextSeq);
			nextComSeq.setTableNm(table);
			nextComSeq.setColunmNm(colunm);
			comSequenceDao.updateSequence(nextComSeq);
			if(0 == valueSize){
				return String.valueOf(nextSeq);
			}else{
				return StringUtil.addZero(nextSeq,valueSize);
			}
		}catch(Exception e){
			// 如果更新异常，把取得的序列值更新回去
			comSequenceDao.updateSequence(comSeq);
			throw new Exception(e.getMessage());
		}
	}
	
	/* (non-Javadoc)
	 * @see com.yds.common.service.ComSequenceService#getSequence(java.lang.String, java.lang.String)
	 */
	@Override
	public ComSeq getSequence(String table, String colunm) throws Exception {
		return getSequence(table, colunm, 0);
	}
	
	/**
	 * 取得采番表信息
	 * 如果取不到对应信息，将新建一条信息
	 * @param table
	 *            表名
	 * @param colunm
	 *            列名
	 * @param valueSize
	 *            列的位数（如果大于0，默认最大值为对应位数的最大值，如果等于0，默认最大值为999999）            
	 * @return ComSeq 取得采番表信息
	 * @throws Exception
	 */
	private ComSeq getSequence(String table, String colunm, int valueSize) throws Exception {
		ComSeq comSeq = new ComSeq();
		comSeq.setTableNm(table);
		comSeq.setColunmNm(colunm);
		// 得到当前序列
		comSeq = comSequenceDao.getNextSequence(comSeq);
		// 采番表没有对应数据时
		if (null == comSeq){
			LOG.warn("table:" + table + "column:" + colunm + "not in sequence table ,insert one..,");
			String maxValue = defaultMaxValue;
			comSeq = new ComSeq();
			comSeq.setTableNm(table);
			comSeq.setColunmNm(colunm);
			comSeq.setSeqMin(0);
			comSeq.setSeqCycleflg("0");
			comSeq.setSeqStep(1);
			comSeq.setSeqValue(0);
			if (valueSize > 0){
				maxValue = StringUtil.getUnit(valueSize, "9");
			}
			comSeq.setSeqMax(Integer.parseInt(maxValue));
			comSequenceDao.insertSequence(comSeq);
			
		}
		return comSeq;
	}

	/**
	 * @param comSequenceDao the comSequenceDao to set
	 */
	public void setComSequenceDao(ComSequenceDao comSequenceDao) {
		this.comSequenceDao = comSequenceDao;
	}
}
