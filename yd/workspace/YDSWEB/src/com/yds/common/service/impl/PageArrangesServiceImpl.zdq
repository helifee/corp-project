/*
 * @(#)PageArrangesServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */
package com.yds.common.service.impl;

import org.springframework.stereotype.Service;
import com.yds.common.bean.CheckAndLockInfo;
import com.yds.common.service.PageArrangesService;
import com.yds.common.service.SessionConstants;
import com.yds.common.service.SessionService;
import com.yds.common.dao.PageArrangesDao;
import com.yds.common.service.CommonConstants;
/**
 * @see com.yds.common.service.PageArrangesService
 */
@Service("pageArrangesService")
public class PageArrangesServiceImpl implements PageArrangesService {
	private PageArrangesDao pageArrangesDao;
	private String userName;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String updateArranges(String lockId, String proType, String pageName,
			CheckAndLockInfo checkAndLockInfoBefore) {
			
	
        // 登陆用户当前用户ID
		String curUserId = SessionService.getLoginUserId();
		// 登陆用户当前IP
		String curIp = (String) SessionService.get(SessionConstants.IPADDR);
		
		//  取得数据库排他表中相关锁id的最新锁记录
		CheckAndLockInfo checkAndLockInfoTemp = getCheckAndLockInfo(lockId);
        	
		// 初次进入、画面操作请求和自动定时check时执行下面代码
		if (checkAndLockInfoBefore == null) {
			if (checkAndLockInfoTemp == null) {				
				insertLock(lockId, pageName);
				SessionService.set(SessionConstants.PAGELOCK, null);
				return CommonConstants.PAGElOCK_SUCCESS;
			} else {
				if (curUserId.equals(checkAndLockInfoTemp.getUserId())
						&& curIp.equals(checkAndLockInfoTemp.getUrlIp())) {
					SessionService.set(SessionConstants.PAGELOCK, null);
					return CommonConstants.PAGElOCK_SUCCESS;
				} else {
					if (CommonConstants.PAGElOCK_UPDATE_CHECK.equals(proType) == true
							|| CommonConstants.PAGElOCK_AUTO_CHECK.equals(proType) == true) {
						SessionService.set(SessionConstants.PAGELOCK, null);
					} else {
						SessionService.set(SessionConstants.PAGELOCK,
								checkAndLockInfoTemp);
					}

					userName = getUserName(checkAndLockInfoTemp.getUserId());
					return userName;
				}
			}
		} else {
			// 如果当前无用户登陆，或者表中锁记录正是计划要踢掉的记录，则先删除原来记录，再插入当前记录
			if ((checkAndLockInfoTemp == null)
					|| (checkAndLockInfoBefore.equals(checkAndLockInfoTemp))) {
				
				
				deleteLock(lockId);
				insertLock(lockId, pageName);
				SessionService.set(SessionConstants.PAGELOCK, null);
				return CommonConstants.PAGElOCK_SUCCESS;
			} else {
				// 如果表中锁记录已经不是计划要踢掉的记录，则重新检测
				SessionService.set(SessionConstants.PAGELOCK, null);
				return CommonConstants.PAGElOCK_RECHECK;
			}
		}
	}

	/**
	 * 取得锁记录
	 * 
	 * @param lockId
	 *            锁ID
	 * @return CheckAndLockInfo 锁记录
	 */
	private CheckAndLockInfo getCheckAndLockInfo(String lockId) {
		CheckAndLockInfo checkAndLockInfoTemp = new CheckAndLockInfo();
		checkAndLockInfoTemp.setLockId(lockId);
		return pageArrangesDao.getCheckAndLockInfo(checkAndLockInfoTemp);
	}

	/**
	 * 解锁
	 * 
	 * @param lockId
	 *            锁ID
	 */
	private void deleteLock(String lockId) {
		CheckAndLockInfo checkAndLockInfoTemp = new CheckAndLockInfo();
		checkAndLockInfoTemp.setLockId(lockId);
		pageArrangesDao.deleteLock(checkAndLockInfoTemp);
	}

	/**
	 * 加锁
	 * 
	 * @param lockId
	 *            锁ID
	 */
	private void insertLock(String lockId, String pageName) {
		// 取得登录者ID
		String userId = SessionService.getLoginUserId();
		String urlIp = (String) SessionService.get(SessionConstants.IPADDR);
		CheckAndLockInfo checkAndLockInfoTemp = new CheckAndLockInfo();
		checkAndLockInfoTemp.setLockId(lockId);
		checkAndLockInfoTemp.setUserId(userId);
		checkAndLockInfoTemp.setUrlIp(urlIp);
		checkAndLockInfoTemp.setPageName(pageName);
		pageArrangesDao.insertLock(checkAndLockInfoTemp);
	}

	/**
	 * 获得用户名
	 * 
	 * @param userId
	 *            用户ID
	 */
	private String getUserName(String userId) {
		CheckAndLockInfo checkAndLockInfoTemp = new CheckAndLockInfo();
		checkAndLockInfoTemp.setUserId(userId);
		return pageArrangesDao.getUserName(checkAndLockInfoTemp);
	}

	/**
	 * @param pageArrangesDao
	 *            the pageArrangesDao to set
	 */
	public void setPageArrangesDao(PageArrangesDao pageArrangesDao) {
		this.pageArrangesDao = pageArrangesDao;
	}

	public PageArrangesDao getPageArrangesDao() {
		return pageArrangesDao;
	}

	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}
}
