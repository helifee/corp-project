package com.yds.common.service;

import java.util.List;
import java.util.Map;

import com.yds.util.service.XmlOperator;

public class GuideLinkContext {

	/** 存放导航action列表的map. */
	private static Map<String, AcionXmlElement> guideListMap = null;

	/** XML文件路径. */
	private static String xmlFilePath = GuideLinkContext.class.getClassLoader()
			.getResource("guideLink.xml").getPath();

	/**
	 * 得到actionUrl的导航action列表
	 * 
	 * @param actionUrl
	 * 
	 * @return 导航action列表
	 * 
	 * @throws Exception
	 */
	public static List<AcionXmlElement> getGuideList(String actionUrl)
			throws Exception {

		if (guideListMap == null) {
			setGuideListMap();
		}

		if (guideListMap.containsKey(actionUrl)) {
			return guideListMap.get(actionUrl).getGuideList();
		} else {
			return null;
		}

	}

	/**
	 * 设置action列表的map
	 * 
	 * @throws Exception
	 */
	private static synchronized void setGuideListMap() throws Exception {
		if (guideListMap == null) {
			guideListMap = new XmlOperator(xmlFilePath).getDirectLinkMap();
		}

	}

	/**
	 * @param xmlFilePath
	 *            the xmlFilePath to set
	 */
	public static void setXmlFilePath(String xmlFilePath) {
		guideListMap = null;
		GuideLinkContext.xmlFilePath = xmlFilePath;
	}

	/**
	 * 当前节点的父节点的画面ID
	 * 
	 * @throws Exception
	 */
	public static String getPageId(String actionUrl) throws Exception {
		String pageId = "";
		// 如果没有导航信息返回null
		if (guideListMap != null) {
			// 取当前节点的父节点画面ID
			if (guideListMap.containsKey(actionUrl)) {
				List<AcionXmlElement> guideList = guideListMap.get(actionUrl).getGuideList();
				if(guideList.size() > 1){
					pageId = guideList.get(guideList.size()-2).getPageId();
				}
			}
		}
		return pageId;
	}
}
