package com.yds.common.interceptor;

import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts2.ServletActionContext;
import org.springframework.stereotype.Component;

import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.interceptor.AbstractInterceptor;
import com.yds.base.action.AbstractBaseAction;
import com.yds.common.service.AcionXmlElement;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.GuideLinkContext;
import com.yds.common.service.SessionConstants;
import com.yds.common.service.SessionService;
import com.yds.common.service.CommonConstants.BackFlg;
import com.yds.util.service.SessionStore;

@Component("guideLinkInterceptor")
public class GuideLinkInterceptor extends AbstractInterceptor {
	private static final Log LOG = LogFactory.getLog(GuideLinkInterceptor.class);
	private static final long serialVersionUID = 5782592802569946641L;
	private String actionUrl;

	@Override
	public String intercept(ActionInvocation invocation) throws Exception {

		// 　将导航信息设置到session中
		SessionService.set(SessionConstants.GUIDELIST, getGuideList());

		// 设定请求画面是否有返回按钮
		if (!isBack()) {
			try {
				((AbstractBaseAction) invocation.getAction())
						.setBackFlg(BackFlg.Back_No.value());
			} catch (ClassCastException e) {
				LOG.warn(invocation.getAction().toString()
						+ "没有继承AbstractBaseAction", e);
			}
		}
		return invocation.invoke();
	}

	/**
	 * 得到导航链接
	 * 
	 * @return 导航链接
	 * 
	 * @throws Exception
	 */
	private List<AcionXmlElement> getGuideList() throws Exception {

		// 得到action的路径
		actionUrl = ServletActionContext.getRequest().getServletPath();

		// 得到第一个参数值
		String firstParamValue = "";
		if (!actionUrl.endsWith("." + CommonConstants.ACTIONNAME)) {
			actionUrl = actionUrl + "." + CommonConstants.ACTIONNAME;
		}

		if (ServletActionContext.getRequest().getQueryString() != null) {
			firstParamValue = "?"
					+ getFirstParameterValue(ServletActionContext.getRequest()
							.getQueryString());
		}
		// 如果有参数
		if (firstParamValue != null) {

			List<AcionXmlElement> directLink = GuideLinkContext
					.getGuideList(actionUrl + firstParamValue);

			if (directLink != null) {
				actionUrl = actionUrl + firstParamValue;
				return directLink;
			}
		}

		return GuideLinkContext.getGuideList(actionUrl);

	}

	/**
	 * 返回请求的第一个参数
	 * 
	 * @param queryStr
	 *            请求的参数
	 * @return 导航链接
	 * 
	 * @throws Exception
	 */
	private String getFirstParameterValue(String queryStr) {
		if (queryStr == null) {
			return null;
		}

		return queryStr.substring(0, queryStr.indexOf("&") == -1 ? queryStr
				.length() : queryStr.indexOf("&"));

	}

	/**
	 * Action请求的画面是否有返回功能
	 * 
	 * @param queryStr
	 *            请求的参数
	 * @return 导航链接
	 * 
	 * @throws Exception
	 */
	private boolean isBack() throws Exception {
		String pageId = GuideLinkContext.getPageId(actionUrl);
		if (!"".equals(pageId)) {
			return SessionStore.isStore(pageId);
		} else {
			return false;
		}
	}
}
