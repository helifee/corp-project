/*
 * @(#)Yb0020Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 员工管理
 */

package com.yds.employee.action;

import java.io.File;
import java.text.DateFormat;
//import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
//import java.util.HashMap;
import java.util.List;
//import net.sf.json.JSONArray;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.Preparable;
import com.yds.base.action.AbstractBaseAction;
import com.yds.common.bean.ComCodeInfo;
import com.yds.common.bean.EmpInfo;
import com.yds.common.bean.EmpPos;
import com.yds.common.bean.TreeListInfo;
import com.yds.common.service.ComCodeInfoService;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.PeoOrgInfoService;
import com.yds.common.service.SessionService;
import com.yds.common.service.PositionService;
//import com.yds.common.service.SessionStoreConstants;
import com.yds.employee.bean.EmpStaffPos;
import com.yds.employee.service.Yb0020Service;
import com.yds.util.service.FileUtil;
import com.yds.util.service.ListConverter;
//import com.yds.util.service.SessionStore;
import com.yds.util.service.StringUtil;

/**
 * 员工信息维护
 * 
 * @author gaoweiwei
 * @version 1.00 2010/06/25
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("yb0020Action")
public class Yb0020Action extends AbstractBaseAction implements Preparable {

	private static final long serialVersionUID = 1781860407729061457L;
    /** 退避项目 */
//	private static final String actionkey = SessionStoreConstants.YB0020;
	//private static String empInfoForMap = "EMPINFO";
	//private static String empPosListForMap = "EMPPOSLIST";
	//private static String empIdForMap = "EMPID";
	//private static String modeForMap = "MODE";
	//private static String fileNameForMap = "FILENAME";
	/** 性别信息. */
	private List<ComCodeInfo> sexList;

	/** 学历信息. */
	private List<ComCodeInfo> degreeList;

	/** 类别信息. */
	private List<ComCodeInfo> empStatusList;

	/** 所属主管部门信息. */
	private List<TreeListInfo> chargeOrgList;

	/** 共通信息逻辑处理. */
	private ComCodeInfoService comCodeInfoService;

	/** 员工信息逻辑处理. */
	private Yb0020Service yb0020Service;

	/** 部门信息逻辑处理. */
	private PeoOrgInfoService peoOrgInfoService;
	private PositionService positionService;

	/** 员工信息（bean）. */
	private EmpInfo empInfo;
	private EmpInfo empInfo2;
	/** 职位信息（bean）. */
	private EmpPos empPos2;
	/** 职位信息（初始用） */
	private EmpStaffPos empPos;
	/** 职位集合（初始用） */
	//private List<EmpStaffPos> empPosList;
	
	/** JSON字符串 */
	//private String empPosListJson;

	/** 职位集合（提交用） */
	//private List<EmpStaffPos> posList;

	/** 职位集合FLAG */
	//private String flg;

	/** 毕业院校集合 */
	private List<String> graduatedList;

	/** 学历集合 */
	private List<String> majorList;
	/** 联动菜单 */
	private String selectList;
	/** 传入/出参数 */
	/** 职位类别 */
	private String posType;
	private String posId;
	private String empId;
	private Integer mode;
	private String empIdHid;
	private String empCnm;
	private String updateTime;
	/** 离职日期 */
	private String endDate;
	/** 状态Id */
	private String empState;
	/** 状态名 */
	private String diffName;
	/** 员工状态List */
	private List<ComCodeInfo> empStateList;
	/** 职位一览 */
	private List<EmpPos> posList;
	/** 职位类别一览 */
	private List<ComCodeInfo> posTypeList;

	/** 上传文件相关项目 */
	private File upload;
    private String uploadFileName;
	private String imgUrl;
	private String fileName;

	@Override
	public void prepare() throws Exception {
		
		// 取得性别列表
		this.sexList = comCodeInfoService.getComCodeInfo("EMP", "SEX");

		// 取得学历列表
		this.degreeList = comCodeInfoService.getComCodeInfo("EMP", "DEGREE", "");

		// 取得员工类别列表
		this.empStatusList = comCodeInfoService.getComCodeInfo("EMP", "STATUS",	"");
		// 取得职位状态列表
		this.empStateList = comCodeInfoService.getComCodeInfo("EMP", "STATE");

		//============2010/08/04  滕长龙对应部门列表  start ==============
		// 取得所属主管部门列表
		this.setChargeOrgList(peoOrgInfoService.getRealDeptCMBTree(""));
		//============2010/08/04  滕长龙对应部门列表  end ================
	}
	
	/**
	 * 员工信息维护画面的初期显示
	 * 
	 * @return SUCCESS
	 */
//	@SuppressWarnings("unchecked")
	public String execute() throws Exception {
		

		if(CommonConstants.ActionReloadFlg.Reload_Condition.value().equals(super.getReloadFlg())){

//			HashMap<String,Object> gamenInfo = (HashMap<String,Object>)SessionStore.getCondition(actionkey);
			
//			// session中读取画面信息
//			empInfo = (EmpInfo) gamenInfo.get(empInfoForMap);
//			empPosList = (List<EmpStaffPos>) gamenInfo.get(empPosListForMap);
//			empId = (String) gamenInfo.get(empIdForMap);
//			mode = (Integer) gamenInfo.get(modeForMap);
//			fileName = (String) gamenInfo.get(fileNameForMap);
			
			// 取得员工状态名
			EmpInfo tempEmpInfo = yb0020Service.getEmpInfo(StringUtil.leftPadYd(empId));
			if(tempEmpInfo != null){
				empState = comCodeInfoService.getDiffName("EMP", "STATE", tempEmpInfo.getEmpState());
			}
		}else{
			if(mode==5){
				empId=SessionService.getLoginUserId();
				this.empInfo = yb0020Service.getEmpInfo(empId);
			}else{
				// 权限判断
				if(!hasPermit(CommonConstants.NameSpaceEnum.EMP.value(),"viewEmpPermit") && 
				   !hasPermit(CommonConstants.NameSpaceEnum.EMP.value(),"allEmpPermit") &&
				   !hasPermit(CommonConstants.NameSpaceEnum.EMP.value(),"registEmpPermit")){
					return NONE;
				}
				// 取得员工信息
				this.empInfo = yb0020Service.getEmpInfo(StringUtil.leftPadYd(empId));
			}
			if(empInfo != null){
				empInfo.setEmpId(StringUtil.leftTrimYd(empInfo.getEmpId()));
				// 社内信箱设定
				if(empInfo.getEmpEmailComp() != null){
					int index = empInfo.getEmpEmailComp().indexOf("@");
					empInfo.setEmpEmailComp(empInfo.getEmpEmailComp().substring(0,index));
				}
				// 取得离职日期
				empInfo2=yb0020Service.getQuitDate(StringUtil.leftPadYd(empInfo.getEmpId()));
				//取得状态Id
				empState=empInfo2.getEmpState();
			    if(("03".equals(empState) || "04".equals(empState))&& empInfo2.getEndDate()!=null){
					//日期格式转化
					DateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");         
					Date quitDate=empInfo2.getEndDate();
					endDate=sdf.format(quitDate);
			    }
			    //取得状态名
			    diffName=yb0020Service.getDiffName(empState);
				empStateList = comCodeInfoService.getComCodeInfo("EMP", "STATE","diffName");
				if(!"03".equals(empState)&& !"04".equals(empState)){
					
					String posId2=yb0020Service.getPosId(StringUtil.leftPadYd(empInfo.getEmpId()));
					empPos2=yb0020Service.getPos(posId2);
					//取得职位名称
					posId=empPos2.getPosSName();
					//取得职位类别名称
					posType=yb0020Service.getPosName(empPos2.getPosTypeId());
				}
			}
		}
		return SUCCESS;
	
	}
	
	/**
	 * 员工登记画面的初期显示——共通表部分
	 * 
	 * @return SUCCESS
	 */
	public String initInfo() throws Exception {
		
		return SUCCESS;

	}
	/**
	 * 员工职位列表初期显示
	 * 
	 * @return SUCCESS
	 */
//	public String findEmpPosList() throws Exception {
//		
//		// 取得员工职位列表
//		this.empPosList = empInfoModifyService.getEmpPos(StringUtil.leftPadYd(empId));
//		
//		return SUCCESS;
//	}
	

	/**
	 * 上传文件
	 * 
	 * @return SUCCESS
	 */
//========================2010/08/03 滕长龙对应无刷新上传 start =================
	public String fileUpLoad() throws Exception {

		FileUtil.saveFile(fileName, propMgr.getParameter(CommonConstants.FILE_PATH.EMP_IMAGE.value()),this.empInfo.getEmpId());
		
		if(!fileName.equals("")){
			this.empInfo.setEmpImgId(this.empInfo.getEmpId()+ FileUtil.getExt(fileName));
		}
		
		return SUCCESS;
	}
//========================2010/08/03 滕长龙对应无刷新上传 end ===================
	
	/**
	 * 上传校验
	 * 
	 * @return SUCCESS
	 */
	public String uploadValidate(){
		
		return SUCCESS;
	}

	/**
	 * 取得输入框自动匹配内容
	 * 
	 * @return SUCCESS
	 */
	public String findFilterList() {

		// 取得毕业院校列表信息
		this.graduatedList = yb0020Service.getGraduatedList();

		// 取得学历列表信息
		this.majorList = yb0020Service.getMajorList();

		return SUCCESS;

	}
	
	/**
	 * 取得职位列表
	 * 
	 * @return SUCCESS
	 */
	public String findPosNameList() throws Exception {

		posList = positionService.getEmpPosList(posType, "");
		// List转化
		String list =ListConverter.convert(posList,"posId", "posName");
		setSelectList(list);	

		return SUCCESS;
	}

	/**
	 * 取得职位类别列表
	 * 
	 * @return SUCCESS
	 */
	public String findPosTypeNameList() throws Exception {
		
		// 取得职位类别列表
		this.posTypeList = comCodeInfoService.getComCodeInfo("EMP", "POS_TYPE","");
		// List转化
		String list =ListConverter.convert(posTypeList,"diffNo", "diffName");
		setSelectList(list);
		
		return SUCCESS;
	}

	/**
	 * 登记员工信息
	 * 
	 * @return SUCCESS
	 * @throws Exception 
	 */
	public String insertEmpInfo() throws Exception {

		// 员工ID左端加YD
		this.empInfo.setEmpId(StringUtil.leftPadYd(this.empInfo.getEmpId()));
		//设定员工状态
		empState=empStateList.get(0).getDiffNo();
		this.empInfo.setEmpState(empState);
		
//==================2010/08/03 滕长龙对应无刷新上传 start ==============
		
		// 照片信息的添加
		//if(imgUrl != null && !"".equals(imgUrl.trim())){
		//	this.empInfo.setEmpImgId(imgUrl.substring(imgUrl.lastIndexOf("/") + 1, imgUrl.length()));
		//}
		
		//照片保存
		fileUpLoad();
//==================2010/08/03 滕长龙对应无刷新上传 end ================
		
		
		// 登录者信息的添加
		this.empInfo.setUpdateUser(SessionService.getLoginUserId());

		// 员工信息登记
		yb0020Service.insertEmpInfo(this.empInfo,posId,empState);
		
		putOpTip(propMgr.getMessage("yds.com.info.0008"));
		
		return SUCCESS;
	}

	/**
	 * 员工信息存在校验
	 */
	public void validateInsertEmpInfo() {

       // if(empPosListJson != null && !"".equals(empPosListJson)){
			// 将调整结果转化成JSON数组
			//JSONArray json = JSONArray.fromObject(empPosListJson);

			// 将JSON数组转换成List
			//posList = (List<EmpStaffPos>) JSONArray.toCollection(json,EmpStaffPos.class);
		//}
		// 员工ID校验
		String tempEmpId = StringUtil.leftPadYd(this.empInfo.getEmpId());
		if (yb0020Service.empIdExitCheckIns(tempEmpId)) {
			//flg = "1";
			this.addFieldError("empInfo.empId", propMgr.getMessage("yds.com.warning.0005", "员工ID"));
		}
		
		// 域用户名校验
		if (yb0020Service.empDmnmExitCheckIns(empInfo.getEmpDmnm())) {
			this.addFieldError("empInfo.empDmnm", propMgr.getMessage("yds.com.warning.0005", "域用户名"));
		}
		
		// 社内信箱ID校验
		String empEmailComp = empInfo.getEmpEmailComp() + "@ysys";
		if (yb0020Service.empEmailCompExitCheckIns(empEmailComp)) {
		    //flg = "1";
			this.addFieldError("empInfo.empEmailComp", propMgr.getMessage("yds.com.warning.0005", "社内信箱ID"));
		}
		
	}

	/**
	 * 更新员工信息
	 * 
	 * @return SUCCESS
	 * @throws Exception 
	 */
	public String updateEmpInfo() throws Exception {

		if(mode==5){
			this.empInfo2 = yb0020Service.getEmpInfo(SessionService.getLoginUserId());
			this.empInfo.setEmpId(SessionService.getLoginUserId());
			this.empInfo.setChargeOrgId(empInfo2.getChargeOrgId());
			this.empInfo.setEmpCnm(empInfo2.getEmpCnm());
			this.empInfo.setEmpCpnm(empInfo2.getEmpCpnm());
			this.empInfo.setEmpCpsnm(empInfo2.getEmpCpsnm());
			this.empInfo.setEmpDmnm(empInfo2.getEmpDmnm());
			this.empInfo.setEmpEmailComp(empInfo2.getEmpEmailComp());
			this.empInfo.setEmpImgId(empInfo2.getEmpImgId());
			this.empInfo.setEmpSex(empInfo2.getEmpSex());
			this.empInfo.setEmpState(empInfo2.getEmpState());
			this.empInfo.setChargeOrgId(empInfo2.getChargeOrgId());
			this.empInfo.setUpdateTime(empInfo2.getUpdateTime());
			this.empInfo.setEndDate(empInfo2.getEndDate());
			this.empInfo.setEmpStatusId(empInfo2.getEmpStatusId());
			this.empInfo.setStartDate(empInfo2.getStartDate());
			
		}
		else{
			// 员工ID左端加YD
			this.empInfo.setEmpId(StringUtil.leftPadYd(empId));
			//照片保存
			fileUpLoad();
		}
	
//==================2010/08/03 滕长龙对应无刷新上传 start ==============
		// 照片信息的添加
		//if(imgUrl != null && !"".equals(imgUrl.trim())){
		//	this.empInfo.setEmpImgId(imgUrl.substring(imgUrl.lastIndexOf("/") + 1, imgUrl.length()));
		//}
		
		
//==================2010/08/03 滕长龙对应无刷新上传 end ================
		
		// 登录者信息的添加
		this.empInfo.setUpdateUser(SessionService.getLoginUserId());
			
		// 员工信息更新
		yb0020Service.updateEmpInfo(this.empInfo,mode);
		
		putOpTip(propMgr.getMessage("yds.com.info.0009"));

		return SUCCESS;
	}

	/**
	 * 员工信息存在校验
	 */
	public void validateUpdateEmpInfo() {

		String tempEmpId = StringUtil.leftPadYd(this.empId);
		
		// 域用户名校验
		if (yb0020Service.empDmnmExitCheck(empInfo.getEmpDmnm(), tempEmpId)) {
			
			this.addFieldError("empInfo.empDmnm", propMgr.getMessage("yds.com.warning.0005", "域用户名"));
		}
		
		// 社内信箱ID校验
		String empEmailComp = empInfo.getEmpEmailComp() + "@ysys";
		if (yb0020Service.empEmailCompExitCheck(empEmailComp, tempEmpId)) {
			
			this.addFieldError("empInfo.empEmailComp", propMgr.getMessage("yds.com.warning.0005", "社内信箱ID"));
		}
		// 取得离职日期
	    empInfo2=yb0020Service.getQuitDate(tempEmpId);
	    //取得状态Id
		empState=empInfo2.getEmpState();
		if(!"03".equals(empState)&& !"04".equals(empState)){
				
			String posId2=yb0020Service.getPosId(tempEmpId);
			empPos2=yb0020Service.getPos(posId2);
			//取得职位名称
			posId=empPos2.getPosSName();
			//取得职位类别名称
			posType=yb0020Service.getPosName(empPos2.getPosTypeId());
				
		}
	}
	
/**
 * 进入状态变更页面前处理
 */
	//@SuppressWarnings("unchecked")
//	public String changeEmpState() {
//		
//		// 记录画面录入数据
//		HashMap<String,Object> gamenInfo = new HashMap<String,Object>();
//		
//		// 基本信息录入
//		gamenInfo.put(empInfoForMap, empInfo);
//		
//		// 职位列表信息录入
//		// 将职位列表结果转化成JSON数组
//		if(!"".equals(empPosListJson)){
//			JSONArray json = JSONArray.fromObject(empPosListJson);
//			if(json.get(0).toString().equals("null")){
//				gamenInfo.put(empPosListForMap, empPosList);
//			}else{
//				// 将JSON数组转换成List
//				posList = (List<EmpStaffPos>) JSONArray.toCollection(json,EmpStaffPos.class);
//	
//				gamenInfo.put(empPosListForMap, posList);
//			}
//		}else{
//			gamenInfo.put(empPosListForMap, empPosList);
//		}
//		
//		// 传入参数录入
//		gamenInfo.put(empIdForMap, empId);
//		gamenInfo.put(modeForMap, mode);
//		
//		// 上传照片信息录入
//		gamenInfo.put(fileNameForMap, fileName);
//		
//		// 画面信息保存
//		SessionStore.setCondition(actionkey, gamenInfo);
//		
//		return SUCCESS;
//	}	
	
	/**
	 * @return the sexList
	 */
	public List<ComCodeInfo> getSexList() {
		return sexList;
	}

	/**
	 * @param sexList the sexList to set
	 */
	public void setSexList(List<ComCodeInfo> sexList) {
		this.sexList = sexList;
	}

	/**
	 * @return the degreeList
	 */
	public List<ComCodeInfo> getDegreeList() {
		return degreeList;
	}

	/**
	 * @param degreeList the degreeList to set
	 */
	public void setDegreeList(List<ComCodeInfo> degreeList) {
		this.degreeList = degreeList;
	}

	/**
	 * @return the empStatusList
	 */
	public List<ComCodeInfo> getEmpStatusList() {
		return empStatusList;
	}

	/**
	 * @param empStatusList the empStatusList to set
	 */
	public void setEmpStatusList(List<ComCodeInfo> empStatusList) {
		this.empStatusList = empStatusList;
	}

	/**
	 * @return the empInfo
	 */
	public EmpInfo getEmpInfo() {
		return empInfo;
	}

	/**
	 * @param empInfo the empInfo to set
	 */
	public void setEmpInfo(EmpInfo empInfo) {
		this.empInfo = empInfo;
	}

	/**
	 * @return the empPosList
	 */
	public EmpStaffPos getEmpPos() {
		return empPos;
	}

	/**
	 * @param empPosList the empPosList to set
	 */
	public void setEmpPos(EmpStaffPos empPos) {
		this.empPos = empPos;
	}

	/**
	 * @param comCodeInfoService the comCodeInfoService to set
	 */
	public void setComCodeInfoService(ComCodeInfoService comCodeInfoService) {
		this.comCodeInfoService = comCodeInfoService;
	}

	/**
	 * @param yb0020Service the yb0020Service to set
	 */
	public void setYb0020Service(Yb0020Service yb0020Service) {
		this.yb0020Service = yb0020Service;
	}
	
	/**
	 * @param peoOrgInfoService the peoOrgInfoService to set
	 */
	public void setPeoOrgInfoService(PeoOrgInfoService peoOrgInfoService) {
		this.peoOrgInfoService = peoOrgInfoService;
	}

	/**
	 * @return the empId
	 */
	public String getPosId() {
		return posId;
	}

	/**
	 * @param empId the empId to set
	 */
	public void setPosId(String posId) {
		this.posId = posId;
	}



	public List<ComCodeInfo> getEmpStateList() {
		return empStateList;
	}

	public void setEmpStateList(List<ComCodeInfo> empStateList) {
		this.empStateList = empStateList;
	}

	/**
	 * @return the mode
	 */
	public Integer getMode() {
		return mode;
	}

	/**
	 * @param mode the mode to set
	 */
	public void setMode(Integer mode) {
		this.mode = mode;
	}

	/**
	 * @return the upload
	 */
	public File getUpload() {
		return upload;
	}

	/**
	 * @param upload the upload to set
	 */
	public void setUpload(File upload) {
		this.upload = upload;
	}

	/**
	 * @return the uploadFileName
	 */
	public String getUploadFileName() {
		return uploadFileName;
	}

	/**
	 * @param uploadFileName the uploadFileName to set
	 */
	public void setUploadFileName(String uploadFileName) {
		this.uploadFileName = uploadFileName;
	}

	/**
	 * @return the imgUrl
	 */
	public String getImgUrl() {
		return imgUrl;
	}

	/**
	 * @param imgUrl the imgUrl to set
	 */
	public void setImgUrl(String imgUrl) {
		this.imgUrl = imgUrl;
	}

	/**
	 * @return the graduatedList
	 */
	public List<String> getGraduatedList() {
		return graduatedList;
	}

	/**
	 * @param graduatedList the graduatedList to set
	 */
	public void setGraduatedList(List<String> graduatedList) {
		this.graduatedList = graduatedList;
	}

	/**
	 * @return the majorList
	 */
	public List<String> getMajorList() {
		return majorList;
	}

	/**
	 * @param majorList the majorList to set
	 */
	public void setMajorList(List<String> majorList) {
		this.majorList = majorList;
	}


	/**
	 * @return the empIdHid
	 */
	public String getEmpIdHid() {
		return empIdHid;
	}


	/**
	 * @param empIdHid the empIdHid to set
	 */
	public void setEmpIdHid(String empIdHid) {
		this.empIdHid = empIdHid;
	}

	/**
	 * @return the empCnm
	 */
	public String getEmpCnm() {
		return empCnm;
	}

	/**
	 * @param empCnm the empCnm to set
	 */
	public void setEmpCnm(String empCnm) {
		this.empCnm = empCnm;
	}

	/**
	 * @return the updateTime
	 */
	public String getUpdateTime() {
		return updateTime;
	}

	/**
	 * @param updateTime the updateTime to set
	 */
	public void setUpdateTime(String updateTime) {
		this.updateTime = updateTime;
	}

	/**
	 * @return the fileName
	 */
	public String getFileName() {
		return fileName;
	}

	/**
	 * @param fileName the fileName to set
	 */
	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	/**
	 * @return the chargeOrgList
	 */
	public List<TreeListInfo> getChargeOrgList() {
		return chargeOrgList;
	}

	/**
	 * @param chargeOrgList the chargeOrgList to set
	 */
	public void setChargeOrgList(List<TreeListInfo> chargeOrgList) {
		this.chargeOrgList = chargeOrgList;
	}

	public String getSelectList() {
		return selectList;
	}

	public void setSelectList(String selectList) {
		this.selectList = selectList;
	}

	public void setPositionService(PositionService positionService) {
		this.positionService = positionService;
	}

	public String getEmpId() {
		return empId;
	}

	public void setEmpId(String empId) {
		this.empId = empId;
	}

	public String getEmpState() {
		return empState;
	}

	public void setEmpState(String empState) {
		this.empState = empState;
	}
	
	public String getEndDate() {
		return endDate;
	}

	public void setEndDate(String endDate) {
		this.endDate = endDate;
	}
	
	public String getDiffName() {
		return diffName;
	}

	public void setDiffName(String diffName) {
		this.diffName = diffName;
	}

	public String getPosType() {
		return posType;
	}

	public void setPosType(String posType) {
		this.posType = posType;
	}

	
}