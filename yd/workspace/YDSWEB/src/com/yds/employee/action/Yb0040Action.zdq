/*
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 人员管理
 */
package com.yds.employee.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.yds.base.action.AbstractBaseAction;
import com.yds.common.bean.ComCodeInfo;
import com.yds.common.bean.EmpPos;
import com.yds.employee.bean.EmpStaffPos;
import com.yds.employee.service.Yb0040Service;
import com.yds.common.service.ComCodeInfoService;
import com.yds.common.service.PositionService;
import com.yds.util.service.ListConverter;
import com.yds.util.service.StringUtil;

/**
 * 员工职位设定查询处理
 * 
 * @author jinfang
 * @version 1.00 2010/06/22
 *
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("yb0040Action")
public class Yb0040Action extends AbstractBaseAction{

	private static final long serialVersionUID = 5769435054113812071L;
	private Yb0040Service yb0040Service;
	private ComCodeInfoService comCodeInfoService;
	private PositionService positionService;

	/** 员工ID */
	private String empId;
	/** 员工姓名 */
	private String empName;
	/** 职位类别 */
	private String posType;
	/** 联动菜单 */
	private String selectList;
	/**模式 */
	private Integer mode;
	/** 员工职位Info */
	private String empPosInfo;
	/** 职位级别Info */
	private String dispSeqInfo;

	/** 当前职位一览 */
	private List<EmpStaffPos> posNowList;
	/** 历史职位一览 */
	private List<EmpStaffPos> posAllList;
	/** 职位一览 */
	private List<EmpPos> posList;
	/** 职位类别一览 */
	private List<ComCodeInfo> posTypeList;
	/** 该员工职位信息一览 */
	private List<EmpStaffPos> empPosListInfo;
	/** JSON字符串 */
	private String empPosListJson;
	
	/**
	 * 员工职位设定画面的初期显示
	 * 
	 * @return SUCCESS
	 */
	public String initEmpPosMrgPage() throws Exception {
		//员工ID，员工姓名
//		empId = "040528";
//		empName = "莉萨";

		empPosListInfo = new ArrayList<EmpStaffPos>();
//		if(mode==4||mode==1)
//		{
//			empId="";
//		}
		
		// 取得当前职位一览信息
		this.posNowList = yb0040Service.getEmpPosNowInfo(StringUtil.leftPadYd(empId));
		
		// 取得历史职位一览信息
		this.posAllList = yb0040Service.getEmpPosAllInfo(StringUtil.leftPadYd(empId));
		// 取得职位级别集合
		List<EmpPos> seqInfo  = yb0040Service.getSeqInfo();
		
		// 取得该员工职位信息一览
		for(int i=0; i<posAllList.size(); i++){
			EmpStaffPos allInfo = posAllList.get(i);
			EmpStaffPos posInfo = new EmpStaffPos();
			
			// 员工ID
			posInfo.setEmpId(allInfo.getEmpId());
			// 员工姓名
			posInfo.setEmpName(allInfo.getEmpName());
			// 职位类别ID
			posInfo.setPosType(allInfo.getPosType());
			// 职位类别名称
			posInfo.setPosTypeName(allInfo.getPosTypeName());
			// 职位ID
			posInfo.setPosId(allInfo.getPosId());
			// 职位略称
			posInfo.setPosSName(allInfo.getPosSName());
			// 开始时间
			posInfo.setStartTime(allInfo.getStartTime());
			// 终了时间
			posInfo.setEndTime(allInfo.getEndTime());
			// 职位级别
			posInfo.setDispSeq(allInfo.getDispSeq());
			// 主要职位表示
			for(int j=0; j<posNowList.size(); j++){
				EmpStaffPos nowInfo = posNowList.get(j);
				// 终了时间为空时，设定主要职位表示
				if(allInfo.getPosId().equals(nowInfo.getPosId()) 
				&& allInfo.getPosType().equals(nowInfo.getPosType()) 
				&& "9999-12-31".equals(allInfo.getEndTime())){
					posInfo.setMainPosFlg(nowInfo.getMainPosFlg());
				}
			}
			
			// 添加到该员工职位信息一览
			empPosListInfo.add(posInfo);
		}

		//对象转化成字符串
		JSONArray jsobj = JSONArray.fromObject(empPosListInfo);
		empPosInfo = jsobj.toString();
		
		// 职位级别
		HashMap<String,String> seqMap = new HashMap<String,String>();
		for(EmpPos temp:seqInfo){
			seqMap.put(temp.getPosId(),temp.getDispSeq());
		}
		JSONObject jsobj3 = JSONObject.fromObject(seqMap);
		dispSeqInfo = jsobj3.toString();	

		return SUCCESS;
	}
	
	/**
	 * 取得职位类别列表
	 * 
	 * @return SUCCESS
	 */
	public String findPosTypeNameList() throws Exception {
		
		// 取得职位类别列表
		this.posTypeList = comCodeInfoService.getComCodeInfo("EMP", "POS_TYPE"," ");

		// List转化
		String list =ListConverter.convert(posTypeList,"diffNo", "diffName");
		setSelectList(list);
		
		return SUCCESS;
	}

	/**
	 * 取得职位列表
	 * 
	 * @return SUCCESS
	 */
	public String findPosNameList() throws Exception {

		// 取得职位列表
		posList = positionService.getEmpPosList(posType, "");

		// List转化
		String list =ListConverter.convert(posList,"posId", "posName");
		setSelectList(list);	

		return SUCCESS;
	}		
/**
 * 登记职位信息
 * 
 * @return SUCCESS
 * @throws Exception 
 */
@SuppressWarnings("unchecked")
public String insertEmpPosInfo() throws Exception {
	
	if(empPosListJson != null){
		// 将调整结果转化成JSON数组
		JSONArray json = JSONArray.fromObject(empPosListJson);

		// 将JSON数组转换成List
		empPosListInfo = (List<EmpStaffPos>) JSONArray.toCollection(json,EmpStaffPos.class);
	}
	yb0040Service.insertEmpPosInfo(empPosListInfo);
	putOpTip(propMgr.getMessage("yds.com.info.0008"));
	
	return SUCCESS;
}
	public String getEmpId() {
		return empId;
	}

	public void setEmpId(String empId) {
		this.empId = empId;
	}

	public String getEmpName() {
		return empName;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	public List<EmpPos> getPosList() {
		return posList;
	}

	public void setPosList(List<EmpPos> posList) {
		this.posList = posList;
	}

	public String getPosType() {
		return posType;
	}

	public void setPosType(String posType) {
		this.posType = posType;
	}

	public void setYb0040Service(Yb0040Service yb0040Service) {
		this.yb0040Service = yb0040Service;
	}

	public void setComCodeInfoService(ComCodeInfoService comCodeInfoService) {
		this.comCodeInfoService = comCodeInfoService;
	}

	public void setPositionService(PositionService positionService) {
		this.positionService = positionService;
	}

	public List<EmpStaffPos> getPosAllList() {
		return posAllList;
	}

	public void setPosAllList(List<EmpStaffPos> posAllList) {
		this.posAllList = posAllList;
	}

	public String getSelectList() {
		return selectList;
	}

	public void setSelectList(String selectList) {
		this.selectList = selectList;
	}

	public String getDispSeqInfo() {
		return dispSeqInfo;
	}

	public void setDispSeqInfo(String dispSeqInfo) {
		this.dispSeqInfo = dispSeqInfo;
	}

	public List<EmpStaffPos> getPosNowList() {
		return posNowList;
	}

	public void setPosNowList(List<EmpStaffPos> posNowList) {
		this.posNowList = posNowList;
	}

	public List<EmpStaffPos> getEmpPosListInfo() {
		return empPosListInfo;
	}

	public void setEmpPosListInfo(List<EmpStaffPos> empPosListInfo) {
		this.empPosListInfo = empPosListInfo;
	}

	public void setEmpPosInfo(String empPosInfo) {
		this.empPosInfo = empPosInfo;
	}

	public String getEmpPosInfo() {
		return empPosInfo;
	}

	public Integer getMode() {
		return mode;
	}

	public void setMode(Integer mode) {
		this.mode = mode;
	}

	public String getEmpPosListJson() {
		return empPosListJson;
	}

	public void setEmpPosListJson(String empPosListJson) {
		this.empPosListJson = empPosListJson;
	}

}
