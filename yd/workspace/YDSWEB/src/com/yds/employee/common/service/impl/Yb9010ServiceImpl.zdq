/*
 * @(#)Yb9010ServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东计算机社内网
 *    SubSystem: 人员管理
 */

package com.yds.employee.common.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.bean.EmpInfo;
import com.yds.employee.bean.Yb9010CondA;
import com.yds.employee.bean.Yb9010CondB;
import com.yds.employee.common.dao.Yb9010Dao;
import com.yds.employee.common.service.Yb9010Service;
import com.yds.util.service.StringUtil;

/**
 * @see com.yds.employee.common.service.Yb9010Service
 */
@Service("yb9010Service")
public class Yb9010ServiceImpl extends AbstractBaseService implements
	Yb9010Service {
	
	private Yb9010Dao yb9010Dao;
	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<EmpInfo> getEmpInfoList(Yb9010CondA yb9010CondA) {
		
		List<EmpInfo> editedEmpInfos = new ArrayList<EmpInfo>();

		// 职位信息的取得
		if (yb9010CondA.getPosition() != null && !"".equals(yb9010CondA.getPosition())) {
			
			if (yb9010CondA.getPosition().indexOf(",") == -1) {
				yb9010CondA.setPosTypeId(yb9010CondA.getPosition());
			} else {
				String[] position = yb9010CondA.getPosition().split(",");
				yb9010CondA.setPosId(position[1]);
			}
		}
		
		// 组织ID的取得
		if (yb9010CondA.getProId() == null || "".equals(yb9010CondA.getProId())) {
			
			if (yb9010CondA.getDeptId() != null && !"".equals(yb9010CondA.getDeptId())) {
				if (yb9010CondA.getDeptId().indexOf(",") == -1) {
					yb9010CondA.setOrgId(yb9010CondA.getDeptId());
				} else {
					String[] orgId = yb9010CondA.getDeptId().split(",");
					yb9010CondA.setOrgId(orgId[orgId.length - 1]);
				}
			}

		} else {
			// 组织ID为所选项目ID
			yb9010CondA.setOrgId(yb9010CondA.getProId());	
		}
		
		// 设置组区分
		String teamFlg = yb9010Dao.getTeamFlg(yb9010CondA.getTeamId());
		yb9010CondA.setTeamFlg(teamFlg);		
		
		// 员工选择信息
		List<EmpInfo> empInfos 
			= yb9010Dao.getEmpInfoList(yb9010CondA); 
		// 员工选择信息编辑
		if (empInfos != null && empInfos.size() != 0) {
			editedEmpInfos = editEmpInfoList(empInfos);
		}

		return editedEmpInfos;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<EmpInfo> getEmpInfoListAdv(Yb9010CondB yb9010CondB) {
		
		List<EmpInfo> editedEmpInfos = new ArrayList<EmpInfo>();
		
		// 员工ID左端加YD
		yb9010CondB.setEmpId(StringUtil.leftPadYd(yb9010CondB.getEmpId()));
		
		// 设置组区分
		String teamFlg = yb9010Dao.getTeamFlg(yb9010CondB.getTeamId());
		yb9010CondB.setTeamFlg(teamFlg);
		
		// 员工选择信息
		List<EmpInfo> empInfos 
			= yb9010Dao.getEmpInfoListAdv(yb9010CondB); 
		// 员工选择信息编辑
		if (empInfos != null && empInfos.size() != 0) {
			editedEmpInfos = editEmpInfoList(empInfos);
		}

		return editedEmpInfos;
	}
	
	/**
	 * 员工选择信息编辑
	 * 
	 * @param empInfos 员工选择信息
	 * @return List<EmpInfo> 编辑后员工选择信息
	 */
	public List<EmpInfo> editEmpInfoList(List<EmpInfo> empInfos) {
		
		List<EmpInfo> editedEmpInfos = new ArrayList<EmpInfo>();
		EmpInfo editedEmpInfo = new EmpInfo();
		String empId = "";
		String orgSnmMngerNm = "";
		
		if (empInfos != null && empInfos.size() != 0) {

			// 员工选择信息编辑
			for (EmpInfo empInfo: empInfos) {
				// 当员工ID相同时
				if (empId.equals(empInfo.getEmpId())) {
					// 所属项目略称及主管名（负责人）编辑
					orgSnmMngerNm = orgSnmMngerNm + "，" + empInfo.getOrgSnmMngerNm();

				// 当员工ID不同时
				} else {
					if (editedEmpInfo.getEmpId() != null) {
						// 所属项目略称及主管名（负责人）赋值
						editedEmpInfo.setOrgSnmMngerNm(orgSnmMngerNm);
						// 员工选择信息添加
						editedEmpInfos.add(editedEmpInfo);
					} 
					// 员工选择信息
					editedEmpInfo = empInfo;
					// 员工ID重新赋值
					empId = empInfo.getEmpId();
					// 所属项目略称及主管名（负责人）重新赋值
					orgSnmMngerNm = empInfo.getOrgSnmMngerNm();
				}
			}
			// 所属项目略称及主管名（负责人）赋值
			editedEmpInfo.setOrgSnmMngerNm(orgSnmMngerNm);
			// 员工选择信息添加
			editedEmpInfos.add(editedEmpInfo);
		}

		return editedEmpInfos;
	}
	/**
	 * @param yb9010Dao the yb9010Dao to set
	 */
	public void setYb9010Dao(Yb9010Dao yb9010Dao) {
		this.yb9010Dao = yb9010Dao;
	}

}
