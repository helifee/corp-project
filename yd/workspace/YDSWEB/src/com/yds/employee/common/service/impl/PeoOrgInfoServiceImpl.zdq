/*
 * @(#)PeoOrgInfoServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */

package com.yds.employee.common.service.impl;

import java.util.List;
import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.bean.Node;
import com.yds.common.bean.EmpOrgInfo;
import com.yds.common.bean.PeoOrgInfo;
import com.yds.common.bean.Tree;
import com.yds.common.bean.TreeListInfo;
import com.yds.common.dao.PeoOrgInfoDao;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.PeoOrgInfoService;
import com.yds.util.service.ListToTreeCMB;
import com.yds.util.service.TreeUtil;

/**
 * @see com.yds.common.service.PeoOrgInfoService
 */
@Service("peoOrgInfoService")
public class PeoOrgInfoServiceImpl extends AbstractBaseService implements
		PeoOrgInfoService {

	private PeoOrgInfoDao peoOrgInfoDao;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String geOrgNm(String orgId) {

		String orgNm = "";
		if (orgId != null && !"".equals(orgId)) {
			orgNm = peoOrgInfoDao.geOrgNm(orgId);
			if (orgNm == null) {
				orgNm = "";
			}
		}
		return orgNm;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<PeoOrgInfo> getDeptList(String... orgPara) {

		List<PeoOrgInfo> peoOrgInfoList = peoOrgInfoDao.getDeptList();
		// 一个参数时候，作为显示内容，key为空
		if(orgPara.length == 1){
			PeoOrgInfo peoOrgInfo = new PeoOrgInfo();
			peoOrgInfo.setOrgId("");
			peoOrgInfo.setOrgNm(orgPara[0]);
			peoOrgInfoList.add(0, peoOrgInfo);
		// 两个参数时候，第一位做为key，第二为作为value
		}else if(orgPara.length == 2){
			PeoOrgInfo peoOrgInfo = new PeoOrgInfo();
			peoOrgInfo.setOrgId(orgPara[0]);
			peoOrgInfo.setOrgNm(orgPara[1]);
			peoOrgInfoList.add(0, peoOrgInfo);
		}

		return peoOrgInfoList;
	}

	@Override
	public List<TreeListInfo> getDeptCMBTree(String... orgPara) {
		
		//取得部门一览，并转换为下拉列表（树）的形式。
		List<TreeListInfo> treeCMBList = 
			ListToTreeCMB.convert(peoOrgInfoDao.getDeptCMBTree(), orgPara);
		
		return treeCMBList;
	}
	
	@Override
	public List<TreeListInfo> getRealDeptCMBTree(String... orgPara) {
		
		//取得部门一览，并转换为下拉列表（树）的形式。
		List<TreeListInfo> treeCMBList = 
			ListToTreeCMB.convert(peoOrgInfoDao.getDeptCMBTree(), false, orgPara);
		
		return treeCMBList;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<EmpOrgInfo> getPrjtList(String deptInfo, String... prjtName) {
		String deptId = "";

		// 部门信息处理
		if (deptInfo != null && !"".equals(deptInfo)) {
			if (deptInfo.indexOf(",") == -1) {
				deptId = deptInfo;
			} else {
				String[] deptIds = deptInfo.split(",");
				deptId = deptIds[deptIds.length - 1];
			}
		}

		// 取得组织信息
		List<EmpOrgInfo> prjtList = peoOrgInfoDao.getPrjtList(deptId);
		if (prjtName.length != 0) {
			EmpOrgInfo prjtInfo = new EmpOrgInfo();
			prjtInfo.setOrgId("");
			prjtInfo.setOrgSnm(prjtName[0]);
			prjtList.add(0,prjtInfo);
		}

		return prjtList;
	}
	
	/**
	 * @param peoOrgInfoDao
	 *            the peoOrgInfoDao to set
	 */
	public void setPeoOrgInfoDao(PeoOrgInfoDao peoOrgInfoDao) {
		this.peoOrgInfoDao = peoOrgInfoDao;
	}

	@Override
	public List<Tree> getDeptTree() {
		List<Node> orgNodeList = peoOrgInfoDao.getOrgNodeList(CommonConstants.OrgFlgEnum.DEPT.value());
		List<Tree> treeList = TreeUtil.getTreeList(orgNodeList, 5);
		return treeList;
	}

	@Override
	public List<Tree> getOrgTree() {
		List<Node> orgNodeList = peoOrgInfoDao.getOrgNodeList(CommonConstants.OrgFlgEnum.DEPT_PRJT.value());
		List<Tree> treeList = TreeUtil.getTreeList(orgNodeList, 5);
		return treeList;
	}


}
