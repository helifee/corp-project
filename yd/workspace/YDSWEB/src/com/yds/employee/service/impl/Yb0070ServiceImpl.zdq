/*
 * @(#)Yb0070ServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东计算机社内网
 *    SubSystem: 人员管理
 */

package com.yds.employee.service.impl;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.springframework.stereotype.Service;
import com.yds.base.service.AbstractBaseService;
import com.yds.common.service.ComSequenceService;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.SessionService;
import com.yds.employee.bean.Yb0070CondA;
import com.yds.employee.bean.Yb0071CondA;
import com.yds.employee.dao.Yb0070Dao;
import com.yds.employee.service.Yb0070Service;
import com.yds.util.service.StringUtil;

/**
 * @see com.yds.employee.service.Yb0070Service
 */
@Service("yb0070Service")
public class Yb0070ServiceImpl extends AbstractBaseService implements
		Yb0070Service {
	
	private Yb0070Dao yb0070Dao;
	private ComSequenceService comSequenceService;
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Yb0070CondA> getTeamInfoList(boolean hasPermitFlg) {
		// 登录者Id
		String loginUserId = SessionService.getLoginUserId();
		Yb0070CondA yb0070CondA = new Yb0070CondA();		
		// 组ID
		yb0070CondA.setTeamId("");
		// 登录者ID
		yb0070CondA.setLoginUserId(loginUserId);
		// 权限判断
		yb0070CondA.setHasPermitFlg(hasPermitFlg);

		// 组信息一览
		List<Yb0070CondA> teamInfoList = yb0070Dao.getTeamInfoList(yb0070CondA);
		for (Yb0070CondA teamInfo:teamInfoList){
			// 登录者是组长
			if(teamInfo.getTeamLeaderId().equals(loginUserId)){
				// 权限flg 有权限修改组信息
				teamInfo.setPermitFlg(CommonConstants.PERMIT_FLG.YES.value());
				// 申请flg 无权限
				teamInfo.setApplyFlg(CommonConstants.APPLY_FLG.NO.value());
			// 登录者不是组长
			}else{
				// 超级管理员
				if(hasPermitFlg){
					// 申请flg 无权限
					teamInfo.setApplyFlg(CommonConstants.APPLY_FLG.NO.value());
					// 权限flg 有权限修改组信息
					teamInfo.setPermitFlg(CommonConstants.PERMIT_FLG.YES.value());
				// 不是超级管理员
				}else{
					// 登录者是成员
					if(teamInfo.getTeamUserId().indexOf(loginUserId)!= -1){
						if(teamInfo.getUserStateFlg()!= null){
							if(teamInfo.getUserStateFlg().equals(CommonConstants.UserStateFlgEnum.INFLG.value())){
								// 申请flg 退出
								teamInfo.setApplyFlg(CommonConstants.APPLY_FLG.QUIT.value());
		
							}else{
								// 申请flg 退出中
								teamInfo.setApplyFlg(CommonConstants.APPLY_FLG.QUITING.value());
								
							}
						}
					// 登录者不是成员
					}else{
						if(teamInfo.getUserStateFlg()!= null){
							if(teamInfo.getUserStateFlg().equals(CommonConstants.UserStateFlgEnum.JOINFLG.value())){
								// 申请flg 加入中
								teamInfo.setApplyFlg(CommonConstants.APPLY_FLG.JOINING.value());	
							}
						}else{
							// 申请flg 加入
							teamInfo.setApplyFlg(CommonConstants.APPLY_FLG.JOIN.value());
	
						}
					}
					
					// 权限flg 无权限修改组信息
					teamInfo.setPermitFlg(CommonConstants.PERMIT_FLG.NO.value());
				}
			}
		}
		
		return teamInfoList;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Map<String,String> getApplayInfoList() {
		
		Map<String,String> applayMap = new HashMap<String,String>();
		
		// 登录者Id
		String loginUserId = SessionService.getLoginUserId();
		// 申请内容信息一览
		List<Yb0071CondA> applayInfoList = yb0070Dao.getApplayInfoList(loginUserId);
		
		for(Yb0071CondA applayInfo:applayInfoList){
			if(applayInfo.getUserStateFlg().equals(CommonConstants.UserStateFlgEnum.JOINFLG.value())){
				applayInfo.setUserState(CommonConstants.UserStateFlgEnum.JOIN.value());
			} 
			if(applayInfo.getUserStateFlg().equals(CommonConstants.UserStateFlgEnum.QUITFLG.value())) {
				applayInfo.setUserState(CommonConstants.UserStateFlgEnum.QUIT.value());
			}
			// 申请内容
			applayInfo.setApplayInfo(applayInfo.getTeamUserNm()+ applayInfo.getUserState() + applayInfo.getTeamNm() );
			// 申请内容Key
			applayInfo.setApplayInfoKey(applayInfo.getTeamUserId()+applayInfo.getUserStateFlg()+applayInfo.getTeamId());
			applayMap.put(applayInfo.getApplayInfoKey(), applayInfo.getApplayInfo());
		}
		return applayMap;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Yb0070CondA getTeamInfo(String teamId,boolean hasPermitFlg){
		// 登录者Id
		String loginUserId = SessionService.getLoginUserId();
		Yb0070CondA yb0070CondA = new Yb0070CondA();
		
		// 组ID
		yb0070CondA.setTeamId(teamId);
		// 登录者ID
		yb0070CondA.setLoginUserId(loginUserId);
		// 权限判断
		yb0070CondA.setHasPermitFlg(hasPermitFlg);

		// 组信息一览
		Yb0070CondA teamInfo = yb0070Dao.getTeamInfo(yb0070CondA);
		
		// 组长ID去除YD
		teamInfo.setTeamLeaderId(StringUtil.leftTrimYd(teamInfo.getTeamLeaderId()));
		
		// 组ID
		teamInfo.setTeamId(teamId);
		
		return teamInfo;

	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public String insertTeamInfo(Yb0070CondA yb0070CondA) throws Exception {
		
		// 登录者Id
		String loginUserId = SessionService.getLoginUserId();
		// 组ID
		yb0070CondA.setTeamId(comSequenceService.getNextSequence("emp_team", "team_id", 4));
		// 组长ID
		yb0070CondA.setTeamLeaderId(StringUtil.leftPadYd(yb0070CondA.getTeamLeaderId()));
		// 创建者Id
		yb0070CondA.setLoginUserId(loginUserId);
		
		// 组别一览插入信息
		yb0070Dao.insertTeamInfo(yb0070CondA);

		if(yb0070CondA.getTeamUserId()!=null){
			
			String [] userId = yb0070CondA.getTeamUserId().split(",");
			
				for(String id:userId){
				
				yb0070CondA.setUserId(id);
					// 组别成员一览插入信息
					yb0070Dao.insertTeamUserInfo(yb0070CondA);
							
			}

		}
		
		return yb0070CondA.getTeamId();
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateTeamInfo (Yb0070CondA yb0070CondA){
		
		// 登录者Id
		String loginUserId = SessionService.getLoginUserId();
		
		Map<String,String> condition = new HashMap<String,String>();
		
		
		// 创建者Id
		yb0070CondA.setLoginUserId(loginUserId);
		
		// 组长ID
		yb0070CondA.setTeamLeaderId(StringUtil.leftPadYd(yb0070CondA.getTeamLeaderId()));
		
		// 组别更新信息
		yb0070Dao.updateTeamInfo(yb0070CondA);
		
		// 组ID
		condition.put("teamId", yb0070CondA.getTeamId());
		// 登录者ID
		condition.put("loginUserId", "");
		
		// 组别成员删除信息
		yb0070Dao.deleteTeamUserInfo(condition);
		
		if(yb0070CondA.getTeamUserId()!=null){
			String [] userId = yb0070CondA.getTeamUserId().split(",");			
			for(String id:userId){
				yb0070CondA.setUserId(id);
					// 组别成员一览插入信息
					yb0070Dao.insertTeamUserInfo(yb0070CondA);
							
			}
		}
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteTeamInfo (String teamId){
		
		Map<String,String> condition = new HashMap<String,String>();
		
		// 组ID
		condition.put("teamId", teamId);
		// 登录者ID
		condition.put("loginUserId", "");
		
		// 组别删除信息
		yb0070Dao.deleteTeamInfo(teamId);
		
		// 组别成员删除信息
		yb0070Dao.deleteTeamUserInfo(condition);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteTeamUserInfo(String teamId,String joinApplyFlg){
		
		// 登录者Id
		String loginUserId = SessionService.getLoginUserId();
		
		Map<String,String> condition = new HashMap<String,String>();
		
		// 组ID
		condition.put("teamId", teamId);
		// 登录者ID
		condition.put("loginUserId", loginUserId);
		
		if(joinApplyFlg.equals(CommonConstants.PERMIT_FLG.YES.value().toString())){			
			yb0070Dao.updateQuitTeamUser(condition);
		} else{
			yb0070Dao.deleteTeamUserInfo(condition);
		}

	}
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertTeamUserInfo(String teamId,String joinApplyFlg){
		
		// 登录者Id
		String loginUserId = SessionService.getLoginUserId();
		
		Map<String,String> condition = new HashMap<String,String>();
		
		Yb0070CondA yb0070CondA = new Yb0070CondA();
		
		// 组ID
		condition.put("teamId", teamId);
		yb0070CondA.setTeamId(teamId);

		// 登录者ID
		condition.put("loginUserId", loginUserId);		
		yb0070CondA.setUserId(loginUserId);
		
		if(joinApplyFlg.equals(CommonConstants.PERMIT_FLG.YES.value().toString())){			
			yb0070Dao.insertJoinTeamUser(condition);
		} else{
			yb0070Dao.insertTeamUserInfo(yb0070CondA);
		}

	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateAgreeTeamUserFlg(Yb0071CondA yb0071CondA){
		// // 申请内容List
		List<String> applayInfosList = yb0071CondA.getApplayInfosList();
		Map<String,String> condition = new HashMap<String,String>();
		for(String applayInfo: applayInfosList){
			
			// 组ID
			condition.put("teamId", applayInfo.substring(10));

			// 组成员ID
			condition.put("loginUserId", applayInfo.substring(0,8));

			if(applayInfo.substring(8, 10).equals(CommonConstants.UserStateFlgEnum.JOINFLG.value())){
				
				// 同意成员加入
				yb0070Dao.updateTeamUserFlg(condition);
				
			} else{
				
				// 同意成员退出
				yb0070Dao.deleteTeamUserInfo(condition);
				
			}
		}
		
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updateDisAgreeTeamUserFlg(Yb0071CondA yb0071CondA){
		// 申请内容List
		List<String> applayInfosList = yb0071CondA.getApplayInfosList();
		Map<String,String> condition = new HashMap<String,String>();
		// 申请内容List
		for(String applayInfo: applayInfosList){
			
			// 组ID
			condition.put("teamId", applayInfo.substring(10));

			// 组成员ID
			condition.put("loginUserId", applayInfo.substring(0,8));

			if(applayInfo.substring(8, 10).equals(CommonConstants.UserStateFlgEnum.JOINFLG.value())){
				
				// 不同意成员加入
				yb0070Dao.deleteTeamUserInfo(condition);
				
			} else{
				
				// 不同意成员退出
				yb0070Dao.updateTeamUserFlg(condition);
				
			}
		}
		
	}
	
	/**
	 * @param yb0070Dao the yb0070Dao to set
	 */
	public void setYb0070Dao(Yb0070Dao yb0070Dao) {
		this.yb0070Dao = yb0070Dao;
	}
	
	/**
	 * @param comSequenceService the comSequenceService to set
	 */
	public void setComSequenceService(ComSequenceService comSequenceService) {
		this.comSequenceService = comSequenceService;
	}



}
