/*
 * @(#) Yb7010Dao.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东计算机社内网
 *    SubSystem: 人员管理
 */

package com.yds.employee.dao;

import java.util.List;

import com.yds.common.bean.EmpInfo;
import com.yds.common.bean.EmpOrgInfo;
import com.yds.employee.bean.EmpGrpHis;
import com.yds.employee.bean.EmpStaffOrgRelation;
import com.yds.employee.bean.Yb7010CondA;

/**
 * 员工相关数据新旧数据库转换（BATCH）
 * 新数据库相关操作
 * 
 * @author 远东)mengxiaoyan
 * @version 1.00 2010/08/02
 */
public interface Yb7010Dao {
	
	/**
	 * 员工-组织整合信息获取
	 * 
	 * @param 
	 * @return List<Yb7010CondA> 员工和组织关系一览检索结果
	 */
	public List<Yb7010CondA> getEmpOrgInfoList();
	
	/**
	 * 删除员工组织关系表中数据（新数据库）
	 * 态别FLG = '1'
	 * 
	 * @param 
	 * @return void
	 */
	public void deleteStaffOrgRelation();
	
	/**
	 * 删除指定员工组织关系表中数据（新数据库）
	 * @param empId 要删除员工ID
	 * 
	 * @return void
	 */
	public void deleteStaffOrgByID(String empId);	
	
	/**
	 * 删除指定员工组织关系表中数据（新数据库）
	 * @param yb7010CondA 要删除员工
	 * 
	 * @return void
	 */
	public void deleteStaffOrgByKey(Yb7010CondA yb7010CondA);
	
	/**
	 * 删除退出员工组织关系表中数据（新数据库）
	 * @param empId 要删除员工ID
	 * 
	 * @return void
	 */
	public void deleteQuitStaffOrgRelation(String empId);	
	
	/**
	 * 删除组织关系表数据（新数据库）
	 * 态别FLG = '1'
	 * 
	 * @param 
	 * @return void
	 */
	public void deleteEmpOrgInfo();
	
	/**
	 * 删除组织关系表数据（新数据库）
	 * 
	 * @param  empId 要检查员工ID
	 * @return 0 没有同时存在【ORG_STATE_FLG】为【0】和【1】的数据
	 *         1 有同时存在【ORG_STATE_FLG】为【0】和【1】的数据
	 */	
	public Integer getConfictStateFlg(String empId);
	
	/**
	 * 插入组织关系表数据（新数据库）
	 * 
	 * @param empOrgInfo 组织关系信息
	 * @return void
	 */
	public Integer insertEmpOrgInfo(EmpOrgInfo empOrgInfo);	
	
	/**
	 * 插入员工组织关系表数据（新数据库）
	 * 
	 * @param empOrgInfo 员工组织关系信息
	 * @return void
	 */
	public Integer insertEmpStaffOrgRelationInfo(EmpStaffOrgRelation empStaffOrgRelation);
	
	/**
	 * 取得组织关系表中相同部门的最大阶层(10,20)
	 * 
	 * @param departStr 部门编号
	 * @return Integer 取得的最大阶层号
	 */
	public Integer getEmpOrgSameDepMax1(String departStr);
	
	/**
	 * 取得组织关系表中相同部门的最大阶层(20,22,23)
	 * 
	 * @param departStr 部门编号
	 * @return Integer 取得的最大阶层号
	 */
	public Integer getEmpOrgSameDepMax2(String departStr);
	
	/**
	 * 删除员工历史组织表（新数据库）
	 * 态别FLG = '1'
	 */
	public void deleteEmpGrpHis();
	
	/**
	 * 插入员工历史组织关系表数据（新数据）
	 * @param empGrpHis 员工历史组织信息
	 */
	public Integer insertEmpGrpHis(EmpGrpHis empGrpHis);
	
	/**
	 * 取得所有员工的信息
	 * @return 所有员工的信息
	 */
	public List<EmpInfo> getAllEmpInfoList();
	
	/**
	 * 根据员工ID取得员工的历史组织信息
	 * 
	 * @param empId ： 员工ID
	 * @return 指定员工的历史组织信息
	 */
	public List<EmpGrpHis> getEmpGrpHisBy(String empId);

	/**
	 * 根据key删除员工历史组织信息
	 * 
	 * @param empGrpHis ： 要更新的数据
	 */
	public Object deleteEmpGrpHisByKey(EmpGrpHis empGrpHis);
}
