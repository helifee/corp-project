/*
 * @(#)Ya0020DaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 权限管理
 */

package com.yds.perm.dao.impl;

import java.util.List;
import org.springframework.stereotype.Repository;
import com.yds.base.dao.AbstractBaseDao;
import com.yds.perm.bean.PerRoleInfo;
import com.yds.perm.bean.PerRolePermitInfo;
import com.yds.perm.bean.RolePerMgrInfo;
import com.yds.perm.dao.Ya0020Dao;

/**
 * @see com.yds.perm.dao.Ya0020Dao
 */
@Repository("ya0020Dao")
public class Ya0020DaoImpl extends AbstractBaseDao implements Ya0020Dao {

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PerRoleInfo getPerRoleInfo(String roleId) {

		// 取得角色信息
		return (PerRoleInfo) super.queryForObject(
				"Ya0020Dao.getPerRoleInfo", roleId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PerRoleInfo getMaxRoleId() {

		// 取得最大角色ID
		return (PerRoleInfo) super.queryForObject("Ya0020Dao.getMaxRoleId");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<RolePerMgrInfo> getRolePerMgrList() {
		// 取得角色授权信息一览(新规模式)
		return (List<RolePerMgrInfo>) super.queryForList(
				"Ya0020Dao.getRolePerMgrInfos");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	@SuppressWarnings("unchecked")
	public List<RolePerMgrInfo> getRolePerMgrListChecked(String roleId) {

		// 取得角色授权信息一览（照会/修改模式）
		return (List<RolePerMgrInfo>) super.queryForList(
				"Ya0020Dao.getRolePerMgrInfosChecked", roleId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertPerRoleInfo(PerRoleInfo perRoleInfo) {

		// 插入角色信息
		super.insert("Ya0020Dao.insertPerRoleInfo", perRoleInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertPerRolePermitInfo(PerRolePermitInfo perRolePermitInfo) {

		// 插入角色授权信息
		super
				.insert("Ya0020Dao.insertPerRolePermitInfo",
						perRolePermitInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updatePerRoleInfo(PerRoleInfo perRoleInfo) {

		// 更新角色信息
		super.update("Ya0020Dao.updatePerRoleInfo", perRoleInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deleteRolePermitInfo(PerRolePermitInfo perRolePermitInfo) {

		// 删除角色授权信息(PER_ROLE_PERMIT表)
		super.delete("Ya0020Dao.delRolePermitInfo", perRolePermitInfo);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deletePerRolePosition(String roleId) {

		// 删除职位表角色表相关信息(PER_ROLE_POSITION表)
		super.delete("Ya0020Dao.deletePerRolePosition", roleId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deletePerRole(String roleId) {

		// 删除角色信息(PER_ROLE表)
		super.delete("Ya0020Dao.deletePerRole", roleId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deletePerRolePermit(String roleId) {

		// 删除角色授权信息(PER_ROLE_PERMIT表)
		super.delete("Ya0020Dao.deletePerRolePermit", roleId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deletePerUserPermit(String roleId) {

		// 删除用户授权表关联信息(PER_USER_PERMIT表)
		super.delete("Ya0020Dao.deletePerUserPermit", roleId);
	}

}
