/*
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 权限管理
 */

package com.yds.perm.dao.impl;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;
import com.yds.common.bean.EmpInfo;
import com.yds.perm.bean.PerRoleInfo;
import com.yds.perm.bean.PerUserPermitInfo;
import com.yds.perm.dao.UserRoleMgrDao;

/**
 * @see com.yds.perm.dao.UserRoleMgrDao
 */
@Repository("userRoleMgrDao")
public class UserRoleMgrDaoImpl extends AbstractBaseDao implements UserRoleMgrDao {

	/**
	 * 检索用户列表信息
	 * 
	 * @param userInfo 检索用户的条件
	 * @return List<UserInfo> 用户列表信息一览.
	 */	
	@SuppressWarnings("unchecked")
	@Override
	public List<EmpInfo> getUserInfoList(EmpInfo userInfo) {
		
		List<EmpInfo> resultList = (List<EmpInfo>) super.queryForList(
				"UserRoleMgrDao.getUserInfoList", userInfo);

		return resultList;
	}

	/**
	 * 检索用户角色信息
	 * 
	 * @param perRoleInfo 检索用户角色的条件
	 * @return List<PerRoleInfo> 用户角色信息一览.
	 */		
	@SuppressWarnings("unchecked")
	@Override
	public List<PerRoleInfo> getPerRoleInfoList(PerRoleInfo perRoleInfo) {
		
		List<PerRoleInfo> resultList = (List<PerRoleInfo>)super.queryForList(
				"UserRoleMgrDao.getRoleInfoList", perRoleInfo);
		return resultList;
	}

	/**
	 * 检索用户角色授权信息
	 * 
	 * @param perUserPermitInfo 检索用户角色授权信息的条件
	 * @return List<PerUserPermitInfo> 用户角色授权信息一览.
	 */		
	@SuppressWarnings("unchecked")
	@Override
	public List<PerUserPermitInfo> getPerUserPermitInfoList(
			PerUserPermitInfo perUserPermitInfo) {
		
		List<PerUserPermitInfo> resultList = (List<PerUserPermitInfo>)super.queryForList(
				"UserRoleMgrDao.getPerUserPermitInfoList", perUserPermitInfo);
		return resultList;
	}

	/**
	 * 删除用户角色信息
	 * @param perUserPermitInfo 所要删除的用户角色信息
	 */	
	@Override
	public void deleteUserRole(PerUserPermitInfo perUserPermitInfo) {
		super.delete("UserRoleMgrDao.deleteUserRole", perUserPermitInfo);
		
	}

	/**
	 * 插入用户角色信息
	 * @param perUserPermitInfo 所要插入的用户角色信息
	 */	
	@Override
	public void insertUserRole(PerUserPermitInfo perUserPermitInfo) {
		super.insert("UserRoleMgrDao.insertUserRole", perUserPermitInfo);
		
	}

	/**
	 * 更新用户角色信息
	 * @param perUserPermitInfo 所要更新的用户角色信息
	 */	
	@Override
	public void updateUserRoleTime(PerUserPermitInfo perUserPermitInfo) {
		super.update("UserRoleMgrDao.updateUserRoleTime", perUserPermitInfo);
	}
	

}
