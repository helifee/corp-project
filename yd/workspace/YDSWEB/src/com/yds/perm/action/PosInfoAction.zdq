/*
 * @(#)PosInfoAction.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 用户管理
 */
package com.yds.perm.action;

import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.yds.base.action.AbstractBaseAction;
import com.yds.common.service.CommonConstants;
import com.yds.perm.bean.PosInfo;
import com.yds.perm.service.PosInfoService;

/**
 * 职位信息一览处理.
 * 
 * @author chenjunshuai
 * @version 1.00 2010/01/28
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("posInfoAction")
public class PosInfoAction extends AbstractBaseAction {

	private static final long serialVersionUID = 8432234096664891753L;
	private static final String FIELD_NOTNULL = " shoud not be null ";
	private static final String FIELD_LENGTH_PASSED = ".length is passed ";
	private static final String FIELD_INVALID = " Invalid ";
	private static final String FIELD_EXISTED = " the record is existed ";
	private static final String FIELD_NOT_EXISTED = "the record is not existed";
	/** 职位一览集合. */
	private List<PosInfo> posInfoList;
	private PosInfoService posInfoService;
	/** 职位数. */
	private int posInfosCnt;
	/** 职位ID. */
	private String posInfoId;

	/**
	 * 画面的初期显示 职位信息一览取得
	 * 
	 * @return SUCCESS
	 */
	@Override
	public String execute() throws Exception {

		// 重新取得职位一览和职位数
		getPostionInfos();
		return SUCCESS;
	}

	/**
	 * 取得职位信息一览和职位数
	 * 
	 * @return SUCCESS
	 */
	public String getPostionInfos() {

		// 取得职位信息一览
		this.posInfoList = posInfoService.getPosInfoList();
		// 取得职位数
		this.posInfosCnt = posInfoList.size();
		return SUCCESS;
	}

	/**
	 * 修改和新建职位信息
	 * 
	 * @return SUCCESS
	 */
	public String updatePosInfos() {

		// 新建和修改职位信息
		posInfoService.updatePosInfo(posInfoList);

		// 重新取得职位一览和职位数
		getPostionInfos();
		return SUCCESS;
	}

	public void validateUpdatePosInfos() {

		if (posInfoList != null) {

			String posId; // 职位ID
			String posName; // 职位名称
			String posDesc; // 职位描述
			String parentPos; // 上级职位
			int displaySeq; // 显示顺序
			String posState; // 职位状态
			String flag;
			PosInfo posInfo;
			boolean isOrNotFlag;
			for (int i = 0; i < posInfoList.size(); i++) {
				posInfo = posInfoList.get(i);
				if (posInfo == null) {
					continue;
				}
				posId = posInfoList.get(i).getPosId();
				posName = posInfoList.get(i).getPosName();
				posDesc = posInfoList.get(i).getPosDesc();
				parentPos = posInfoList.get(i).getParentPos();
				displaySeq = posInfoList.get(i).getDisplaySeq();
				posState = posInfoList.get(i).getPosState();
				flag = posInfoList.get(i).getFlag();

				if (null == posId || "".equals(posId)) {
					this.addFieldError("posInfos[" + i + "].posId", "posInfos[" + i + "].posId " + FIELD_NOTNULL);
				} else {
					if (posId.length() > 3) {
						this.addFieldError("posInfos[" + i + "].posId", "posInfos[" + i + "].posId"
								+ FIELD_LENGTH_PASSED);
					}

					isOrNotFlag = havingOrNotRecord(posId);
					if ((CommonConstants.STATE_FLAG_NEW).equals(flag)) {
						if (isOrNotFlag) {
							this
									.addFieldError("posInfos[" + i + "].posId", "posInfos[" + i + "].posId"
											+ FIELD_EXISTED);
						}
					}
					if ((CommonConstants.STATE_FLAG_UPDATE).equals(flag)) {
						if (!isOrNotFlag) {
							this.addFieldError("posInfos[" + i + "].posId", "posInfos[" + i + "].posId"
									+ FIELD_NOT_EXISTED);
						}
					}
				}

				if (null == posName || "".equals(posName) == true) {
					this.addFieldError("posInfos[" + i + "].posName", "posInfos[" + i + "].posName " + FIELD_NOTNULL);
				} else {
					if (posName.length() > 20) {
						this.addFieldError("posInfos[" + i + "].posId", "posInfos[" + i + "].posName"
								+ FIELD_LENGTH_PASSED);
					}
				}
				if (0 == displaySeq) {
					this.addFieldError("posInfos[" + i + "].displaySeq", "posInfos[" + i + "].displaySeq "
							+ FIELD_INVALID);
				} else {
					if (displaySeq > 9999) {
						this.addFieldError("posInfos[" + i + "].displaySeq", "posInfos[" + i + "].displaySeq"
								+ FIELD_LENGTH_PASSED);
					}
				}
				if ("0".equals(posState) == false && "1".equals(posState) == false) {
					this.addFieldError("posInfos[" + i + "].posState", "posInfos[" + i + "].posState" + FIELD_INVALID);
				}

				if (null != posDesc && "".equals(posDesc) == false) {
					if (posDesc.length() > 200) {
						this.addFieldError("posInfos[" + i + "].posDesc", "posInfos[" + i + "].posDesc"
								+ FIELD_LENGTH_PASSED);
					}
				}

				if (null != parentPos && "".equals(parentPos) == false) {
					if (parentPos.length() > 3) {
						this.addFieldError("posInfos[" + i + "].parentPos", "posInfos[" + i + "].parentPos"
								+ FIELD_LENGTH_PASSED);
					}
				}
			}
		}

	}

	/**
	 * 判断是否存在指定posId的记录
	 * 
	 * @param posId 职位Id
	 * 
	 * @return true/false
	 */
	public boolean havingOrNotRecord(String posId) {
		PosInfo posInfoValidate;
		List<PosInfo> posInfoValidateList = posInfoService.getPosInfoList();
		boolean flag = false;
		for (int j = 0; j < posInfoValidateList.size(); j++) {
			posInfoValidate = posInfoValidateList.get(j);
			if (posId.equals(posInfoValidate.getPosId())) {
				flag = true;
				break;
			}
		}
		return flag;
	}

	/**
	 * @return the posInfosCnt
	 */
	public int getPosInfosCnt() {
		return posInfosCnt;
	}

	/**
	 * @param posInfosCnt the posInfosCnt to set
	 */
	public void setPosInfosCnt(int posInfosCnt) {
		this.posInfosCnt = posInfosCnt;
	}

	/**
	 * @return the posInfoList
	 */
	public List<PosInfo> getPosInfoList() {
		return posInfoList;
	}

	/**
	 * @param posInfoList the posInfoList to set
	 */
	public void setPosInfoList(List<PosInfo> posInfoList) {
		this.posInfoList = posInfoList;
	}

	/**
	 * @return the posInfoService
	 */
	public PosInfoService getPosInfoService() {
		return posInfoService;
	}

	/**
	 * @param posInfoService the posInfoService to set
	 */
	public void setPosInfoService(PosInfoService posInfoService) {
		this.posInfoService = posInfoService;
	}

	public String getPosInfoId() {
		return posInfoId;
	}

	public void setPosInfoId(String posInfoId) {
		this.posInfoId = posInfoId;
	}

}
