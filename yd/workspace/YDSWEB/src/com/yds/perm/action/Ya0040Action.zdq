/*
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 权限管理
 */

package com.yds.perm.action;

import java.util.ArrayList;
import java.util.List;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import com.opensymphony.xwork2.Preparable;
import com.yds.base.action.AbstractBaseAction;
import com.yds.common.bean.EmpInfo;
import com.yds.common.service.SessionConstants;
import com.yds.common.service.SessionService;
import com.yds.common.service.UserService;
import com.yds.perm.bean.PerRoleInfo;
import com.yds.perm.bean.PerUserPermitInfo;
import com.yds.perm.bean.Ya0040CondA;
import com.yds.perm.service.Ya0040Service;
import com.yds.util.service.DateUtil;
import com.yds.util.service.Session;

/**
 * 用户角色信息一览处理
 * 
 * @author yuchenglin
 * @version 1.00 2010/08/17
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("ya0040Action")
public class Ya0040Action extends AbstractBaseAction implements Preparable{

	private static final long serialVersionUID = -6409840463828013900L;
	
	/** Service接口 */
	private Ya0040Service ya0040Service;
	private UserService userService;

	/** 用户ID */
	private String userId;
	
	/** 用户名称 */
	private String userNm;
	
	/** 角色统计件数 */
	private int roleInfosCnt;

	/** 用户授权信息 */
	private PerUserPermitInfo perUserPermitInfo;	

	/** 用户基本信息 */
	private EmpInfo userInfo;
	
	/** 自定义bean */
	private Ya0040CondA ya0040CondA;

	/** 用户授权信息一览信息 */
	private List<PerUserPermitInfo> perUserPermitInfoList;
	
	/** 用户角色一览表信息 */
	private List<PerRoleInfo> perRoleInfoList;
	
	/** 为checkboxlist设置值用list */
	private List<String> result;
	
	/** 自定义list */
	private List<String> perRoleIdInfos;

	@Override
	public void prepare() throws Exception {
		this.setPerRoleInfoList(ya0040Service.getUserRoleResultLst());	
	}
	
	/**
	 * 画面初始化。
	 * 
	 * @throws Exception
	 */
	public String initInfo() throws Exception {
		
		// 检索数据
		searchRole(userId);
		return SUCCESS;
	}
	
	/**
	 * 取得用户角色一览信息。
	 * 
	 * @throws Exception
	 */
	public String findUserRoleResultList() throws Exception{
		
		// 取得用户ID和用户姓名
		userId = ya0040CondA.getUserId();
		userNm = ya0040CondA.getUserNm();
		
		// 用户ID和用户名称设置到Session中
		Session.set(SessionConstants.USERID, userId);
		Session.set(SessionConstants.USERNAME, userNm);

		// 检索用户角色数据
		searchRole(userId);
		return SUCCESS;
	}
	
	/**
	 * 追加角色信息。
	 * 
	 * @throws Exception
	 */
	public String insertRoleResultList() throws Exception {
	
		// 取得需要页面上的用户Id
		userId = Session.get(SessionConstants.USERID).toString();
		
		// 为bean设置初始值
		ya0040CondA = new Ya0040CondA();
		
		// 用户ID设置到bean中
		ya0040CondA.setUserId(userId);
		
		// checkboxlist框的值不为空的场合
		if (null != perRoleIdInfos) {
			
			// 设置bean的值、把所选角色ID设置到bean中
			ya0040CondA.setPerRoleIdInfos(perRoleIdInfos);
			
			// 追加角色信息
			ya0040Service.insertPerUserPermitInfoList(ya0040CondA);	
		}
		
		// 重新检索数据
		searchRole(userId);
		return SUCCESS;
	}
	
	/**
	 * 修改用户角色一览信息中的有效时间。
	 * 
	 * @throws Exception
	 */
	public String updateTime() throws Exception {
		
		// 设置bean的值（登录者ID和系统时间）
		ya0040CondA.setLoginUserId(SessionService.getLoginUserId());
		ya0040CondA.setUpdateTime(DateUtil.getDateTime());		

		// 调用Service修改有效期间
		ya0040Service.updatePermitTime(ya0040CondA);

		// 重新检索数据
		searchRole(ya0040CondA.getUserId());
		return SUCCESS;
		
	}
	
	/**
	 * 删除所选用户角色信息。
	 * 
	 * @throws Exception
	 */
	public String deletePermitData() throws Exception {
		
		// 调用Service
		ya0040Service.deletePermitData(ya0040CondA);
	
		// 重新检索数据
		searchRole(ya0040CondA.getUserId());
		
		return SUCCESS;
	}
	
	/**
	 * 取得角色一览。
	 * 
	 * @throws Exception
	 */
	public String findRoleResultList() throws Exception {
		
		// 检索并设定角色一览信息
		this.setPerRoleInfoList(ya0040Service.getUserRoleResultLst());
		
		// 检索用户拥有的角色信息
		String userId = Session.get(SessionConstants.USERID).toString();
		List<PerUserPermitInfo> perUserPermitInfoList = ya0040Service.getPerUserPermitInfoList(userId);
		
		// 为用户拥有的角色在角色一览中赋值
		result = new ArrayList<String>();	
		for (PerUserPermitInfo perUserPermitInfo: perUserPermitInfoList) {
			result.add(perUserPermitInfo.getPosRoleId());
		}		
		
		return SUCCESS;
	}
	
	/**
	 * 重新取得用户角色一览。
	 * 
	 * @throws Exception
	 */
	public String findUserRoleList() throws Exception {
		// 检索用户角色
		searchRole(userId);
		return SUCCESS;
	}	
	
	/**
	 * 检索角色一览信息。
	 * 
	 * @throws Exception
	 */
	private void searchRole(String userId) throws Exception{
		// 检索角色信息
		this.setPerUserPermitInfoList(ya0040Service.getPerUserPermitInfoList(userId));
		
		// 如果用户角色信息不存在统计件数为0,存在则正常赋值
		if (null != perUserPermitInfoList) {
			this.roleInfosCnt = perUserPermitInfoList.size();
		} else {
			this.roleInfosCnt = 0;
		}		
	}

	/**
	 * 查看用户角色时员工信息校验。
	 */
	public void validatefindUserRoleResultList() {
		
		// 取得员工姓名
		String userNm = userService.getUserNm(Session.get(SessionConstants.USERID).toString());
		
		// 员工姓名是否存在判断
		if(null == userNm || "".equals(userNm)){
			this.addFieldError("ya0040CondA.userNm", propMgr.getMessage("yds.com.warning.0004","员工"));
		}
	}
	
	/**
	 * 更新有效时间时员工信息校验。
	 */
	public void validateupdateTime() {
		
		// 开始时间与结束时间入力判断					
		if (0 < ya0040CondA.getPermitStartDate().compareTo(
				ya0040CondA.getPermitEndDate())) {

			this.addFieldError("popStartTime", propMgr.getMessage("yds.com.warning.0006"));
			this.addFieldError("popEndTime", propMgr.getMessage("yds.com.warning.0006"));
		}
	}
	
	/**
	 * @return the perRoleInfoList
	 */
	public List<PerRoleInfo> getPerRoleInfoList() {
		return perRoleInfoList;
	}

	/**
	 * @param perRoleInfoList the perRoleInfoList to set
	 */
	public void setPerRoleInfoList(List<PerRoleInfo> perRoleInfoList) {
		this.perRoleInfoList = perRoleInfoList;
	}
	
	/**
	 * @return the perUserPermitInfo
	 */
	public PerUserPermitInfo getPerUserPermitInfo() {
		return perUserPermitInfo;
	}

	/**
	 * @param perUserPermitInfo the perUserPermitInfo to set
	 */
	public void setPerUserPermitInfo(PerUserPermitInfo perUserPermitInfo) {
		this.perUserPermitInfo = perUserPermitInfo;
	}

	/**
	 * @return the userInfo
	 */
	public EmpInfo getUserInfo() {
		return userInfo;
	}

	/**
	 * @param userInfo the userInfo to set
	 */
	public void setUserInfo(EmpInfo userInfo) {
		this.userInfo = userInfo;
	}

	/**
	 * @return the perUserPermitInfoList
	 */
	public List<PerUserPermitInfo> getPerUserPermitInfoList() {
		return perUserPermitInfoList;
	}

	/**
	 * @param perUserPermitInfoList the perUserPermitInfoList to set
	 */
	public void setPerUserPermitInfoList(
			List<PerUserPermitInfo> perUserPermitInfoList) {
		this.perUserPermitInfoList = perUserPermitInfoList;
	}

	/**
	 * @return the serialVersionUID
	 */
	public static long getSerialVersionUID() {
		return serialVersionUID;
	}	
	
	/**
	 * @param ya0040Service the ya0040Service to set
	 */
	public void setYa0040Service(Ya0040Service ya0040Service) {
		this.ya0040Service = ya0040Service;
	}	
	
	/**
	 * @return the ya0040CondA
	 */
	public Ya0040CondA getYa0040CondA() {
		return ya0040CondA;
	}

	/**
	 * @param ya0040CondA the ya0040CondA to set
	 */
	public void setYa0040CondA(Ya0040CondA ya0040CondA) {
		this.ya0040CondA = ya0040CondA;
	}

	/**
	 * @return the roleInfosCnt
	 */
	public int getRoleInfosCnt() {
		return roleInfosCnt;
	}

	/**
	 * @param roleInfosCnt the roleInfosCnt to set
	 */
	public void setRoleInfosCnt(int roleInfosCnt) {
		this.roleInfosCnt = roleInfosCnt;
	}

	/**
	 * @return the perRoleIdInfos
	 */
	public List<String> getPerRoleIdInfos() {
		return perRoleIdInfos;
	}

	/**
	 * @param perRoleIdInfos the perRoleIdInfos to set
	 */
	public void setPerRoleIdInfos(List<String> perRoleIdInfos) {
		this.perRoleIdInfos = perRoleIdInfos;
	}

	/**
	 * @return the result
	 */
	public List<String> getResult() {
		return result;
	}

	/**
	 * @param result the result to set
	 */
	public void setResult(List<String> result) {
		this.result = result;
	}
	
	/**
	 * @param userService the userService to set
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}
}
