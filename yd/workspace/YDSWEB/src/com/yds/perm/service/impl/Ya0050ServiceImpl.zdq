/*
 * @(#)PerQueryServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 权限管理
 */
package com.yds.perm.service.impl;

import java.util.ArrayList;
import java.util.List;
import org.springframework.stereotype.Service;
import com.yds.common.bean.Node;
import com.yds.common.bean.Tree;
import com.yds.common.bean.UserPerm;
import com.yds.perm.bean.RoleInfo;
import com.yds.perm.dao.Ya0050Dao;
import com.yds.perm.service.Ya0050Service;
import com.yds.util.service.TreeUtil;

/**
 * @see com.yds.perm.service.Ya0050Service
 */
@Service("ya0050Service")
public class Ya0050ServiceImpl implements Ya0050Service {
	/** 根节点id. */
	private static final String NODEID = "000";
	/** 根节点名称. */
	private static final String NODENAME = "远东计算机";
	private Ya0050Dao ya0050Dao;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Tree getPermissionInfos() {
		// 声明一个树状结构
		Tree tree;
		// 声明一个节点
		List<Node> nodePi = new ArrayList<Node>();
		// 取得权限树所需的数据
		List<UserPerm> pis = ya0050Dao.getPermissionInfos();
		// 将权限转化为节点类型
		for (UserPerm perInfo : pis) {
			Node nd = new Node();
			nd.setId(perInfo.getPermitId());
			nd.setTxt(perInfo.getMenuName());
			nd.setDispSeq(perInfo.getDispSeq());
			nodePi.add(nd);
		}
		// 将节点转化为树形结构
		tree = TreeUtil.getTree(nodePi);
		// 设置虚拟根节点
		tree.setId(NODEID);
		tree.setTxt(NODENAME);
		return tree;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UserPerm> getUserInfosByPermitId(String permitId) {
		return ya0050Dao.getUserInfosByPermitId(permitId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<RoleInfo> getRoleInfosByPermitId(String permitId) {
		return ya0050Dao.getRoleInfosByPermitId(permitId);
	}

	/**
	 * @return the ya0050Dao
	 */
	public Ya0050Dao getYa0050Dao() {
		return ya0050Dao;
	}

	/**
	 * @param ya0050Dao the ya0050Dao to set
	 */
	public void setYa0050Dao(Ya0050Dao ya0050Dao) {
		this.ya0050Dao = ya0050Dao;
	}

}
