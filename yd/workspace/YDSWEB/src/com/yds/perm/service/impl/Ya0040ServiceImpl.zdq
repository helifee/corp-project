/*
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 权限管理
 */

package com.yds.perm.service.impl;

import java.util.List;
import org.springframework.stereotype.Service;
import com.yds.base.service.AbstractBaseService;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.LogService;
import com.yds.common.service.SessionService;
import com.yds.perm.bean.PerRoleInfo;
import com.yds.perm.bean.PerUserPermitInfo;
import com.yds.perm.bean.Ya0040CondA;
import com.yds.perm.dao.Ya0040Dao;
import com.yds.perm.service.Ya0040Service;
import com.yds.util.service.DateUtil;
import com.yds.util.service.StringUtil;

/**
 * @see com.yds.perm.service.Ya0040Service
 *
 */
@Service("ya0040Service")
public class Ya0040ServiceImpl extends AbstractBaseService implements
		Ya0040Service {

	private Ya0040Dao ya0040Dao;
	
	// 日志信息
	private String logMessage;
	
	// 日志service
	private LogService logService;

	/**
	 * @param logService the logService to set
	 */
	public void setLogService(LogService logService) {
		this.logService = logService;
	}

	/**
	 * @param ya0040Dao the ya0040Dao to set
	 */
	public void setYa0040Dao(Ya0040Dao ya0040Dao) {
		this.ya0040Dao = ya0040Dao;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<PerUserPermitInfo> getPerUserPermitInfoList(String userId) {

		// 编辑用户ID（前两位添加‘YD’）
		String addUserId = StringUtil.leftPadYd(userId);

		// 调用DAO
		List<PerUserPermitInfo> perUserPermitInfoList = ya0040Dao.getPerUserPermitInfoList(addUserId);
		
		// 如果结束日期是"9999-12-31"，则不显示
		int infoCount = perUserPermitInfoList.size();
		if (0 != infoCount) {
			
			for (int i = 0; i < infoCount; i++) {
				if ("9999-12-31".equals(perUserPermitInfoList.get(i).getPermitEndDate())) {
					perUserPermitInfoList.get(i).setPermitEndDate("");
				}
			}
		}
		
		return perUserPermitInfoList;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void insertPerUserPermitInfoList(Ya0040CondA ya0040CondA) {		
		
		// 取得登录用户Id
		String loginUserId = SessionService.getLoginUserId();
		
		// 设置登录用户ID到bean中
		ya0040CondA.setLoginUserId(loginUserId);
		
		// 取得当前系统时间（yyy-MM-dd型）
		String permitStaDate = DateUtil.getDate();
		
		// 取得当前系统时间（yyy-MM-dd HH:mm:ss型）
		String updateTime = DateUtil.getDateTime();
		
		// 设置更新用bean
		// 设置权限有效开始时间到bean中
		ya0040CondA.setPermitStartDate(permitStaDate);
		
		// 设置权限有效结束时间到bean中
		ya0040CondA.setPermitEndDate("9999-12-31");
		
		// 设置修改时间到bean中
		ya0040CondA.setUpdateTime(updateTime);		

		// 取得角色ID的值
		List<String> perRoleIdInfos = ya0040CondA.getPerRoleIdInfos();
		
		// 编辑用户ID（前两位添加‘YD’）
		ya0040CondA.setUserId(StringUtil.leftPadYd(ya0040CondA.getUserId()));
		
		// 逐条进行登录处理
		for (int i = 0; i < perRoleIdInfos.size(); i++) {
			ya0040CondA.setPerRoleId(perRoleIdInfos.get(i));
			ya0040Dao.insertPerUserPermitInfoList(ya0040CondA);
		}

		// 日志信息的编辑
		logMessage = "ID为" + ya0040CondA.getUserId() + "的角色信息新建成功。";
		
		// 日志的追加  日志级别未定
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Not_Delete.toString(), CommonConstants.SubIdEnum.Sub_PERM.toString(), SessionService.getLoginUserId(), logMessage, "");
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<PerRoleInfo> getUserRoleResultLst() {

		// 调用DAO
		List<PerRoleInfo> perRoleInfoList = ya0040Dao.getUserRoleResultLst();		
		return perRoleInfoList;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void updatePermitTime(Ya0040CondA ya0040CondA) {
		
		// 调用DAO
		ya0040Dao.updatePermitTime(ya0040CondA);
		
		// 日志信息的编辑
		logMessage = "ID为" + ya0040CondA.getUserId() + "的角色有效时间修改成功。";
		
		// 日志的追加  日志级别未定
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Not_Delete.toString(), CommonConstants.SubIdEnum.Sub_PERM.toString(), SessionService.getLoginUserId(), logMessage, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void deletePermitData(Ya0040CondA ya0040CondA) {
		
		// 调用DAO
		ya0040Dao.deletePermitData(ya0040CondA);
		
		// 日志信息的编辑
		logMessage = "ID为" + ya0040CondA.getUserId() + "的角色信息删除成功。";
		
		// 日志的追加  日志级别未定
		logService.insertLogInfo(CommonConstants.LoglevelEnum.Not_Delete.toString(), CommonConstants.SubIdEnum.Sub_PERM.toString(), SessionService.getLoginUserId(), logMessage, "");
	}

}
