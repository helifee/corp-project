/*
 * @(#)BasePagerAction.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */
package com.yds.base.action;

import com.yds.common.bean.PagerInfo;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.SessionConstants;
import com.yds.common.service.SessionService;

/**
 * 分页PagerAction基类.
 *
 * @author fengliang
 * @version 1.00 2010/02/08
 */
public class BasePagerAction extends AbstractBaseAction {
	private static final long serialVersionUID = -7784877334838700538L;
	/** 当前页. */
	protected int pageNumber;
	/** 页面显示用到的参数. */
	protected PagerInfo pager;

	/**
	 * 分页参数设置.
	 *
	 * @param totalCount
	 *            总记录数
	 * @param pagerActionName
	 *            请求action名称
	 * @param perDisplayCount
	 *            每页显示的记录数
	 */
	protected void setPagerParamter(Long totalCount, String pagerActionName, Integer perDisplayCount) {

		// 判断页面是否首次进入。首次进入时pager对象为空，此时初始化pager对象。
		if (pager == null) {
			pager = new PagerInfo();
		} 
	
		pager.setTotalCount(totalCount); // 总记录数。

		// 如果用户没指定每页显示的记录数，则采取默认值。
		if (perDisplayCount == null) {
			pager.setPerDisplayCount(CommonConstants.PER_COUNT);
			pager.setTotalPagesCount(totalCount, CommonConstants.PER_COUNT);
		} else {
			pager.setPerDisplayCount(perDisplayCount);
			pager.setTotalPagesCount(totalCount, perDisplayCount);
		}
		pager.setPagerIndexCount(CommonConstants.PAGER_INDEX_COUNT); // 分页导航条最多显示的页码数。
		pager.setPagerActionName(pagerActionName); // 请求action名称。
				
		if(pageNumber == 0){
			pageNumber = 1; // 当前页码。
		} 
		
		// 从第offset条记录开始查询。
		if (pageNumber > 1) {
			pager.setOffset(pager.getPerDisplayCount() * (pageNumber - 1));
			
		} else {
			pager.setOffset(0); 
		}
		SessionService.set(SessionConstants.PAGER_OFFSET, pager.getOffset());
	}

	/**
	 * 分页参数设置.
	 *
	 * @param totalCount
	 *            总记录数
	 * @param pagerActionName
	 *            请求action名称
	 */
	protected void setPagerParamter(Long totalCount, String pagerActionName) {
		setPagerParamter(totalCount, pagerActionName, null);
	}

	/**
	 * @return the pageNumber
	 */
	public int getPageNumber() {
		return pageNumber;
	}

	/**
	 * @param pageNumber
	 *            the pageNumber to set
	 */
	public void setPageNumber(int pageNumber) {
		this.pageNumber = pageNumber;
	}

	/**
	 * @return the pager
	 */
	public PagerInfo getPager() {
		return pager;
	}

	/**
	 * @param pager
	 *            the pager to set
	 */
	public void setPager(PagerInfo pager) {
		this.pager = pager;
	}
}
