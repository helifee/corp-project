/*
 * @(#) Yd0040Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 社内团购
 */
package com.yds.gps.action;

import java.io.File;
import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import com.yds.common.service.ComCodeInfoService;
import com.yds.common.service.CommonConstants;
import com.yds.common.service.SessionService;
import com.yds.base.action.AbstractBaseAction;
import com.yds.gps.service.GpsConstants;
import com.yds.gps.service.Yd0040Service;
import com.yds.common.bean.ComCodeInfo;
import com.yds.common.bean.TreeListInfo;
import com.yds.gps.bean.GpsGoodsCate;
import com.yds.gps.bean.GpsGoodsInfo;
import com.yds.gps.common.service.CateService;
import com.yds.util.service.FileUtil;

/**
 * 商品管理画面
 * 
 * @author pengchuan
 * @version 1.00 2010/10/21
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("yd0040Action")
public class Yd0040Action extends AbstractBaseAction {

	private static final long serialVersionUID = -3145571271505045948L;
	private Yd0040Service yd0040Service;
	private ComCodeInfoService comCodeInfoService;
	private CateService cateService;
	private GpsGoodsInfo gpsGoodsInfo;
	private GpsGoodsCate gpsGoodsCate;
	private List<GpsGoodsInfo> goodsList;
	private List<GpsGoodsInfo> goodsSortList;
	private List<String> gpsStoreList;
	/** 商品分类Id. */
	private String goodsCateId;
	/** 商品分类名称. */
	private String goodsCateName;
	/** 商品Id. */
	private String goodsId;
	/** 区分初期显示Flag. */
	private String pubFlag;
	/** 商品显示顺序 */
	private String goodsSort;
	/** 公开区分列表 */
	private List<ComCodeInfo> pubList;
	/** 其他画面传商品分类Id. */
	private String fromGoodsCateId;
	/** 商品分类列表 */
	private List<TreeListInfo> goodsCateList;

	/** 上传文件相关项目 */
	private File upload;
	private String uploadFileName;
	private String imgUrl;
	private String fileName;
	private int reFlag;
	private int goodsCnt;

	/**
	 * 画面的初期显示 商品类别取得
	 * 
	 * @return SUCCESS
	 */
	public String execute() throws Exception {

		pubList = comCodeInfoService.getComCodeInfo("GPS", "CAT_FLAG");
		// 分类权限判断
		if (!hasPermit(GpsConstants.SYSTEM_NAME, GpsConstants.GPS_MANAGER)) {
			for (int i = pubList.size() - 1; i >= 0; i--) {
				ComCodeInfo comCodeInfo = pubList.get(i);
				if (!GpsConstants.GOODS_FLAG_PRIVATE.equals(comCodeInfo
						.getDiffNo())) {
					pubList.remove(comCodeInfo);
				}
			}
			if (goodsCateId != null) {
				if (SessionService.getLoginUserId().equals(
						yd0040Service.getPubFlag(goodsCateId).getMngrId())) {
					findGoodsList();
				}
			} else if (fromGoodsCateId != null && !"".equals(fromGoodsCateId)) {
				if (SessionService.getLoginUserId().equals(
						yd0040Service.getPubFlag(fromGoodsCateId).getMngrId())) {
					reFlag = 1;
					findGoodsList();
				} else {
					reFlag = 0;
				}
			}
			pubFlag = GpsConstants.GOODS_FLAG_PRIVATE;
		} else {
			reFlag = 1;
			findGoodsList();
			pubFlag = GpsConstants.GOODS_FLAG_PUBLIC;
		}
		this.setGoodsCateList(cateService.getCateTreeInfoList(
				hasPermit(GpsConstants.SYSTEM_NAME, GpsConstants.GPS_MANAGER),
				""));
		return SUCCESS;
	}

	/**
	 * 取得商品列表信息
	 * 
	 * @return SUCCESS
	 */
	public String findGoodsList() {
		if (goodsCateId == null) {
			if (fromGoodsCateId != null) {
				this.goodsList = yd0040Service.getGoodsList(fromGoodsCateId);
				this.goodsCnt = goodsList.size();
				return SUCCESS;
			} else {
				return SUCCESS;
			}
		}
		if (goodsCateId.indexOf(",") != -1) {
			String a[] = goodsCateId.split(",");
			goodsCateId = a[1];
			this.goodsList = yd0040Service.getGoodsList(goodsCateId);
			this.goodsCnt = goodsList.size();
		} else {
			this.goodsList = yd0040Service.getGoodsList(goodsCateId);
			this.goodsCnt = goodsList.size();
		}
		return SUCCESS;
	}

	/**
	 * 取得商品分类名称
	 * 
	 * @return SUCCESS
	 */
	public String findGoodsCateName() {
		if (goodsCateId.indexOf(",") != -1) {

			String a[] = goodsCateId.split(",");
			goodsCateId = a[1];
			goodsCateName = yd0040Service.getGoodsCateName(goodsCateId);
		}
		return SUCCESS;
	}

	/**
	 * 取得商品信息列表
	 * 
	 * @return SUCCESS
	 */
	public String findGoodsSortList() {

		if (goodsCateId.indexOf(",") != -1) {
			String a[] = goodsCateId.split(",");
			goodsCateId = a[1];
			this.goodsSortList = yd0040Service.getGoodsSortList(goodsCateId);
		}
		return SUCCESS;
	}

	/**
	 * 取得输入框自动匹配内容
	 * 
	 * @return SUCCESS
	 */
	public String findStoreLst() {
		if (goodsCateId.indexOf(",") != -1) {
			String a[] = goodsCateId.split(",");
			goodsCateId = a[1];
		}
		// 取得店铺信息列表
		this.gpsStoreList = yd0040Service.getStoreList(goodsCateId);

		return SUCCESS;
	}

	/**
	 * 取得商品排序列表
	 * 
	 * @return SUCCESS
	 */
	public String updateGoodsSort() {
		if (goodsCateId == null) {
			if (fromGoodsCateId != null) {
				gpsGoodsCate = yd0040Service.getPubFlag(fromGoodsCateId);
			}
		} else {
			String a[] = goodsCateId.split(",");
			goodsCateId = a[1];
			gpsGoodsCate = yd0040Service.getPubFlag(goodsCateId);
		}
		// 权限判断
		if (!hasPermit(GpsConstants.SYSTEM_NAME, GpsConstants.GPS_MANAGER)) {
			if (GpsConstants.GOODS_FLAG_PRIVATE
					.equals(gpsGoodsCate.getPubFlg())) {
				if (yd0040Service.updateGoodsSort(goodsSort) == 0) {
					return NONE;
				}
			} else {
				return NONE;
			}
		} else {
			if (yd0040Service.updateGoodsSort(goodsSort) == 0) {
				return NONE;
			}
		}
		return SUCCESS;
	}

	/**
	 * 追加商品
	 * 
	 * @return SUCCESS
	 * @throws Exception
	 */
	public String insertGoodsInfo() throws Exception {

		if (goodsCateId.indexOf(",") != -1) {
			String a[] = goodsCateId.split(",");
			goodsCateId = a[1];
			gpsGoodsInfo.setGoodsCateId(goodsCateId);
		}
		gpsGoodsInfo.setUpdateUser(SessionService.getLoginUserId());
		gpsGoodsInfo.setMngrId(SessionService.getLoginUserId());
		fileUpLoad();
		// 设定照片的后缀名
		gpsGoodsInfo.setGoodsImage(FileUtil.getExt(fileName));
		// 权限判断
		if (!hasPermit(GpsConstants.SYSTEM_NAME, GpsConstants.GPS_MANAGER)) {
			if (GpsConstants.GOODS_FLAG_PRIVATE.equals(yd0040Service
					.getPubFlag(goodsCateId).getPubFlg())) {
				if (yd0040Service.insertGoodsInfo(gpsGoodsInfo)) {
					return SUCCESS;
				}
			} else {
				return NONE;
			}
		} else {
			if (yd0040Service.insertGoodsInfo(gpsGoodsInfo)) {
				return SUCCESS;
			}
		}
		return ERROR;
	}

	/**
	 * 追加分类
	 * 
	 * @return SUCCESS
	 * @throws Exception
	 */
	public String insertGoodsCate() throws Exception {
		gpsGoodsCate.setMngrId(SessionService.getLoginUserId());
		// 权限判断
		if (!hasPermit(GpsConstants.SYSTEM_NAME, GpsConstants.GPS_MANAGER)) {
			if (GpsConstants.GOODS_FLAG_PRIVATE
					.equals(gpsGoodsCate.getPubFlg())) {
				if (yd0040Service.insertGoodsCate(gpsGoodsCate)) {
					putOpTip(propMgr.getMessage("yds.com.info.0008"));
					return SUCCESS;
				}
			} else {
				return NONE;
			}
		} else {
			if (yd0040Service.insertGoodsCate(gpsGoodsCate)) {
				putOpTip(propMgr.getMessage("yds.com.info.0008"));
				return SUCCESS;
			}
		}
		return ERROR;
	}

	/**
	 * 修改商品初期显示
	 * 
	 * @return SUCCESS
	 */
	public String findGoodsInfo() {

		gpsGoodsInfo = yd0040Service.getGoodsInfo(goodsId);
		goodsCateName = yd0040Service.getGoodsCateName(gpsGoodsInfo
				.getGoodsCateId());
		return SUCCESS;
	}

	/**
	 * 修改商品信息
	 * 
	 * @return SUCCESS
	 * @throws Exception
	 */
	public String updateGoodsInfo() throws Exception {

		GpsGoodsInfo gpsGoodsInfo2 = yd0040Service.getGoodsInfo(gpsGoodsInfo
				.getGoodsId());
		// 照片保存
		fileUpLoad();
		// 权限判断
		if (!hasPermit(GpsConstants.SYSTEM_NAME, GpsConstants.GPS_MANAGER)) {
			if (GpsConstants.GOODS_FLAG_PRIVATE.equals(yd0040Service
					.getPubFlag(gpsGoodsInfo2.getGoodsCateId()).getPubFlg())) {
				if (yd0040Service.updateGoodsInfo(gpsGoodsInfo)) {
					return SUCCESS;
				}
			} else {
				return NONE;
			}
		} else {
			if (yd0040Service.updateGoodsInfo(gpsGoodsInfo)) {
				return SUCCESS;
			}
		}
		return ERROR;
	}

	/**
	 * 上传文件
	 * 
	 * @return SUCCESS
	 */
	public String fileUpLoad() throws Exception {
		// 　图片的文件名为商品ＩＤ．后缀
		FileUtil.saveFile(fileName, propMgr
				.getParameter(CommonConstants.FILE_PATH.GPS_IMAGE.value()),
				this.gpsGoodsInfo.getGoodsId());
		if (!fileName.equals("")) {
			this.gpsGoodsInfo.setGoodsImage(this.gpsGoodsInfo.getGoodsId()
					+ FileUtil.getExt(fileName));
		}
		return SUCCESS;
	}

	/**
	 * 上传校验
	 * 
	 * @return SUCCESS
	 */
	public String uploadValidate() {

		return SUCCESS;
	}

	/**
	 * @param yd0040Service
	 *            the yd0040Service to set
	 */
	public void setYd0040Service(Yd0040Service yd0040Service) {
		this.yd0040Service = yd0040Service;
	}

	/**
	 * @param comCodeInfoService
	 *            the comCodeInfoService to set
	 */
	public void setComCodeInfoService(ComCodeInfoService comCodeInfoService) {
		this.comCodeInfoService = comCodeInfoService;
	}

	/**
	 * @return the pubList
	 */
	public List<ComCodeInfo> getPubList() {
		return pubList;
	}

	/**
	 * @param pubList
	 *            the pubList to set
	 */
	public void setPubList(List<ComCodeInfo> pubList) {
		this.pubList = pubList;
	}

	/**
	 * @param cateService
	 *            the cateService to set
	 */
	public void setCateService(CateService cateService) {
		this.cateService = cateService;
	}

	/**
	 * @return the goodsCateList
	 */
	public List<TreeListInfo> getGoodsCateList() {
		return goodsCateList;
	}

	/**
	 * @param goodsCateList
	 *            the goodsCateList to set
	 */
	public void setGoodsCateList(List<TreeListInfo> goodsCateList) {
		this.goodsCateList = goodsCateList;
	}

	/**
	 * @return the gpsGoodsInfo
	 */
	public GpsGoodsInfo getGpsGoodsInfo() {
		return gpsGoodsInfo;
	}

	/**
	 * @param gpsGoodsInfo
	 *            the gpsGoodsInfo to set
	 */
	public void setGpsGoodsInfo(GpsGoodsInfo gpsGoodsInfo) {
		this.gpsGoodsInfo = gpsGoodsInfo;
	}

	/**
	 * @return the goodsCateId
	 */
	public String getGoodsCateId() {
		return goodsCateId;
	}

	/**
	 * @param goodsCateId
	 *            the goodsCateId to set
	 */
	public void setGoodsCateId(String goodsCateId) {
		this.goodsCateId = goodsCateId;
	}

	/**
	 * @return the fromGoodsCateId
	 */
	public String getFromGoodsCateId() {
		return fromGoodsCateId;
	}

	/**
	 * @param fromGoodsCateId
	 *            the fromGoodsCateId to set
	 */
	public void setFromGoodsCateId(String fromGoodsCateId) {
		this.fromGoodsCateId = fromGoodsCateId;
	}

	/**
	 * @param goodsList
	 *            the goodsList to set
	 */
	public void setGoodsList(List<GpsGoodsInfo> goodsList) {
		this.goodsList = goodsList;
	}

	/**
	 * @return the goodsList
	 */
	public List<GpsGoodsInfo> getGoodsList() {
		return goodsList;
	}

	/**
	 * @return the goodsSortList
	 */
	public List<GpsGoodsInfo> getGoodsSortList() {
		return goodsSortList;
	}

	/**
	 * @param goodsSortList
	 *            the goodsSortList to set
	 */
	public void setGoodsSortList(List<GpsGoodsInfo> goodsSortList) {
		this.goodsSortList = goodsSortList;
	}

	/**
	 * @return the gpsStoreList
	 */
	public List<String> getGpsStoreList() {
		return gpsStoreList;
	}

	/**
	 * @param gpsStoreList
	 *            the gpsStoreList to set
	 */
	public void setGpsStoreList(List<String> gpsStoreList) {
		this.gpsStoreList = gpsStoreList;
	}

	/**
	 * @return the goodsSort
	 */
	public String getGoodsSort() {
		return goodsSort;
	}

	/**
	 * @param goodsSort
	 *            the goodsSort to set
	 */
	public void setGoodsSort(String goodsSort) {
		this.goodsSort = goodsSort;
	}

	/**
	 * @return the gpsGoodsCate
	 */
	public GpsGoodsCate getGpsGoodsCate() {
		return gpsGoodsCate;
	}

	/**
	 * @param gpsGoodsCate
	 *            the gpsGoodsCate to set
	 */
	public void setGpsGoodsCate(GpsGoodsCate gpsGoodsCate) {
		this.gpsGoodsCate = gpsGoodsCate;
	}

	/**
	 * @return the goodsId
	 */
	public String getGoodsId() {
		return goodsId;
	}

	/**
	 * @param goodsId
	 *            the goodsId to set
	 */
	public void setGoodsId(String goodsId) {
		this.goodsId = goodsId;
	}

	/**
	 * @return the goodsCateName
	 */
	public String getGoodsCateName() {
		return goodsCateName;
	}

	/**
	 * @param goodsCateName
	 *            the goodsCateName to set
	 */
	public void setGoodsCateName(String goodsCateName) {
		this.goodsCateName = goodsCateName;
	}

	/**
	 * @return the upload
	 */
	public File getUpload() {
		return upload;
	}

	/**
	 * @param upload
	 *            the upload to set
	 */
	public void setUpload(File upload) {
		this.upload = upload;
	}

	/**
	 * @return the uploadFileName
	 */
	public String getUploadFileName() {
		return uploadFileName;
	}

	/**
	 * @param uploadFileName
	 *            the uploadFileName to set
	 */
	public void setUploadFileName(String uploadFileName) {
		this.uploadFileName = uploadFileName;
	}

	/**
	 * @return the imgUrl
	 */
	public String getImgUrl() {
		return imgUrl;
	}

	/**
	 * @param imgUrl
	 *            the imgUrl to set
	 */
	public void setImgUrl(String imgUrl) {
		this.imgUrl = imgUrl;
	}

	/**
	 * @return the fileName
	 */
	public String getFileName() {
		return fileName;
	}

	/**
	 * @param fileName
	 *            the fileName to set
	 */
	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	/**
	 * @return the pubFlag
	 */
	public String getPubFlag() {
		return pubFlag;
	}

	/**
	 * @param pubFlag
	 *            the pubFlag to set
	 */
	public void setPubFlag(String pubFlag) {
		this.pubFlag = pubFlag;
	}

	/**
	 * @return the goodsCnt
	 */
	public int getGoodsCnt() {
		return goodsCnt;
	}

	/**
	 * @param goodsCnt
	 *            the goodsCnt to set
	 */
	public void setGoodsCnt(int goodsCnt) {
		this.goodsCnt = goodsCnt;
	}

	/**
	 * @return the reFlag
	 */
	public int getReFlag() {
		return reFlag;
	}

	/**
	 * @param reFlag
	 *            the reFlag to set
	 */
	public void setReFlag(int reFlag) {
		this.reFlag = reFlag;
	}

}
