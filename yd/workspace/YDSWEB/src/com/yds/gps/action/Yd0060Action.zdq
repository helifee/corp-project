/*
 * @(#) Yd0060Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 社内团购
 */
package com.yds.gps.action;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.yds.base.action.AbstractBaseAction;
import com.yds.base.action.HasPermitInter;
import com.yds.common.service.ComCodeInfoService;
import com.yds.common.service.SessionConstants;
import com.yds.common.service.SessionService;
import com.yds.gps.bean.GpsOrderDetail;
import com.yds.gps.bean.TansferCondA;
import com.yds.gps.bean.Yd0060OrderDetail;
import com.yds.gps.bean.Yd0060OrderInfo;
import com.yds.gps.common.service.OrderGoodsInfoService;
import com.yds.gps.common.service.TansferService;
import com.yds.gps.common.bean.GpsOrderInfo;
import com.yds.gps.service.GpsConstants;
import com.yds.gps.service.TansferException;
import com.yds.gps.service.Yd0060Service;
import com.yds.util.service.StringUtil;
/**
 * 订单管理画面
 * 
 * @author pengchuan
 * @version 1.00 2010/11/08
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("yd0060Action")

public class Yd0060Action  extends AbstractBaseAction implements HasPermitInter {

	private static final long serialVersionUID = -1345711495816173838L;
	private Yd0060Service yd0060Service;
	private ComCodeInfoService comCodeInfoService;
	private TansferCondA tansferCondA;
	private TansferService tansferService;
	private GpsOrderInfo gpsOrderInfo;
	private GpsOrderDetail gpsOrderDetail;
    private String orderId;
    /** 订购者ID字符串. */
    private String order;
    /** 是否是结束者. */
    private boolean manager;
    /** 订单开闭标志位. */
    private String cancelFlag;
    /** 商品分类Id. */
    private String goodsCateId;
    private String orderContent;
    /** 检索结果bean. */
    private Yd0060OrderInfo yd0060OrderInfo;
    /** 检索结果bean. */
    private Yd0060OrderDetail yd0060OrderDetail;
    /** 个人账户余额. */
    private String pesonRemain;
   /** 个人账户ID. */
    private String pesAccId;
	/** orderGoodsInfoService */
	private OrderGoodsInfoService orderGoodsInfoService;
	/** 错误消息. */
	private String errorMessage;
	/**
	 * 画面的初期显示 商品类别取得
	 * 
	 * @return SUCCESS
	 */
	public String execute() throws Exception {

		//取得订单一览信息
		manager = true;
		yd0060OrderInfo = yd0060Service.getGpsOrderInfo(orderId);
		if (null != yd0060OrderInfo) {
			if (GpsConstants.ORDER_OPEN.equals(yd0060OrderInfo.getSwitchFlag())) {

				yd0060OrderInfo.setSwitchName(propMgr
						.getMessage("yds.gps.info.0032"));
			} else {
				gpsOrderInfo = yd0060Service.getOrderInfo(orderId);
				if (!SessionService.getLoginUserId().equals(
						gpsOrderInfo.getUpdateUser())) {
					manager = false;
				}

			}
			return SUCCESS;
		}
		errorMessage = propMgr.getMessage("yds.gps.info.0018");
		return ERROR;
		 
	}
	/**
	 * 修改画面初期显示
	 * @return String
	 * @throws Exception
	 */
	public String findOrderInfo()throws Exception{
		
		gpsOrderInfo=yd0060Service.getOrderInfo(orderId);
		return SUCCESS;
	}
	/**
	 * 保存修改信息
	 * @return String
	 * @throws Exception
	 */
    public String updateOrderInfo()throws Exception{
		
    	gpsOrderInfo.setOrderId(orderId);
		if(yd0060Service.updateOrderInfo(gpsOrderInfo)){
			putOpTip( propMgr.getMessage("yds.com.info.0009"));
			return SUCCESS;
		}
	    return ERROR;
	}
	/**
	 * 追加订购者
	 * @return
	 * @throws Exception
	 */
	public String insertOrder() throws Exception {

		int flag = 0;
		gpsOrderDetail.setCustomerId(StringUtil.leftPadYd(gpsOrderDetail
				.getCustomerId()));
		String[] orderString = order.split(",");
		for (int i = 0; i < orderString.length; i++) {
			if (StringUtil.leftPadYd(gpsOrderDetail.getCustomerId()).equals(
					orderString[i])) {
				flag = 1;
			}
		}
		if (flag == 1) {
			try {
				yd0060Service.updateOrderDetail(gpsOrderDetail, goodsCateId);
				putOpTip(propMgr.getMessage("yds.com.info.0008"));
			} catch (TansferException e) {
				SessionService.delete(SessionConstants._MESSAGE_ID);
				errorMessage = e.getId().value();
				return ERROR;
			}
		} else {
			try {
				yd0060Service.insertOrder(gpsOrderDetail, goodsCateId);
				putOpTip(propMgr.getMessage("yds.com.info.0008"));
			} catch (TansferException e) {
				SessionService.delete(SessionConstants._MESSAGE_ID);
				errorMessage = e.getId().value();
				return ERROR;
			}
		}
		return SUCCESS;
	}

	/**
	 * 结束订单
	 * 
	 * @return String
	 * @throws Exception
	 */
    public String updateOrderMoney()throws Exception{
    	
		try {
			yd0060Service.updateEndOrder(orderId, orderContent, tansferCondA,
					goodsCateId, true);
		} catch (TansferException e) {
			SessionService.delete(SessionConstants._MESSAGE_ID);
			errorMessage = e.getId().value();
			return ERROR;
		}
		return SUCCESS;
	}
	 /**
	  * 删除订购者   
	  * @return
	  * @throws Exception
	  */
	public String deleteGoodsOrder() throws Exception {

		String[] orderString = order.split(",");
		try {
			// 删除处理
			yd0060Service.deleteGoodsOrder(gpsOrderDetail, goodsCateId,
					orderString);
			putOpTip(propMgr.getMessage("yds.com.info.0010"));
		} catch (TansferException e) {
			SessionService.delete(SessionConstants._MESSAGE_ID);
			errorMessage = e.getId().value();
			return ERROR;
		}
		return SUCCESS;
	}
	/**
	 * 作废订单
	 * @return String
	 * @throws Exception
	 */
	public String cancelOrder() throws Exception {

		if (GpsConstants.ORDER_CLOSE.equals(cancelFlag)) {
			// 订单已结束处理
			try {
				yd0060Service.deleteOrder(orderId);
				putOpTip(propMgr.getMessage("yds.gps.info.0036"));
			} catch (TansferException e) {
				SessionService.delete(SessionConstants._MESSAGE_ID);
				errorMessage = e.getId().value();
				return ERROR;
			}
		} else {
			// 订单未结束处理（先结束订单）
			try {
				yd0060Service.updateAndDeleOrder(orderId, orderContent,
						tansferCondA, goodsCateId);
				putOpTip(propMgr.getMessage("yds.gps.info.0036"));
			} catch (TansferException e) {
				SessionService.delete(SessionConstants._MESSAGE_ID);
				errorMessage = e.getId().value();
				return ERROR;
			}
		}
		return SUCCESS;
	}
	
	/**
	 * 取得个人余额
	 * @return SUCCESS
	 */
	public  String findPesonRemain(){
			
		pesonRemain=yd0060Service.getPesonRemain(StringUtil.leftPadYd(pesAccId));
		return SUCCESS;
	}
	
	@Override
	public boolean hasPermit(String methodName) {
		if ("findPesonRemain".equals(methodName)) {
			return true;
		}
		if (null == orderId) {
			orderId = gpsOrderDetail.getOrderId();
		}
		// 登录者是否为团购管理者
		boolean gpsManager = hasPermit(GpsConstants.SYSTEM_NAME,
				GpsConstants.GPS_MANAGER);

		if (orderGoodsInfoService.isManager(SessionService.getLoginUserId(),
				orderId, gpsManager)) {
			// 追加、删除、作废必须是结束订单者才可以
			if (("cancelOrder".equals(methodName) && GpsConstants.ORDER_CLOSE
					.equals(cancelFlag))
					|| "deleteGoodsOrder".equals(methodName)
					|| "insertOrder".equals(methodName)) {
				gpsOrderInfo = yd0060Service.getOrderInfo(orderId);
				// 取不到订单信息
				if (null == gpsOrderInfo) {
					return false;
				}
				// 当前用户不是订单结束者
				if (!SessionService.getLoginUserId().equals(
						gpsOrderInfo.getUpdateUser())) {
					return false;
				}
			}
			return true;
		} else {
			// 不能管理该团购的情况
			return false;
		}
	}
	/**
	 * @return the yd0060Service
	 */
	public Yd0060Service getYd0060Service() {
		return yd0060Service;
	}
	/**
	 * @param yd0060Service the yd0060Service to set
	 */
	public void setYd0060Service(Yd0060Service yd0060Service) {
		this.yd0060Service = yd0060Service;
	}
	/**
	 * @return the comCodeInfoService
	 */
	public ComCodeInfoService getComCodeInfoService() {
		return comCodeInfoService;
	}
	/**
	 * @param comCodeInfoService the comCodeInfoService to set
	 */
	public void setComCodeInfoService(ComCodeInfoService comCodeInfoService) {
		this.comCodeInfoService = comCodeInfoService;
	}
	/**
	 * @return the orderId
	 */
	public String getOrderId() {
		return orderId;
	}
	/**
	 * @param orderId the orderId to set
	 */
	public void setOrderId(String orderId) {
		this.orderId = orderId;
	}
	/**
	 * @return the gpsOrderInfo
	 */
	public GpsOrderInfo getGpsOrderInfo() {
		return gpsOrderInfo;
	}
	/**
	 * @param gpsOrderInfo the gpsOrderInfo to set
	 */
	public void setGpsOrderInfo(GpsOrderInfo gpsOrderInfo) {
		this.gpsOrderInfo = gpsOrderInfo;
	}
	/**
	 * @return the yd0060OrderInfo
	 */
	public Yd0060OrderInfo getYd0060OrderInfo() {
		return yd0060OrderInfo;
	}
	/**
	 * @param yd0060OrderInfo the yd0060OrderInfo to set
	 */
	public void setYd0060OrderInfo(Yd0060OrderInfo yd0060OrderInfo) {
		this.yd0060OrderInfo = yd0060OrderInfo;
	}
	/**
	 * @return the yd0060OrderDetail
	 */
	public Yd0060OrderDetail getYd0060OrderDetail() {
		return yd0060OrderDetail;
	}
	/**
	 * @param yd0060OrderDetail the yd0060OrderDetail to set
	 */
	public void setYd0060OrderDetail(Yd0060OrderDetail yd0060OrderDetail) {
		this.yd0060OrderDetail = yd0060OrderDetail;
	}
	/**
	 * @return the gpsOrderDetail
	 */
	public GpsOrderDetail getGpsOrderDetail() {
		return gpsOrderDetail;
	}
	/**
	 * @param gpsOrderDetail the gpsOrderDetail to set
	 */
	public void setGpsOrderDetail(GpsOrderDetail gpsOrderDetail) {
		this.gpsOrderDetail = gpsOrderDetail;
	}
	/**
	 * @return the tansferCondA
	 */
	public TansferCondA getTansferCondA() {
		return tansferCondA;
	}
	/**
	 * @param tansferCondA the tansferCondA to set
	 */
	public void setTansferCondA(TansferCondA tansferCondA) {
		this.tansferCondA = tansferCondA;
	}
	/**
	 * @return the tansferService
	 */
	public TansferService getTansferService() {
		return tansferService;
	}
	/**
	 * @param tansferService the tansferService to set
	 */
	public void setTansferService(TansferService tansferService) {
		this.tansferService = tansferService;
	}
	/**
	 * @return the order
	 */
	public String getOrder() {
		return order;
	}
	/**
	 * @param order the order to set
	 */
	public void setOrder(String order) {
		this.order = order;
	}
	/**
	 * @return the cancelFlag
	 */
	public String getCancelFlag() {
		return cancelFlag;
	}
	/**
	 * @param cancelFlag the cancelFlag to set
	 */
	public void setCancelFlag(String cancelFlag) {
		this.cancelFlag = cancelFlag;
	}
	/**
	 * @return the pesonRemain
	 */
	public String getPesonRemain() {
		return pesonRemain;
	}
	/**
	 * @param pesonRemain the pesonRemain to set
	 */
	public void setPesonRemain(String pesonRemain) {
		this.pesonRemain = pesonRemain;
	}
	/**
	 * @return the pesAccId
	 */
	public String getPesAccId() {
		return pesAccId;
	}
	/**
	 * @param pesAccId the pesAccId to set
	 */
	public void setPesAccId(String pesAccId) {
		this.pesAccId = pesAccId;
	}
	/**
	 * @return the goodsCateId
	 */
	public String getGoodsCateId() {
		return goodsCateId;
	}
	/**
	 * @param goodsCateId the goodsCateId to set
	 */
	public void setGoodsCateId(String goodsCateId) {
		this.goodsCateId = goodsCateId;
	}
	/**
	 * @param orderGoodsInfoService the orderGoodsInfoService to set
	 */
	public void setOrderGoodsInfoService(OrderGoodsInfoService orderGoodsInfoService) {
		this.orderGoodsInfoService = orderGoodsInfoService;
	}
	/**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}
	/**
	 * @param errorMessage the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}
	/**
	 * @return the orderContent
	 */
	public String getOrderContent() {
		return orderContent;
	}
	/**
	 * @param orderContent the orderContent to set
	 */
	public void setOrderContent(String orderContent) {
		this.orderContent = orderContent;
	}
	/**
	 * @return the isManager
	 */
	public boolean isManager() {
		return manager;
	}
	
}
