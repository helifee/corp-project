/*
 * @(#)Yd0070Action.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 社内团购
 */
package com.yds.gps.action;

import java.util.List;

import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.yds.base.action.AbstractBaseAction;
import com.yds.common.service.SessionService;
import com.yds.common.service.UserService;
import com.yds.gps.bean.GpsAccount;
import com.yds.gps.bean.GpsGoodsInfo;
import com.yds.gps.bean.GpsOrderDetail;
import com.yds.gps.bean.GpsOrderGoods;
import com.yds.gps.common.bean.GpsOrderInfo;
import com.yds.gps.service.GpsConstants;
import com.yds.gps.service.TansferException;
import com.yds.gps.service.Yd0070Service;

/**
 * 订购详细
 * 
 * @author gaoweiwei
 * @version 1.00 2010/10/21
 */
@Scope(BeanDefinition.SCOPE_PROTOTYPE)
@Controller("yd0070Action")
public class Yd0070Action extends AbstractBaseAction {

	private static final long serialVersionUID = -8211376532832056081L;
	
	private Yd0070Service yd0070Service;
	private UserService userService;

	/** 订单信息（bean）. */
	private GpsOrderInfo gpsOrderInfo;
	
	/** 商品信息（bean）. */
	private GpsGoodsInfo gpsGoodsInfo;

	/** 已订购商品一览 */
	private List<GpsOrderDetail> detailNowList;
	
	/** 订单商品一览 */
	private List<GpsOrderGoods> detailAllList;
	
	/** 用户账户信息 */
	private GpsAccount gpsAccount;
	
	/** 传入/出参数 */
	/** 订单ID */
	private String orderId;
	/** 订购者ID. */
	private String customerId;
	/** 商品ID. */
	private String goodsId;
	/** 订购份数. */
	private int buyCntM;
	/** 成交单价. */
	private double gpsPrice;
	
	// 登录用户ID
	private String userId = SessionService.getLoginUserId();
	
	/**
	 * 订购详细画面的初期显示
	 * 
	 * @return SUCCESS
	 */
	public String initDetail() {
		
		// 显示分割线上部信息
		this.gpsOrderInfo = yd0070Service.getGpsOrderInfo(orderId);
		// 判断订单状态
		if (null == gpsOrderInfo) {
			putOpTip(propMgr.getMessage("yds.gps.warning.0003", orderId));
			return SUCCESS;
		}
		this.gpsAccount = yd0070Service.getGpsAccountSum(userId);
		
		// 显示已订购商品一览
		this.detailNowList = yd0070Service.getDetailNowList(orderId, userId);
		
		// 显示订单商品一览
		this.detailAllList = yd0070Service.getDetailAllList(orderId);
		
		return SUCCESS;
	}
	
	/**
	 * 取得商品信息
	 * @return
	 */
	public String getGoodsInfo() {
		this.gpsGoodsInfo = yd0070Service.getGoodsInfo(goodsId);
		return SUCCESS;
	}
	/**
	 * 删除已购商品
	 * 
	 * @return SUCCESS
	 */
	public String delNowList() throws Exception {
		// 取得订单信息
		this.gpsOrderInfo = yd0070Service.getGpsOrderInfo(orderId);
		// 判断订单状态
		if (null == gpsOrderInfo) {
			putOpTip(propMgr.getMessage("yds.gps.warning.0003", orderId));
			return SUCCESS;
		}
		if (GpsConstants.ORDER_CLOSE.equals(gpsOrderInfo.getSwitchFlag())) {
			putOpTip(propMgr.getMessage("yds.gps.warning.0002", userService.getUserNm(gpsOrderInfo.getUpdateUser())));
			return SUCCESS;
		}
		try {
			// 删除已购商品信息
			yd0070Service.deleteNowInfo(orderId, customerId, goodsId);
		} catch (TansferException e) {
			putOpTip(e.getId().value());
			return SUCCESS;
		}
		putOpTip(propMgr.getMessage("yds.com.info.0010"));

		return SUCCESS;
	}
	
	/**
	 * 替换已购商品
	 * 
	 * @return SUCCESS
	 */
	public String repNowList() throws Exception {
		// 取得订单信息
		this.gpsOrderInfo = yd0070Service.getGpsOrderInfo(orderId);
		// 判断订单状态
		if (null == gpsOrderInfo) {
			putOpTip(propMgr.getMessage("yds.gps.warning.0003", orderId));
			return SUCCESS;
		}
		if (GpsConstants.ORDER_CLOSE.equals(gpsOrderInfo.getSwitchFlag())) {
			putOpTip(propMgr.getMessage("yds.gps.warning.0002", userService.getUserNm(gpsOrderInfo.getUpdateUser())));
			return SUCCESS;
		}
		try {
			// 替换已购商品
			yd0070Service.saveNowInfo(orderId, SessionService.getLoginUserId(), goodsId, buyCntM, gpsPrice);
		} catch (TansferException e) {
			putOpTip(e.getId().value());
			return SUCCESS;
		}
		putOpTip(propMgr.getMessage("yds.com.info.0009"));
		
		return SUCCESS;
	}
	
	/**
	 * 追加商品
	 * 
	 * @return SUCCESS
	 */
	public String addNowList() throws Exception {
		// 取得订单信息
		this.gpsOrderInfo = yd0070Service.getGpsOrderInfo(orderId);
		// 判断订单状态
		if (null == gpsOrderInfo) {
			putOpTip(propMgr.getMessage("yds.gps.warning.0003", orderId));
			return SUCCESS;
		}
		if (GpsConstants.ORDER_CLOSE.equals(gpsOrderInfo.getSwitchFlag())) {
			putOpTip(propMgr.getMessage("yds.gps.warning.0002", userService.getUserNm(gpsOrderInfo.getUpdateUser())));
			return SUCCESS;
		}
		try {
			// 追加商品
			yd0070Service.addNowInfo(orderId, SessionService.getLoginUserId(), goodsId, buyCntM, gpsPrice);
		} catch (TansferException e) {
			putOpTip(e.getId().value());
			return SUCCESS;
		}
		putOpTip(propMgr.getMessage("yds.com.info.0008"));
	
		return SUCCESS;
	}

	/**
	 * @return the gpsOrderInfo
	 */
	public GpsOrderInfo getGpsOrderInfo() {
		return gpsOrderInfo;
	}

	/**
	 * @param gpsOrderInfo the gpsOrderInfo to set
	 */
	public void setGpsOrderInfo(GpsOrderInfo gpsOrderInfo) {
		this.gpsOrderInfo = gpsOrderInfo;
	}

	/**
	 * @return the detailNowList
	 */
	public List<GpsOrderDetail> getDetailNowList() {
		return detailNowList;
	}

	/**
	 * @param detailNowList the detailNowList to set
	 */
	public void setDetailNowList(List<GpsOrderDetail> detailNowList) {
		this.detailNowList = detailNowList;
	}

	/**
	 * @return the detailAllList
	 */
	public List<GpsOrderGoods> getDetailAllList() {
		return detailAllList;
	}

	/**
	 * @param detailAllList the detailAllList to set
	 */
	public void setDetailAllList(List<GpsOrderGoods> detailAllList) {
		this.detailAllList = detailAllList;
	}

	/**
	 * @param yd0070Service the yd0070Service to set
	 */
	public void setYd0070Service(Yd0070Service yd0070Service) {
		this.yd0070Service = yd0070Service;
	}

	/**
	 * @return the orderId
	 */
	public String getOrderId() {
		return orderId;
	}

	/**
	 * @param orderId the orderId to set
	 */
	public void setOrderId(String orderId) {
		this.orderId = orderId;
	}

	/**
	 * @return the customerId
	 */
	public String getCustomerId() {
		return customerId;
	}

	/**
	 * @param customerId the customerId to set
	 */
	public void setCustomerId(String customerId) {
		this.customerId = customerId;
	}

	/**
	 * @return the goodsId
	 */
	public String getGoodsId() {
		return goodsId;
	}

	/**
	 * @param goodsId the goodsId to set
	 */
	public void setGoodsId(String goodsId) {
		this.goodsId = goodsId;
	}

	/**
	 * @return the buyCntM
	 */
	public int getBuyCntM() {
		return buyCntM;
	}

	/**
	 * @param buyCntM the buyCntM to set
	 */
	public void setBuyCntM(int buyCntM) {
		this.buyCntM = buyCntM;
	}

	/**
	 * @return the gpsPrice
	 */
	public double getGpsPrice() {
		return gpsPrice;
	}

	/**
	 * @param gpsPrice the gpsPrice to set
	 */
	public void setGpsPrice(double gpsPrice) {
		this.gpsPrice = gpsPrice;
	}

	public GpsAccount getGpsAccount() {
		return gpsAccount;
	}

	public void setGpsAccount(GpsAccount gpsAccount) {
		this.gpsAccount = gpsAccount;
	}

	public UserService getUserService() {
		return userService;
	}

	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	public GpsGoodsInfo getGpsGoodsInfo() {
		return gpsGoodsInfo;
	}

	public void setGpsGoodsInfo(GpsGoodsInfo gpsGoodsInfo) {
		this.gpsGoodsInfo = gpsGoodsInfo;
	}
}
