package com.yds.gps.service.impl;

import java.util.List;

import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.service.SessionConstants;
import com.yds.common.service.SessionService;
import com.yds.common.service.CommonConstants.MsgTypeEnum;
import com.yds.common.service.CommonConstants.SparkMsgIDEnum;
import com.yds.common.service.CommonConstants.SparkSysIDEnum;
import com.yds.gps.bean.GpsExchangeHis;
import com.yds.gps.bean.GpsExchangeSum;
import com.yds.gps.bean.TansferCondA;
import com.yds.gps.bean.Yd0010CondA;
import com.yds.gps.common.service.EnmService;
import com.yds.gps.common.service.TansferService;
import com.yds.gps.service.GpsConstants;
import com.yds.gps.service.Yd0010Service;
import com.yds.gps.dao.Yd0010Dao;
import com.yds.util.bean.SparkMessagerBean;
import com.yds.util.service.BeanUtil;
import com.yds.util.service.SendMessage;
import com.yds.util.service.ServerInfo;
import com.yds.util.service.StringUtil;

/**
 * @see com.yds.gps.service.Yd0010Service
 */
@Service("yd0010Service")
public class Yd0010ServiceImpl extends AbstractBaseService implements
		Yd0010Service {

	private Yd0010Dao yd0010Dao;
	private EnmService enmService;
	private TansferService tansferService;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String getAccRemain(String accId) {

		return yd0010Dao.getAccRemain(accId);

	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<GpsExchangeHis> getExchangeHisList(Yd0010CondA param,
			int offset, int perCounts) {

		List<GpsExchangeHis> exChangeHisInfo = (List<GpsExchangeHis>) yd0010Dao
				.getExchangeHisList(param, offset, perCounts);

		return exChangeHisInfo;
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @throws Exception
	 */
	@Override
	public Long getTotalCount(Yd0010CondA yd0010CondA) throws Exception {

		Yd0010CondA yd0011CondA = new Yd0010CondA();
		BeanUtil.copyBean(yd0010CondA, yd0011CondA);
		return yd0010Dao.getTotalCount(yd0011CondA);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @throws Exception
	 */
	@Override
	public GpsExchangeSum getExchangeHisSum(Yd0010CondA yd0010CondA)
			throws Exception {

		return yd0010Dao.getExchangeHisSum(yd0010CondA);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @throws Exception
	 */
	@Override
	public boolean updateACCInfo(TansferCondA tansferCondA) throws Exception {

		if (!StringUtil.leftPadYd(tansferCondA.getInId()).equals(
				SessionService.getLoginUserId())) {

			// 设置交易类型
			tansferCondA.setExType(GpsConstants.EX_TANSFER);
			// 取得转入账户ID
			tansferCondA.setInId(StringUtil.leftPadYd(tansferCondA.getInId()));
			// 设置收支区分
			tansferCondA.setIoFlag(GpsConstants.EXPENSES);
			// 取得转出账户ID
			tansferCondA.setOutId(SessionService.getLoginUserId());
			// 设置转入备注
			tansferCondA.setExRemarksI(propMgr.getMessage("yds.gps.info.0006",
					enmService.getEmpName(tansferCondA.getOutId()),
					tansferCondA.getExMoney()));
			// 设置转入备注
			tansferCondA.setExRemarksO(propMgr.getMessage("yds.gps.info.0007",
					enmService.getEmpName(tansferCondA.getInId()),
					tansferCondA.getExMoney()));
			// 进行转账处理
			tansferService.tansfer(tansferCondA, true);
			// Spark信息的发送
			SparkMessagerBean sparkMessagerBean = new SparkMessagerBean();
			// 消息的链接
			sparkMessagerBean.setMsg_url(ServerInfo.getURLPath()
					+ GpsConstants.SYSTEM_NAME + "/yd0010Init?"
					+ SessionConstants.REQUESTTARGET + "=1");
			// 发送消息的系统ID
			sparkMessagerBean.setSystem_id(SparkSysIDEnum.GP);
			// 发送消息的消息类型ID
			sparkMessagerBean.setMsg_id(SparkMsgIDEnum.GP_ZZ);
			// spark 消息类型
			sparkMessagerBean.setStatus(MsgTypeEnum.INSERT);
			// 要发送的人员一览
			sparkMessagerBean
					.setEmpid(new String[] { tansferCondA.getOutId() });
			// 消息的内容
			sparkMessagerBean.setMsg_content(propMgr.getMessage(
					"yds.gps.info.0007",
					enmService.getEmpName(tansferCondA.getInId()),
					tansferCondA.getExMoney()));
			SendMessage.asyncSend(sparkMessagerBean);
			// Spark信息的发送
			SparkMessagerBean sparkMessagerBean2 = new SparkMessagerBean();
			BeanUtil.copyBean(sparkMessagerBean, sparkMessagerBean2);
			// 要发送的人员一览
			sparkMessagerBean2
					.setEmpid(new String[] { tansferCondA.getInId() });
			// 消息的内容
			sparkMessagerBean2.setMsg_content(propMgr.getMessage(
					"yds.gps.info.0006",
					enmService.getEmpName(tansferCondA.getOutId()),
					tansferCondA.getExMoney()));
			SendMessage.asyncSend(sparkMessagerBean2);
		}
		return true;
	}

	/**
	 * @return the yd0010Dao
	 */
	public Yd0010Dao getYd0010Dao() {
		return yd0010Dao;
	}

	/**
	 * @param yd0010Dao
	 *            the yd0010Dao to set
	 */
	public void setYd0010Dao(Yd0010Dao yd0010Dao) {
		this.yd0010Dao = yd0010Dao;
	}

	/**
	 * @return the enmService
	 */
	public EnmService getEnmService() {
		return enmService;
	}

	/**
	 * @param enmService
	 *            the enmService to set
	 */
	public void setEnmService(EnmService enmService) {
		this.enmService = enmService;
	}

	/**
	 * @return the tansferService
	 */
	public TansferService getTansferService() {
		return tansferService;
	}

	/**
	 * @param tansferService
	 *            the tansferService to set
	 */
	public void setTansferService(TansferService tansferService) {
		this.tansferService = tansferService;
	}
}
