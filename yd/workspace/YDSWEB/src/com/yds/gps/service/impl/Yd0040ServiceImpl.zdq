package com.yds.gps.service.impl;

import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.apache.commons.io.FileUtils;
import org.springframework.stereotype.Service;

import com.yds.base.service.AbstractBaseService;
import com.yds.common.service.ComSequenceService;
import com.yds.common.service.CommonConstants;
import com.yds.gps.bean.GpsGoodsCate;
import com.yds.gps.bean.GpsGoodsInfo;
import com.yds.gps.service.Yd0040Service;
import com.yds.gps.dao.Yd0040Dao;

/**
 * @see com.yds.gps.service.Yd0040Service
 */
@Service("yd0040Service")
public class Yd0040ServiceImpl extends AbstractBaseService implements
		Yd0040Service {

	private Yd0040Dao yd0040Dao;
	private ComSequenceService comSequenceService;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<GpsGoodsInfo> getGoodsList(String goodsCateId) {

		return yd0040Dao.getGoodsList(goodsCateId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<GpsGoodsInfo> getGoodsSortList(String goodsCateId) {

		return yd0040Dao.getGoodsSortList(goodsCateId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GpsGoodsInfo getGoodsInfo(String goodsId) {

		return yd0040Dao.getGoodsInfo(goodsId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String getGoodsCateName(String goodsCateId) {

		return yd0040Dao.getGoodsCateName(goodsCateId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<String> getStoreList(String goodsCateId) {
		return yd0040Dao.getStoreList(goodsCateId);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int updateGoodsSort(String goodsSort) {

		GpsGoodsInfo gpsGoodsInfo = new GpsGoodsInfo();
		String[] goodsArr = goodsSort.replace(" ", "").split(",");
		int dispSeq = 0;
		for (int i = 0; i < goodsArr.length; i++) {
			if (!"".equals(goodsArr[i])) {
				dispSeq++;
				String dispSeqS = String.valueOf(dispSeq);
				gpsGoodsInfo.setDisplaySeq(dispSeqS);
				gpsGoodsInfo.setGoodsId(goodsArr[i]);
				yd0040Dao.updateGoodsSort(gpsGoodsInfo);
			}
		}
		return 1;
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @throws Exception
	 */
	@Override
	public boolean insertGoodsInfo(GpsGoodsInfo gpsGoodsInfo) throws Exception {

		String goodsId = "";
		goodsId = comSequenceService.getNextSequence("GPS_GOODS_INFO",
				"GOODS_ID", 8);
		gpsGoodsInfo.setGoodsId(goodsId);
		// 设定图片名称
		gpsGoodsInfo.setGoodsImage(goodsId + gpsGoodsInfo.getGoodsImage());
		gpsGoodsInfo.setDisplaySeq(comSequenceService.getNextSequence(
				"GPS_GOODS_INFO", "DISPLAY_SEQ", 2));
		if (!"1".equals(gpsGoodsInfo.getGoodsSwitch())) {

			gpsGoodsInfo.setGoodsSwitch("0");
		}
		yd0040Dao.insertGoodsInfo(gpsGoodsInfo);
		return true;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean updateGoodsInfo(GpsGoodsInfo gpsGoodsInfo) {

		if (!"1".equals(gpsGoodsInfo.getGoodsSwitch())) {
			gpsGoodsInfo.setGoodsSwitch("0");
		}
		yd0040Dao.updateGoodsInfo(gpsGoodsInfo);
		return true;
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @throws Exception
	 */
	@Override
	public boolean insertGoodsCate(GpsGoodsCate gpsGoodsCate) throws Exception {

		String goodsCateId = "";
		goodsCateId = comSequenceService.getNextSequence("GPS_GOODS_CATE",
				"GOODS_CATE_ID", 8);
		gpsGoodsCate.setGoodsCateId(goodsCateId);
		yd0040Dao.insertGoodsCate(gpsGoodsCate);
		return true;
	}

	/**
	 * 商品照片上传
	 * 
	 * @param File
	 *            图片文件
	 * @param String
	 *            文件名
	 * @return String 保存后文件名
	 * 
	 */
	@Override
	public String uploadEmpImgId(File upload, String fileName) throws Exception {

		// 生成文件名
		String targetFileName = generateFileName(fileName);
		// 生成文件
		File target = new File(
				propMgr.getParameter(CommonConstants.FILE_PATH.EMP_IMAGE
						.value()), targetFileName);
		// 上传文件
		FileUtils.copyFile(upload, target);
		return targetFileName;
	}

	/**
	 * 生成文件名
	 * 
	 * @param fileName
	 *            上传文件名
	 * @return String 处理后文件名
	 */
	private String generateFileName(String fileName) {

		DateFormat format = new SimpleDateFormat("yyMMddHHmmssSSS");
		StringBuilder formatDate = new StringBuilder(format.format(new Date()));
		int position = fileName.lastIndexOf(".");
		String extension = fileName.substring(position);
		return formatDate.append(extension).toString();
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @throws Exception
	 */
	@Override
	public GpsGoodsCate getPubFlag(String goodsCateId) {

		return yd0040Dao.getPubFlag(goodsCateId);
	}

	/**
	 * @param yd0040Dao
	 *            the yd0040Dao to set
	 */
	public void setYd0040Dao(Yd0040Dao yd0040Dao) {
		this.yd0040Dao = yd0040Dao;
	}

	/**
	 * @return the comSequenceService
	 */
	public ComSequenceService getComSequenceService() {
		return comSequenceService;
	}

	/**
	 * @param comSequenceService
	 *            the comSequenceService to set
	 */
	public void setComSequenceService(ComSequenceService comSequenceService) {
		this.comSequenceService = comSequenceService;
	}
}
