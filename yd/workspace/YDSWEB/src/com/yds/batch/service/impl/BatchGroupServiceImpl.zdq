/*
 * @(#)BatchGroupServiceImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 批处理系统
 */

package com.yds.batch.service.impl;
import java.util.List;

import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
import org.springframework.stereotype.Service;

import com.yds.batch.bean.BatchGroup;
import com.yds.batch.service.BatchGroupFilter;
import com.yds.batch.service.BatchGroupRunner;
import com.yds.batch.service.BatchGroupService;
import com.yds.batch.service.RunnerFactory;

/**
 * @see BatchGroupService
 */
@Service("batchGroupService")
public class BatchGroupServiceImpl implements BatchGroupService {
	
	/** 线程池. */
	private ThreadPoolTaskExecutor batchExecutor;
	
	/** 生成任务组执行类实例的类. */
	private RunnerFactory runnerFactory;
	
	/** 获取任务组类. */
	private BatchGroupFilter batchGroupFilter;
		
	/**
	 * {@inheritDoc}
	 */
	@Override
	public void executeJobGroups() {
		
		// 得到待执行的任务组列表
		List<BatchGroup> jobGroups = batchGroupFilter.getValidJobGroups();
		
		// 任务组执行类
		BatchGroupRunner runner = null;
		for (BatchGroup batchGroup : jobGroups) {	
			runner = runnerFactory.getRunner();
			runner.setJobGroup(batchGroup);
			batchExecutor.execute(runner);
		}

	}

	/**
	 * @param batchExecutor the batchExecutor to set
	 */
	public void setBatchExecutor(ThreadPoolTaskExecutor batchExecutor) {
		this.batchExecutor = batchExecutor;
	}

	/**
	 * @param runnerFactory the runnerFactory to set
	 */
	public void setRunnerFactory(RunnerFactory runnerFactory) {
		this.runnerFactory = runnerFactory;
	}

	/**
	 * @param batchGroupFilter the batchGroupFilter to set
	 */
	public void setBatchGroupFilter(BatchGroupFilter batchGroupFilter) {
		this.batchGroupFilter = batchGroupFilter;
	}

}
