/*
 * @(#)BatchSocketServer.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 批处理系统
 */

package com.yds.batch.service.impl;

import java.io.IOException;
import java.net.ServerSocket;

import com.yds.batch.service.BatchServiceCtrl;

/**
 * 批处理服务启动时绑定端口（保证服务唯一）
 * 
 * @author wangduo
 * @version 1.00 2010/05/27
 */
public class BatchSocketServer {
	
	/** 服务socket. */
	ServerSocket serverSocket = null;
	
	/** 批处理服务启动类. */
	BatchServiceCtrl batchServiceCtrl = null;
	
	/** socket连接监听类. */
	BatchSocketAccpeter batchSocketAccpeter = null;
	

	public BatchSocketServer(BatchServiceCtrl batchServiceCtrl) {
		this.batchServiceCtrl = batchServiceCtrl;
	}
	
	/**
	 * 用socket绑定一个端口,等待停止服务的请求
	 * 
	 * @param port 端口号
	 */
	public void startServer(int servicePort) throws IOException {

		try {
			// 绑定端口
			serverSocket = new ServerSocket(servicePort);

		} catch (IOException e) {

			if (serverSocket != null) {
				serverSocket.close();
			}

			throw e;
		}

		batchSocketAccpeter = new BatchSocketAccpeter(serverSocket, batchServiceCtrl);
		
		// 启动一个线程监听socket连接
		new Thread(batchSocketAccpeter).start();

	}
	
	/**
	 * 停止socket服务
	 */
	public void stopServer() {
		
		// 停止接收socket连接
		batchSocketAccpeter.stopAccept();
	}

}
