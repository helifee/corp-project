/*
 * @(#)Ye0060Service.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 考勤系统
 */
package com.yds.att.service;

import java.util.List;
import java.util.Map;

import net.sf.json.JSONObject;

import com.yds.att.bean.AttOvertime;
import com.yds.att.bean.Ye0060CondA;
import com.yds.att.bean.Ye0060Statistics;
import com.yds.common.bean.UserInfo;

/**
 * Ye0060Service
 * 
 * @author 远东)sundefu
 * @version 1.00 2010/12/02
 */
public interface Ye0060Service{

	/** 统计方式（按日期）. */
	public static final String STATISTIC_MODE_BYDATE = "1";
	/** 统计方式（按人员）. */
	public static final String STATISTIC_MODE_BYEMP = "2";
	
	/** 时间区分（今日）. */
	public static final int TIME_TYPE_TODAY = 1;
	/** 时间区分（翌日）. */
	public static final int TIME_TYPE_TOMORROW = 2;
	
	/** 加班信息操作类型（追加申请）. */
	public static final String OPERATETYPE_NEW = "1";
	/** 加班信息操作类型（查看）. */
	public static final String OPERATETYPE_SHOW = "2";
	/** 加班信息操作类型（修改）. */
	public static final String OPERATETYPE_MODIFY = "3";
	
	/** 画面模式（追加申请）. */
	public static final Integer MODE_NEW = 1;
	/** 画面模式（查看）. */
	public static final Integer MODE_SHOW = 2;
	/** 画面模式（审批）. */
	public static final Integer MODE_APPROVE = 3;
	
	/** 初期检索标识（需要）. */
	public static final Integer SEARCHFLAG_NEED = 1;
	/** 初期检索标识（不需要）. */
	public static final Integer SEARCHFLAG_NOTNEED = 2;

	/** 加班信息状态改变操作类型(提交申请). */
	public static final Integer CSTYPE_APPLY = 1;
	/** 加班信息状态改变操作类型(批准所选). */
	public static final Integer CSTYPE_APPROVED = 2;
	/** 加班信息状态改变操作类型(否决所选). */
	public static final Integer CSTYPPE_REFUSED = 3;
	
	/** 加班信息Key值分隔符. */
	public static final String KEY_DIVIDER = "divider";
	/**
	 * 取得项目加班信息一览条数
	 * @param ye0060CondA 检索条件
	 * @param mode 画面模式
	 * @return long 加班信息一览条数
	 */
	public long getAttOvertimeListCount(Ye0060CondA ye0060CondA) throws Exception;
	/**
	 * 取得项目加班信息一览
	 * @param ye0060CondA 检索条件
	 * @return List<AttOvertime> 一览
	 */
	public List<Ye0060Statistics> getAttOvertimeList(Ye0060CondA ye0060CondA, Integer mode) throws Exception;

	/**
	 * 登记加班信息
	 * 
	 * @param AttOvertime 加班信息
	 * @param tomorrowValue 加班至第二天标识
	 * @param empList 待申请员工列表
	 */
	public Map<String, Object> insertOvertimeInfo(AttOvertime attOvertime, int tomorrowValue, List<String> empList);
	
	/**
	 * 取得加班信息
	 * 
	 * @param AttOvertime 检索条件
	 * @param AttOvertime 待申请员工列表
	 */
	public AttOvertime getOvertimeInfo(AttOvertime attOvertime);
	
	/**
	 * 修改加班信息
	 * 
	 * @param AttOvertime 加班信息
	 * @param tomorrowValue 加班至第二天标识
	 * @param empId 待修改员工
	 */
	public Map<String, Object> updateOvertimeInfo(AttOvertime attOvertime, int tomorrowValue);
	
	/**
	 * 删除加班信息
	 * 
	 * @param AttOvertime 加班信息
	 */
	public Boolean deleteOvertimeInfo(AttOvertime attOvertime);
	
	/**
	 * 删除指定日期加班信息
	 * 
	 * @param AttOvertime 加班信息
	 */
	public void deleteALLOvertimeInfoByDate(AttOvertime attOvertime);

	/**
	 * 参照新建加班信息
	 * 
	 * @param attOvertime 新申请加班信息
	 * @param dateApplying 被参照加班日期
	 */
	public Map<String, Object> insertOvertimeByRefer(AttOvertime attOvertime, String dateRefered);
	
	/**
	 * 取得加班员工列表
	 * 
	 * @param AttOvertime 加班信息
	 */
	public List<UserInfo> getOvertimeEmpInfo(AttOvertime attOvertime);
	
	/**
	 * 加班信息状态更改
	 * 
	 * @param attOvertimeJson 加班信息Json格式
	 * @param changeStatusType 更改加班信息状态类型
	 */
	public Boolean updateapplyChangeStatus(JSONObject attOvertimeJson, Integer changeStatusType) throws Exception;
	
	/**
	 * 判断是否具有项目审批权限
	 * 
	 * @param empId 员工Id
	 * @param prjId 项目Id
	 */
	public Boolean checkHasConfirm(String empId, String prjId);
	
	/**
	 * 检查加班时间是否合理
	 * 
	 * @param attOvertime 员工加班信息
	 * @return Boolean 检查结果
	 */
	public Map<String, Object> checkOvertime(AttOvertime attOvertime, Integer tomorrowValue);
}
