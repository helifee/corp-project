/*
 * @(#)AttConstants.java
 * Copyright (c) 2010-2011 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 考勤系统
 */

package com.yds.att.service;

/**
 * 共通定数一览
 * 
 * @author mengqingyang
 * @version 1.00 2010/12/03
 */
public interface AttConstants {

	// ============ 全局共通 Start ============
	/** 考勤子系统名. */
	public static final String SYSTEM_NAME = "att";

	// ============ 全局共通 End ============

	// ============ 共通 Start ============

	// ============ 共通 End ============
	/**
	 * Enum .
	 */
	public static enum DateTypeEnum {
		/** 正常上班. */
		 WORK("0"),
		/** 正常休息 */
		 HOLIDAY("1"),
		/** 法定假日 */
		 REST("2");

		private String value;

		DateTypeEnum(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		//JINFANG
		public String value() {
			return this.value;
		}
	}
	
	/**
	 * 考勤申请类别.
	 * @author zhaodong
	 *
	 */
	public static enum AppCategory{
		
		/** 休假申请.*/
		VACATION("XJ"),
		/** 考勤更正申请.*/
		ATT_CORRECT("KQ"),
		/** 加班申请.*/
		OVERTIME("JB"),
		/** 年休转结申请.*/
		CARRY_OVER("NX");
		private String value;

		AppCategory(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
            return this.value;
        }

	}
	
	/**
	 * 审批结果.
	 * @author lincheng
	 *
	 */
	public static enum AppResult{
		
		/** 同意. */
		AGREE("1"),
		/** 不同意. */
		DISAGREE("0");
		
		private String value;

		AppResult(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
            return this.value;
        }
	}
	
	/**
	 * 审批状态.
	 * @author lincheng
	 *
	 */
	public static enum AppStatus{
		
		/** 未申请.*/
		UN_APPLY("0"),
		/** 待审批.*/
		PENDING("1"),
		/** 审批中.*/
		APP_ING("2"),
		/** 已批准.*/
		APPROVED("3"),
		/** 直接改.*/
		EDIAT_DIRECT("4"),
		/** 被否决.*/
		REJECTED("5"),
		/** 已撤回.*/
		REVOKEED("9"),
		/** 全部.*/
		ALLSTATUS("99");
		
		private String value;

		AppStatus(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
            return this.value;
        }
	}
	
	/**
	 * 审批状态文字.
	 * @author lincheng
	 *
	 */
	public static enum AppStatusText{
		
		/** 未申请.*/
		UN_APPLY("未申请"),
		/** 待审批.*/
		PENDING("待审批"),
		/** 待审批.*/
		PENDING_SHOW("待批"),
		/** 审批中.*/
		APP_ING("审批中"),
		/** 已批准.*/
		APPROVED("已批准"),
		/** 直接改.*/
		EDIAT_DIRECT("直接改"),
		/** 被否决.*/
		REJECTED("被否决"),
		/** 已撤回.*/
		REVOKEED("已撤回"),
		/** 全部.*/
		ALLSTATUS("全部");
		
		private String value;

		AppStatusText(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
            return this.value;
        }
	}
	
	/**
	 * 休假类别.
	 * @author lincheng
	 *
	 */
	public static enum VacationType{
		
		/** 公出.*/
		BUSINESS_TRIP("G"),
		/** 公出上午.*/
		BUSINESS_TRIP_S("GS"),
		/** 公出下午.*/
		BUSINESS_TRIP_X("GX"),
		/** 换休.*/
		FOR_HUGH("H"),
		/** 换休上午.*/
		FOR_HUGH_S("HS"),
		/** 换休上午.*/
		FOR_HUGH_X("HX"),
		/** 事假.*/
		LEAVE("S"),
		/** 事假上午.*/
		LEAVE_S("SS"),
		/** 事假下午.*/
		LEAVE_X("SX"),
		/** 病假.*/
		SICK_LEAVE("B"),
		/** 病假上午.*/
		SICK_LEAVE_S("BS"),
		/** 病假下午.*/
		SICK_LEAVE_X("BX"),
		/** 出差.*/
		TRAVEL("C"),
		/** 年休.*/
		ANNUAL_LEAVE("N"),
		/** 特假.*/
		SPECIAL_LEAVE("T"),
		/** 产假.*/
		MATERNITY_LEAVE("M"),
		/** 丧假.*/
		BEREAVEMENT_LEAVE("F"),
		/** 婚假.*/
		MARRIAGE_LEAVE("W"),
		/** 上午.*/
		AM("S"),
		/** 下午.*/
		PM("X");
		
		private String value;

		VacationType(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
            return this.value;
        }
	}
	
	/**
	 * 休假类别文字.
	 * @author lincheng
	 *
	 */
	public static enum VacationTypeText{
		
		/** 公出.*/
		BUSINESS_TRIP("公出"),
		/** 换休.*/
		FOR_HUGH("换休"),
		/** 事假.*/
		LEAVE("事假"),
		/** 病假.*/
		SICK_LEAVE("病假"),
		/** 出差.*/
		TRAVEL("出差"),
		/** 年休.*/
		ANNUAL_LEAVE("年休"),
		/** 特假.*/
		SPECIAL_LEAVE("特休"),
		/** 产假.*/
		MATERNITY_LEAVE("产假"),
		/** 丧假.*/
		BEREAVEMENT_LEAVE("丧假"),
		/** 婚假.*/
		MARRIAGE_LEAVE("婚假"),
		/** 上午.*/
		AM("上午"),
		/** 下午.*/
		PM("下午");

		
		private String value;

		VacationTypeText(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
            return this.value;
        }
	}

	/**
	 * 临时班型标志.
	 * @author liming
	 *
	 */
	public static enum TypeFlg{
		
		/** 非临时班型.*/
		PER_TYPEFALG("0"),
		/** 临时班型.*/
		TEM_TYPEFALG("1");
		
		private String value;

		TypeFlg(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}		
	}

	/**
	 * 换休发生原因.
	 * @author liming
	 *
	 */
	public static enum HappenReason{
		
		/** 0：产生.*/
		PRO_REASON("0"),
		/** 1：使用.*/
		USE_REASON("1");
		
		private String value;

		HappenReason(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}		
	}

	/**
	 * 转结可用标识.
	 * @author liming
	 *
	 */
	public static enum PtoAddFlg{
		
		/** 0：转结不可.*/
		ZHUANJIEBUKE("0"),
		/** 1：转结可用.*/
		ZHUANJIEKEYONG("1");
		
		private String value;

		PtoAddFlg(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}		
	}

	/**
	 * 翌日标识.
	 * @author liming
	 *
	 */
	public static enum NextDayFlg{
		
		/** 0：当日退勤.*/
		TODAY("0"),
		/** 1：翌日退勤.*/
		NEXTDAY("1");
		
		private String value;

		NextDayFlg(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}		
	}

	/**
	 * 组织属性（类型）.
	 * @author zhangdaoqiang
	 *
	 */
	public static enum OrgProperty  {
		
		/** 公司. */
		COMPANY("comp"),
		/** 部门. */
		DEPARTMENT("dept"),
		/** 项目组. */
		PROJECT("prjt");

		private String value;

		OrgProperty(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	
	/**
	 * 组织有效性类型.
	 * @author zhangdaoqiang
	 *
	 */
	public static enum OrgLifeCycle {
		
		/** 已过期. */
		PASS("0"),
		/** 正在进行中. */
		NOW("1"),
		/** 筹备中. */
		PREPARE("2");

		private String value;

		OrgLifeCycle(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	
	/** 审批流程类型 */
	public static enum FlowType {
		/** 请假. */
		LEAVE_FLOW("0"),
		/** 考勤. */
		KQ_FLOW("1"),
		/** 加班. */
		OVERTIME_FLOW("2");
		
		private String value;
		
		FlowType(String value) {
			this.value = value;
		}
		
		public String value() {
			return this.value;
		}
	}

	/**
	 * 工作类型.
	 * @author 
	 *
	 */
	public static enum WorkType {
		/** 远东上班. */
		YDS_WORK("1"),
		/** 远东休假. */
		YDS_HOL("2"),
		/** 法定休假. */
		CHN_REST("3"),
		/** 日本休假. */
		NH_REST("4"),
		/** 周末调休. */
		WE_REST("5");

		private String value;

		WorkType(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	/**
	 * 审批顺序.
	 * @author 
	 *
	 */
	public static enum OrderType {
		
		/** 一级审批. */
		FIRST("1"),
		/** 二级审批. */
		TWO("2");

		private String value;

		OrderType(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	
	/**
	 * 审批人标志位
	 * @author 
	 *
	 */
	public static enum MyselfFlag {
		
		/** 自己是审批者. */
		IS_MYSELF("1"),
		/** 自己不是审批者. */
		IS_NOT_MYSELF("2");

		private String value;

		MyselfFlag(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	/**
	 * 审批人标志位
	 * @author 
	 *
	 */
	public static enum AttPermit {
		
		/** 普通人. */
		GENERAL("0"),
		/** 有审批权限. */
		HAVE_PERMIT("1"),
		/** 没有审批权限. */
		HAVE_NOT_PERMIT("2");
		private String value;

		AttPermit(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}

	/**
	 * 查询日期类型.
	 * @author sundefu
	 *
	 */
	public static enum PeriodType {
		/** 本月. */
		THIS_MONTH("0"), 
		/** 上月. */
		LAST_MONTH("1"),
		/** 全年. */
		WHOLE_YEAR("2"),
		/** 指定日期. */
		DATE_BYINPUT("3");

		private String value;

		PeriodType(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	/**
	 * 受益区分
	 * @author sundefu
	 *
	 */
	public static enum BenefitFlagEnum {
		/** 转换休. */
		FOR_DAY("1"),
		/** 加班费. */
		FOR_MONEY("0"),
		/** 全部. */
		FOR_ALL("99"); 

		private String value;

		BenefitFlagEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	
	/**
	 * 考勤系统权限(角色)区分
	 * @author zhaodong
	 *
	 */
	public static enum PermitEnum{
		/** 考勤主管. */
		ATT_MANAGER("attmanager"),
		/** 公司高管. */
		COMP_MANAGER("compmanager"),
		/** 部门主管. */
		DEPT_MANAGER("deptmanager"),
		/** 项目主管. */
		PRJT_MANAGER("prjtmanager");
		
		private String value;

		PermitEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	
	/**
	 * 循环区分
	 * @author luojun
	 *
	 */
	public static enum CycleFlagEnum {
		/** 循环. */
		CYCLE("0"),
		/** 不循环. */
		NO_CYCLE("1");
		


		private String value;

		CycleFlagEnum(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	
	/**
	 * 请假天数类型区分
	 * @author liuyiwei
	 *
	 */
	public static enum RestDayType{
		/** 半天. */
		HALF("H"),
		/** 一天. */
		SINGLE("S"),
		/** 多天. */
		MULTI("M");
		
		private String value;

		RestDayType(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}

	/**
	 * 考勤不整合类型
	 * @author liming
	 *
	 */
	public static enum UncorType{
		/** 考勤数据不完整. */
		ATTNOTCOMP("0"),
		/** 考勤更正未审批. */
		CORRECTNOTAPPROVE("1"),
		/** 请假未审批. */
		RESTNOTAPPROVE("2"),
		/** 加班未审批. */
		OVERTIMENOTAPPROVE("3");
		
		private String value;

		UncorType(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}

	/**
	 * 请假申请画面模式
	 * @author liuyiwei
	 *
	 */
	public static enum AttRstMode{
		/** 用户请假申请. */
		USERST("1"),
		/** 审批者察看. */
		EXTVIEW("2"),
		/** 个人察看. */
		USERVIEW("3"),
		/** 交验出错. */
		VALIDATERETURN("4");
		
		private String value;

		AttRstMode(String value) {
			this.value = value;
		}

		@Override
		public String toString() {
			return this.value;
		}

		public String value() {
			return this.value;
		}
	}
	
	/** 组织层级的位长 */
	public static final int BIT_LENGTH = 5;
	
	/** 请假类型 一天 */
	public static final int LEAVE_ONE = 1;
	
	/** 请假类型 二天 */
	public static final int LEAVE_TWO = 2;
	
	/** 请假类型 上午 */
	public static final String LEAVE_AM = "S";
	
	/** 请假类型 下午 */
	public static final String LEAVE_PM = "X";
	
	/** 周末班型.*/
	public static final  String ATT_WEEKEND="ZM";


	// ============ batch Start ============
	/** batch区分.月次batch处理*/
	public static final  String ATT_BATCH_YC = "YC";
	/** batch固定更新者ID*/
	public static final  String ATT_BATCH_UPUSER = "YD000000";
	
	// ============ batch End ============
	
	/**
	 * 日历颜色
	 * @author JINFANG
	 *
	 */
	public static enum CalColor{
		/** 橙色. */
		ORANGE("color_orange"),
		/** 墨绿色. */
		DARKGREEN("color_darkgreen"),
		/** 红色. */
		RED("color_red"),
		/** 草绿色. */
		LIGHTGREEN("color_lightgreen"),
		/** 粉色. */
		PINK("color_pink");
		
		private String value;

		CalColor(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
			return this.value;
		}
	}
	
	/**
	 * 时间格式化
	 * @author JINFANG
	 *
	 */
	public static enum TimeFormat{
		/** 时：分. */
		TIME_HM("HH:mm"),
		/** 年-月-日 时：分. */
		TIME_YMDHM("yyyy-MM-dd HH:mm"),
		/** 年月日. */
		TIME_YMD("yyyyMMdd"),
		/** 00:00. */
		CAL_HM("00:00");
		
		private String value;

		TimeFormat(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
			return this.value;
		}
	}

	/**
	 * 	日历显示文字（考勤信息）
	 * @author JINFANG
	 *
	 */
	public static enum AttCalShow{
		/** 漏考. */
		NOTATTENDANCE("漏考"),
		/** 旷工. */
		ABSENTEEISM("旷工"),
		/** 考勤. */
		ATTENDANCE("考勤"),
		/** 加班. */
		OVERTIME("加班");
		
		private String value;

		AttCalShow(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
			return this.value;
		}
	}
	
	/**
	 * 	attinfo 休假请假数据flg
	 * @author JINFANG
	 *
	 */
	public static enum RestFlg{
		/** 第一组数据. */
		FIR("1"),
		/** 第二组数据. */
		SEC("2");
		
		private String value;

		RestFlg(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
			return this.value;
		}
	}	
	
	/**
	 * 	日历链接
	 * @author JINFANG
	 *
	 */
	public static enum CalHref{
		/** 考勤更正链接. */
		COR("Ye0030"),
		/** 休假请假链接. */
		REST("Ye0020");
		
		private String value;

		CalHref(String value) {
			this.value = value;
		}
		@Override
		public String toString() {
			return this.value;
		}
		public String value() {
			return this.value;
		}
	}
}
