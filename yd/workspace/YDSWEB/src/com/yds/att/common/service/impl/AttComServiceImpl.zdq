package com.yds.att.common.service.impl;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Date;
import java.util.Properties;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.core.io.support.PropertiesLoaderUtils;
import org.springframework.stereotype.Service;
import org.springframework.util.DefaultPropertiesPersister;

import com.yds.att.common.service.AttComService;
import com.yds.att.service.AttConstants.AppCategory;
import com.yds.common.service.ComSequenceService;
import com.yds.util.service.DateUtil;

@Service("attComService")
public class AttComServiceImpl implements AttComService {

	/** 属性. */
	private static Properties prop;

	/** 日志. */
	private static final Log LOG = LogFactory.getLog(AttComServiceImpl.class);

	/** 属性文件名. */
	private static final String PARAMATER_FILE_NAME = "att_parameter.properties";
	
	/** 采番Service. */
	private ComSequenceService comSequenceService;

	/** 申请ID采番对应表名. */
	private static String APP_TABLE = "ATT_REST_APP";

	/** 申请ID采番对应列名. */
	private static String APP_COL = "APP_ID";

	/** 申请ID采番对应长度. */
	private static int APP_LEN = 4;

	/** 申请ID对应日期格式. */
	private static String APP_DATEFORMAT = "yyyyMMdd";

	/**
	 * {@inheritDoc}
	 */
	public String getParameter(String key) {
		//因为有batch和web两个进程的关系，所以暂时全部从文件读取
		if (loadProperties(true)) {
			Object obj = prop.get(key);
			if (obj != null) {
				return obj.toString();
			}
		}
		return null;
	}

	/**
	 * {@inheritDoc}
	 */
	public void setParameter(String key, String value) {
		if (loadProperties(true)) {
			prop.put(key, value);
			saveProperties();
		}
	}

	/**
	 * {@inheritDoc}
	 */
	public void removeParameter(String key) {
		if (loadProperties(true)) {
			prop.remove(key);
			saveProperties();
		}
	}
	
	/**
	 * {@inheritDoc}
	 */
	public String getAppId(AppCategory category) throws Exception {
		String seqNo = comSequenceService.getNextSequence(APP_TABLE, APP_COL + category.value(),
				APP_LEN);
		String date = DateUtil.dateToString(new Date(), APP_DATEFORMAT);
		StringBuffer sb = new StringBuffer(category.value());
		return sb.append(date).append(seqNo).toString();
	}
	

	/**
	 * 读取属性文件
	 * @param force 强制从文件读取而不从缓存中读取
	 * @return 读取是否成功
	 */
	private static synchronized boolean loadProperties(boolean force) {
		if (null == prop || force) {
			try {
				prop = PropertiesLoaderUtils
						.loadAllProperties(PARAMATER_FILE_NAME);
				return true;
			} catch (IOException e) {
				LOG.error(e);
				return false;
			}
		}
		return true;

	}

	/**
	 * 将缓存中的prop保存到属性文件中
	 */
	private static synchronized void saveProperties() {
		OutputStream os = null;
		try {
			os = new FileOutputStream(AttComServiceImpl.class.getClassLoader()
					.getResource(PARAMATER_FILE_NAME).getPath(), false);
			DefaultPropertiesPersister pp = new DefaultPropertiesPersister();
			pp.store(prop, os, "");
		} catch (FileNotFoundException e) {
			LOG.error(e);
		} catch (IOException e) {
			LOG.error(e);
		} finally {
			try {
				if (os != null) {
					os.close();
				}
			} catch (IOException e) {
				LOG.error(e);
			}
		}
	}

	/**
	 * @param comSequenceService the comSequenceService to set
	 */
	public void setComSequenceService(ComSequenceService comSequenceService) {
		this.comSequenceService = comSequenceService;
	}

}
