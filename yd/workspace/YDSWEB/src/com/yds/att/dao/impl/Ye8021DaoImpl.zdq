/*
 * @(#)Ye8010DaoImpl.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: WebService
 */

package com.yds.att.dao.impl;


import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.yds.base.dao.AbstractBaseDao;

import com.yds.att.bean.AttExrestInfo;
import com.yds.att.bean.AttInfo;
import com.yds.att.bean.AttInfoUncor;
import com.yds.att.bean.AttMonReport;
import com.yds.att.bean.Ye8021AttInfo;
import com.yds.att.bean.Ye8021CondA;
import com.yds.att.dao.Ye8021Dao;

/**
 * 
 * @see com.yds.ws.dao.UpdateAttInfoDao
 *
 */
@Repository("ye8021Dao")
public class Ye8021DaoImpl extends AbstractBaseDao implements
		Ye8021Dao {

	@SuppressWarnings("unchecked")
	@Override
	public List<AttInfo> getAttInfos(Ye8021CondA par) {
		return (List<AttInfo>)super.queryForList("ye8021Dao.getAttInfos", par);
	}

	@Override
	public int lockTables(List<String> tblNames) {
		int cnt = 0;
		
		for(String key : tblNames)
		{
			if(super.update("ye8021Dao.lockTable",key) > 0){
				cnt++;
			}
		}
		return cnt;
	}

	@Override
	public int unlockTables() {

		return (int) super.update("ye8021Dao.unlockTable", null);
	}

	@Override
	public int updateAttInfoRTime(AttInfo ai) {
		
		return (int)super.update("ye8021Dao.updateAttInfoRTime", ai);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Ye8021AttInfo> getYe8021AttInfo(Ye8021CondA ye8021CondA) {
		
		return (List<Ye8021AttInfo>)super.queryForList("ye8021Dao.getYe8021AttInfo", ye8021CondA) ;
	}

	@Override
	public int deleteAttExrestInfo(Ye8021AttInfo ai) {
		return (int)super.delete("ye8021Dao.deleteAttExrestInfo", ai);
	}

	@Override
	public Object insertAttExrestInfo(AttExrestInfo ai) {
		// 不用判断返回值
		return super.insert("ye8021Dao.insertAttExrestInfo", ai);
		
	}

	@Override
	public AttMonReport selectAttMonReport(AttMonReport attMonReport) {
		return (AttMonReport) super.queryForObject("ye8021Dao.selectAttMonReport", attMonReport);
	}

	@Override
	public int updateAttMonReport(AttMonReport attMonReport) {
		
		return super.update("ye8021Dao.updateAttMonReport", attMonReport);
	}

	@Override
	public Object insertAttMonReport(AttMonReport attMonReport) {
		
		return super.insert("ye8021Dao.insertAttMonReport", attMonReport);
	}

	@Override
	public AttMonReport getAttMonReportY(AttMonReport attMonReport) {
		return (AttMonReport) super.queryForObject("ye8021Dao.getAttMonReportY", attMonReport);

	}

	@Override
	public int deleteAttUnCorAtt(String ym) {
		
		return super.delete("ye8021Dao.deleteAttUnCorAtt", ym);
	}

	@Override
	public Object insertAttUnCorAtt(Ye8021CondA ye8021CondA) {
		
		return super.insert("ye8021Dao.insertAttInfoUncor", ye8021CondA);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<String> getEmpIds(Date validDate) {

		DateFormat format=new SimpleDateFormat("yyyy-MM-dd ");
		String validDateStr=format.format(validDate);		
		return (List<String>)super.queryForList("ye8021Dao.getEmpIds", validDateStr);
	}

	//-- test-todel - 
	@SuppressWarnings("unchecked")
	@Override
	public List<AttInfoUncor> getUncor() {
		return (List<AttInfoUncor>)super.queryForList("ye8021Dao.getUncor");
	}	
}
