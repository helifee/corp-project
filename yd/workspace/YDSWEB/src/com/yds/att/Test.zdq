package com.yds.att;

import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.yds.att.bean.AttEmpOrgInfo;
import com.yds.att.bean.AttMonReport;
import com.yds.att.bean.OrgInfo;
import com.yds.att.common.service.OrgRelationService;
import com.yds.att.service.AttConstants;
import com.yds.att.service.Ye0090Service;
import com.yds.common.bean.UserInfo;
import com.yds.common.service.UserSelectService;
import com.yds.util.service.DateUtil;

public class Test {

	/**
	 * @param args
	 * @throws Exception 
	 */
	public static void main(String[] args) throws Exception {
		ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext("applicationContext-*.xml");

		OrgRelationService org = (OrgRelationService) context.getBean("orgRelationService");
		UserSelectService userService = (UserSelectService)context.getBean("userSelectService");
		
		
//		Ye0090Service ye0090Service = (Ye0090Service)context.getBean("ye0090Service");
//		List<AttMonReport> list = ye0090Service.getAttMonReport();
//		System.out.println(list);

		List<UserInfo> allUsers = userService.selectUser();
//		
//		@SuppressWarnings("unused")
//		OrgInfo info = org.getOrgInfoBy("2002000001");
		
		
		output("1", org, allUsers, 0.5f);	//请假1
		output("1", org, allUsers, 1.0f);	//请假2
		output("1", org, allUsers, 3.0f);	//请假3
//		output("2", org, allUsers, 0);		//考勤
//		output("3", org, allUsers, 0);		//加班
//		output("4", org, allUsers, 0);		//管理的项目
//		output("5", org, allUsers, 0);		//管理的组织

//		List<UserInfo> members = org.getMembersBy("2010000024", null);
//		List<UserInfo> members = org.getMembersBy("2010000024", DateUtil.parse("2010-08-30 14:12:12"));
		
//		org.getParentOrgBy("2010000019");

//		output("6", org, allUsers, 0);	//所参与的项目
		
	}
	
	private static void output(String type, OrgRelationService orgService, List<UserInfo> allUsers, float days) throws Exception {
		String fileName = "";
		if("1".equals(type)) {
			if(days < 1) {
				fileName = "请假流程(小于1天).txt";
			} else if(days > 2) {
				fileName = "请假流程(大于2天).txt";
			} else {
				fileName = "请假流程(1-2天).txt";
			}
		}
		if("2".equals(type)) {
			fileName = "考勤流程.txt";
		}
		if("3".equals(type)) {
			fileName = "加班流程.txt";
		}
		if("4".equals(type)) {
			fileName = "管理的项目.txt";
		}
		if("5".equals(type)) {
			fileName = "管理的组织.txt";
		}
		if("6".equals(type)) {
			fileName = "参与的项目.txt";
		}
		
		File file = new File("E:" + File.separator + fileName);
		if(file.exists()) {
			file.delete();
		} 
		file.createNewFile();
		
		Iterator<UserInfo> iter = allUsers.iterator();
		while(iter.hasNext()) {
			UserInfo user = iter.next();
			List<List<OrgInfo>> flows = null;
			if("1".equals(type)) {
				flows = orgService.getFlowForLeave(user.getUserId(), days, DateUtil.parse("2011-01-11"));
				print(user, flows, file);
			}
			if("2".equals(type)) {
				flows = orgService.getFlowForAtt(user.getUserId(), new Date());
				print(user, flows, file);
			}
			if("3".equals(type)) {
				flows = orgService.getFlowForOvertime(user.getUserId(), new Date());
				print(user, flows, file);
			}
			if("4".equals(type)) {
				List<OrgInfo> list = orgService.getManagedProjectBy(user.getUserId(), AttConstants.OrgLifeCycle.PASS);
				print2(user, list, file);
			}
			if("5".equals(type)) {
				List<OrgInfo> list = orgService.getManagedOrgBy(user.getUserId());
				print2(user, list, file);
			}
			if("6".equals(type)) {
				List<OrgInfo> list = orgService.getJoinProjectBy(user.getUserId(), AttConstants.OrgLifeCycle.PASS);
				print2(user, list, file);
			}
			
		}
		
	}
	
	
	public static void print(UserInfo user, List<List<OrgInfo>> flows, File file) throws Exception {
		
		PrintStream out = new PrintStream(new FileOutputStream(file, true));
		out.println(user.getUserId() + "," + user.getUserName() + ":");
		
		if(null != flows) {
			for(int i=0; i<flows.size(); i++) {
				List<OrgInfo> infoList = flows.get(i);
				if(null == infoList || infoList.size() == 0) {
					continue;
				}
				
				StringBuffer buf = new StringBuffer();
				buf.append("第"+ (i + 1) + "流程：");
				buf.append("[");
				
				for(int j=0; j<infoList.size(); j++) {
					OrgInfo info = infoList.get(j);
					buf.append("{");
					buf.append(info.getOrgId() + ",");
					buf.append(info.getOrgNm() + ",");
					buf.append(info.getOrgSnm() + ",");
					buf.append(info.getOrgMnger() + ",");
					buf.append(info.getOrgMngerName() + ",");
					buf.append(info.getOrgProperty());
					
					if(j == infoList.size() - 1) {
						buf.append("}");
					} else {
						buf.append("},");
					}
				}
				
				buf.append("]");
				out.println(buf);
			}
		}
		out.println();
		out.close();
	}
	
	public static void print2(UserInfo user, List<OrgInfo> project, File file) throws Exception {
		
		PrintStream out = new PrintStream(new FileOutputStream(file, true));
		out.println(user.getUserId() + "," + user.getUserName() + ":");
		StringBuffer buf = new StringBuffer();
		for(int i=0; i<project.size(); i++) {
			OrgInfo info = project.get(i);
			buf.append("{");
			buf.append(info.getOrgId() + ",");
			buf.append(info.getOrgNm() + ",");
			buf.append(info.getOrgSnm() + ",");
			buf.append(DateUtil.setDateFormat(info.getOrgStDate(), "yyyy-MM-dd") + ",");
			buf.append(DateUtil.setDateFormat(info.getOrgEndDate(), "yyyy-MM-dd") + ",");
			buf.append(info.getOrgMnger() + ",");
			buf.append(info.getOrgMngerName() + ",");
			buf.append(info.getOrgProperty());
			
			if(i == project.size() - 1) {
				buf.append("}");
			} else {
				buf.append("},\n");
			}
		}
		out.println(buf);
		out.println();
		out.close();
	}

}
