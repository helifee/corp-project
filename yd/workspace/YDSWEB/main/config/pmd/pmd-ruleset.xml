<?xml version="1.0" encoding="UTF-8"?>

<ruleset name="Favorites" xmlns="http://pmd.sf.net/ruleset/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd" 
	xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
	<description> The Favorites ruleset contains links to rules that I like to use. Usually I combine this ruleset with 
		the unusedcode.xml, basic.xml, and import.xml rulesets for my projects. This ruleset also serves as an example 
		of how to do a custom ruleset. Sample ruleset for xieyujun all rules. </description>
	<!-- 排除模式 -->
	<exclude-pattern>.*/com/yds/common/service/impl/StaffPinyinServiceImpl.java</exclude-pattern>
	<!--  基本  -->
	<rule ref="rulesets/basic.xml/EmptyCatchBlock"/>
	<rule ref="rulesets/basic.xml/EmptyIfStmt"/>
	<rule ref="rulesets/basic.xml/EmptyWhileStmt"/>
	<rule ref="rulesets/basic.xml/EmptyTryBlock"/>
	<rule ref="rulesets/basic.xml/EmptyFinallyBlock"/>
	<rule ref="rulesets/basic.xml/EmptySwitchStatements"/>
	<rule ref="rulesets/basic.xml/JumbledIncrementer"/>
	<rule ref="rulesets/basic.xml/ForLoopShouldBeWhileLoop"/>
	<rule ref="rulesets/basic.xml/UnnecessaryConversionTemporary"/>
	<rule ref="rulesets/basic.xml/OverrideBothEqualsAndHashcode"/>
	<rule ref="rulesets/basic.xml/DoubleCheckedLocking"/>
	<rule ref="rulesets/basic.xml/ReturnFromFinallyBlock"/>
	<rule ref="rulesets/basic.xml/EmptySynchronizedBlock"/>
	<rule ref="rulesets/basic.xml/UnnecessaryReturn"/>
	<rule ref="rulesets/basic.xml/EmptyStaticInitializer"/>
	<rule ref="rulesets/basic.xml/UnconditionalIfStatement"/>
	<rule ref="rulesets/basic.xml/EmptyStatementNotInLoop"/>
	<rule ref="rulesets/basic.xml/BooleanInstantiation"/>
	<rule ref="rulesets/basic.xml/UnnecessaryFinalModifier"/>
	<!-- 
    <rule ref="rulesets/basic.xml/CollapsibleIfStatements"/>
	 -->
	<rule ref="rulesets/basic.xml/UselessOverridingMethod"/>
	<rule ref="rulesets/basic.xml/ClassCastExceptionWithToArray"/>
	<rule ref="rulesets/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
	<rule ref="rulesets/basic.xml/UselessOperationOnImmutable"/>
	<rule ref="rulesets/basic.xml/MisplacedNullCheck"/>
	<rule ref="rulesets/basic.xml/UnusedNullCheckInEquals"/>
	<rule ref="rulesets/basic.xml/AvoidThreadGroup"/>
	<rule ref="rulesets/basic.xml/BrokenNullCheck"/>
	<rule ref="rulesets/basic.xml/BigIntegerInstantiation"/>
	<rule ref="rulesets/basic.xml/AvoidUsingOctalValues"/>
	<rule ref="rulesets/basic.xml/AvoidUsingHardCodedIP"/>
	<rule ref="rulesets/basic.xml/CheckResultSet"/>
	<rule ref="rulesets/basic.xml/AvoidMultipleUnaryOperators"/>
	<rule ref="rulesets/basic.xml/EmptyInitializer"/>
	<!--  命名 -->
	<!--
    <rule ref="rulesets/naming.xml"/>
    -->
	<!--  未使用的代码  -->
	<!-- pmd.UnusedLocalVariable = findbugs.DLS_DEAD_LOCAL_STORE --> 
	<rule ref="rulesets/unusedcode.xml">
		<exclude name="UnusedLocalVariable"/>
	</rule>
	<!--  设计  -->
	<!--
    <rule ref="rulesets/design.xml/SimplifyBooleanReturns"/>
    -->
	<rule ref="rulesets/design.xml/SwitchStmtsShouldHaveDefault"/>
	<!--  导入语句  -->
	<rule ref="rulesets/imports.xml/DuplicateImports"/>
	<rule ref="rulesets/imports.xml/DontImportJavaLang"/>
	<rule ref="rulesets/imports.xml/UnusedImports"/>
	<!-- checkstyle.RedundantImportCheck = PMD.ImportFromSamePackage -->
	<!--
	<rule ref="rulesets/imports.xml/ImportFromSamePackage"/>
	-->
	<rule ref="rulesets/imports.xml/TooManyStaticImports">
		<properties>
			<property name="minimum" value="60"/>
			<property name="maximumStaticImports" value="20"/>
		</properties>
	</rule>
	<!--  JUnit测试  -->
	<rule ref="rulesets/junit.xml/JUnitTestsShouldIncludeAssert"/>
	<rule ref="rulesets/junit.xml/TestClassWithoutTestCases"/>
	<rule ref="rulesets/junit.xml/UnnecessaryBooleanAssertion"/>
	<!--  字符串  -->
	<rule ref="rulesets/strings.xml/StringToString"/>
	<rule ref="rulesets/strings.xml/StringInstantiation"/>
	<rule ref="rulesets/strings.xml/UseStringBufferLength"/>
	<!--  括号  -->
	<rule ref="rulesets/braces.xml"/>
	<!--  代码复杂度  -->
	<rule ref="rulesets/codesize.xml/NPathComplexity">
		<properties>
			<property name="minimum" value="500"/>
		</properties>
	</rule>
	<!-- default is 150 checkstyle.MethodLength = PMD.ExcessiveMethodLength -->
	<!-- 
	<rule ref="rulesets/codesize.xml/ExcessiveMethodLength"/>
	 -->
	<rule ref="rulesets/codesize.xml/ExcessiveParameterList"/>
	<!-- checkstyle.FileLength = PMD.ExcessiveClassLength -->
	<!--
	<rule ref="rulesets/codesize.xml/ExcessiveClassLength"/>
	<rule ref="rulesets/codesize.xml/ExcessivePublicCount">
		<properties>
			<property name="minimum" value="100"/>
		</properties>
	</rule>
	  -->
	<rule ref="rulesets/codesize.xml/NcssMethodCount"/>
	<rule ref="rulesets/codesize.xml/NcssTypeCount"/>
	<rule ref="rulesets/codesize.xml/NcssConstructorCount"/>
	<!--  Javabean  -->
	<!--
    <rule ref="rulesets/javabeans.xml"/>
    -->
	<!--  克隆  -->
	<rule ref="rulesets/clone.xml">
		<exclude name="CloneThrowsCloneNotSupportedException"></exclude>
	</rule>
	<!--  耦合  -->
	<rule ref="rulesets/coupling.xml"/>
	<!--  严格的异常  -->
	<rule ref="rulesets/strictexception.xml/AvoidCatchingNPE"/>
	<!--
    <rule ref="rulesets/strictexception.xml/AvoidCatchingThrowable"/>
    -->
	<rule ref="rulesets/strictexception.xml/AvoidRethrowingException"/>
	<rule ref="rulesets/strictexception.xml/AvoidThrowingNewInstanceOfSameException"/>
	<rule ref="rulesets/strictexception.xml/AvoidThrowingNullPointerException"/>
	<!--
    <rule ref="rulesets/strictexception.xml/AvoidThrowingRawExceptionTypes"/>
    -->
	<rule ref="rulesets/strictexception.xml/DoNotExtendJavaLangError"/>
	<rule ref="rulesets/strictexception.xml/DoNotThrowExceptionInFinally"/>
	<rule ref="rulesets/strictexception.xml/ExceptionAsFlowControl"/>
	<!--  有争议的  -->
	<rule ref="rulesets/controversial.xml/UnnecessaryConstructor"/>
	<!--
    <rule ref="rulesets/controversial.xml/NullAssignment"/>
    -->
	<!--  日志   -->
	<!--
    <rule ref="rulesets/logging-java.xml"/>
    -->
	<!--  自定义规则   -->
	<!--
    <rule ref="pmd-ruleset-yds.xml"/>
	-->
</ruleset>

