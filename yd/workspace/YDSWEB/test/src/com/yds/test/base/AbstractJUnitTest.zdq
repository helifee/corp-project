/*
 * @(#)AbstractJUnitTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */
package com.yds.test.base;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 * 直接使用JUnit的测试基类，速度较慢，<br>
 * 测试代码比较复杂. 不要使用. 在此只是作为一个例子.<br>
 * 缺点：<br>
 * 需要使用硬编码方式手工获取 Bean,<br>
 * 在测试用例中，需要通过 ApplicationContext.getBean() 的方法<br>
 * 从 Spirng 容器中获取需要测试的目标 Bean，并且还要进行造型操作.
 * 
 * @author xieyujun
 * @see AbstractSpringTest
 * @see AbstractSpringTransByBeanTest
 */
public abstract class AbstractJUnitTest {

	/** LOG factory. */
	private static final Log LOG = LogFactory.getLog(AbstractJUnitTest.class);

	/** spring factory. */
	private static ApplicationContext ctx;

	/**
	 * @return the ApplicationContext
	 */
	public static ApplicationContext getCtx() {
		if (LOG.isDebugEnabled()) {
			LOG.debug("*** JUnit getCtx() invoke... ***");
		}
		ctx = new ClassPathXmlApplicationContext("applicationContext-*.xml");
		if (null == ctx) {
			if (LOG.isDebugEnabled()) {
				LOG.debug("*** ApplicationContext not initialized ***");
			}
		}
		return ctx;
	}

}
