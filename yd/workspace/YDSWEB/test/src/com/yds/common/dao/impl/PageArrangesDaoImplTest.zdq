/*
 * @(#)PageArrangesDaoImplTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */

package com.yds.common.dao.impl;

import static com.yds.base.test.BeanAssert.assertBeanLenientEquals;
import static org.junit.Assert.*;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.common.dao.PageArrangesDao;
import com.yds.common.bean.CheckAndLockInfo;
import javax.annotation.Resource;
import org.junit.Before;
import org.junit.Test;

/**
 * 页面排他DAO调试
 * 
 * @author fengliang
 *
 */
public class PageArrangesDaoImplTest extends AbstractSpringTransTest{

	/** @Resource，自动注入Dao */
	@Resource
	private PageArrangesDao pageArrangesDao;
	
	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		
		initCommonData(PageArrangesDaoImpl.class);
		
		// 删除表中数据
		this.deleteFromTables("COM_PAGE_LOCK","COM_USER");

	}

	/**
	 * Test method for {@link com.yds.common.dao.impl.PageArrangesDaoImpl#getCheckAndLockInfo(com.yds.common.bean.CheckAndLockInfo)}.
	 */
	@Test
	public void testGetCheckAndLockInfo() throws Exception{
		// 初始化数据库
		initData("input01.xls", "result01.xls");

		// 参数
		CheckAndLockInfo checkAndLockInfo = getParamObject(CheckAndLockInfo.class);

		// 调用被测试方法
		CheckAndLockInfo actualCheckAndLockInfo = pageArrangesDao.getCheckAndLockInfo(checkAndLockInfo);
				

		// 得到预期值
		CheckAndLockInfo expectCheckAndLockInfo = getExpectObject(CheckAndLockInfo.class);

		assertBeanLenientEquals(expectCheckAndLockInfo, actualCheckAndLockInfo);
	}

	/**
	 * Test method for {@link com.yds.common.dao.impl.PageArrangesDaoImpl#deleteLock(com.yds.common.bean.CheckAndLockInfo)}.
	 */
	@Test
	public void testDeleteLock() throws Exception{
		
		// 初始化数据库
		initData("input01.xls", "result02.xls");
		
		// 初始化测试方法参数
		// 参数
		CheckAndLockInfo checkAndLockInfo = getParamObject(CheckAndLockInfo.class);
		
		// 调用被测试方法
		pageArrangesDao.deleteLock(checkAndLockInfo);
		
		// 实际检索对象
		CheckAndLockInfo expectCheckAndLockInfo = findBeanByCondition(
				CheckAndLockInfo.class, "param_COM_PAGE_LOCK");

		// 断言检索结果是否为空
		assertNull(expectCheckAndLockInfo);
	}

	/**
	 * Test method for {@link com.yds.common.dao.impl.PageArrangesDaoImpl#insertLock(com.yds.common.bean.CheckAndLockInfo)}.
	 */
	@Test
	public void testInsertLock() throws Exception{
	  
		// 初始化数据库
		initData("", "result02.xls");
		
		// 初始化测试方法参数
		// 参数
		CheckAndLockInfo checkAndLockInfo = getParamObject(CheckAndLockInfo.class);

		// 调用被测试方法
		pageArrangesDao.insertLock(checkAndLockInfo);
		
		// 实际检索对象
		CheckAndLockInfo actualCheckAndLockInfo = findBeanByCondition(
				CheckAndLockInfo.class, "param_COM_PAGE_LOCK");
		
		// 得到预期值
		CheckAndLockInfo expectCheckAndLockInfo = getExpectObject(CheckAndLockInfo.class, "expect_COM_PAGE_LOCK");
		
		assertBeanLenientEquals(expectCheckAndLockInfo, actualCheckAndLockInfo);
		
	}

	/**
	 * Test method for {@link com.yds.common.dao.impl.PageArrangesDaoImpl#getUserName(com.yds.common.bean.CheckAndLockInfo)}.
	 */
	@Test
	public void testGetUserName() throws Exception{
		
		// 初始化数据库
		initData("input02.xls", "result02.xls");
		
		// 初始化测试方法参数
		// 参数
		CheckAndLockInfo checkAndLockInfo = getParamObject(CheckAndLockInfo.class);
   
		// 实际检索对象
		String actualUserName = pageArrangesDao.getUserName(checkAndLockInfo);
		
		// 得到预期值
		String expectUserName = getExpectObject(String.class, "expect_USER");
	
		assertBeanLenientEquals(expectUserName, actualUserName);
	}

	public void setPageArrangesDao(PageArrangesDao pageArrangesDao) {
		this.pageArrangesDao = pageArrangesDao;
	}

}
