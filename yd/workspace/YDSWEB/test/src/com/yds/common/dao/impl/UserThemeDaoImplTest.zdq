/**
 * 
 */
package com.yds.common.dao.impl;

import static com.yds.base.test.BeanAssert.assertBeanLenientEquals;
import static com.yds.base.test.BeanAssert.assertListLenientEquals;

import java.util.List;

import javax.annotation.Resource;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.common.bean.ThemeInfo;
import com.yds.common.dao.UserThemeDao;

/**
 * @author lincheng
 *
 */
public class UserThemeDaoImplTest extends AbstractSpringTransTest {
	/** 注入*/
	@Resource
	private UserThemeDao userThemeDao;

	/**
	 * @throws java.lang.Exception
	 */
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	/**
	 * @throws java.lang.Exception
	 */
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		// 删除主题信息表
		deleteFromTables("com_theme_info","com_theme");
		
		// 初始化
		initCommonData(UserThemeDaoImpl.class,"init.xls");
	}

	/**
	 * @throws java.lang.Exception
	 */
	@After
	public void tearDown() throws Exception {
	}

	/**
	 * Test method for {@link com.yds.common.dao.impl.UserThemeDaoImpl#getThemeNm(java.lang.String)}.
	 * @throws Exception 
	 */
	@Test
	public void testGetThemeNm() throws Exception {
		// 初始化数据库
		initData("","result02.xls");
		// 初始化测试方法参数
		String userId = getParamObject(String.class);
		// 调用测试方法
		ThemeInfo actualInfo = userThemeDao.getThemeNm(userId);
		// 取得预期值
		ThemeInfo expectInfo = getExpectObject(ThemeInfo.class);
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectInfo, actualInfo);
	}

	/**
	 * Test method for {@link com.yds.common.dao.impl.UserThemeDaoImpl#getThemeNmList()}.
	 * @throws Exception 
	 */
	@Test
	public void testGetThemeNmList() throws Exception {
		// 初始化数据库
		initData("","result01.xls");
		// 调用测试方法
		List<ThemeInfo> actualList = userThemeDao.getThemeNmList();
		// 取得预期值
		List<ThemeInfo> expectList = getExpectList(ThemeInfo.class);
		// 断言检索结果与预期值是不是一致
		assertListLenientEquals(expectList, actualList);
	}

	/**
	 * Test method for {@link com.yds.common.dao.impl.UserThemeDaoImpl#updateUserTheme(com.yds.common.bean.ThemeInfo)}.
	 * @throws Exception 
	 */
	@Test
	public void testUpdateUserTheme() throws Exception {
		// 初始化数据库
		initData("","result03.xls");
		
		// 初始化测试方法参数(有对应数据情况，更新)
		ThemeInfo themeInfo = getParamObject(ThemeInfo.class);
		
		// 调用测试方法
		userThemeDao.updateUserTheme(themeInfo);
		
		// 实际检索对象
		ThemeInfo actualInfo = findBeanByCondition(ThemeInfo.class,
				"param_COM_THEME");
		// 取得预期值
		ThemeInfo expectInfo = getExpectObject(ThemeInfo.class);
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectInfo, actualInfo);
		
		
		// 初始化测试方法参数（无对应数据情况，插入）
		ThemeInfo themeInfo1 = getParamObject(ThemeInfo.class,"param1");
		
		// 调用测试方法
		userThemeDao.updateUserTheme(themeInfo1);
		
		// 实际检索对象
		ThemeInfo actualInfo1 = findBeanByCondition(ThemeInfo.class,
				"param1_COM_THEME");
		// 取得预期值
		ThemeInfo expectInfo1 = getExpectObject(ThemeInfo.class,"expect1");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectInfo1, actualInfo1);
	}

}
