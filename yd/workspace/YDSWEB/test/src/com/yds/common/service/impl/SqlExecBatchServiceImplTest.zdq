/*
 * @(#)SqlExecBatchServiceImplTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */
package com.yds.common.service.impl;
import com.yds.base.test.AbstractSpringTransTest;
import static com.yds.base.test.BeanAssert.assertListLenientEquals;
import java.util.List;
import javax.annotation.Resource;
import org.junit.Before;
import org.junit.Test;
import com.yds.common.bean.LogInfo;
import com.yds.common.service.SqlExecBatchService;

/**
 * 执行SQL信息插入处理BATCH（数据库操作）测试.
 * 
 * @author mengxiaoyan
 * @version 1.00 2010/06/05
 */
public class SqlExecBatchServiceImplTest  extends AbstractSpringTransTest {
	@Resource
	private SqlExecBatchService sqlExecBatchService;
	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {

		// 删除表中数据(避免和测试数据冲突)
		this.deleteFromTables("com_log_mst");

		initCommonData(SqlExecBatchServiceImpl.class);
	}

	/**
	 * Test method for {@link com.yds.common.service.impl.SqlExecBatchServiceImpl#sqlExect()}.
	 */
	@Test
	// 执行sql语句方法测试
	public final void testInsertSqlExect1()throws Exception {
		// 初始化数据库
		String pathTest = SqlExecBatchServiceImplTest.class.getResource(".").getPath() + "log1.sql";
		initData("", "result01.xls");
		// 初始化测试方法参数
		
		// 调用被测试方法
		sqlExecBatchService.setSqlPath(pathTest);
		sqlExecBatchService.insertSqlExect();

		// 检索com_log_mst插入的数据
		List<LogInfo> actualLogInfo = findListBeanByCondition(LogInfo.class,
				"param_com_log_mst");
		// 得到预期值
		List<LogInfo> expectLogInfo = getExpectList(LogInfo.class, "expect");
		// 断言检索结果和预期是不是一致
		assertListLenientEquals(expectLogInfo,actualLogInfo);
	}
	/**
	 * Test method for {@link com.yds.common.service.impl.SqlExecBatchServiceImpl#sqlExect()}.
	 */
	@Test
	// 执行sql语句方法测试
	public final void testInsertSqlExect2()throws Exception {
		// 初始化数据库
		String pathTest = SqlExecBatchServiceImplTest.class.getResource(".").getPath() + "log2.sql";
		initData("", "result02.xls");
		// 初始化测试方法参数
		
		// 调用被测试方法
		sqlExecBatchService.setSqlPath(pathTest);
		sqlExecBatchService.insertSqlExect();

		// 检索com_log_mst插入的数据
		List<LogInfo> actualLogInfo = findListBeanByCondition(LogInfo.class,
				"param_com_log_mst");
		// 得到预期值
		List<LogInfo> expectLogInfo = getExpectList(LogInfo.class, "expect");
		// 断言检索结果和预期是不是一致
		assertListLenientEquals(expectLogInfo,actualLogInfo);
	}
}
