package com.yds.gps.service.impl;

import static org.junit.Assert.*;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.junit.After;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import com.opensymphony.xwork2.ActionContext;
import com.yds.base.test.AbstractSpringTransTest;
import com.yds.common.bean.ComIoData;
import com.yds.common.bean.UserInfo;
import com.yds.common.service.SessionConstants;
import com.yds.gps.bean.GpsAccount;
import com.yds.gps.bean.GpsExchangeHis;
import com.yds.gps.service.GpsConstants;
import com.yds.gps.service.impl.Yd8010ServiceImpl;
import com.yds.ws.service.HandleService;

public class Yd8010ServiceImplTest extends AbstractSpringTransTest {
	
	@Resource
	private HandleService yd8010Service;

	@Before
	public void setUp() throws Exception {
		initCommonData(Yd8010ServiceImpl.class);
		
		// 设置userid
		Map<String, Object> context = new HashMap<String, Object>();
		ActionContext actionContext = new ActionContext(context);
		ActionContext.setContext(actionContext);
		Map<String, Object> session = new HashMap<String, Object>();
		UserInfo userInfo = new UserInfo();
		userInfo.setUserId(GpsConstants.COFFEE_ACCOUNT);
		session.put(SessionConstants.USERINFO, userInfo);
		actionContext.setSession(session);
		
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("GPS_ACCOUNT", "GPS_EXCHANGE_HIS");
	}

	@After
	public void tearDown() throws Exception {
	}

	/**
	 * 测试临时人员刷卡情况
	 * 
	 * @throws Exception
	 */
	@Test
	public final void testHandle1() throws Exception {
		
		// 初始化数据库
		super.initData("input.xls", "result1.xls");
		
		// 初始化测试方法参数
		List<ComIoData> ioDataList = super.getParamList(ComIoData.class, "param1_COM_IODATA");
		
		// 调用被测试方法
		this.yd8010Service.handle(ioDataList);
		
		//取得插入的数据
		List<GpsAccount> actual_acc1 = super.findListBeanByCondition(GpsAccount.class, "param_GPS_ACCOUNT");
		List<GpsExchangeHis> actual_his1 = super.findListBeanByCondition(GpsExchangeHis.class, "param_GPS_EXCHANGE_HIS");
		
		//断言检索结果
		assertTrue(actual_acc1.size() == 0 && actual_his1.size() == 0);
	}
	
	/**
	 * 测试生日情况
	 * 
	 * @throws Exception
	 */
	@Test
	@Ignore	//通过测试需要重新配置数据
	public final void testHandle2() throws Exception {
		
		// 初始化数据库
		super.initData("input.xls", "result2.xls");
		
		// 初始化测试方法参数
		List<ComIoData> ioDataList = super.getParamList(ComIoData.class, "param1_COM_IODATA");
		
		// 调用被测试方法
		this.yd8010Service.handle(ioDataList);
		
		//取得插入的数据
		List<GpsAccount> actual_acc1 = super.findListBeanByCondition(GpsAccount.class, "param_GPS_ACCOUNT");
		List<GpsExchangeHis> actual_his1 = super.findListBeanByCondition(GpsExchangeHis.class, "param_GPS_EXCHANGE_HIS");
		
		//取得期望数据
		List<GpsAccount> expect_acc1 = super.getExpectList(GpsAccount.class, "expect1_GPS_ACCOUNT");
		List<GpsExchangeHis> expect_his1 = super.getExpectList(GpsExchangeHis.class, "expect1_GPS_EXCHANGE_HIS");
		
		//断言检索结果
		assertTrue(expect_acc1.size() == actual_acc1.size());
		assertTrue(expect_his1.size() == actual_his1.size());
	}
	
	/**
	 * 测试固定概率情况
	 * 
	 * @throws Exception
	 */
	@Test
	@Ignore	//通过测试需要重新配置数据
	public final void testHandle3() throws Exception {
		
		// 初始化数据库
		super.initData("input.xls", "result3.xls");
		
		// 初始化测试方法参数
		List<ComIoData> ioDataList = super.getParamList(ComIoData.class, "param1_COM_IODATA");
		
		// 调用被测试方法
		this.yd8010Service.handle(ioDataList);
		
		//取得插入的数据
		List<GpsAccount> actual_acc1 = super.findListBeanByCondition(GpsAccount.class, "param_GPS_ACCOUNT");
		List<GpsExchangeHis> actual_his1 = super.findListBeanByCondition(GpsExchangeHis.class, "param_GPS_EXCHANGE_HIS");
		
		//取得期望数据
		List<GpsAccount> expect_acc1 = super.getExpectList(GpsAccount.class, "expect1_GPS_ACCOUNT");
		List<GpsExchangeHis> expect_his1 = super.getExpectList(GpsExchangeHis.class, "expect1_GPS_EXCHANGE_HIS");
		
		//断言检索结果
		assertTrue(expect_acc1.size() == actual_acc1.size());
		assertTrue(expect_his1.size() == actual_his1.size());
	}

}
