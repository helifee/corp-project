/**
 * 
 */
package com.yds.gps.service.impl;

import static com.yds.base.test.BeanAssert.assertBeanLenientEquals;
import static com.yds.base.test.BeanAssert.assertListEquals;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.base.test.ExcelUtil;
import com.yds.common.bean.UserInfo;
import com.yds.common.service.SessionConstants;
import com.yds.gps.bean.GpsAccount;
import com.yds.gps.bean.GpsGoodsCate;
import com.yds.gps.bean.GpsGoodsInfo;
import com.yds.gps.bean.GpsOrderGoods;
import com.yds.gps.bean.Yd0030CondA;
import com.yds.gps.common.bean.GpsOrderInfo;
import com.yds.gps.service.Yd0030Service;

/**
 * @author lincheng
 *
 */
public class Yd0030ServiceImplTest extends AbstractSpringTransTest {

	@Resource
	private Yd0030Service yd0030Service;
	/**
	 * @throws java.lang.Exception
	 */
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		
		// 模拟Session设值
		UserInfo userInfo = new UserInfo();
		userInfo.setUserId("YD200903");
		Map<String, Object> session = ExcelUtil.getSession();
		session.put(SessionConstants.USERINFO, userInfo);
	}
	
	/**
	 * @throws java.lang.Exception
	 */
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}
	
	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		
		initCommonData(Yd0030ServiceImpl.class);
		
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("gps_account", "gps_exchange_his", "gps_goods_cate", "gps_goods_info", "gps_order_detail",
						"gps_order_goods", "gps_order_info", "sys_code_mst", "com_seq");
	}

	/**
	 * @throws java.lang.Exception
	 */
	@After
	public void tearDown() throws Exception {
	}

	/**
	 * Test method for {@link com.yds.gps.service.impl.Yd0030ServiceImpl#getGpsAccount(java.lang.String)}.
	 * @throws Exception 
	 */
	@Test
	public final void testGetGpsAccount() throws Exception {
		// 初始化数据库
		initData("input.xls", "result.xls");
		
		// 初始化测试方法参数
		String accId = getParamObject(String.class,"param");
		// 调用被测试方法
		GpsAccount actualInfo = yd0030Service.getGpsAccount(accId);
		// 得到预期值
		GpsAccount expectInfo = getExpectObject(GpsAccount.class, "expect_GPS_ACCOUNT");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectInfo, actualInfo);
	}

	/**
	 * Test method for {@link com.yds.gps.service.impl.Yd0030ServiceImpl#getGpsGoodsCateList(com.yds.gps.bean.GpsAccount)}.
	 * @throws Exception 
	 */
	@Test
	public final void testGetGpsGoodsCateList() throws Exception {
		// 初始化数据库
		initData("input.xls", "result.xls");
		
		// 初始化测试方法参数
		GpsAccount account = getParamObject(GpsAccount.class,"param_GPS_ACCOUNT");
		// 调用被测试方法
		List<GpsGoodsCate> actualInfo = yd0030Service.getGpsGoodsCateList(account);
		// 得到预期值
		List<GpsGoodsCate> expectInfo = getExpectList(GpsGoodsCate.class, "expect_GPS_GOODS_CATE");
		// 断言检索结果和预期是否一致
		assertListEquals(expectInfo, actualInfo);
	}

	/**
	 * Test method for {@link com.yds.gps.service.impl.Yd0030ServiceImpl#getGpsGoodsInfoList(com.yds.gps.bean.Yd0030CondA)}.
	 * @throws Exception 
	 */
	@Test
	public final void testGetGpsGoodsInfoList() throws Exception {
		// 初始化数据库
		initData("input.xls", "result.xls");
		
		// 初始化测试方法参数
		Yd0030CondA condA = getParamObject(Yd0030CondA.class,"param_Yd0030CondA");
		// 调用被测试方法
		List<GpsGoodsInfo> actualInfo = yd0030Service.getGpsGoodsInfoList(condA);
		// 得到预期值
		List<GpsGoodsInfo> expectInfo = getExpectList(GpsGoodsInfo.class, "expect_GPS_GOODS_INFO");
		// 断言检索结果和预期是否一致
		assertListEquals(expectInfo, actualInfo);
	}

	/**
	 * Test method for {@link com.yds.gps.service.impl.Yd0030ServiceImpl#insertGpsOrderGoods(com.yds.gps.bean.GpsOrderGoods)}.
	 * @throws Exception 
	 */
	@Test
	public final void testInsertGpsOrderGoods() throws Exception {
		// 初始化数据库
		initData("input.xls", "result.xls");
		
		// 初始化测试方法参数
		GpsOrderGoods orderGoods = getParamObject(GpsOrderGoods.class,"param_GPS_ORDER_GOODS");
		// 调用被测试方法
		yd0030Service.insertGpsOrderGoods(orderGoods);
		// 检索更新的数据（订单商品表）
		List<GpsOrderGoods> actualInfo = findListBeanByCondition(GpsOrderGoods.class, "param_GPS_ORDER_GOODS");
		// 得到预期值
		List<GpsOrderGoods> expectInfo = getExpectList(GpsOrderGoods.class, "expect_GPS_ORDER_GOODS");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectInfo, actualInfo);
	}

	/**
	 * Test method for {@link com.yds.gps.service.impl.Yd0030ServiceImpl#insertGpsOrderInfo(com.yds.gps.common.bean.GpsOrderInfo)}.
	 * @throws Exception 
	 */
	@Test
	public final void testInsertGpsOrderInfo() throws Exception {
		// 初始化数据库
		initData("input.xls", "result.xls");
		
		// 初始化测试方法参数
		GpsOrderInfo orderInfo = getParamObject(GpsOrderInfo.class,"param_GPS_ORDER_INFO");
		// 调用被测试方法
		yd0030Service.insertGpsOrderInfo(orderInfo);
		// 检索更新的数据（订单商品表）
		List<GpsOrderInfo> actualInfo = findListBeanByCondition(GpsOrderInfo.class, "param_GPS_ORDER_INFO");
		// 得到预期值
		List<GpsOrderInfo> expectInfo = getExpectList(GpsOrderInfo.class, "expect_GPS_ORDER_INFO");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectInfo, actualInfo);
	}

}
