/*
 * @(#)Ya0040ServiceImplTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 权限管理
 */
package com.yds.perm.service.impl;

import static com.yds.base.test.BeanAssert.assertListEquals;
import static com.yds.base.test.BeanAssert.assertListLenientEquals;
import static com.yds.base.test.BeanAssert.assertBeanLenientEquals;
import java.util.List;
import java.util.Map;
import javax.annotation.Resource;
import junit.framework.Assert;
import org.junit.Before;
import org.junit.Test;
import com.yds.base.test.AbstractSpringTransTest;
import com.yds.base.test.ExcelUtil;
import com.yds.common.bean.UserInfo;
import com.yds.common.service.SessionConstants;
import com.yds.perm.bean.PerRoleInfo;
import com.yds.perm.bean.PerUserPermitInfo;
import com.yds.perm.bean.Ya0040CondA;
import com.yds.perm.service.Ya0040Service;

/**
 * @author yuchenglin
 * @version 1.00 2010/08/30
 */
public class Ya0040ServiceImplTest extends AbstractSpringTransTest {
	
	/** @Resource，自动注入 */
	@Resource
	private Ya0040Service ya0040Service;
	
	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		
		// 删除表中数据(避免和测试数据冲突)
		this.deleteFromTables("PER_USER_PERMIT", "PER_ROLE");
		
		initCommonData(Ya0040ServiceImpl.class);
	}
	
	/**
	 * Test method for 
	 * {@link com.yds.perm.service.impl.Ya0040ServiceImpl#getPerUserPermitInfoList()}.
	 * 
	 * @throws java.lang.Exception
	 */
	@Test
	public void testGetPerUserPermitInfoList() throws Exception {
		
		//插入测试数据
		initData("input01.xls" , "result01.xls");
		
		String userId = getParamObject(String.class, "param");
		
		//调用被测试方法得到实际结果
		List<PerUserPermitInfo> actualList = ya0040Service.getPerUserPermitInfoList(userId);
		
		//获得期望的结果
		List<PerUserPermitInfo> expectList = getExpectList(PerUserPermitInfo.class);
		
		//期望结果与实际结果进行比较
		assertListEquals(expectList, actualList);	
	}
	
	/**
	 * Test method for 
	 * {@link com.yds.perm.service.impl.Ya0040ServiceImpl#getUserRoleResultLst()}.
	 * 
	 * @throws java.lang.Exception
	 */
	@Test
	public void testGetUserRoleResultLst() throws Exception {
		
		//插入测试数据
		initData("input02.xls" , "result02.xls");
		
		//调用被测试方法得到实际结果
		List<PerRoleInfo> actualList = ya0040Service.getUserRoleResultLst();
		
		List<PerRoleInfo> expectList = getExpectList(PerRoleInfo.class);
		
		//期望结果与实际结果进行比较
		assertListEquals(expectList, actualList);
	}
	
	/**
	 * Test method for 
	 * {@link com.yds.perm.service.impl.Ya0040ServiceImpl#insertPerUserPermitInfoList()}.
	 * 
	 * @throws java.lang.Exception
	 */
	@Test
	public void testInsertPerUserPermitInfoList() throws Exception {
		
		//插入测试数据
		initData("" , "result03.xls");
		
		// Session模拟化
		UserInfo userInfo = new UserInfo();
		userInfo.setUserId("YD000000");
		Map<String, Object> session = ExcelUtil.getSession();
		session.put(SessionConstants.USERINFO, userInfo);
		
		// 初始化测试方法参数
		Ya0040CondA ya0040CondA = getParamObject(Ya0040CondA.class);
		List<String> perRoleIdInfos = getParamList(String.class, "param_perRoleIdInfos");
		ya0040CondA.setPerRoleIdInfos(perRoleIdInfos);
		
		// 调用被测试方法
		ya0040Service.insertPerUserPermitInfoList(ya0040CondA);
		

		//检索PER_ROLE_PERMIT插入的数据
		List<PerUserPermitInfo> actualList = ya0040Service.getPerUserPermitInfoList(ya0040CondA.getUserId());
		
		//获得期望的结果
		List<PerUserPermitInfo> expectList = getExpectList(PerUserPermitInfo.class);

		//期望结果与实际结果进行比较
		assertListLenientEquals(expectList, actualList);			
		
	}
	
	/**
	 * Test method for 
	 * {@link com.yds.perm.service.impl.Ya0040ServiceImpl#updatePermitTime()}.
	 * 
	 * @throws java.lang.Exception
	 */
	@Test
	public void testUpdatePermitTime() throws Exception {
		
		//插入测试数据
		initData("input03.xls" , "result04.xls");
		
		// 初始化测试方法参数
		Ya0040CondA ya0040CondA = getParamObject(Ya0040CondA.class, "param");
		
		// 调用被测试方法
		ya0040Service.updatePermitTime(ya0040CondA);

		//检索PER_ROLE_PERMIT更新的数据
		PerUserPermitInfo actualPerUserPermitInfo = findBeanByCondition(PerUserPermitInfo.class, "param1_PER_USER_PERMIT");
		
		//获得期望的结果
		PerUserPermitInfo expectPerUserPermitInfo = getParamObject(PerUserPermitInfo.class, "expect");

		//期望结果与实际结果进行比较
		assertBeanLenientEquals(expectPerUserPermitInfo, actualPerUserPermitInfo);
	}
	
	/**
	 * Test method for 
	 * {@link com.yds.perm.service.impl.Ya0040ServiceImpl#deletePermitData()}.
	 * 
	 * @throws java.lang.Exception
	 */
	@Test
	public void testDeletePermitData() throws Exception {
		
		//插入测试数据
		initData("input03.xls" , "result05.xls");
		
		// 初始化测试方法参数
		Ya0040CondA ya0040CondA = getParamObject(Ya0040CondA.class, "param");
		
		// 调用被测试方法
		ya0040Service.deletePermitData(ya0040CondA);
		
		// 检索删除的数据（组别信息表）
		Ya0040CondA actualPerUserPermitInfo = findBeanByCondition(Ya0040CondA.class, "param1_PER_USER_PERMIT");
		
		// 判断组别信息表是否为空
		Assert.assertNull(actualPerUserPermitInfo);
	}
}
