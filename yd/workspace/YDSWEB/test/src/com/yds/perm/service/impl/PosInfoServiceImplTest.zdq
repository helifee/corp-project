/*
 * @(#)PosInfoServiceImplTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 权限管理
 */
package com.yds.perm.service.impl;

import static com.yds.base.test.BeanAssert.*;
import java.util.List;
import javax.annotation.Resource;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import com.yds.base.test.AbstractSpringTransTest;
import com.yds.perm.bean.PosInfo;
import com.yds.perm.service.PosInfoService;

/**
 * @author fengliang
 * @version 1.00 2010/04/07
 */
public class PosInfoServiceImplTest extends AbstractSpringTransTest{

	/** @Resource，自动注入Service */
	@Resource
	private PosInfoService posInfoService;
	
	/**
	 * 初始化测试信息
	 * 
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		
		// 如果没有共通数据插入数据库，可以不用第一个参数
		initCommonData(PosInfoServiceImpl.class);

		// 删除表中数据(避免和测试数据冲突)
		this.deleteFromTables("PER_POSITION");
		
	}

	/**
	 * Test method for 
	 * {@link com.yds.perm.service.impl.PosInfoServiceImpl#getPosInfoList()}.
	 * 
	 * @throws java.lang.Exception
	 */
	@Test
	@Ignore(value="PER_POSITION已经删除")
	public void testGetPosInfoList() throws Exception{
		
		//插入测试数据
		initData("input01.xls" , "result01.xls");
		
		//调用被测试方法得到实际结果
		List<PosInfo> actualList = posInfoService.getPosInfoList();
		
		//获得期望的结果
		List<PosInfo> expectList = getExpectList(PosInfo.class);
		
		//期望结果与实际结果进行比较
		assertListEquals(expectList, actualList);	
	}

	/**
	 * Test method for 
	 * {@link com.yds.perm.service.impl.PosInfoServiceImpl#updatePosInfo(java.util.List)}.
	 * 
	 * @throws java.lang.Exception
	 */
	@Test
	@Ignore(value="PER_POSITION已经删除")
	public void testUpdatePosInfo() throws Exception{
		//插入测试数据
		initData("input01.xls" , "result02.xls");
		
		//取得参数
		List<PosInfo> posInfoList = getParamList(PosInfo.class);
		
		//调用被测试函数
		posInfoService.updatePosInfo(posInfoList);
		
		//从数据库检索出来实际的记录集
		List<PosInfo> actualList = findListBeanByCondition(PosInfo.class, "param_PER_POSITION");
		
		//预期的记录集
		List<PosInfo> expectList = getExpectList(PosInfo.class);
		
		//预期数据与实际数据进行比较
		assertListEquals(expectList, actualList);
		
	}

}
