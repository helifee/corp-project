/*
 * @(#)PosInfoDaoImplTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 权限管理
 */
package com.yds.perm.dao.impl;

import static com.yds.base.test.BeanAssert.assertBeanEquals;
import static com.yds.base.test.BeanAssert.assertListLenientEquals;

import java.util.List;

import javax.annotation.Resource;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.perm.bean.PosInfo;
import com.yds.perm.dao.PosInfoDao;

/**
 * @author qiliqiang
 * @version 1.00 2010/03/25
 */
public class PosInfoDaoImplTest extends AbstractSpringTransTest {
	/** @Resource，自动注入Dao */
	@Resource
	private PosInfoDao posInfoDao;

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {

		// 如果没有共通数据插入数据库，可以不用第一个参数
		initCommonData(PosInfoDaoImpl.class);
	}

	/**
	 * Test method for
	 * {@link com.yds.perm.dao.impl.PosInfoDaoImpl#getPosInfoList()}.
	 * 
	 * @throws java.lang.Exception
	 */
	@Test
	@Ignore(value="PER_POSITION已经删除")
	public void testGetPosInfoList() throws Exception {
		// 全件检索时候，原表中数据将会影响断言结果，应该将表中数据删除，再进行测试
		// 删除表中数据
		this.deleteFromTables("PER_POSITION");

		// 初始化数据库
		initData("input01.xls", "result01.xls");

		// 调用被测试方法
		List<PosInfo> actualList = posInfoDao.getPosInfoList();

		// 得到预期值
		List<PosInfo> expectList = getExpectList(PosInfo.class);

		// 断言检索结果和预期是不是一致
		assertListLenientEquals(expectList, actualList);
	}

	/**
	 * Test method for
	 * {@link com.yds.perm.dao.impl.PosInfoDaoImpl#updatePosInfo(com.yds.perm.bean.PosInfo)}
	 * .
	 * 
	 * @throws java.lang.Exception
	 */
	@Test
	@Ignore(value="PER_POSITION已经删除")
	public void testUpdatePosInfo() throws Exception {
		// 初始化数据库
		initData("input02.xls", "result02.xls");

		// 初始化测试方法参数
		PosInfo posInfo = getParamObject(PosInfo.class, "param_PER_POSITION");
		// 调用被测试方法
		posInfoDao.updatePosInfo(posInfo);

		// 实际检索对象
		PosInfo actualPosInfo = findBeanByCondition(PosInfo.class,
				"param_PER_POSITION");
		// 得到预期值
		PosInfo expectPosInfo = getExpectObject(PosInfo.class);
		// 断言检索结果和预期是不是一致
		assertBeanEquals(expectPosInfo, actualPosInfo);
	}

	/**
	 * Test method for
	 * {@link com.yds.perm.dao.impl.PosInfoDaoImpl#insertPosInfo(com.yds.perm.bean.PosInfo)}
	 * .
	 * 
	 * @throws java.lang.Exception
	 */
	@Test
	@Ignore(value="PER_POSITION已经删除")
	public void testInsertPosInfo() throws Exception {
		// 初始化数据库
		// 测试方法为插入数据的时候，可能不需要准备数据，所以*_input*文件可以不准备
		// 第一个参数设为空
		initData("", "result03.xls");

		// 初始化测试方法参数
		// 插入的时候数据所在sheet起名为 *_表名,作为getParamObject参数，不用默认sheet名
		PosInfo posInfo = getParamObject(PosInfo.class, "param_PER_POSITION");
		// 调用被测试方法
		posInfoDao.insertPosInfo(posInfo);

		// 检索插入对象
		PosInfo actualPosInfo = findBeanByCondition(PosInfo.class,
				"param_PER_POSITION");

		// 得到预期值
		PosInfo expectPosInfo = getExpectObject(PosInfo.class);
		// 断言检索结果和预期是不是一致
		assertBeanEquals(expectPosInfo, actualPosInfo);
	}

}
