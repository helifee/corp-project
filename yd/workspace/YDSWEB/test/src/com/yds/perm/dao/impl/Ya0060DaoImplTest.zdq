/*
 * @(#)Ya0060DaoImplTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 权限管理
 */
package com.yds.perm.dao.impl;

import static com.yds.base.test.BeanAssert.assertListEquals;
import static org.junit.Assert.assertEquals;

import java.util.List;

import javax.annotation.Resource;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.perm.bean.PerRoleInfo;
import com.yds.perm.bean.PosInfo;
import com.yds.perm.bean.RolePerMgrInfo;
import com.yds.common.bean.EmpInfo;
import com.yds.perm.dao.Ya0060Dao;

/**
 * ya0060Dao的测试.
 * @author caoxiaodong
 * @version 1.00 2010/03/30
 */
public class Ya0060DaoImplTest extends AbstractSpringTransTest {

	/** 自动注入. */
	@Resource
	private Ya0060Dao ya0060Dao;

	/**
	 * 初始化测试信息.
	 *
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		initCommonData(Ya0060DaoImpl.class);
	}

	/**
	 * Test method for {@link com.yds.perm.dao.impl.Ya0060DaoImpl#getUser(java.lang.String)} .
	 *
	 * @throws java.lang.Exception
	 */
	@Test
	@Ignore
	public void testGetUser() throws Exception {
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("PER_USER");

		// 初始化数据库
		initData("input01.xls", "result01.xls");

		// 初始化测试方法参数
		String userId = (String) getParamObject(String.class);

		// 调用被测试方法
		EmpInfo actualInfo = ya0060Dao.getUser(userId);

		// 得到预期值
		EmpInfo expectInfo = (EmpInfo) getExpectObject(EmpInfo.class);

		// 断言检索结果和预期是不是一致
		assertEquals(expectInfo.getEmpCnm(), actualInfo.getEmpCnm());
		assertEquals(expectInfo.getEmpId(), actualInfo.getEmpId());
	}

	/**
	 * Test method for {@link com.yds.perm.dao.impl.Ya0060DaoImpl#getPosNameList(java.lang.String)} .
	 *
	 * @throws java.lang.Exception
	 */
	@Test
	@Ignore
	public void testGetPosNameList() throws Exception {
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("PER_USER_PERMIT", "PER_POSITION");

		// 初始化数据库
		initData("input02.xls", "result02.xls");

		// 初始化测试方法参数
		String userId = getParamObject(String.class);

		// 调用被测试方法
		List<PosInfo> actualInfo = ya0060Dao.getPosNameList(userId);

		// 得到预期值
		List<PosInfo> expectInfo = getExpectList(PosInfo.class);

		// 断言检索结果和预期是不是一致
		assertListEquals(expectInfo, actualInfo);
	}

	/**
	 * Test method for {@link com.yds.perm.dao.impl.Ya0060DaoImpl#getRoleNameList(java.lang.String)} .
	 *
	 * @throws java.lang.Exception
	 */
	@Test
	@Ignore
	public void testGetRoleNameList() throws Exception {
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("PER_ROLE", "PER_USER_PERMIT");

		// 初始化数据库
		initData("input03.xls", "result03.xls");

		// 初始化测试方法参数
		String userId = getParamObject(String.class);

		// 调用被测试方法
		List<PerRoleInfo> actualInfo = ya0060Dao.getRoleNameList(userId);

		// 得到预期值
		List<PerRoleInfo> expectInfo = getExpectList(PerRoleInfo.class);

		// 断言检索结果和预期是不是一致
		assertListEquals(expectInfo, actualInfo);
	}

	/**
	 * Test method for {@link com.yds.perm.dao.impl.Ya0060DaoImpl#getUserPerInfoList(java.lang.String)} .
	 *
	 * @throws java.lang.Exception
	 */
	@Test
	@Ignore
	public void testGetUserPerInfoList() throws Exception {
		// 用于拥有部分权限
		commonGetUserPerInfoList("input041.xls", "result041.xls");

		// 用户拥有全部权限
		commonGetUserPerInfoList("input042.xls", "result042.xls");

		// 用户不拥有任何权限
		commonGetUserPerInfoList("input042.xls", "result043.xls");
	}

	/**
	 * testGetUserPerInfoList的共通测试方法.
	 *
	 * @param input
	 *            入力excel名
	 * @param result
	 *            期望excel名
	 * @throws java.lang.Exception
	 */
	private void commonGetUserPerInfoList(String input, String result) throws Exception {
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("PER_POSITION", "PER_USER_PERMIT", "PER_ROLE_POSTION", "PER_PERMIT", "PER_ROLE_PERMIT");

		// 初始化数据库
		initData(input, result);

		// 初始化测试方法参数
		String userId = getParamObject(String.class);

		// 调用被测试方法
		List<RolePerMgrInfo> actualInfo = ya0060Dao.getUserPerInfoList(userId);

		// 得到预期值
		List<RolePerMgrInfo> expectInfo = getExpectList(RolePerMgrInfo.class);

		// 断言检索结果和预期是不是一致
		assertListEquals(expectInfo, actualInfo);
	}
}
