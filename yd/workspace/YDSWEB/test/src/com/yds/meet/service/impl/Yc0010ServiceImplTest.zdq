/*
 * @(#) Yc0010ServiceImplTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东计算机社内网
 *    SubSystem: 会议室管理
 */
package com.yds.meet.service.impl;

import static com.yds.base.test.BeanAssert.assertListLenientEquals;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.meet.bean.MetRoomInfo;
import com.yds.meet.service.Yc0010Service;

/**
 * @author mengxiaoyan
 * 
 */
public class Yc0010ServiceImplTest extends AbstractSpringTransTest {

	/** @Resource，自动注入Dao */
	@Resource
	private Yc0010Service yc0010Service;

	/**
	 * @throws java.lang.Exception
	 */
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	/**
	 * @throws java.lang.Exception
	 */
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("met_room_info","com_seq");
		initCommonData(Yc0010ServiceImpl.class);
	}

	/**
	 * Test method for
	 * {@link com.yds.meet.dao.impl.Yc0010DaoImpl#getMetRoomInfoLst()}
	 */
	@Test
	public void testGetMetRoomInfoLst() throws Exception {

		// 初始化数据库
		initData("input01.xls", "result01.xls");
		// 调用被测试方法
		List<MetRoomInfo> actualInfo = yc0010Service.getMetRoomInfoLst();
		// 得到预期值
		List<MetRoomInfo> expectInfo = getExpectList(MetRoomInfo.class,
				"expect");

		// 断言检索结果和预期是否一致
		assertListLenientEquals(expectInfo, actualInfo);

	}

	/**
	 * Test method for
	 * {@link com.yds.meet.dao.impl.Yc0010DaoImpl#insertMetRoom(metRoomInfo)}
	 */
	@Test
	public void testInsertMetRoom() throws Exception {

		MetRoomInfo metRoomInfo = new MetRoomInfo();
		metRoomInfo.setMetId(7);
		metRoomInfo.setMetNm("插入会议室名称");
		metRoomInfo.setMetRnm("略称");
		metRoomInfo.setContainCnt(12);
		metRoomInfo.setTel("1234");
		metRoomInfo.setEquipment("设备名称");
		metRoomInfo.setNetInterface(12);
		metRoomInfo.setMetState("1");
		metRoomInfo.setImagefromx(20);
		metRoomInfo.setImagefromy(30);
		metRoomInfo.setImagetox(160);
		metRoomInfo.setImagetoy(170);
		metRoomInfo.setUpdateTime(new Date());

		// 初始化数据库
		initData("input02.xls", "result02.xls");
		// 调用被测试方法
		yc0010Service.insertMetRoom(metRoomInfo);
		List<MetRoomInfo> actualInfo = yc0010Service.getMetRoomInfoLst();
		// 得到预期值
		List<MetRoomInfo> expectInfo = getExpectList(MetRoomInfo.class,
				"expect");

		// 断言检索结果和预期是否一致
		assertListLenientEquals(expectInfo, actualInfo);

	}

	/**
	 * Test method for
	 * {@link com.yds.meet.dao.impl.Yc0010DaoImpl#updateMetRoom(metRoomInfo)}
	 */
	@Test
	public void testUpdateMetRoom() throws Exception {

		MetRoomInfo metRoomInfo = new MetRoomInfo();
		metRoomInfo.setMetId(3);
		metRoomInfo.setMetNm("更新会议室名称");
		metRoomInfo.setMetRnm("更新");
		metRoomInfo.setContainCnt(12);
		metRoomInfo.setTel("1234");
		metRoomInfo.setEquipment("更新设备名称");
		metRoomInfo.setNetInterface(12);
		metRoomInfo.setMetState("0");
		metRoomInfo.setImagefromx(20);
		metRoomInfo.setImagefromy(30);
		metRoomInfo.setImagetox(160);
		metRoomInfo.setImagetoy(170);
		metRoomInfo.setUpdateTime(new Date());

		// 初始化数据库
		initData("input03.xls", "result03.xls");
		// 调用被测试方法
		yc0010Service.updateMetRoom(metRoomInfo);
		List<MetRoomInfo> actualInfo = yc0010Service.getMetRoomInfoLst();
		// 得到预期值
		List<MetRoomInfo> expectInfo = getExpectList(MetRoomInfo.class,
				"expect");

		// 断言检索结果和预期是否一致
		assertListLenientEquals(expectInfo, actualInfo);

	}

	/**
	 * Test method for
	 * {@link com.yds.meet.dao.impl.Yc0010DaoImpl#updateMetRoomLstSort(metRoomInfo)}
	 */
	@Test
	public void testUpdateMetRoomLstSort() throws Exception {

		String metRoomSort = ",1,5,6,4,2,3";
		// 初始化数据库
		initData("input04.xls", "result04.xls");
		// 调用被测试方法
		yc0010Service.updateMetRoomLstSort(metRoomSort);
		List<MetRoomInfo> actualInfo = yc0010Service.getMetRoomInfoLst();
		// 得到预期值
		List<MetRoomInfo> expectInfo = getExpectList(MetRoomInfo.class,
				"expect");

		// 断言检索结果和预期是否一致
		assertListLenientEquals(expectInfo, actualInfo);

	}
}
