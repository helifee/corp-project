/*
 * @(#) Yc0040ServiceImplTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东计算机社内网
 *    SubSystem: 会议室管理
 */

package com.yds.meet.service.impl;

import static com.yds.base.test.BeanAssert.*;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.base.test.ExcelUtil;
import com.yds.common.bean.UserInfo;
import com.yds.common.service.SessionConstants;
import com.yds.meet.bean.MetDaymetInfo;
import com.yds.meet.bean.Yc0040CondA;
import com.yds.meet.service.Yc0040Service;

/**
 * 会议室预约情况.
 * 
 * @author 远东)xupai
 * @version 1.00 2010/07/29
 */
public class Yc0040ServiceImplTest extends AbstractSpringTransTest {

	/** @Resource，自动注入Dao */
	@Resource
	private Yc0040Service yc0040Service;

	/**
	 * @throws java.lang.Exception
	 */
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		// 模拟Session设值
		UserInfo userInfo = new UserInfo();
		userInfo.setUserId("YD200809");
		Map<String, Object> session = ExcelUtil.getSession();
		session.put(SessionConstants.USERINFO, userInfo);

	}

	/**
	 * @throws java.lang.Exception
	 */

	@Before
	public void setUp() throws Exception {
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("met_daymet_info", "met_room_info", "met_daymet_user", "com_user", "emp_info");
		initCommonData(Yc0040ServiceImpl.class);
	}

	/**
	 * {@link com.yds.meet.service.impl.Yc0040ServiceImpl#getMetDaymetLst(int, int, com.yds.meet.bean.Yc0040CondA)}
	 * 的测试方法。
	 * 
	 * @throws Exception
	 */
	@Test
	public final void testGetMetDaymetLst() throws Exception {
		// 初始化数据库
		initData("input01.xls", "result01.xls");
		// 初始化测试方法参数
		Yc0040CondA yc0040CondA = getParamObject(Yc0040CondA.class,
				"param_MET_DAYMET_INFO");

		int offset = 21;
		// int offset = 0;
		int perCounts = 20;
		boolean hasPermit = false;
		// 调用被测试方法
		List<MetDaymetInfo> actualInfo = yc0040Service.getMetDaymetLst(offset,
				perCounts, yc0040CondA, hasPermit);
		// 得到预期值
		List<MetDaymetInfo> expectInfo = getExpectList(MetDaymetInfo.class,
				"expect01");
		// List<MetDaymetInfo> expectInfo =
		// getExpectList(MetDaymetInfo.class,"expect02");
		// 断言检索结果和预期是否一致
		assertListLenientEquals(expectInfo, actualInfo);

	}

	/**
	 * {@link com.yds.meet.service.impl.Yc0040ServiceImpl#getMetRoomInfo(com.yds.meet.bean.Yc0040CondA)}
	 * 的测试方法。
	 * 
	 * @throws Exception
	 */
	@Test
	public final void testGetMetRoomInfo() throws Exception {

		// 初始化数据库
		initData("input02.xls", "result02.xls");
		// 初始化测试方法参数
		Integer metId = getParamObject(Integer.class, "param");
		// 调用被测试方法
		String actualInfo = yc0040Service.getMetRoomInfo(metId);
		// 得到预期值
		String expectInfo = getExpectObject(String.class, "expect");

		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectInfo, actualInfo);

	}

	/**
	 * {@link com.yds.meet.service.impl.Yc0040ServiceImpl#getTotalCount(com.yds.meet.bean.Yc0040CondA)}
	 * 的测试方法。
	 * 
	 * @throws Exception
	 */
	@Test
	public final void testGetTotalCount() throws Exception {
		// 初始化数据库
		initData("input01.xls", "result03.xls");
		// 初始化测试方法参数
		Yc0040CondA metDaymetInfo = getParamObject(Yc0040CondA.class, "param");
		// 调用被测试方法
		Long actualInfo = yc0040Service.getTotalCount(metDaymetInfo);
		// 得到预期值
		Long expectInfo = getExpectObject(Long.class, "expect");

		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectInfo, actualInfo);
	}
}