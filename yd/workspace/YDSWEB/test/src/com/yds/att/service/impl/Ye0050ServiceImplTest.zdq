package com.yds.att.service.impl;

import static com.yds.base.test.BeanAssert.assertBeanLenientEquals;
import static com.yds.base.test.BeanAssert.assertListLenientEquals;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.base.test.ExcelUtil;
import com.yds.common.bean.UserInfo;
import com.yds.common.service.SessionConstants;
import com.yds.att.bean.AttCorrect;
import com.yds.att.bean.AttExamin;
import com.yds.att.bean.AttInfo;
import com.yds.att.bean.Ye0050AttCorrectInfo;
import com.yds.att.bean.Ye0050CondA;
import com.yds.att.service.Ye0050Service;

/**
 * @author pengchuan
 *
 */
public class Ye0050ServiceImplTest extends AbstractSpringTransTest {
	/** @Resource，自动注入Service */
	@Resource
	private Ye0050Service ye0050Service;

	/**
	 * @throws java.lang.Exception
	 */
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		// 模拟Session设值
		UserInfo userInfo = new UserInfo();
		userInfo.setUserId("YD200901");
		String ip = "192.168.81.22";
		Map<String, Object> session = ExcelUtil.getSession();
		session.put(SessionConstants.USERINFO, userInfo);
		session.put(SessionConstants.IPADDR, ip);
	}

	/**
	 * @throws java.lang.Exception
	 */
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		initCommonData(Ye0050ServiceImpl.class);
		
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("att_correct", "att_info","att_examin","emp_org_info","sys_code_mst","emp_info","com_user");
	}

	/**
	 * @throws java.lang.Exception
	 */
	@After
	public void tearDown() throws Exception {
	}
    /**
     * 审批处理
     * @throws Exception
     */
	@Test
	public final void testUpdateAttCorInfo() throws Exception {
		// 初始化数据库
		initData("input.xls", "result.xls");
		// 初始化测试方法参数-数据库存在
      	String flag = getParamObject(String.class,"param1");
      	AttCorrect attCorrect=getParamObject(AttCorrect.class,"param2");
		// 调用被测试方法
      	ye0050Service.updateAttCorInfo(attCorrect,flag);
        // 插入检索的数据
	    AttInfo actualAttInfo = findBeanByCondition(AttInfo.class, "param_ATT_INFO");
	 	AttExamin actualAttExamin=findBeanByCondition(AttExamin.class, "param_ATT_EXAMIN");
	 	AttCorrect actualattCorrect=findBeanByCondition(AttCorrect.class, "param_ATT_CORRECT");
		// 得到预期值
	 	AttInfo expectAttInfo = getExpectObject(AttInfo.class, "expect_ATT_INFO");
	 	AttExamin expectAttExamin=getExpectObject(AttExamin.class, "expect_ATT_EXAMIN");
	 	AttCorrect expectattCorrect=getExpectObject(AttCorrect.class, "expect_ATT_CORRECT");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectAttInfo, actualAttInfo);
		assertBeanLenientEquals(expectAttExamin, actualAttExamin);
		assertBeanLenientEquals(expectattCorrect, actualattCorrect);
	}
	/**
	 * 检索一览
	 * @throws Exception
	 */
	@Test
	public final void testGetAttCorInfo() throws Exception {
		// 初始化数据库
		initData("input.xls", "result01.xls");
		// 初始化测试方法参数-数据库存在
		Ye0050CondA ye0050CondA = getParamObject(Ye0050CondA.class,"param");
		// 调用被测试方法
		List<Ye0050AttCorrectInfo> actual = ye0050Service.getAttCorInfo(ye0050CondA);
		//得到预期结果
		List<Ye0050AttCorrectInfo> expect= getExpectList(Ye0050AttCorrectInfo.class, "expect");

		// 断言检索结果和预期是否一致
		assertListLenientEquals(expect, actual);
	}
}
