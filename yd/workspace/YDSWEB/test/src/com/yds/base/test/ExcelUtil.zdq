/*
 * @(#)ExcelUtil.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通测试系统
 */
package com.yds.base.test;

import java.util.Date;
import java.util.HashMap;

import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DateUtil;

import com.opensymphony.xwork2.ActionContext;

public class ExcelUtil {
	/** 检索模式在excel中标示. */

	public static final String IN = "in";
	public static final String LIKE_LEFT = "like%";
	public static final String LIKE_RIGHT = "%like";
	public static final String LIKE_BOTH = "%like%";
	/** Bean属性在excel中不需要比较的项目标示. */
	public static final String EXCLUDE_PROPERTY = "exclude";
	/** Bean属性中空字符出定值. */
	public static final String BLANK = "\"\"";
	public static final String COMMA = ",";
	protected static final Log LOG = LogFactory.getLog(ExcelUtil.class);


	/**
	 * 按照excel中不同数据格式的值对应注入到Bean的属性里。
	 * 
	 * @param cell
	 *            excel文件中cell对象
	 * @return Object cell中对应的数据对象
	 */
	public static Object getCellValue(Cell cell) {
		if (null == cell) {
			return null;
		}
		Object cellValue = null;
		// 按照excel中不同数据格式的值对应注入到Bean的属性里
		switch (cell.getCellType()) {
		case Cell.CELL_TYPE_STRING:
			if (BLANK.equals(cell.getStringCellValue())) {
				cellValue = BLANK;
			} else if ("".equals(cell.getStringCellValue())) {
				cellValue = null;
			} else {
				cellValue = cell.getStringCellValue();
			}
			break;
		case Cell.CELL_TYPE_NUMERIC:
			if (DateUtil.isCellDateFormatted(cell)) {
				cellValue = cell.getDateCellValue();
			} else {
				cellValue = cell.getNumericCellValue();
			}
			break;
		case Cell.CELL_TYPE_BOOLEAN:
			cellValue = cell.getBooleanCellValue();
			break;
		case Cell.CELL_TYPE_FORMULA:
			cellValue = cell.getCellFormula();
			break;
		default:
			cellValue = null;
		}
		return cellValue;

	}

	/**
	 * 返回模拟的session。
	 * 
	 * @return map session对象
	 */
	public static Map<String, Object> getSession() {
		Map<String, Object> context = new HashMap<String, Object>();
		ActionContext actionContext = new ActionContext(context);
		ActionContext.setContext(actionContext);
		Map<String, Object> session = new HashMap<String, Object>();
		actionContext.setSession(session);
		return actionContext.getSession();
	}

	/**
	 * 返回模拟的application。
	 * 
	 * @return map application对象
	 */
	public static Map<String, Object> getApplication() {
		Map<String, Object> context = new HashMap<String, Object>();
		ActionContext actionContext = new ActionContext(context);
		ActionContext.setContext(actionContext);
		Map<String, Object> application = new HashMap<String, Object>();
		actionContext.setApplication(application);
		return actionContext.getApplication();
	}

	/**
	 * 修改系统时间。(和你程序中取得的当前时间有精度差)
	 * 
	 * @param date
	 *            想要修改的日期，格式为（yyyy-MM-dd）
	 * @param time
	 *            想要修改的时间，格式为（HH-mm-ss）24小时制
	 */
	public static void setSystemTime(String date, String time) throws Exception {
		String cmd = "";
		// 格式：yyyy-MM-dd
		cmd = " cmd /c date " + date;
		Runtime.getRuntime().exec(cmd);
		if(! "".equals(time) && null != time){
			// 格式 HH:mm:ss
			cmd = "  cmd /c time " + time;
			Runtime.getRuntime().exec(cmd);
		}
	}
	
	/**
	 * 回复系统时间。
	 * @param now 当前时间
	 */
	public static void recoverySystemTime(Date now) throws Exception {
		String date = com.yds.util.service.DateUtil.setDateFormat(now, "yyyy-MM-dd");
		String time =  com.yds.util.service.DateUtil.setDateFormat(now, "HH:mm:ss");
		setSystemTime(date,time);
		// 同步NTP服务器
		Runtime.getRuntime().exec("w32tm /resync /rediscover");
	}
	
	public static void main(String[] args) throws Exception{
		Date now = new Date();
		ExcelUtil.setSystemTime("2010-10-10", "10:10:10");
		Thread.sleep(60000);
		ExcelUtil.recoverySystemTime(now);
	}
}
