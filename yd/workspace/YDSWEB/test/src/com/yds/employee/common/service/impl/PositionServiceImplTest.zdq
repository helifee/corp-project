/*
 * @(#)EmpPosServiceImplTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东公司内部网
 *    SubSystem: 共通系统
 */

package com.yds.employee.common.service.impl;

import static com.yds.base.test.BeanAssert.*;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.junit.Before;
import org.junit.Test;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.common.bean.EmpPos;
import com.yds.common.service.PositionService;
import com.yds.employee.common.service.impl.PositionServiceImpl;

/**
 * 职位信息查询(业务逻辑测试)
 * 
 * @author bixiuqing
 * @version 1.00 2010/05/25
 */
public class PositionServiceImplTest extends AbstractSpringTransTest {

	/** @Resource，自动注入Service */
	@Resource
	private PositionService positionService;

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {

		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("EMP_POS");
		initCommonData(PositionServiceImpl.class, "init.xls");
	}

	/**
	 * Test method for
	 * {@link com.yds.employee.common.service.impl.EmpPosServiceImpl#getPosList(java.lang.String[])}
	 * .
	 * 
	 * @throws Exception
	 */
	@Test
	public void testGetPosList() throws Exception {

		// 初始化数据库
		initData("", "result01.xls");
		// 初始化测试方法参数
		String posTypeId = getParamObject(String.class, "param1");
		String posName = getParamObject(String.class, "param1_1");
		// 调用被测试方法
		List<EmpPos> actualInfo = positionService.getEmpPosList(posTypeId, posName);
		// 得到预期值
		List<EmpPos> expectInfo = getExpectList(EmpPos.class, "expect1_1");
		// 断言检索结果和预期是否一致
		assertListLenientEquals(expectInfo, actualInfo);
		
		// 初始化测试方法参数
		posTypeId = getParamObject(String.class, "param1");
		// 调用被测试方法
		actualInfo = positionService.getEmpPosList(posTypeId);
		// 断言检索结果和预期是否一致
		assertListLenientEquals(new ArrayList<EmpPos>(), actualInfo);

		// 初始化测试方法参数
		posTypeId = getParamObject(String.class, "param2");
		posName = getParamObject(String.class, "param2_1");
		// 调用被测试方法
		actualInfo = positionService.getEmpPosList(posTypeId, posName);
		// 得到预期值
		expectInfo = getExpectList(EmpPos.class, "expect2_1");
		// 断言检索结果和预期是否一致
		assertListLenientEquals(expectInfo, actualInfo);
		
		// 初始化测试方法参数
		posTypeId = getParamObject(String.class, "param2");
		// 调用被测试方法
		actualInfo = positionService.getEmpPosList(posTypeId);
		// 得到预期值
		expectInfo = getExpectList(EmpPos.class, "expect2_2");
		// 断言检索结果和预期是否一致
		assertListLenientEquals(expectInfo, actualInfo);
	}

}
