package com.yds.employee.service.impl;

import static com.yds.base.test.BeanAssert.assertListEquals;
import static com.yds.base.test.BeanAssert.assertBeanLenientEquals;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.base.test.ExcelUtil;
import com.yds.common.bean.EmpPos;
import com.yds.common.bean.UserInfo;
import com.yds.common.service.SessionConstants;
import com.yds.employee.bean.EmpPosHis;
import com.yds.employee.bean.EmpStaffPos;
import com.yds.employee.service.Yb0040Service;

/**
 * 员工状态设定（业务逻辑访问测试）
 * 
 * @author 远东)mengqingyang
 * @version 1.00 2010/06/30
 */

public class Yb0040ServiceImplTest extends AbstractSpringTransTest {

	/** @Resource，自动注入Dao */
	@Resource
	private Yb0040Service yb0040Service;
	/**	
	 * @throws java.lang.Exception	
	 */	
	@BeforeClass	
	public static void setUpBeforeClass() throws Exception {	
		// 模拟Session设值
		UserInfo userInfo = new UserInfo();
		userInfo.setUserId("YD200615");
		String ip = "192.168.81.22";
		Map<String, Object> session = ExcelUtil.getSession();
		session.put(SessionConstants.USERINFO, userInfo);
		session.put(SessionConstants.IPADDR, ip);
	}	

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		
		initCommonData(Yb0040ServiceImpl.class);
		
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables("EMP_STAFF_POS","EMP_POS_HIS","SYS_CODE_MST","EMP_POS");

	}
	/**
	 * Test method for {@link com.yds.employee.service.impl.Yb0030ServiceImpl#getEmpStateList(java.lang.String)}.
	 */
	@Test
	public void testGetEmpPosNowInfo() throws Exception {

		// 初始化数据库
		initData("input.xls", "result01.xls");
		// 初始化测试方法参数
		String empId = getParamObject(String.class, "param");
		// 调用被测试方法
		List<EmpStaffPos> actual = yb0040Service.getEmpPosNowInfo(empId);
		// 得到预期值
		List<EmpStaffPos> expect = getExpectList(EmpStaffPos.class,"expect");
		// 断言检索结果和预期是否一致
		assertListEquals(expect, actual);
	}
	
	/**
	 * Test method for {@link com.yds.employee.service.impl.Yb0030ServiceImpl#getEmpStateList(java.lang.String)}.
	 */
	@Test
	public void testGetEmpPosAllInfo() throws Exception {

		// 初始化数据库
		initData("input.xls", "result01.xls");
		// 初始化测试方法参数
		String empId = getParamObject(String.class, "param1");
		// 调用被测试方法
		List<EmpStaffPos> actual = yb0040Service.getEmpPosAllInfo(empId);
		// 得到预期值
		List<EmpStaffPos> expect = getExpectList(EmpStaffPos.class,"expect1");
		// 断言检索结果和预期是否一致
		assertListEquals(expect, actual);
	}
	
	/**
	 * Test method for {@link com.yds.employee.service.impl.Yb0030ServiceImpl#getEmpStateList(java.lang.String)}.
	 */
	@Test
	public void testGetSeqInfo() throws Exception {

		// 初始化数据库
		initData("input.xls", "result01.xls");
		// 初始化测试方法参数
		// 调用被测试方法
		List<EmpPos> actual = yb0040Service.getSeqInfo();
		// 得到预期值
		List<EmpPos> expect = getExpectList(EmpPos.class,"expect2");
		// 断言检索结果和预期是否一致
		assertListEquals(expect, actual);
	}
	
	/**
	 * Test method for {@link com.yds.employee.service.impl.Yb0030ServiceImpl#getEmpStateList(java.lang.String)}.
	 */
	@Test
	public void testInsertEmpPosInfo() throws Exception {

		// 初始化数据库
		initData("input.xls", "result02.xls");
		// 初始化测试方法参数
		List<EmpStaffPos>  empPosListInfo = getParamList(EmpStaffPos.class, "param");
		// 调用被测试方法
		yb0040Service.insertEmpPosInfo(empPosListInfo);
		// 插入检索的数据
		List<EmpPosHis> actualEmpPosHis= findListBeanByCondition(EmpPosHis.class, "param_EMP_POS_HIS");
		// 得到预期值
		List<EmpPosHis> expectEmpPosHis = getExpectList(EmpPosHis.class, "expect_EMP_POS_HIS");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectEmpPosHis, actualEmpPosHis);
		
		// 插入检索的数据
		EmpStaffPos actualEmpStaffPos = findBeanByCondition(EmpStaffPos.class, "param_EMP_STAFF_POS");
		// 得到预期值
		EmpStaffPos expectEmpStaffPos = getExpectObject(EmpStaffPos.class, "expect_EMP_STAFF_POS");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectEmpStaffPos, actualEmpStaffPos);
	}
	
}
