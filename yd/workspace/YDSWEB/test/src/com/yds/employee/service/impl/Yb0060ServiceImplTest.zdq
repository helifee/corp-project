/*
 * @(#) EmpInfoListAdvServiceImplTest.java
 * Copyright (c) 2009-2010 大连远东计算机系统有限公司
 * All rights reserved.
 *      Project: 远东计算机社内网
 *    SubSystem: 人员管理
 */

package com.yds.employee.service.impl;

import static com.yds.base.test.BeanAssert.assertBeanLenientEquals;
import static com.yds.base.test.BeanAssert.assertListEquals;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.yds.base.test.AbstractSpringTransTest;
import com.yds.base.test.ExcelUtil;
import com.yds.common.bean.EmpPos;
import com.yds.common.bean.UserInfo;
import com.yds.common.service.SessionConstants;
import com.yds.employee.service.Yb0060Service;

/**
 * 职位信息维护测试
 * 
 * @author 远东 pengchuan
 * @version 1.00 2010/07/30
 */
public class Yb0060ServiceImplTest extends AbstractSpringTransTest {

	/** @Resource，自动注入 */
	@Resource
	private Yb0060Service yb0060Service;
	
	/**
	 * @throws java.lang.Exception
	 */
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		// 模拟Session设值
		UserInfo userInfo = new UserInfo();
		userInfo.setUserId("YD200615");
		String ip = "192.168.81.22";
		Map<String, Object> session = ExcelUtil.getSession();
		session.put(SessionConstants.USERINFO, userInfo);
		session.put(SessionConstants.IPADDR, ip);
	}

	/**
	 * @throws java.lang.Exception
	 */
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		// 删除表中数据(避免和测试数据冲突)
		deleteFromTables( "EMP_POS","SYS_CODE_MST");

		initCommonData(Yb0060ServiceImpl.class);
	}
	
	/**
	 * @throws java.lang.Exception
	 */
	@After
	public void tearDown() throws Exception {
	}
	
	/**
	 * Test method for {@link com.yds.employee.service.impl.Yb0060ServiceImpl#getPosList(com.yds.common.bean.EmpPos)}.
	 * @throws Exception 
	 */
	@Test
	public void testGetPosList() throws Exception {
		
		// 初始化数据库
		initData("input.xls", "result.xls");
		
		// 初始化测试方法参数
	
		String posTypeId=getParamObject(String.class,"param");
		// 调用被测试方法
		List<EmpPos> actual = yb0060Service.getPosList(posTypeId);
		// 得到预期值
		List<EmpPos> expect= getExpectList(EmpPos.class, "expect");
		// 断言检索结果和预期是否一致
		assertListEquals(expect, actual);
		
	}
	
	/**
	 * Test method for {@link com.yds.employee.service.impl.Yb0060ServiceImpl#getPosInfo(com.yds.common.bean.EmpPos)}.
	 * @throws Exception 
	 */
	@Test
	public void testGetPosInfo() throws Exception {
		
		// 初始化数据库
		initData("input.xls", "result01.xls");
		
		// 初始化测试方法参数
	
		String posId=getParamObject(String.class,"param");
		// 调用被测试方法
		EmpPos actual = yb0060Service.getPosInfo(posId);
		// 得到预期值
		EmpPos expect= getExpectObject(EmpPos.class, "expect");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expect, actual);
		
	}

	/**
	 * Test method for {@link com.yds.employee.service.impl.Yb0060ServiceImpl#getPosList(com.yds.common.bean.EmpPos)}.
	 * @throws Exception 
	 */
	@Test
	public void testGetPosSortList() throws Exception {
		
		// 初始化数据库
		initData("input.xls", "result03.xls");
		
		// 初始化测试方法参数
	
		String posTypeId=getParamObject(String.class,"param");
		// 调用被测试方法
		List<EmpPos> actual = yb0060Service.getPosSortList(posTypeId);
		// 得到预期值
		List<EmpPos> expect= getExpectList(EmpPos.class, "expect");
		// 断言检索结果和预期是否一致
		assertListEquals(expect, actual);
		
	}

	/**
	 * Test method for {@link com.yds.employee.service.impl.Yb0060ServiceImpl#updatePosInfo(com.yds.common.bean.EmpPos)}.
	 * @throws Exception 
	 */
	@Test
	public void testUpdatePosInfo() throws Exception {
		
		// 初始化数据库
		initData("input.xls", "result02.xls");
		
		// 初始化测试方法参数
		EmpPos empPos = getParamObject(EmpPos.class, "param1_EMP_POS");
		//调用被测试方法
		yb0060Service.updatePosInfo(empPos);
		// 插入检索的数据
		EmpPos actualEmpPos = findBeanByCondition(EmpPos.class, "param2_EMP_POS");
		// 得到预期值
		EmpPos expectEmpPos = getExpectObject(EmpPos.class, "expect2_EMP_POS");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectEmpPos, actualEmpPos);
		
	}
	
	/**
	 * Test method for {@link com.yds.employee.service.impl.Yb0060ServiceImpl#updatePosInfo(com.yds.common.bean.EmpPos)}.
	 * @throws Exception 
	 */
	@Test
	public void testInsertPosInfo() throws Exception {
		
		// 初始化数据库
		initData("input.xls", "result04.xls");
		
		// 初始化测试方法参数
		EmpPos empPos = getParamObject(EmpPos.class, "param1_EMP_POS");
		//调用被测试方法
		yb0060Service.insertPosInfo(empPos);
		// 插入检索的数据
		EmpPos actualEmpPos = findBeanByCondition(EmpPos.class, "param2_EMP_POS");
		// 得到预期值
		EmpPos expectEmpPos = getExpectObject(EmpPos.class, "expect2_EMP_POS");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectEmpPos, actualEmpPos);
		
	}
	
	/**
	 * Test method for {@link com.yds.employee.service.impl.Yb0060ServiceImpl#updatePosInfo(com.yds.common.bean.EmpPos)}.
	 * @throws Exception 
	 */
	@Test
	public void testUpdatePosSort() throws Exception {
		
		// 初始化数据库
		initData("input.xls", "result05.xls");
		
		// 初始化测试方法参数
		String posId= getParamObject(String.class, "param1_EMP_POS");
		//调用被测试方法
		yb0060Service.updatePosSort(posId);
		// 插入检索的数据
		EmpPos actualEmpPos = findBeanByCondition(EmpPos.class, "param2_EMP_POS");
		// 得到预期值
		EmpPos expectEmpPos = getExpectObject(EmpPos.class, "expect2_EMP_POS");
		// 断言检索结果和预期是否一致
		assertBeanLenientEquals(expectEmpPos, actualEmpPos);
		
	}

}
