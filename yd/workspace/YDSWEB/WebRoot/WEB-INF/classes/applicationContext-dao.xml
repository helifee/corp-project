<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
    default-autowire="byName" default-lazy-init="false">

    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
	
	<!-- simpleJdbcTemplate, 用于特殊的batch程序, 一般class不要注入该bean -->
	<bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	
    <!-- rapid SqlMapClientFactoryBean与spring SqlMapClientFactoryBean的区别是可以指定sqlExecutor -->
    <bean id="sqlMapClient" class="cn.org.rapid_framework.ibatis.spring.SqlMapClientFactoryBean">
        <property name="configLocation">
            <value>classpath:sql-map-config.xml</value>
        </property>
        <property name="mappingLocations">
        	<value>classpath*:/com/**/*Dao.xml</value>
        </property>
        <property name="dataSource" ref="dataSource"/>
        
        <!-- 指定数据库分页方言Dialect, 其它方言:OracleDialect,SQLServerDialect,SybaseDialect,DB2Dialect,PostgreSQLDialect,MySQLDialect,DerbyDialect-->
        <property name="sqlExecutor">
			<!-- 使用自定义的类来实现SQL LOG的记录 -->
        	<bean class="com.yds.common.service.impl.UpdateLogSqlExecutor">
        		<property name="dialect">
					<!-- MYSQL的方言 -->
        			<bean class="cn.org.rapid_framework.jdbc.dialect.MySQLDialect"/>
        		</property>
        	</bean>
        </property>
    </bean>

    <!-- component-scan自动搜索@Component , @Controller , @Service , @Repository等标注的类 -->
	<context:component-scan base-package="com.yds.**.dao.impl.**"/>
	
    
</beans>
