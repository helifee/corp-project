<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="J030041Dao">
	
	<typeAlias alias="editBookChapterInfo" type="com.yds.tt.training.bean.BookContent"/>
	<typeAlias alias="editBookInfo" type="com.yds.tt.training.bean.BookInfo"/>
	
	<!-- 教材详细信息取得 --> 
	<select id="getBookInfo" resultClass="editBookInfo"> 
		SELECT 
			BOOK_ID AS bookId, 
			EDIT_NO AS editNo,
			BOOK_STATUS AS bookStatus,
			BOOK_NAME AS bookName,
			CATEGORY1_ID AS category1Id,
	        CATEGORY2_ID AS category2Id,
	        CATEGORY3_ID AS category3Id,
			BELONG_COURSE_ID AS belongCourseId,
			ABSTRACT AS bookAbstract,
			KEYWORD AS keyword,
			VERSION_NO AS versionNo,
			UPDATE_NO AS updateNo,
			QUOTE_FLAG AS quoteFlag,
			PRE_KNOWLEDGE AS preKnowledge,
			APPLYTO AS applyto,
			SOURCE AS source,
			MODIFY_HISTORY AS modifyHistory,
			REFUSE_REASON AS refuseReason,
			BOOK_COVER AS bookCover,
			CREATE_USER_ID AS createUserId,
			CREATE_TIME AS createTime,
			UPDATE_USER_ID AS updateUserId,
			UPDATE_TIME AS updateTime,
		    <!-- 分类名称：一级分类名-二级分类名-三级分类名 --> 
			CONCAT
			(CASE T1.CATEGORY1_ID 
				WHEN 0 THEN ""
				ELSE 
					(SELECT CATEGORY_NAME 
					   FROM TT_FENLEI
					  WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
							CATEGORY_LEVEL = 1)
			END,
			CASE T1.CATEGORY2_ID
				WHEN 0 THEN ""
				ELSE CONCAT("-",(SELECT CATEGORY_NAME 
							FROM TT_FENLEI
						   WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
								 CATEGORY2_ID = T1.CATEGORY2_ID AND
								 CATEGORY_LEVEL = 2))
			END ,
			CASE T1.CATEGORY3_ID
				WHEN 0 THEN ""
				ELSE CONCAT("-",(SELECT CATEGORY_NAME 
							FROM TT_FENLEI 
						   WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
								 CATEGORY2_ID = T1.CATEGORY2_ID AND
								 CATEGORY3_ID = T1.CATEGORY3_ID AND
								 CATEGORY_LEVEL = 3))
			END) AS category,
	        (SELECT DIFF_NAME 
	         FROM COM_CODE_MST 
	         WHERE TYPE_ID = 'R01' AND 
		       DIFF_NO = T1.BOOK_STATUS) AS statusName
		FROM 
			TT_JIAOCAI T1 
		WHERE
			BOOK_ID = #bookId# AND
			NOT EXISTS(SELECT 1 FROM TT_JIAOCAI WHERE BOOK_ID = T1.BOOK_ID AND EDIT_NO > T1.EDIT_NO)
	</select>
	
	<!-- 章节列表信息取得 --> 
	<select id="getChapterInfo" parameterClass="editBookChapterInfo" resultClass="editBookChapterInfo"> 
		SELECT
			BOOK_ID AS bookId, 
			EDIT_NO AS editNo, 
			CHAPTER_NO AS chapterNo,
			CHAPTER_TITLE AS chapterTitle,
			SHOW_LEVEL AS showLevel,
			SHOW_ORDER AS showOrder,
			BOOK_CONTENT AS bookContent,
			CREATE_USER_ID AS createUserId,
			CREATE_TIME AS createTime,
			UPDATE_USER_ID AS updateUserId,
			UPDATE_TIME AS updateTime
		FROM
			TT_JIAOCAI_NEIRONG
		WHERE
			BOOK_ID = #bookId# AND
			EDIT_NO = #editNo#
		ORDER BY SHOW_ORDER ASC
	</select>
	
	<!-- 练习试卷信息取得 --> 
	<select id="getPracticeInfo" parameterClass="String" resultClass="com.yds.tt.testing.bean.TestPaperInfo"> 
		SELECT
			PAPER_ID AS paperId,
			PAPER_VERSION_NO AS paperVersionNo,
			PAPER_TITLE AS paperTitle,
			PAPER_TYPE AS paperType,
			CATEGORY1_ID AS category1Id,
			CATEGORY2_ID AS category2Id,
			CATEGORY3_ID AS category3Id,
			PAPER_COMMENT AS paperComment,
			PAPER_STATUS AS paperStatus,
			REFUSE_REASON AS refuseReason,
			PAPER_TOTAL_SCORE AS paperTotalScore,
			PAPER_DESCRIPTION AS paperDescription,
			PAPER_TIME AS paperTime,
			BIGQUESTION_NUM AS bigquestionNum,
			QUESTION_NUM AS questionNum,
			RANDOM_BIGQUEST_FLG AS randomBigquestFlg,
			BELONG_ID AS belongId,
			CREATE_USER_ID AS createUserId,
			CREATE_TIME AS createTime,
			UPDATE_USER_ID AS updateUserId,
			UPDATE_TIME AS updateTime,
			NEW_FLG AS newFlg
		FROM
			TT_SHIJUAN
		WHERE
			BELONG_ID = #bookId# AND
			NEW_FLG = 0
	</select>
	
	<!-- 教材审批者ID取得 --> 
	<select id="getReviewer" resultClass="String"> 
		SELECT 	USER_ID
		FROM 	TT_QUANXIAN
		WHERE	AUTHORITY_ID = 11 AND
				RELATEDOBJECT_ID = #bookId#
	</select>
	
	<!-- 更新时间取得 --> 
	<select id="getUpdateTime" parameterClass="editBookInfo" resultClass="java.util.Date"> 
		SELECT 
			UPDATE_TIME AS updateTime
		FROM 
			TT_JIAOCAI
		WHERE
			BOOK_ID = #bookId# AND
			EDIT_NO = #editNo#
		FOR UPDATE
	</select>
	
	<!-- 更新教材详细信息 -->
	<update id="updateBookInfo" parameterClass="editBookInfo">
		UPDATE 	TT_JIAOCAI 
		   SET 	BOOK_STATUS = #bookStatus#,
		   		BOOK_NAME = #bookName# , 
				ABSTRACT = #bookAbstract# , 
				KEYWORD = #keyword# , 
				PRE_KNOWLEDGE = #preKnowledge# , 
				APPLYTO = #applyto# , 
				SOURCE = #source# , 
				BOOK_COVER = #bookCover# , 
				<dynamic>
					<isNotEmpty property="applyUserId">	
						APPLY_USER_ID = #applyUserId#,
						APPLY_TIME = NOW(),
					</isNotEmpty>
				</dynamic>	
				UPDATE_USER_ID = #updateUserId# , 
				UPDATE_TIME = NOW()
		 WHERE 	BOOK_ID = #bookId# AND
		 		EDIT_NO = #editNo#;
	</update>
	
	<!-- 更新教材状态 -->
	<update id="updateBookStatus" parameterClass="editBookInfo">
		UPDATE 	TT_JIAOCAI 
		   SET 	BOOK_STATUS = #bookStatus#,
				UPDATE_USER_ID = #updateUserId# , 
				UPDATE_TIME = NOW()
		 WHERE 	BOOK_ID = #bookId# AND
		 		EDIT_NO = #editNo#;
	</update>
	
	<!-- 登录教材详细信息 -->
	<insert id="insertBookInfo" parameterClass="editBookInfo">
		INSERT INTO TT_JIAOCAI 
			(BOOK_ID, 
			EDIT_NO, 
			BOOK_STATUS, 
			BOOK_NAME, 
			CATEGORY1_ID, 
			CATEGORY2_ID, 
			CATEGORY3_ID, 
			BELONG_COURSE_ID, 
			ABSTRACT, 
			KEYWORD, 
			VERSION_NO, 
			UPDATE_NO, 
			QUOTE_FLAG, 
			PRE_KNOWLEDGE, 
			APPLYTO, 
			SOURCE, 
			MODIFY_HISTORY, 
			REFUSE_REASON, 
			APPLY_USER_ID, 
			APPLY_TIME, 
			APPROVER_USER_ID, 
			APPROVER_TIME, 
			BOOK_COVER, 
			CREATE_USER_ID, 
			CREATE_TIME, 
			UPDATE_USER_ID, 
			UPDATE_TIME
			)
		VALUES
		   (
		    #bookId#,
			#editNo# + 1,
			1,
			#bookName#,
			#category1Id#,
			#category2Id#,
			#category3Id#,
			#belongCourseId#,
			#bookAbstract#,
			#keyword#,
			#versionNo#,
			#updateNo#,
			#quoteFlag#,
			#preKnowledge#,
			#applyto#,
			#source#,
			#modifyHistory#,
			#refuseReason#,
			'',
			NULL,
			'',
			NULL,
			#bookCover#,
			#createUserId#,
			#createTime#,
			#updateUserId#,
			NOW()
		   );
	</insert>
	
	<!-- 登录教材章节信息 -->
	<insert id="insertChapterInfo" parameterClass="editBookChapterInfo">
		INSERT INTO TT_JIAOCAI_NEIRONG
			(BOOK_ID, 
			EDIT_NO, 
			CHAPTER_NO, 
			CHAPTER_TITLE, 
			SHOW_LEVEL, 
			SHOW_ORDER, 
			BOOK_CONTENT, 
			CREATE_USER_ID, 
			CREATE_TIME, 
			UPDATE_USER_ID, 
			UPDATE_TIME
			) 
		VALUES
		   (
		    #bookId#,
			#editNo# + 1,
			#chapterNo#,
			#chapterTitle#,
			#showLevel#,
			#showOrder#,
			#bookContent#,
			#createUserId#,
			NOW(),
			#updateUserId#,
			NOW()
		   );
	</insert>
	
	<!-- 登录教材练习信息 -->
	<insert id="insertPracticeInfo" parameterClass="com.yds.tt.testing.bean.TestPaperInfo">
		INSERT INTO TT_SHIJUAN 
			(PAPER_ID, 
			PAPER_VERSION_NO, 
			PAPER_TITLE, 
			PAPER_TYPE, 
			CATEGORY1_ID, 
			CATEGORY2_ID, 
			CATEGORY3_ID, 
			PAPER_COMMENT, 
			PAPER_STATUS, 
			REFUSE_REASON, 
			PAPER_TOTAL_SCORE, 
			PAPER_DESCRIPTION, 
			PAPER_TIME, 
			BIGQUESTION_NUM, 
			QUESTION_NUM, 
			RANDOM_BIGQUEST_FLG, 
			BELONG_ID, 
			APPLY_USER_ID, 
			APPLY_TIME, 
			APPROVER_USER_ID, 
			APPROVER_TIME, 
			CREATE_USER_ID, 
			CREATE_TIME, 
			UPDATE_USER_ID, 
			UPDATE_TIME, 
			NEW_FLG
			)
		VALUES
		   (
		    #paperId#,
			#paperVersionNo# + 1,
			#paperTitle#,
			#paperType#,
			#category1Id#,
			#category2Id#,
			#category3Id#,
			#paperComment#,
			#paperStatus#,
			#refuseReason#,
			#paperTotalScore#,
			#paperDescription#,
			#paperTime#,
			#bigquestionNum#,
			#questionNum#,
			#randomBigquestFlg#,
			#belongId#,
			#applyUserId#,
			#applyTime#,
			#approverUserId#,
			#approverTime#,
			#createUserId#,
			NOW(),
			#updateUserId#,
			NOW(),
			1
		   );
	</insert>
	
</sqlMap>