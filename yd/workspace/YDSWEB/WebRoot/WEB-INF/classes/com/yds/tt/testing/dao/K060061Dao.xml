<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="K060061Dao">
	<typeAlias alias="k060061ExamineInfo" type="com.yds.tt.testing.bean.ExamineInfo"/>
	<typeAlias alias="k060061TestPaperInfo" type="com.yds.tt.testing.bean.TestPaperInfo"/>
	<typeAlias alias="k060061CourseInfo" type="com.yds.tt.training.bean.CourseInfo"/>
	<!-- 考试信息取得 --> 
	<select id="getExamineInfo" parameterClass="String" resultClass="k060061ExamineInfo"> 
		SELECT
			EXAMINE_ID AS examineId,
			EXAMINE_NAME AS examineName,
			CATEGORY1_ID AS category1Id,
			CATEGORY2_ID AS category2Id,
			CATEGORY3_ID AS category3Id,
			CONCAT(CASE T1.CATEGORY1_ID 
					WHEN 0 THEN ""
					ELSE 
						(SELECT CATEGORY_NAME 
						   FROM tt_fenlei
						  WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND
								CATEGORY2_ID = 0 AND 
								CATEGORY3_ID = 0 AND
								CATEGORY_LEVEL = 1)
				END,
				CASE T1.CATEGORY2_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(
						SELECT CATEGORY_NAME 
							FROM tt_fenlei
							WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
								CATEGORY2_ID = t1.CATEGORY2_ID AND
								CATEGORY3_ID = 0 AND
								CATEGORY_LEVEL = 2))
				END ,
				CASE T1.CATEGORY3_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(
						SELECT CATEGORY_NAME 
							FROM tt_fenlei t4 
							WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
								CATEGORY2_ID = T1.CATEGORY2_ID AND
								CATEGORY3_ID = T1.CATEGORY3_ID AND
								CATEGORY_LEVEL = 3))
				END) AS categoryName,
			EXAMINE_TIME AS examineTime,
			CHECK_ANSWER_FLG AS checkAnswerFlg,
			AGAIN_EXAMINE_FLG AS againExamineFlg,
			MUST_EXAMINE_FLG AS mustExamineFlg,
			EXAMINE_COMMENT AS examineComment,
			APPLY_CONFIRM_FLG AS applyConfirmFlg,
			RESULTLEVEL_NUM AS resultlevelNum,
			PASSEXAMINE_LEVEL AS passexamineLevel,
			RESULTLEVEL1_ID AS resultlevel1Id,
			RESULTLEVEL1_SCORE AS resultlevel1Score,
			RESULTLEVEL1_NAME AS resultlevel1Name,
			RESULTLEVEL2_ID AS resultlevel2Id,
			RESULTLEVEL2_SCORE AS resultlevel2Score,
			RESULTLEVEL2_NAME AS resultlevel2Name,
			RESULTLEVEL3_ID AS resultlevel3Id,
			RESULTLEVEL3_SCORE AS resultlevel3Score,
			RESULTLEVEL3_NAME AS resultlevel3Name,
			RESULTLEVEL4_ID AS resultlevel4Id,
			RESULTLEVEL4_SCORE AS resultlevel4Score,
			RESULTLEVEL4_NAME AS resultlevel4Name,
			RESULTLEVEL5_ID AS resultlevel5Id,
			RESULTLEVEL5_SCORE AS resultlevel5Score,
			RESULTLEVEL5_NAME AS resultlevel5Name,
			SCORE_VALID_FLG AS scoreValidFlg,
			UPDATE_TIME AS updateTime
		FROM TT_KS_XINXI T1
		WHERE EXAMINE_ID = #examineId#
	</select>
	
	<!-- 更新时间取得 --> 
	<select id="getUpdateTime" resultClass="java.util.Date"> 
		SELECT 
			UPDATE_TIME AS updateTime
		FROM TT_KS_XINXI
		WHERE EXAMINE_ID = #examineId#
		FOR UPDATE
	</select>
	
	<!-- 所选试卷信息取得 --> 
	<select id="getTestPaperInfoList" parameterClass="String" resultClass="k060061TestPaperInfo"> 
	SELECT 	paperId,
			paperVersionNo,
			paperTitle,
			categoryName,
			paperTotalScore,
			paperTime,
			updateTime,
			paperStatusName,
			updateUserName
	FROM (		
		<!-- 如果是已批准,则检索最新版本号 -->
		SELECT 	t1.PAPER_ID         AS paperId,
				t1.PAPER_VERSION_NO AS paperVersionNo,
				t1.PAPER_TITLE AS paperTitle,
				<!-- 分类名称：一级分类名-二级分类名-三级分类名 --> 
				CONCAT(CASE t1.CATEGORY1_ID 
					WHEN 0 THEN ""
					ELSE 
						(SELECT CATEGORY_NAME 
						   FROM tt_fenlei
						  WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
								CATEGORY_LEVEL = 1)
				END,
				CASE t1.CATEGORY2_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY_LEVEL = 2))
				END ,
				CASE t1.CATEGORY3_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei 
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY3_ID = t1.CATEGORY3_ID AND
									 CATEGORY_LEVEL = 3))
				END) AS categoryName,
				t1.PAPER_TOTAL_SCORE AS paperTotalScore,
				t1.PAPER_TIME AS paperTime,
				t1.UPDATE_TIME AS updateTime,
				<!-- 试卷状态 -->
		        (SELECT
						DIFF_NAME
					FROM com_code_mst
					WHERE 
					TYPE_ID = 'R10' AND
					DIFF_NO = t1.PAPER_STATUS) AS paperStatusName,
				(SELECT USER_CNM FROM V_TT_USER WHERE USER_ID = t1.UPDATE_USER_ID)AS updateUserName
			FROM 
				tt_shijuan t1,
				(SELECT t2.PAPER_ID AS PAPER_ID,
						MAX(t2.PAPER_VERSION_NO) AS PAPER_VERSION_NO
				   FROM tt_shijuan t2,
						tt_ks_shijuang t3
				  WHERE t3.EXAMINE_ID = #examineId#	AND
						t2.PAPER_ID = t3.PAPER_ID AND
						<!-- 试卷状态为已批准 -->
						t2.PAPER_STATUS = '3'
						GROUP BY PAPER_ID) t4
		WHERE   t1.PAPER_ID = t4.PAPER_ID AND
				t1.PAPER_VERSION_NO = t4.PAPER_VERSION_NO
				
UNION 	
		<!-- 如果不是已批准,则检索版本号=1 -->
		SELECT 	t1.PAPER_ID         AS paperId,
				t1.PAPER_VERSION_NO AS paperVersionNo,
				t1.PAPER_TITLE AS paperTitle,
				<!-- 分类名称：一级分类名-二级分类名-三级分类名 --> 
				CONCAT(CASE t1.CATEGORY1_ID 
					WHEN 0 THEN ""
					ELSE 
						(SELECT CATEGORY_NAME 
						   FROM tt_fenlei
						  WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
								CATEGORY_LEVEL = 1)
				END,
				CASE t1.CATEGORY2_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY_LEVEL = 2))
				END ,
				CASE t1.CATEGORY3_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei 
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY3_ID = t1.CATEGORY3_ID AND
									 CATEGORY_LEVEL = 3))
				END) AS categoryName,
				t1.PAPER_TOTAL_SCORE AS paperTotalScore,
				t1.PAPER_TIME AS paperTime,
				t1.UPDATE_TIME AS updateTime,
				<!-- 试卷状态 -->
		        (SELECT
						DIFF_NAME
					FROM com_code_mst
					WHERE 
					TYPE_ID = 'R10' AND
					DIFF_NO = t1.PAPER_STATUS) AS paperStatusName,
				(SELECT USER_CNM FROM V_TT_USER WHERE USER_ID = t1.UPDATE_USER_ID)AS updateUserName
		FROM 
				tt_shijuan t1,
				tt_ks_shijuang t2
		WHERE   t2.EXAMINE_ID = #examineId#	AND
				t2.PAPER_ID = t1.PAPER_ID AND
				t1.PAPER_VERSION_NO = 1	AND
				t1.PAPER_STATUS != '3'
		) tempTable
	ORDER BY paperId;
	</select>
	<!-- 需要通过的考试检索 --> 
	<select id="getSelectedExamineList" parameterClass="String" resultClass="k060061ExamineInfo">
		SELECT 	t1.EXAMINE_ID          AS examineId,
		        t1.EXAMINE_NAME        AS examineName
			FROM 
				tt_ks_xinxi t1,
				tt_xuyaokaoshi t2
		WHERE   t2.EXAMINE_ID = #examineId# AND
				t2.NECESSARY_EXAMINE_ID = t1.EXAMINE_ID
	</select>
	<!-- 需要学习的课程检索 --> 
	<select id="getSelectedCourseList" parameterClass="String" resultClass="k060061CourseInfo">
		SELECT 	t1.COURSE_ID          AS courseId,
		        t1.COURSE_NAME        AS courseName
			FROM 
				tt_kecheng t1,tt_xuyaokecheng t2
		WHERE   t2.EXAMINE_ID = #examineId# AND
				t2.NECESSARY_COURSE_ID = t1.COURSE_ID
	</select>	
	<!-- 子考试一览检索 --> 
	<select id="getChildExamineInfoList" parameterClass="String" resultClass="k060061ExamineInfo">
		SELECT
			T1.EXAMINE_ID AS examineId,
			T1.EXAMINE_NAME AS examineName,
			T1.EXAMINE_START_TIME AS examineStartDate,
			T1.EXAMINE_END_TIME AS examineEndDate,
			T1.EXAMINE_NOTIFY_DATE As examineNotifyDate,
			T1.APPLY_CLOSING_TIME AS applyClosingDate,
			T1.RESULTLEVEL_NUM AS resultlevelNum,
			(CASE T1.EXAMINE_FLG
					WHEN 1 THEN "普通考试"
					WHEN 2 THEN "随时考试"
					ELSE "试考试"
					END
			) AS examineFlgNM ,
			T1.EXAMINE_STATUS AS examineStatus,
			(SELECT DIFF_NAME 
				FROM
					COM_CODE_MST
				WHERE
					TYPE_ID = 'R12' AND
					DIFF_NO = T1.EXAMINE_STATUS
			) AS examineStatusName
			FROM
				TT_KS_XINXI T1
		WHERE T1.PARENT_EXAMINE_ID = #examineId#	
	</select>
	<!-- 删除考试试卷关联表 -->
	<delete id="deletePaperRelation" parameterClass="String">
		DELETE FROM TT_KS_SHIJUANG 
		WHERE EXAMINE_ID = #examineId#
	</delete>
	<!-- 删除需要通过考试关联表 -->
	<delete id="deleteMustExamineRelation" parameterClass="String">
		DELETE FROM TT_XUYAOKAOSHI 
		WHERE EXAMINE_ID = #examineId#
	</delete>
	<!-- 删除需要学习课程关联表 -->
	<delete id="deleteMustCourseRelation" parameterClass="String">
		DELETE FROM TT_XUYAOKECHENG 
		WHERE EXAMINE_ID = #examineId#
	</delete>
	<!-- 删除考试信息 -->
	<delete id="deleteExamine" parameterClass="String">
		DELETE FROM TT_KS_XINXI 
		WHERE EXAMINE_ID = #examineId# OR
			  PARENT_EXAMINE_ID = #examineId#
	</delete>
	<!-- 保存考试信息 -->
	<update id="updateExamineInfo" parameterClass="k060061ExamineInfo">
		UPDATE TT_KS_XINXI SET 
			EXAMINE_NAME = #examineName#,
			EXAMINE_TIME = #examineTime#,
			CHECK_ANSWER_FLG = #checkAnswerFlg#,
			AGAIN_EXAMINE_FLG = #againExamineFlg#,
			MUST_EXAMINE_FLG = #mustExamineFlg#,
			EXAMINE_COMMENT = #examineComment#,
			APPLY_CONFIRM_FLG = #applyConfirmFlg#,
			RESULTLEVEL_NUM = #resultlevelNum#,
			PASSEXAMINE_LEVEL = #passexamineLevel#,
			RESULTLEVEL1_SCORE = #resultlevel1Score#,
			RESULTLEVEL1_NAME = #resultlevel1Name#,
			RESULTLEVEL2_SCORE = #resultlevel2Score#,
			RESULTLEVEL2_NAME = #resultlevel2Name#,
			RESULTLEVEL3_SCORE = #resultlevel3Score#,
			RESULTLEVEL3_NAME = #resultlevel3Name#,
			RESULTLEVEL4_SCORE = #resultlevel4Score#,
			RESULTLEVEL4_NAME = #resultlevel4Name#,
			RESULTLEVEL5_SCORE = #resultlevel5Score#,
			RESULTLEVEL5_NAME = #resultlevel5Name#,
			SCORE_VALID_FLG = #scoreValidFlg#,
			TOTAL_SCORE = #totalScore#,
			UPDATE_USER_ID = #updateUserId#,
			UPDATE_TIME = NOW()
		WHERE EXAMINE_ID = #examineId#	
	</update>
	
	<!-- 删除所选试卷 --> 
	<delete id="deleteSelectedPaper" parameterClass="java.util.Map">
		DELETE FROM tt_ks_shijuang
		 WHERE EXAMINE_ID=#examineId# AND
		 	   PAPER_ID = #paperId#
	</delete>

	<!-- 添加所选试卷 --> 
	<insert id="insertSelectedPaper" parameterClass="java.util.Map">
		INSERT INTO tt_ks_shijuang
		   (
		    EXAMINE_ID, 
			PAPER_ID
		   )
		VALUES
		   (
		    #examineId#, 
			#paperId#
		   );
	</insert>
	<!-- 删除关联考试 --> 
	<delete id="deleteSelectedExamine" parameterClass="java.util.Map">
		DELETE 	FROM tt_xuyaokaoshi
		 WHERE 	EXAMINE_ID=#examineId# AND
		 		NECESSARY_EXAMINE_ID = #necessaryExamineId#
	</delete>

	<!-- 添加关联考试 --> 
	<insert id="insertSelectedExamine" parameterClass="java.util.Map">
		INSERT INTO tt_xuyaokaoshi
		   (
		    EXAMINE_ID, 
			NECESSARY_EXAMINE_ID
		   )
		VALUES
		   (
		    #examineId#, 
			#necessaryExamineId#
		   );
	</insert>
	<!-- 删除关联课程 --> 
	<delete id="deleteSelectedCourse" parameterClass="java.util.Map">
		DELETE FROM tt_xuyaokecheng
		 WHERE EXAMINE_ID=#examineId# AND
		 		NECESSARY_COURSE_ID = #necessaryCourseId#
	</delete>

	<!-- 添加关联课程 --> 
	<insert id="insertSelectedCourse" parameterClass="java.util.Map">
		INSERT INTO tt_xuyaokecheng
		   (
		    EXAMINE_ID, 
			NECESSARY_COURSE_ID
		   )
		VALUES
		   (
		    #examineId#, 
			#necessaryCourseId#
		   );
	</insert>

	<!-- 子考试基本信息取得 --> 
	<select id="getChildExamineInfo" parameterClass="String" resultClass="k060061ExamineInfo"> 
		SELECT
			EXAMINE_ID AS examineId,
			EXAMINE_NAME AS examineName,
			CATEGORY1_ID AS category1Id,
			CATEGORY2_ID AS category2Id,
			CATEGORY3_ID AS category3Id,
			OBJECT_TYPE  AS objectType,
			OBJECT_VALUE AS objectValue,
			EXAMINE_TIME AS examineTime,
			CHECK_ANSWER_FLG AS checkAnswerFlg,
			AGAIN_EXAMINE_FLG AS againExamineFlg,
			MUST_EXAMINE_FLG AS mustExamineFlg,
			EXAMINE_COMMENT AS examineComment,
			APPLY_CONFIRM_FLG AS applyConfirmFlg,
			RESULTLEVEL_NUM AS resultlevelNum,
			PASSEXAMINE_LEVEL AS passexamineLevel,
			RESULTLEVEL1_SCORE AS resultlevel1Score,
			RESULTLEVEL1_NAME AS resultlevel1Name,
			RESULTLEVEL2_SCORE AS resultlevel2Score,
			RESULTLEVEL2_NAME AS resultlevel2Name,
			RESULTLEVEL3_SCORE AS resultlevel3Score,
			RESULTLEVEL3_NAME AS resultlevel3Name,
			RESULTLEVEL4_SCORE AS resultlevel4Score,
			RESULTLEVEL4_NAME AS resultlevel4Name,
			RESULTLEVEL5_SCORE AS resultlevel5Score,
			RESULTLEVEL5_NAME AS resultlevel5Name,
			SCORE_VALID_FLG AS scoreValidFlg,
			TOTAL_SCORE AS totalScore
		FROM TT_KS_XINXI T1
		WHERE EXAMINE_ID = #examineId#
	</select>
	
	<!-- 最大子考试ID取得 -->
	<select id="getMaxChildExamineId" parameterClass="String" resultClass="String">
		SELECT MAX(EXAMINE_ID)
		FROM TT_KS_XINXI
		WHERE PARENT_EXAMINE_ID=#examineId#;
	</select>	
	
	<!-- 插入子考试信息 --> 
	<insert id="insertExamineInfo" parameterClass="k060061ExamineInfo" > 
		INSERT INTO TT_KS_XINXI
			(
			EXAMINE_ID,
			EXAMINE_NAME,
			CATEGORY1_ID,
			CATEGORY2_ID,
			CATEGORY3_ID,
			OBJECT_TYPE,
			OBJECT_VALUE,
			PARENT_EXAMINE_ID,
			EXAMINE_FLG,
			EXAMINE_TIME,
			CHECK_ANSWER_FLG,
			AGAIN_EXAMINE_FLG,
			MUST_EXAMINE_FLG,
			EXAMINE_COMMENT,
			APPLY_CONFIRM_FLG,
			RESULTLEVEL_NUM,
			PASSEXAMINE_LEVEL,
			RESULTLEVEL1_ID,
			RESULTLEVEL1_SCORE,
			RESULTLEVEL1_NAME,
			RESULTLEVEL2_ID,
			RESULTLEVEL2_SCORE,
			RESULTLEVEL2_NAME,
			RESULTLEVEL3_ID,
			RESULTLEVEL3_SCORE,
			RESULTLEVEL3_NAME,
			RESULTLEVEL4_ID,
			RESULTLEVEL4_SCORE,
			RESULTLEVEL4_NAME,
			RESULTLEVEL5_ID,
			RESULTLEVEL5_SCORE,
			RESULTLEVEL5_NAME,
			SCORE_VALID_FLG,
			EXAMINE_START_TIME,
			EXAMINE_END_TIME,
			EXAMINE_NOTIFY_DATE,
			EXAMINE_VISIBLE_FLG,
			APPLY_CLOSING_TIME,
			EXAMINE_STATUS,
			CREATE_USER_ID,
			CREATE_TIME,
			UPDATE_USER_ID,
			UPDATE_TIME,
			TOTAL_SCORE
			)
			VALUE
			(
			#examineId#,
			#examineName#,
			#category1Id#,
			#category2Id#,
			#category3Id#,
			#objectType#,
			#objectValue#,
			#parentExamineId#,
			#examineFlg#,
			#examineTime#,
			#checkAnswerFlg#,
			#againExamineFlg#,
			#mustExamineFlg#,
			#examineComment#,
			#applyConfirmFlg#,
			#resultlevelNum#,
			#passexamineLevel#,
			#resultlevel1Id#,
			#resultlevel1Score#,
			#resultlevel1Name#,
			#resultlevel2Id#,
			#resultlevel2Score#,
			#resultlevel2Name#,
			#resultlevel3Id#,
			#resultlevel3Score#,
			#resultlevel3Name#,
			#resultlevel4Id#,
			#resultlevel4Score#,
			#resultlevel4Name#,
			#resultlevel5Id#,
			#resultlevel5Score#,
			#resultlevel5Name#,
			#scoreValidFlg#,
			#examineStartTime#,
			#examineEndTime#,
			#examineNotifyDate#,
			#examineVisibleFlg#,
			#applyClosingTime#,
			#examineStatus#,
			#createUserId#,
			NOW(),
			#updateUserId#,
			NOW(),
			#totalScore#
			)
	</insert>
	
	<!-- 插入试卷关联信息 --> 
	<insert id="insertPaperRelation" parameterClass="java.util.Map">
		INSERT INTO TT_KS_SHIJUANG
			(SELECT #examineId#, 
			T1.PAPER_ID
			FROM TT_KS_SHIJUANG T1
			WHERE T1.EXAMINE_ID = #parentExamineId#);
	</insert>
	
	<!-- 插入需要通过考试关联信息 --> 
	<insert id="insertNeedPassExamine" parameterClass="java.util.Map">
		INSERT INTO TT_XUYAOKAOSHI
			(SELECT #examineId#, 
			T1.NECESSARY_EXAMINE_ID
			FROM TT_XUYAOKAOSHI T1
			WHERE T1.EXAMINE_ID = #parentExamineId#);
	</insert>
	
	<!-- 插入需要通过课程关联信息 --> 
	<insert id="insertNeedPassCourse" parameterClass="java.util.Map">
		INSERT INTO TT_XUYAOKECHENG
			(SELECT #examineId#, 
			T1.NECESSARY_COURSE_ID
			FROM TT_XUYAOKECHENG T1
			WHERE T1.EXAMINE_ID = #parentExamineId#);
	</insert>
	
	<!-- 插入考试针对对象 --> 
	<insert id="insertExamineObject" parameterClass="java.util.Map">
		INSERT INTO TT_KS_DUIXIANG
			(SELECT #examineId#, 
			T1.EXAMINE_OBJECT_ID,
			NULL
			FROM TT_KS_DUIXIANG T1
			WHERE T1.EXAMINE_ID = #parentExamineId#);
	</insert>
</sqlMap>  
