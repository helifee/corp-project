<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ye8021Dao">

	<typeAlias alias="ye8021CondA" type="com.yds.att.bean.Ye8021CondA"/>
	<typeAlias alias="attInfo" type="com.yds.att.bean.AttInfo"/>
	<typeAlias alias="ye8021AttInfo" type="com.yds.att.bean.Ye8021AttInfo"/>
	<typeAlias alias="attExrestInfo" type="com.yds.att.bean.AttExrestInfo"/>
	<typeAlias alias="attMonReport" type="com.yds.att.bean.AttMonReport"/>
	<typeAlias alias="attInfoUncor" type="com.yds.att.bean.AttInfoUncor"/>
	<!-- 考勤数据检索 --> 
	<select id="getAttInfos" parameterClass="ye8021CondA" resultClass="attInfo">
		<![CDATA[
		SELECT 	a.EMP_ID          as empId, 
				a.YEAR            as year, 
				a.MONTH           as month , 
				a.DAY             as day, 
				a.DAY_FLG         as dayFlg, 
				a.TYPE_FLG        as typeFlg, 
				a.CLOCK_IN        as clockIn, 
				a.P_START_TIME    as pstartTime, 
				a.P_END_TIME      as pendTime, 
				a.LUNCH_TIME_ST   as lunchTimeSt, 
				a.LUNCH_TIME_END  as lunchTimeEnd, 
				a.DINNER_TIME_END as dinnerTimeEnd, 
				a.R_START_TIME    as rstartTime, 
				a.R_END_TIME      as rendTime, 
				a.FIRST_TIME      as firstTime, 
				a.LAST_TIME       as lastTime, 
				a.REST_TYPE       as restType, 
				a.APP_STATUS      as appStatus, 
				a.APP_ID          as appId, 
				a.REST_TYPE_ADDI  as restTypeAddi, 
				a.APP_STATUS_ADDI as appStatusAddi, 
				a.APP_ID_ADDI     as appIdAddi,  
				a.ATT_STATUS_COR  as attStatusCor, 
				a.APP_ID_COR      as appIdCor, 
				a.ATT_STATUS_OT   as attStatusOt, 
				a.OT_ST_TIME      as otStTime, 
				a.OT_ED_TIME      as otEdTime, 
				a.OT_BENEFIT      as otBenefit, 
				a.ORG_ID          as orgId, 
				a.UPDATE_USER     as updateUser, 
				a.UPDATE_TIME     as updateTime
		FROM att_info a,ATT_EMP_TYPE b
		WHERE
		 a.YEAR = SUBSTRING(#stYmd#, 1, 4)
		 AND a.MONTH = SUBSTRING(#stYmd#, 5, 2)
		 AND a.DAY >= SUBSTRING(#stYmd#, 7, 2)
		 AND a.DAY <= SUBSTRING(#edYmd#, 7, 2)
		 AND b.EMP_ID = a.EMP_ID
		 AND b.START_DATE <= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
		 AND b.END_DATE >= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
		]]>
		<isNotNull property="restFlg">
			<isNotEmpty property="restFlg">
			AND ( 
			   (a.APP_STATUS = '3' AND (a.REST_TYPE = 'HS' OR a.REST_TYPE = 'HX'))
			 OR (a.APP_STATUS_ADDI = '3' AND (a.REST_TYPE_ADDI = 'HS' OR a.REST_TYPE_ADDI = 'HX')) 
			 )
			 </isNotEmpty>
		</isNotNull>
		 <dynamic prepend=" AND a.EMP_ID IN ">
			<isNotNull property="empIdList">
			<isNotEmpty property="empIdList">
				<iterate property="empIdList" open="(" close=")" conjunction=",">
					#empIdList[]#
				</iterate>
			</isNotEmpty>	
			</isNotNull>
		 </dynamic>
		ORDER BY empId,year,month,day
	</select>
	<!-- 考勤信息和换休明细中的加班信息检索 --> 
	<select id="getYe8021AttInfo" parameterClass="ye8021CondA" resultClass="ye8021AttInfo">
		<![CDATA[
		SELECT 	a.EMP_ID          as empId, 
				a.YEAR            as year, 
				a.MONTH           as month , 
				a.DAY             as day, 
				a.DAY_FLG         as dayFlg, 
				a.TYPE_FLG        as typeFlg, 
				a.CLOCK_IN        as clockIn, 
				a.P_START_TIME    as pstartTime, 
				a.P_END_TIME      as pendTime, 
				a.LUNCH_TIME_ST   as lunchTimeSt, 
				a.LUNCH_TIME_END  as lunchTimeEnd, 
				a.DINNER_TIME_END as dinnerTimeEnd, 
				a.R_START_TIME    as rstartTime, 
				a.R_END_TIME      as rendTime, 
				a.FIRST_TIME      as firstTime, 
				a.LAST_TIME       as lastTime, 
				a.REST_TYPE       as restType, 
				a.APP_STATUS      as appStatus, 
				a.APP_ID          as appId, 
				a.REST_TYPE_ADDI  as restTypeAddi, 
				a.APP_STATUS_ADDI as appStatusAddi, 
				a.APP_ID_ADDI     as appIdAddi,  
				a.ATT_STATUS_COR  as attStatusCor, 
				a.APP_ID_COR      as appIdCor, 
				a.ATT_STATUS_OT   as attStatusOt, 
				a.OT_ST_TIME      as otStTime, 
				a.OT_ED_TIME      as otEdTime, 
				a.OT_BENEFIT      as otBenefit, 
				a.ORG_ID          as orgId, 
				a.UPDATE_USER     as updateUser, 
				a.UPDATE_TIME     as updateTime,
				IFNULL(c.addRestMin, 0)  as addRestMin
		FROM att_info a
		INNER JOIN ATT_EMP_TYPE b
		LEFT JOIN 
			(SELECT EMP_ID ,happen_date, happen_time AS addRestMin 
			FROM att_exrest_info 
			WHERE 
				HAPPEN_DATE >= DATE(#stYmd#)
				AND HAPPEN_DATE <= DATE(#edYmd#)
				AND HAPPEN_REASON = '0'
			) c ON a.emp_id = c.emp_id  AND c.happen_date = (CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) ) 
		WHERE
		 a.YEAR = SUBSTRING(#stYmd#, 1, 4)
		 AND a.MONTH = SUBSTRING(#stYmd#, 5, 2)
		 AND a.DAY >= SUBSTRING(#stYmd#, 7, 2)
		 AND a.DAY <= SUBSTRING(#edYmd#, 7, 2)
		 AND b.EMP_ID = a.EMP_ID
		 AND b.START_DATE <= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
		 AND b.END_DATE >= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
		 AND a.ATT_STATUS_OT = '3'
		 AND a.OT_BENEFIT = '1'
		]]>
		 <dynamic prepend=" AND a.EMP_ID IN ">
			<isNotNull property="empIdList">
			<isNotEmpty property="empIdList">
				<iterate property="empIdList" open="(" close=")" conjunction=",">
					#empIdList[]#
				</iterate>
			</isNotEmpty>	
			</isNotNull>
		 </dynamic>
		ORDER BY empId,year,month,day
	</select>
	<!-- 月次统计检索 --> 
	<select id="selectAttMonReport" parameterClass="attMonReport" resultClass="attMonReport">
		<![CDATA[
		SELECT 	EMP_ID      as empId, 
			YEAR            as year, 
			MONTH           as month, 
			S_ATTEND_DAYS   as sattendDays, 
			ATTEND_DAYS     as attendDays, 
			ANN_REST_DAYS   as annRestDays, 
			SPECIAL_DAYS    as specialDays, 
			SICK_DAYS       as sickDays, 
			PER_DAYS        as perDays, 
			OUT_DAYS        as outDays, 
			DUTY_MIN        as dutyMin, 
			DUTY_CNT        as dutyCnt, 
			SICK_MIN        as sickMin, 
			SICK_MIN_DAY    as sickMinDay, 
			SICK_CNT        as sickCnt, 
			PER_MIN         as perMin, 
			PER_MIN_DAY     as perMinDay, 
			PER_CNT         as perCnt, 
			BELATE_MIN      as belateMin, 
			BELATE_MIN_DAY  as belateMinDay, 
			BELATE_CNT      as belateCnt, 
			LVE_EARLY_MIN   as lveEarlyMin, 
			LVE_EARLY_MIN_DAY as lveEarlyMinDay, 
			LVE_EARLY_CNT   as lveEarlyCnt, 
			WORKDAY_OT_MIN  as workdayOtMin, 
			WORKDAY_OT_CNT  as workdayOtCnt, 
			DEEP_OT_MIN     as deepOtMin, 
			DEEP_OT_CNT     as deepOtCnt, 
			E_REST_MIN      as erestMin, 
			USED_E_REST_MIN  as usedErestMin
			FROM 
			att_mon_report 
			WHERE
			EMP_ID = #empId#
			AND YEAR = #year#
			AND MONTH = #month#
		]]>
	</select>
	<!-- 年次统计计算检索 --> 
	
	<select id="getAttMonReportY" parameterClass="attMonReport" resultClass="attMonReport">
		<![CDATA[
		SELECT 	EMP_ID      as empId, 
			YEAR            as year, 
			'00'            as month, 
			sum(S_ATTEND_DAYS)   as sattendDays, 
			sum(ATTEND_DAYS)     as attendDays, 
			sum(ANN_REST_DAYS)   as annRestDays, 
			sum(SPECIAL_DAYS)    as specialDays, 
			sum(SICK_DAYS)       as sickDays, 
			sum(PER_DAYS)        as perDays, 
			sum(OUT_DAYS)        as outDays, 
			sum(DUTY_MIN)        as dutyMin, 
			sum(DUTY_CNT)        as dutyCnt, 
			sum(SICK_MIN)        as sickMin, 
			sum(SICK_MIN_DAY)    as sickMinDay, 
			sum(SICK_CNT)        as sickCnt, 
			sum(PER_MIN)         as perMin, 
			sum(PER_MIN_DAY)     as perMinDay, 
			sum(PER_CNT)         as perCnt, 
			sum(BELATE_MIN)      as belateMin, 
			sum(BELATE_MIN_DAY)  as belateMinDay, 
			sum(BELATE_CNT)      as belateCnt, 
			sum(LVE_EARLY_MIN)   as lveEarlyMin, 
			sum(LVE_EARLY_MIN_DAY) as lveEarlyMinDay, 
			sum(LVE_EARLY_CNT)   as lveEarlyCnt, 
			sum(WORKDAY_OT_MIN)  as workdayOtMin, 
			sum(WORKDAY_OT_CNT)  as workdayOtCnt, 
			sum(DEEP_OT_MIN)     as deepOtMin, 
			sum(DEEP_OT_CNT)     as deepOtCnt, 
			sum(E_REST_MIN)      as erestMin, 
			sum(USED_E_REST_MIN)  as usedErestMin
			FROM 
			att_mon_report 
			WHERE
			EMP_ID = #empId#
			AND YEAR = #year#
			AND MONTH <> '00'
			GROUP BY empId,year
		]]>
	</select>
	
	<update id="lockTable" parameterClass="String" >
		<![CDATA[
		LOCK TABLES $value$ WRITE;
		]]>
	</update>
	<update id="unlockTable" parameterClass="String" >
		<![CDATA[
		UNLOCK TABLES; 
		]]>
	</update>
	<!-- 更新月次统计表 --> 
	<update id="updateAttMonReport" parameterClass="attMonReport" >
		<![CDATA[
		UPDATE att_mon_report 
		SET
		S_ATTEND_DAYS = #sattendDays# , 
		ATTEND_DAYS = #attendDays# , 
		ANN_REST_DAYS = #annRestDays# , 
		SPECIAL_DAYS = #specialDays# , 
		SICK_DAYS = #sickDays# , 
		PER_DAYS = #perDays# , 
		OUT_DAYS = #outDays# , 
		DUTY_MIN = #dutyMin# , 
		DUTY_CNT = #dutyCnt# , 
		SICK_MIN = #sickMin# , 
		SICK_MIN_DAY = #sickMinDay# , 
		SICK_CNT = #sickCnt# , 
		PER_MIN = #perMin# , 
		PER_MIN_DAY = #perMinDay# , 
		PER_CNT = #perCnt# , 
		BELATE_MIN = #belateMin# , 
		BELATE_MIN_DAY = #belateMinDay# , 
		BELATE_CNT = #belateCnt# , 
		LVE_EARLY_MIN = #lveEarlyMin# , 
		LVE_EARLY_MIN_DAY = #lveEarlyMinDay# , 
		LVE_EARLY_CNT = #lveEarlyCnt# , 
		WORKDAY_OT_MIN = #workdayOtMin# , 
		WORKDAY_OT_CNT = #workdayOtCnt# , 
		DEEP_OT_MIN = #deepOtMin# , 
		DEEP_OT_CNT = #deepOtCnt# , 
		E_REST_MIN = #erestMin# , 
		USED_E_REST_MIN = #usedErestMin#
		WHERE
		EMP_ID = #empId# AND YEAR = #year# AND MONTH = #month# 
		]]>
	</update>
	<!-- 考勤信息表更新实出退勤时间 --> 
	<update id="updateAttInfoRTime" parameterClass="attInfo" >
		<![CDATA[
		UPDATE att_info 
		SET
		R_START_TIME = #rstartTime# , 
		R_END_TIME = #rendTime# , 
		UPDATE_USER = #updateUser# , 
		UPDATE_TIME = NOW()
		
		WHERE
		EMP_ID = #empId#
		AND YEAR = #year#
		AND MONTH = #month# 
		AND DAY = #day# ;
		]]>
	</update>
	
	 <delete id="deleteAttExrestInfo" parameterClass="ye8021AttInfo">
		<![CDATA[
			delete from att_exrest_info 
			where
			EMP_ID = #empId# 
			AND HAPPEN_DATE = DATE(CONCAT(#year#,"/",#month#,"/",#day#))
			AND HAPPEN_REASON = '0'
		]]>
    </delete>
	<delete id="deleteAttUnCorAtt" parameterClass="String">
		<![CDATA[
			DELETE FROM att_info_uncor 
			WHERE
			ATT_YM = #VALUE# 
		]]>
    </delete>
	
	<insert id="insertAttExrestInfo" parameterClass="attExrestInfo">

		INSERT INTO att_exrest_info 
			(EMP_ID, 
			CAL_YEAR, 
			CAL_MONTH, 
			HAPPEN_DATE, 
			HAPPEN_REASON, 
			HAPPEN_TIME, 
			USEFUL_DATE, 
			APP_ID
			)
			VALUES
			(#empId#, 
			#calYear#, 
			#calMonth#, 
			#happenDate#, 
			#happenReason#, 
			#happenTime#,
			#usefulDate#,
			#appId# 
			)

    </insert>
	<insert id="insertAttMonReport" parameterClass="attMonReport">
    <![CDATA[
		INSERT INTO att_mon_report 
			(EMP_ID, 
			YEAR, 
			MONTH, 
			S_ATTEND_DAYS, 
			ATTEND_DAYS, 
			ANN_REST_DAYS, 
			SPECIAL_DAYS, 
			SICK_DAYS, 
			PER_DAYS, 
			OUT_DAYS, 
			DUTY_MIN, 
			DUTY_CNT, 
			SICK_MIN, 
			SICK_MIN_DAY, 
			SICK_CNT, 
			PER_MIN, 
			PER_MIN_DAY, 
			PER_CNT, 
			BELATE_MIN, 
			BELATE_MIN_DAY, 
			BELATE_CNT, 
			LVE_EARLY_MIN, 
			LVE_EARLY_MIN_DAY, 
			LVE_EARLY_CNT, 
			WORKDAY_OT_MIN, 
			WORKDAY_OT_CNT, 
			DEEP_OT_MIN, 
			DEEP_OT_CNT, 
			E_REST_MIN, 
			USED_E_REST_MIN
			)
			VALUES
			(#empId#, 
			#year#, 
			#month#, 
			#sattendDays#, 
			#attendDays#, 
			#annRestDays#, 
			#specialDays#, 
			#sickDays#, 
			#perDays#, 
			#outDays#, 
			#dutyMin#, 
			#dutyCnt#, 
			#sickMin#, 
			#sickMinDay#, 
			#sickCnt#, 
			#perMin#, 
			#perMinDay#, 
			#perCnt#, 
			#belateMin#, 
			#belateMinDay#, 
			#belateCnt#, 
			#lveEarlyMin#, 
			#lveEarlyMinDay#, 
			#lveEarlyCnt#, 
			#workdayOtMin#, 
			#workdayOtCnt#, 
			#deepOtMin#, 
			#deepOtCnt#, 
			#erestMin#, 
			#usedErestMin#
			)
    ]]>
    </insert>
	<!-- 漏考数据检索 --> 
	<sql id="selectAttInfoUncor0" >
		<![CDATA[
		SELECT
				 CONCAT(a.year ,a.month) AS ATT_YM,
				 a.emp_id   AS ATT_PER_ID,
				 '0' AS UNCOR_TYPE,
				 '' AS ORG1,
				 '' AS ORG2
				 , COUNT(*) AS CNT1
				FROM att_info a,ATT_EMP_TYPE b
				WHERE
				a.YEAR = SUBSTRING(#stYmd#, 1, 4)
				AND a.MONTH = SUBSTRING(#stYmd#, 5, 2)
				AND a.DAY >= SUBSTRING(#stYmd#, 7, 2)
				AND a.DAY <= SUBSTRING(#edYmd#, 7, 2)
				AND b.EMP_ID = a.EMP_ID
				AND b.START_DATE <= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
				AND b.END_DATE >= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
				AND a.R_START_TIME IS NOT NULL
				AND a.R_END_TIME IS NOT NULL
				AND a.R_START_TIME = R_END_TIME
				AND a.R_START_TIME <> '0000-00-00 00:00:00'
		]]>
		<dynamic prepend=" AND a.EMP_ID IN ">
		<isNotNull property="empIdList">
		<isNotEmpty property="empIdList">
			<iterate property="empIdList" open="(" close=")" conjunction=",">
				#empIdList[]#
			</iterate>
		</isNotEmpty>	
		</isNotNull>
		</dynamic>
		GROUP BY ATT_YM,ATT_PER_ID,UNCOR_TYPE
	</sql>
	<!-- 考勤更正未审批数据检索 --> 
	<sql id="selectAttInfoUncor1" >
	<![CDATA[
		SELECT
			 c.ATT_YM      AS ATT_YM,
			 b.ORG_MNGER   AS ATT_PER_ID,
			 '1' AS UNCOR_TYPE,
			 '' AS ORG1,
			 '' AS ORG2
			 , COUNT(*) AS CNT1
			FROM att_examin a ,emp_org_info b,
				(
				SELECT  a.APP_ID_COR,
						a.ATT_STATUS_COR,
						CONCAT(a.year ,a.month) AS ATT_YM,
						a.EMP_ID as EMP_ID
				FROM  att_info a,ATT_EMP_TYPE b
				WHERE
				a.YEAR = SUBSTRING(#stYmd#, 1, 4)
				AND a.MONTH = SUBSTRING(#stYmd#, 5, 2)
				AND a.DAY >= SUBSTRING(#stYmd#, 7, 2)
				AND a.DAY <= SUBSTRING(#edYmd#, 7, 2)
				AND b.EMP_ID = a.EMP_ID
				AND b.START_DATE <= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
				AND b.END_DATE >= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
				AND a.ATT_STATUS_COR IN ('0','1','2')
				) c
			WHERE
			a.APP_ID = c.APP_ID_COR
			AND a.EXA_ORGANIZATION_ID = b.ORG_ID
			AND NOT(c.ATT_STATUS_COR = '2' AND a.EXA_APP_ORDER = 1)
			AND (a.EXA_RESULT IS NULL OR a.EXA_RESULT = '')
	]]>
		<dynamic prepend=" AND c.EMP_ID IN ">
		<isNotNull property="empIdList">
		<isNotEmpty property="empIdList">
			<iterate property="empIdList" open="(" close=")" conjunction=",">
				#empIdList[]#
			</iterate>
		</isNotEmpty>	
		</isNotNull>
		</dynamic>
		GROUP BY ATT_YM,ATT_PER_ID,UNCOR_TYPE
	</sql>	
	<!-- 请假未审批数据检索 --> 
	<sql id="selectAttInfoUncor2" >	
	<![CDATA[
		SELECT 
			CONCAT(c.year ,c.month) AS ATT_YM,
			b.ORG_MNGER   AS ATT_PER_ID,
						 '2' AS UNCOR_TYPE,
						 '' AS ORG1,
						 '' AS ORG2
						 , COUNT(*) AS CNT1
			FROM
			att_examin a ,emp_org_info b,(
				SELECT APP_ID AS APP_ID,APP_STATUS AS APP_STATUS,YEAR,MONTH,a.EMP_ID as EMP_ID
				FROM att_info a,ATT_EMP_TYPE b
				WHERE
				a.YEAR = SUBSTRING(#stYmd#, 1, 4)
				AND a.MONTH = SUBSTRING(#stYmd#, 5, 2)
				AND a.DAY >= SUBSTRING(#stYmd#, 7, 2)
				AND a.DAY <= SUBSTRING(#edYmd#, 7, 2)
				AND b.EMP_ID = a.EMP_ID
				AND b.START_DATE <= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
				AND b.END_DATE >= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
				AND a.APP_STATUS IN('0','1','2')
				UNION ALL
				SELECT APP_ID_ADDI AS APP_ID,APP_STATUS_ADDI AS APP_STATUS,YEAR,MONTH,a.EMP_ID as EMP_ID
				FROM att_info a,ATT_EMP_TYPE b
				WHERE
				a.YEAR = SUBSTRING(#stYmd#, 1, 4)
				AND a.MONTH = SUBSTRING(#stYmd#, 5, 2)
				AND a.DAY >= SUBSTRING(#stYmd#, 7, 2)
				AND a.DAY <= SUBSTRING(#edYmd#, 7, 2)
				AND b.EMP_ID = a.EMP_ID
				AND b.START_DATE <= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
				AND b.END_DATE >= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
				AND a.APP_STATUS_ADDI IN('0','1','2')
			) c
			WHERE
			a.APP_ID = c.APP_ID
			AND NOT(c.APP_STATUS = '2' AND a.EXA_APP_ORDER = 1)
			AND (a.EXA_RESULT IS NULL OR a.EXA_RESULT = '')
			AND a.EXA_ORGANIZATION_ID = b.ORG_ID
	]]>
			<dynamic prepend=" AND c.EMP_ID IN ">
			<isNotNull property="empIdList">
			<isNotEmpty property="empIdList">
				<iterate property="empIdList" open="(" close=")" conjunction=",">
					#empIdList[]#
				</iterate>
			</isNotEmpty>	
			</isNotNull>
			</dynamic>
			GROUP BY ATT_YM,ATT_PER_ID,UNCOR_TYPE
	</sql>	
	<!-- 加班未审批数据检索 --> 
	<sql id="selectAttInfoUncor3" >	
	<![CDATA[
		SELECT 
		 CONCAT(c.year ,c.month) AS ATT_YM,
					 b.ORG_MNGER   AS ATT_PER_ID,
					 '3' AS UNCOR_TYPE,
					 '' AS ORG1,
					 '' AS ORG2
					 , COUNT(*) AS CNT1
		FROM (
		SELECT a.year,a.month,a.day,a.emp_id as EMP_ID,a.PRJ_ID AS org_id
		FROM 
		att_overtime a
		WHERE
		STATE_FLAG IN('0','1')
		UNION ALL
		SELECT b.year,b.month,b.day,b.emp_id as EMP_ID,b.DPM_ID AS org_id
		FROM att_overtime b
		WHERE
		b.STATE_FLAG IN('2')
		) a,emp_org_info b
		,(
			SELECT YEAR,MONTH,DAY,a.emp_id as EMP_ID
			FROM att_info a,ATT_EMP_TYPE b
			WHERE
			a.YEAR = SUBSTRING(#stYmd#, 1, 4)
			AND a.MONTH = SUBSTRING(#stYmd#, 5, 2)
			AND a.DAY >= SUBSTRING(#stYmd#, 7, 2)
			AND a.DAY <= SUBSTRING(#edYmd#, 7, 2)
			AND b.EMP_ID = a.EMP_ID
			AND b.START_DATE <= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
			AND b.END_DATE >= DATE(CONCAT(a.YEAR,"/",a.MONTH,"/",a.DAY) )
			AND a.ATT_STATUS_OT IN ('0','1','2')
		) c
		WHERE
		a.year = c.year
		AND a.month = c.month
		AND a.day = c.day
		AND a.emp_id = c.emp_id
		AND a.org_id = b.ORG_ID
	]]>
			<dynamic prepend=" AND c.EMP_ID IN ">
			<isNotNull property="empIdList">
			<isNotEmpty property="empIdList">
				<iterate property="empIdList" open="(" close=")" conjunction=",">
					#empIdList[]#
				</iterate>
			</isNotEmpty>	
			</isNotNull>
			</dynamic>
			GROUP BY ATT_YM,ATT_PER_ID,UNCOR_TYPE
	</sql>			
	<insert id="insertAttInfoUncor" parameterClass="ye8021CondA">
		INSERT INTO att_info_uncor 
			(ATT_YM, 
			ATT_PER_ID, 
			UNCOR_TYPE, 
			ORG1, 
			ORG2, 
			CNT1
			)
		<include refid="selectAttInfoUncor0"/>
		UNION 
		<include refid="selectAttInfoUncor1"/>
		UNION
		<include refid="selectAttInfoUncor2"/>
		UNION
		<include refid="selectAttInfoUncor3"/>
    </insert>

	<!-- 考勤员工ID检索 --> 
	<select id="getEmpIds" parameterClass="String" resultClass="String">
		<![CDATA[
		SELECT
		      EMP_ID AS empId
		 FROM att_emp_type
		WHERE
		      START_DATE <= #validDateStr#
		  AND END_DATE   >= #validDateStr#
		]]>
	</select>
	<!-- test-todel --> 
	<select id="getUncor" parameterClass="String" resultClass="attInfoUncor">
		<![CDATA[
		SELECT
		    ATT_YM as attYm, 
			ATT_PER_ID as attPerId, 
			UNCOR_TYPE as uncorType, 
			ORG1 as org1, 
			ORG2 as org2, 
			CNT1 as cnt1
		 FROM att_info_uncor
		 order by attYm,attPerId,uncorType
		]]>
	</select>
</sqlMap> 