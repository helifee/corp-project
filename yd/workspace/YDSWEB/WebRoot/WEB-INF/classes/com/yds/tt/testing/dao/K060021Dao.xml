<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="K060021Dao">
	<typeAlias alias="examEmployeeInfo" type="com.yds.tt.testing.bean.ExamEmployeeInfo"/>
	<typeAlias alias="courseInfo" type="com.yds.tt.training.bean.CourseInfo"/>
	<typeAlias alias="examineInfo" type="com.yds.tt.testing.bean.ExamineInfo"/>
	<!-- 查看权限取得 --> 
	<select id="getAuthorityCheck" parameterClass="java.util.HashMap" resultClass="Integer">
		SELECT(
		(SELECT  COUNT(*)
		  FROM  TT_KS_XINXI AS T1
		 WHERE  T1.EXAMINE_ID = #testId#
		   AND  T1.OBJECT_TYPE = '1' 
		) +
		(SELECT  COUNT(*)
		  FROM  TT_KS_XINXI AS T1,
				v_emp_org_list AS T3
		 WHERE  T1.EXAMINE_ID = #testId#
		   AND  (T1.OBJECT_TYPE = '2' AND T1.OBJECT_VALUE = T3.ORG_ID AND T3.EMP_ID = #userId#)
		) +
		(SELECT  COUNT(*)
		  FROM  TT_KS_XINXI AS T1,
				v_tt_user AS T2
		 WHERE  T1.EXAMINE_ID = #testId#
		   AND  (T1.OBJECT_TYPE = '3' 
						AND T1.OBJECT_VALUE >= (SUBSTRING(now(),1,4) - SUBSTRING(T2.START_DATE,1,4)) 
					    AND  T2.USER_ID = #userId#)
		) +	
		(SELECT  COUNT(*)
		  FROM  TT_KS_XINXI AS T1,
				TT_KS_DUIXIANG AS T4
		 WHERE  T1.EXAMINE_ID = #testId#
		   AND  (T1.OBJECT_TYPE = '4' AND T1.EXAMINE_ID = T4.EXAMINE_ID AND T4.EXAMINE_OBJECT_ID =#userId#)
		)) AS　CNT	
 	</select>
	
	<!-- 考试状态取得 --> 
	<select id="getExamineStatus" parameterClass="java.util.HashMap" resultClass="examEmployeeInfo">  
		 SELECT T1.EMP_EXAM_STATUS AS empExamStatus,
				(SELECT DIFF_NAME
					FROM COM_CODE_MST
					WHERE TYPE_ID = 'R13'
						AND DIFF_NO = T1.EMP_EXAM_STATUS
				) AS empExamStatusName,
				T1.EXAMINE_JOIN_TIMES AS examineJoinTimes,
				EXAMINE_ID AS examineId, 
				EMPLOYEES_ID AS employeesId, 
				PAPER_ID AS paperId, 
				PAPER_VERSION_NO AS paperVersionNo, 
				PAPER_CREATE_NO AS paperCreateNo, 
				PAPER_CREATE_TIME AS paperCreateTime, 
				SCORE AS score, 
				RESULTLEVEL_ID AS resultlevelId, 
				PASSEXAMINE_FLG AS passexamineFlg, 
				EXAMINE_START_TIME AS examineStartTime, 
				EXAMINE_END_TIME AS examineEndTime, 
				APPLY_REFUSE_REASON AS applyRefuseReason
		  FROM  tt_ks_yuangong T1
		 WHERE  T1.EXAMINE_ID = #testId#
		   AND  T1.EMPLOYEES_ID = #userId#
		   AND  T1.EXAMINE_JOIN_TIMES  =  (SELECT  MAX(EXAMINE_JOIN_TIMES) 
										  FROM  tt_ks_yuangong
										 WHERE  EXAMINE_ID   = #testId#
										   AND  EMPLOYEES_ID = #userId#)
	</select>
	
	<!-- 考试信息取得 --> 
	<select id="getTestInfo" parameterClass="examineInfo" resultClass="examineInfo">
		SELECT  
				T1.EXAMINE_ID         as  examineId,
				T1.PARENT_EXAMINE_ID  as  parentExamineId,
				T1.MUST_EXAMINE_FLG   as  mustExamineFlg,
				T1.EXAMINE_NAME       as  examineName,
				T1.EXAMINE_START_TIME as  examineStartTime,
				T1.EXAMINE_END_TIME   as  examineEndTime,
				T1.EXAMINE_TIME       as  examineTime,
				(SELECT COM_CODE_MST.DIFF_NAME
					FROM COM_CODE_MST
					WHERE COM_CODE_MST.TYPE_ID = 'C08'
					AND COM_CODE_MST.DIFF_NO = T1.EXAMINE_FLG
				) AS examineFlgName,
				T1.APPLY_CLOSING_TIME as  applyClosingTime,
				T1.EXAMINE_STATUS     as  examineStatus,
				(SELECT COM_CODE_MST.DIFF_NAME
					FROM COM_CODE_MST
					WHERE COM_CODE_MST.TYPE_ID = 'R12'
					AND COM_CODE_MST.DIFF_NO = T1.EXAMINE_STATUS)
									  AS  examineStatusName,
				T1.EXAMINE_FLG        as  examineFlg,
				T1.AGAIN_EXAMINE_FLG  as  againExamineFlg,
				T1.APPLY_CONFIRM_FLG  as  applyConfirmFlg,
				T2.ATTENTION_FLAG     AS  attentionFlag,
				<!-- 分类名称：一级分类名-二级分类名-三级分类名 --> 
				CONCAT
					(CASE T1.CATEGORY1_ID 
						WHEN 0 THEN ""
						ELSE 
							(SELECT CATEGORY_NAME 
							   FROM tt_fenlei
							  WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
									CATEGORY_LEVEL = 1)
					END,
					CASE T1.CATEGORY2_ID
						WHEN 0 THEN ""
						ELSE CONCAT("-",(SELECT CATEGORY_NAME 
									FROM tt_fenlei
								   WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
										 CATEGORY2_ID = T1.CATEGORY2_ID AND
										 CATEGORY_LEVEL = 2))
					END ,
					CASE T1.CATEGORY3_ID
						WHEN 0 THEN ""
						ELSE CONCAT("-",(SELECT CATEGORY_NAME 
									FROM tt_fenlei 
								   WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
										 CATEGORY2_ID = T1.CATEGORY2_ID AND
										 CATEGORY3_ID = T1.CATEGORY3_ID AND
										 CATEGORY_LEVEL = 3))
					END)              as categoryName,
				<!-- 考试信息表.考试说明 -->
				T1.EXAMINE_COMMENT    as examineComment,
				<!-- 考试信息表.参阅答案标志 -->					  
				T1.CHECK_ANSWER_FLG   as checkAnswerFlg,
				T1.UPDATE_TIME AS updateTime
		  FROM  tt_ks_xinxi T1 Left Join tt_ks_duixiang T2 ON T1.EXAMINE_ID = T2.EXAMINE_ID AND T2.EXAMINE_OBJECT_ID=#updateUserId# 					
		 WHERE  T1.EXAMINE_ID = #examineId#			 
	</select>
	
	<!-- 需要学习的课程取得 --> 
	<select id="getCourseInfoList" parameterClass="String" resultClass="courseInfo">
		SELECT  T2.COURSE_ID            as  courseId,
			    T2.COURSE_NAME          as  courseName,
				<!-- 分类名称：一级分类名-二级分类名-三级分类名 --> 
				CONCAT
					(CASE T2.CATEGORY1_ID 
						WHEN 0 THEN ""
						ELSE 
							(SELECT CATEGORY_NAME 
							   FROM tt_fenlei
							  WHERE CATEGORY1_ID = T2.CATEGORY1_ID AND 
									CATEGORY_LEVEL = 1)
					END,
					CASE T2.CATEGORY2_ID
						WHEN 0 THEN ""
						ELSE CONCAT("-",(SELECT CATEGORY_NAME 
									FROM tt_fenlei
								   WHERE CATEGORY1_ID = T2.CATEGORY1_ID AND 
										 CATEGORY2_ID = T2.CATEGORY2_ID AND
										 CATEGORY_LEVEL = 2))
					END ,
					CASE T2.CATEGORY3_ID
						WHEN 0 THEN ""
						ELSE CONCAT("-",(SELECT CATEGORY_NAME 
									FROM tt_fenlei 
								   WHERE CATEGORY1_ID = T2.CATEGORY1_ID AND 
										 CATEGORY2_ID = T2.CATEGORY2_ID AND
										 CATEGORY3_ID = T2.CATEGORY3_ID AND
										 CATEGORY_LEVEL = 3))
					END)                as categoryName,
				T2.UPDATE_TIME          as updateTime
		  FROM  TT_XUYAOKECHENG  T1,
				TT_KECHENG       T2
		 WHERE  T1.EXAMINE_ID  =  #testId#
		   AND  T1.NECESSARY_COURSE_ID  =  T2.COURSE_ID
      ORDER BY  T2.COURSE_ID ASC
	</select>
	
	<!-- 需要通过的考试取得 --> 
	<select id="getExamineInfoList" parameterClass="java.util.HashMap" resultClass="examineInfo">
		SELECT  T1.EXAMINE_ID           AS  examineId,
				T1.EXAMINE_NAME         AS  examineName,
				<!-- 分类名称：一级分类名-二级分类名-三级分类名 --> 
				CONCAT
					(CASE T1.CATEGORY1_ID 
						WHEN 0 THEN ""
						ELSE 
							(SELECT CATEGORY_NAME 
							   FROM tt_fenlei
							  WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
									CATEGORY_LEVEL = 1)
					END,
					CASE T1.CATEGORY2_ID
						WHEN 0 THEN ""
						ELSE CONCAT("-",(SELECT CATEGORY_NAME 
									FROM tt_fenlei
								   WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
										 CATEGORY2_ID = T1.CATEGORY2_ID AND
										 CATEGORY_LEVEL = 2))
					END ,
					CASE T1.CATEGORY3_ID
						WHEN 0 THEN ""
						ELSE CONCAT("-",(SELECT CATEGORY_NAME 
									FROM tt_fenlei 
								   WHERE CATEGORY1_ID = T1.CATEGORY1_ID AND 
										 CATEGORY2_ID = T1.CATEGORY2_ID AND
										 CATEGORY3_ID = T1.CATEGORY3_ID AND
										 CATEGORY_LEVEL = 3))
					END)               AS  categoryName,
				V1.PASSEXAMINE_FLG     AS  empPassExamFlag
		FROM    tt_ks_xinxi T1 
				INNER JOIN 
				tt_xuyaokaoshi T2 ON T1.EXAMINE_ID	= T2.NECESSARY_EXAMINE_ID 
				LEFT JOIN 
				v_tt_ks_youxiaochengji V1 ON T1.EXAMINE_ID = V1.F_EXAMINE_ID AND EMPLOYEES_ID=#userId#
				
		WHERE   T2.EXAMINE_ID   =  	   #testId#
		  AND   T1.EXAMINE_ID	=	   T2.NECESSARY_EXAMINE_ID 
	 ORDER BY   T1.EXAMINE_ID   ASC
	</select>
		
	<!-- 考试举行日期检索 --> 
	<select id="getOtherExamList" parameterClass="java.util.HashMap" resultClass="examineInfo">
		SELECT  DISTINCT T1.EXAMINE_ID as  examineId,  
				T1.APPLY_CLOSING_TIME  as  applyClosingTime,
				T1.EXAMINE_START_TIME  as  examineStartTime,
				T1.EXAMINE_END_TIME    as  examineEndTime,
				(SELECT COM_CODE_MST.DIFF_NAME
					FROM COM_CODE_MST
					WHERE COM_CODE_MST.TYPE_ID = 'R12'
					AND COM_CODE_MST.DIFF_NO = T1.EXAMINE_STATUS)
									  AS  examineStatusName
		  FROM  tt_ks_xinxi T1
		 WHERE  T1.PARENT_EXAMINE_ID  =  #testId#
		   AND  T1.EXAMINE_VISIBLE_FLG = '1'
	  ORDER BY  T1.EXAMINE_START_TIME ASC,
				T1.EXAMINE_END_TIME  ASC	
	</select>
		
	<!-- 更新员工考试信息 -->
	<update id="updateEmpExamineInfo" parameterClass="examEmployeeInfo">
		UPDATE tt_ks_yuangong
			SET
		    EMP_EXAM_STATUS     =  #empExamStatus#
			<isNotNull property="examineStartTime">			
				,EXAMINE_START_TIME = #examineStartTime#
			</isNotNull>
			<isNotNull property="examineEndTime">
				,EXAMINE_END_TIME   = #examineEndTime#
			</isNotNull>		
		WHERE
			EXAMINE_ID         = #examineId#
		AND	EMPLOYEES_ID       = #employeesId#
		AND EXAMINE_JOIN_TIMES = #examineJoinTimes#	
	</update>
	
	<!-- 关注度检索 -->
	<select id="getCheckAttention" parameterClass="java.util.HashMap" resultClass="String">
		SELECT  COUNT(*)
		  FROM  tt_ks_duixiang
		 WHERE  EXAMINE_ID         =  #testId#  
		   AND  EXAMINE_OBJECT_ID  =  #userId#
	</select>
	
	<!-- 更新关注度 -->
	<update id="updateAttention" parameterClass="java.util.HashMap">
		UPDATE tt_ks_duixiang
			SET
		    ATTENTION_FLAG    = #attentionFlg#		
		WHERE
			EXAMINE_ID        = #testId#
		AND	EXAMINE_OBJECT_ID = #userId#			
	</update>
	
	<!-- 插入关注度 -->
	<insert id="insertAttention" parameterClass="java.util.HashMap">
		INSERT  INTO  tt_ks_duixiang
			(EXAMINE_ID,
			 EXAMINE_OBJECT_ID,
			 ATTENTION_FLAG)
		VALUES
		    (#testId#,		
			 #userId#,
			 #attentionFlg#)			
	</insert>
	
	<!-- 申请报名按钮可用验证检索 -->
	<select id="getExamingChild" parameterClass="java.util.HashMap" resultClass="String">
		SELECT  T1.EXAMINE_ID
		  FROM  tt_ks_xinxi     T1,
				tt_ks_yuangong  T2
		 WHERE  T1.PARENT_EXAMINE_ID   =  CONCAT(SUBSTRING(#testId#,1,6),'00')  
		   AND  T2.EXAMINE_ID          =  T1.EXAMINE_ID
		   AND  (T2.EMP_EXAM_STATUS = '1'   OR
				 T2.EMP_EXAM_STATUS = '2'   OR
				 T2.EMP_EXAM_STATUS = '4'   OR
				 T2.EMP_EXAM_STATUS = '7')
		   AND  T2.EMPLOYEES_ID     = #userId#
	</select>
	
	<!-- 考试员工信息登录处理 -->
	<insert id="insertApplyInfo" parameterClass="examEmployeeInfo">
		INSERT  INTO  tt_ks_yuangong
			(EXAMINE_ID,
			 EMPLOYEES_ID,
			 EXAMINE_JOIN_TIMES,
			 EMP_EXAM_STATUS,
			 EXAMINE_START_TIME,
			 EXAMINE_END_TIME)
		SELECT 
			#examineId#,		
			 #employeesId#,
			 #examineJoinTimes#,
			 #empExamStatus#,
			 EXAMINE_START_TIME,
			 EXAMINE_END_TIME FROM tt_ks_xinxi where EXAMINE_ID=#examineId#			 			
	</insert>
	
	<!-- 重新考试时考试员工信息登录处理 -->
	<insert id="insertExamEmployeeInfo" parameterClass="examEmployeeInfo">
		INSERT INTO test.tt_ks_yuangong 
			(EXAMINE_ID, 
			EMPLOYEES_ID, 
			EXAMINE_JOIN_TIMES, 
			PAPER_ID, 
			PAPER_VERSION_NO, 
			PAPER_CREATE_NO, 
			PAPER_CREATE_TIME, 
			EMP_EXAM_STATUS, 
			RESULTLEVEL_ID, 
			EXAMINE_START_TIME, 
			EXAMINE_END_TIME, 
			APPLY_REFUSE_REASON
			)
			VALUES
			(#examineId#, 
			#employeesId#, 
			#examineJoinTimes#, 
			#paperId#, 
			#paperVersionNo#, 
			#paperCreateNo#, 
			#paperCreateTime#, 
			#empExamStatus#,
			#resultlevelId#, 
			#examineStartTime#, 
			#examineEndTime#, 
			#applyRefuseReason#
			);	
	</insert>	
	
	<!-- 考试员工信息删除处理 -->
	<delete id="deleteApplyInfo" parameterClass="examEmployeeInfo">
		DELETE 
		  FROM  tt_ks_yuangong
		 WHERE  EXAMINE_ID = #examineId#
		   AND  EMPLOYEES_ID = #employeesId#
		   AND  EXAMINE_JOIN_TIMES = '1'   
	</delete>
	
	<!-- 排他用最新时间取得 --> 
	<select id="getUpdateTime" parameterClass="String" resultClass="java.util.Date"> 
		SELECT 
			UPDATE_TIME AS updateTime
		FROM 
			tt_ks_xinxi
		WHERE
			EXAMINE_ID = #examineId# 
		FOR UPDATE
	</select>
</sqlMap>
