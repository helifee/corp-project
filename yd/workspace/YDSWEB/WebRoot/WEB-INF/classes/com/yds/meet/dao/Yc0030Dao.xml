<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Yc0030Dao">
    <typeAlias alias="metDaymetInfo"   type="com.yds.meet.bean.MetDaymetInfo"/>
	<typeAlias alias="metCyclemetInfo" type="com.yds.meet.bean.MetCyclemetInfo"/>
	<typeAlias alias="metDaymetUser"   type="com.yds.meet.bean.MetDaymetUser"/>
	<typeAlias alias="metCyclemetUser" type="com.yds.meet.bean.MetCyclemetUser"/>
	<typeAlias alias="metRoomInfo"     type="com.yds.meet.bean.MetRoomInfo"/>

	<!-- 单日会议信息取得 --> 
	<select id="getMetDaymetInfo" parameterClass="metDaymetInfo" resultClass="metDaymetInfo"> 
		SELECT 
			T1.MET_DATE          as metDate,
			T1.MET_STA_TIME      as metStaTime,
			T1.MET_END_TIME      as metEndTime,
			T1.MET_TOPIC         as metTopic,
			T1.MET_ID            as metId,
			T1.PUBLIC_FLG        as publicFlg,
			T1.JOIN_USER_CNT     as joinUserCnt,
			T1.CYCLE_MET_KB      as cycleMetKb,
			T1.MET_REMARKS       as metRemarks,
			T1.SIGN_ID           as signId,
			T1.APPLY_USER_ID  	 as applyUserId,
			T1.CONTACT_USER      as contactUser,
			CASE T2.DEL_FLG 
			WHEN  '0'
			THEN T1.CYCLE_MET_ID
			ELSE '0' END AS cycleMetId,    
			(SELECT EMP_CNM FROM v_emp_list_quit WHERE EMP_ID = T1.APPLY_USER_ID)  as applyUserNm
		FROM 
			MET_DAYMET_INFO T1
			LEFT JOIN MET_CYCLEMET_INFO T2
			ON T1.CYCLE_MET_ID = T2.CYCLE_MET_ID
			AND T2.DEL_FLG = '0'
		WHERE
			T1.MET_ID = #metId# AND
			T1.MET_DATE = #metDate# AND
			T1.MET_STA_TIME = #metStaTime#
	</select>
	<!-- 会议名取得 --> 
	<select id="getMetNm" parameterClass="Integer" resultClass="String"> 
		SELECT 
			MET_RNM AS met_rnm 
		FROM 
			MET_ROOM_INFO T1
		WHERE
			T1.MET_ID = #metId#
	</select>
	
	<!-- 周期会议信息取得 --> 
	<select id="getMetCyclemetInfo" parameterClass="Long" resultClass="metCyclemetInfo"> 
		SELECT 
			T1.CYCLE_TYPE        as cycleType,
			T1.DELAYED_FLG       as delayedFlg,
			T1.CYCLE_MET_TOPIC   as cycleMetTopic,
			T1.PUBLIC_FLG        as publicFlg,
			T1.CYCLE_MET_DAYS    as cycleMetDays,
			T1.MET_ID            as metId,
			T1.MET_STA_DATE      as metStaDate,
			T1.MET_END_DATE      as metEndDate,
			T1.MET_STA_TIME      as metStaTime,
			T1.MET_END_TIME      as metEndTime,
			T1.JOIN_USER_CNT     as joinUserCnt,
			T1.APPLY_USER_ID  	 as applyUserId,
		 	T1.MET_REMARKS  	 as metRemarks, 
			T1.SIGN_ID           as signId,
			T1.UPDATE_FLG        as updateFlg,
			T1.CONTACT_USER      as contactUser,
			(SELECT EMP_CNM FROM v_emp_list_quit WHERE EMP_ID = T1.APPLY_USER_ID)  as applyUserNm
		FROM 
			MET_CYCLEMET_INFO T1
		WHERE
			T1.CYCLE_MET_ID = #cycleMetId#
			AND T1.DEL_FLG = '0'
	</select>
	
	<!-- 单日会议参加者取得 --> 
	<select id="getMetDaymetUserLst" parameterClass="metDaymetInfo" resultClass="metDaymetUser"> 
		SELECT 
			T1.JOIN_USER_ID        as joinUserId,
			(SELECT EMP_CNM FROM v_emp_list_quit WHERE EMP_ID = T1.JOIN_USER_ID)  as joinUserNm
		FROM 
			MET_DAYMET_USER T1
		WHERE
			T1.MET_ID = #metId# AND
			T1.MET_DATE = #metDate# AND
			T1.MET_STA_TIME = #metStaTime#
	</select>
	
	<!-- 周期会议参加者取得 --> 
	<select id="getMetCyclemetUserLst" parameterClass="Long" resultClass="metCyclemetUser"> 
		SELECT
			T1.JOIN_USER_ID   as joinUserId,
			(SELECT EMP_CNM FROM v_emp_list_quit WHERE EMP_ID = T1.JOIN_USER_ID)  as joinUserNm
		FROM 
			MET_CYCLEMET_USER T1
		WHERE
			T1.CYCLE_MET_ID = #cycleMetId#
	</select>
	
	<!-- 会议室信息取得 --> 
	<select id="getMetRoomInfo" resultClass="metRoomInfo"> 
		SELECT 
			MET_ID        AS metId,
			CONTAIN_CNT   AS containCnt,
			CONCAT(MET_RNM, '（可容纳', CONVERT(CONTAIN_CNT,char), '人）')AS metRnmContainCnt
		FROM 
			MET_ROOM_INFO
		WHERE
		<![CDATA[
			MET_STATE <> 0 
		]]>
	</select>	
		
	<!-- 单日会议信息保存 --> 
	<insert id="insertMetDaymetInfo" parameterClass="metDaymetInfo" >
		INSERT INTO MET_DAYMET_INFO 
		(MET_DATE, 
		MET_STA_TIME, 
		MET_END_TIME, 
		MET_TOPIC, 
		MET_ID, 
		APPLY_USER_ID,
		PUBLIC_FLG,
		JOIN_USER_CNT,
		CYCLE_MET_KB,
		CYCLE_MET_ID,
		MET_REMARKS,
		SIGN_ID,
		CONTACT_USER,
		UPDATETIME
		)
		VALUES
		(#metDate#, 
		 #metStaTime#, 
		 #metEndTime#, 
		 #metTopic#, 
		 #metId#, 
		 #applyUserId#,
		 #publicFlg#,
		 #joinUserCnt#,
		 #cycleMetKb#,
		 #cycleMetId#,
		 #metRemarks#, 
		 #signId#, 
		 #contactUser#, 
		 NOW()
		);
	</insert>

	<!-- 取得会议室在某日某时间段内的会议预约数 --> 
	<select id="getMetDayNum" parameterClass="metDaymetInfo" resultClass="Integer"> 
		SELECT COUNT(*)
		FROM MET_DAYMET_INFO T1
		WHERE 
			T1.MET_ID =  #metId# AND
			T1.MET_DATE = #metDate# AND
		<![CDATA[
			((T1.MET_STA_TIME > #metStaTime#  AND
			  T1.MET_STA_TIME < #metEndTime#) OR
			 (T1.MET_STA_TIME < #metStaTime# AND
			  T1.MET_END_TIME > #metStaTime#) OR
			  T1.MET_STA_TIME = #metStaTime#)
		]]>	
		<!-- 修改时，不包括修改信息 --> 
		<isNotEmpty property="metIdOld">
		<![CDATA[
			AND (T1.MET_ID <> #metIdOld#
			OR T1.MET_STA_TIME <> #metStaTimeOld#
			OR T1.MET_DATE <> #metDateOld#)
		]]>	
		</isNotEmpty>
	</select>	
	
	<!-- 取得会议室在某段日期及某时间段内的会议预约公共信息 -->
	<sql id="getMetDaysCondition">
		FROM MET_DAYMET_INFO T1	
		WHERE 
			T1.MET_ID =  #metId# AND
			(T1.MET_DATE BETWEEN #metStaDate# AND #metEndDate#) AND
 		<![CDATA[
			((T1.MET_STA_TIME > #metStaTime#  AND
			  T1.MET_STA_TIME < #metEndTime#) OR
			 (T1.MET_STA_TIME < #metStaTime# AND
			  T1.MET_END_TIME > #metStaTime#) OR
			  T1.MET_STA_TIME = #metStaTime#)
		]]>	
		<!-- 修改时，不包括修改信息 --> 
		<isNotEmpty property="cycleMetIdOld">
		<![CDATA[
			AND T1.CYCLE_MET_ID <> #cycleMetIdOld#
		]]>	
		</isNotEmpty>
	</sql>
	
	<!-- 取得会议室在某段日期及某时间段内的会议预约数 --> 
	<select id="getMetDaysNum" parameterClass="metCyclemetInfo" resultClass="Integer"> 
		SELECT COUNT(*)
		<include refid="getMetDaysCondition"/>
	</select>
	
	<!-- 取得会议室在某段日期及某时间段内的会议预约日期集 --> 
	<select id="getMetDaysDate" parameterClass="metCyclemetInfo" resultClass="Date"> 
		SELECT MET_DATE
		<include refid="getMetDaysCondition"/>
	</select>
	
	
	<!-- 单日会议参加者保存 --> 
	<insert id="insertMetDaymetUser" parameterClass="metDaymetUser" >
		INSERT INTO MET_DAYMET_USER 
		(MET_DATE, 
		MET_STA_TIME, 
		MET_ID, 
		JOIN_USER_ID, 
		UPDATETIME
		)
		VALUES
		(#metDate#, 
		 #metStaTime#, 
		 #metId#, 
		 #joinUserId#, 
		 NOW()
		);
	</insert>
	
	<!-- 周期会议参加者保存 --> 
	<insert id="insertMetCyclemetUser" parameterClass="metCyclemetUser" >
		INSERT INTO MET_CYCLEMET_USER 
		(CYCLE_MET_ID, 
		JOIN_USER_ID, 
		UPDATETIME
		)
		VALUES
		(#cycleMetId#, 
		 #joinUserId#, 
		 NOW()
		);
	</insert>
	
	<!-- 取得最大周期会议ID --> 
	<select id="getMaxCycleMetId">
		SELECT MAX(CYCLE_MET_ID)
		FROM 
			MET_CYCLEMET_INFO
	</select>
	
	<!-- 周期会议信息保存 --> 
	<insert id="insertMetCyclemet" parameterClass="metCyclemetInfo" >
		INSERT INTO MET_CYCLEMET_INFO 
		(CYCLE_MET_ID, 
		CYCLE_MET_DAYS, 
		CYCLE_TYPE, 
		DELAYED_FLG, 
		CYCLE_MET_TOPIC, 
		PUBLIC_FLG,
		MET_ID,
		MET_STA_DATE,
		MET_END_DATE,
		MET_STA_TIME,
		MET_END_TIME,
		APPLY_USER_ID,
		JOIN_USER_CNT,
		UPDATE_FLG,
		SIGN_ID,
		MET_REMARKS,
		CONTACT_USER,
		DEL_FLG,
		UPDATETIME
		)
		VALUES
		(#cycleMetId#, 
		 #cycleMetDays#, 
		 #cycleType#, 
		 #delayedFlg#, 
		 #cycleMetTopic#,
		 #publicFlg#,
		 #metId#,
		 #metStaDate#,
		 #metEndDate#,
		 #metStaTime#,
		 #metEndTime#,
		 #applyUserId#,
		 #joinUserCnt#,
		 #updateFlg#,
		 #signId#,		 
		 #metRemarks#,
		 #contactUser#, 
		 #delFlg#,
		 NOW()
		);
	</insert>
	
	<!-- 单日会议信息删除 --> 
	<delete id="deleteDaymetInfo" parameterClass="metDaymetInfo" >
		DELETE 
		FROM  MET_DAYMET_INFO
		WHERE MET_DATE = #metDate#
		AND MET_STA_TIME = #metStaTime#
		AND MET_ID = #metId#
	</delete>
	
	<!-- 周期内未过期的单日会议信息删除 --> 
	<delete id="deleteDaymetInfoLst" parameterClass="metDaymetInfo" >
		DELETE 
		FROM  MET_DAYMET_INFO
		WHERE CYCLE_MET_ID = #cycleMetId#
		<isEqual property="delToday" compareValue="false">
			AND MET_DATE > #systemDate#
		</isEqual>
		<isEqual property="delToday" compareValue="true">
			AND MET_DATE >= #systemDate#
		</isEqual>
	</delete>
	
	<!-- 单日会议参加者删除 --> 
	<delete id="deleteDaymetUser" parameterClass="metDaymetUser" >
		DELETE 
		FROM  MET_DAYMET_USER
		WHERE MET_DATE = #metDate#
		AND MET_STA_TIME = #metStaTime#
		AND MET_ID = #metId#
	</delete>
	
	<!-- 周期内未过期的单日会议参加者删除 --> 
	<delete id="deleteMetDaymetUserLst">
		DELETE MET_DAYMET_USER T1
		FROM  MET_DAYMET_USER T1
		INNER JOIN MET_DAYMET_INFO T2
		ON T1.MET_DATE = T2.MET_DATE
		AND T1.MET_STA_TIME = T2.MET_STA_TIME
		AND T1.MET_ID = T2.MET_ID
		WHERE T2.CYCLE_MET_ID = #cycleMetId#
		<isEqual property="delToday" compareValue="false">
			AND T2.MET_DATE > #systemDate#
		</isEqual>
		<isEqual property="delToday" compareValue="true">
			AND T2.MET_DATE >= #systemDate#
		</isEqual>

	</delete>
	
	<!-- 单日会议参加者删除 --> 
	<delete id="deleteCycleMetUserLst" parameterClass="Long">
		DELETE 
		FROM  MET_CYCLEMET_USER
		WHERE 
		CYCLE_MET_ID = #cycleMetId#

	</delete>
	
	<!-- 周期会议信息删除 --> 
	<delete id="deleteCycleMetInfo" parameterClass="Long">
		DELETE 
		FROM  MET_CYCLEMET_INFO
		WHERE 
		CYCLE_MET_ID = #cycleMetId#

	</delete>
	
	<!-- 相同周期ID的单日会议信息取得 --> 
	<select id="getMetDaymetInfoList" parameterClass="Long" resultClass="metDaymetInfo"> 
		SELECT 
			T1.MET_DATE          as metDate,
			T1.MET_STA_TIME      as metStaTime,
			T1.MET_END_TIME      as metEndTime,
			T1.MET_TOPIC         as metTopic,
			T1.MET_ID            as metId,
			T1.PUBLIC_FLG        as publicFlg,
			T1.JOIN_USER_CNT     as joinUserCnt,
			T1.CYCLE_MET_KB      as cycleMetKb,
			T1.MET_REMARKS       as metRemarks,
			T1.APPLY_USER_ID  	 as applyUserId,
			T1.CYCLE_MET_ID      as cycleMetId,	
			(SELECT EMP_CNM FROM v_emp_list_quit WHERE EMP_ID = T1.APPLY_USER_ID)  as applyUserNm
		FROM 
			MET_DAYMET_INFO T1
		WHERE
			T1.CYCLE_MET_ID = #cycleMetId#
	</select>
	
	<!-- 周期会议信息删除 --> 
	<update id="updateDelFlgCycleMetInfo" parameterClass = "Long">
		UPDATE MET_CYCLEMET_INFO 
			SET DEL_FLG = '1'
		WHERE CYCLE_MET_ID = #cycleMetId#
	</update>
	
	<!-- 周期会议信息更新flg --> 
	<update id="updateUpdateFlgCycleMetInfo" parameterClass = "Long">
		UPDATE MET_CYCLEMET_INFO 
			SET UPDATE_FLG = '1'
		WHERE CYCLE_MET_ID = #cycleMetId#
	</update>
	
</sqlMap>  
