<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="K060051Dao">
    <typeAlias alias="k060051searchInfo" type="com.yds.tt.testing.bean.K060051SearchInfo"/>
	<typeAlias alias="k060051examineStatus" type="com.yds.common.bean.SysCodeInfo"/>
	<typeAlias alias="k651examineInfo" type="com.yds.tt.testing.bean.ExamineInfo"/>
	<typeAlias alias="k651examemployee" type="com.yds.tt.testing.bean.ExamEmployeeInfo"/>
	<typeAlias alias="k651examemployeeAnswer" type="com.yds.tt.testing.bean.TestEmployeeAnswerInfo"/>
	<typeAlias alias="k651testResultsInfo" type="com.yds.tt.testing.bean.TestResultsInfo"/>
	<typeAlias alias="k651mesReminding" type="com.yds.tt.manager.bean.MessageReminding"/>

	<!-- 实施考试一览_检索信息 -->
	<sql id="implementsql">
		SELECT 
			T2.EXAMINE_ID AS examineId ,
			T2.EXAMINE_NAME AS examineName,
			T2.EXAMINE_FLG AS examineFlg,
			T2.EXAMINE_START_TIME AS examineStartDate,
			T2.EXAMINE_END_TIME AS examineEndDate,
			T2.EXAMINE_STATUS AS examineStatus,			
			T2.EXAMINE_VISIBLE_FLG AS examineVisibleFlg,
			T2.UPDATE_TIME AS updateTime,
			(SELECT DIFF_NAME 
             FROM COM_CODE_MST
             WHERE TYPE_ID = 'R12'
				AND DIFF_NO = T2.EXAMINE_STATUS
             )AS examineStatusName
	</sql>
	
	<!-- 实施考试一览_内层基本检索项目 -->
	<sql id="selectimplementsql">
		SELECT
			T1.EXAMINE_ID,
			T1.EXAMINE_NAME,
			T1.EXAMINE_FLG,
			T1.EXAMINE_START_TIME,
			T1.EXAMINE_END_TIME,
			T1.EXAMINE_VISIBLE_FLG,
			T1.UPDATE_USER_ID,
			T1.EXAMINE_STATUS,
			T1.UPDATE_TIME
	</sql>	
	
	<!-- 实施考试一览_检索条件-->
	<sql id="conditionimplementsql">
		<isNotEmpty prepend="AND" property="examineId">
			T1.EXAMINE_ID like CONCAT(#examineId#,'%')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="examineName">
			T1.EXAMINE_NAME like CONCAT('%', #examineName#, '%')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="examineStatus">
			T1.EXAMINE_STATUS = #examineStatus#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="examineStartDate">
			T1.EXAMINE_START_TIME >= #examineStartDate#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="examineEndDate">
			#examineEndDate# > T1.EXAMINE_END_TIME
		</isNotEmpty>
	</sql>
	
	<!-- 实施考试一览_检索用户可实施的子考试-->
	<sql id="canimplementsql">	
		FROM TT_KS_XINXI T1,TT_QUANXIAN TQ
		WHERE TQ.AUTHORITY_ID = 12
			<include refid="conditionimplementsql"/>
			AND TQ.USER_ID = #userId#
			AND NOW() >= TQ.START_TIME
			AND TQ.END_TIME >= NOW()
			AND T1.PARENT_EXAMINE_ID = TQ.RELATEDOBJECT_ID
			AND T1.EXAMINE_STATUS != 1
			AND T1.EXAMINE_STATUS != 4
	</sql>
	
	<!-- 实施考试一览__检索可评分的子考试 -->
	<sql id="cangradesql">
		FROM TT_KS_XINXI AS T1,
			 TT_PINGFENRENWU AS T2
		WHERE T1.EXAMINE_STATUS = 9
			<include refid="conditionimplementsql"/>
			AND T1.EXAMINE_ID = T2.EXAMINE_ID
			AND T2.EXAMINE_MARKER_ID = #userId#
	</sql>
	
	<!-- 实施考试一览信息 --> 
    <select id="getK060051implementinfo" resultClass="k651examineInfo" parameterClass="k060051searchInfo"> 
		<include refid="implementsql"/>
		FROM ((
			<include refid="selectimplementsql"/>
			<include refid="canimplementsql"/>
			) UNION ALL
			(<include refid="selectimplementsql"/>
			<include refid="cangradesql"/>
		)) AS T2
		GROUP BY 
			T2.EXAMINE_ID ,
			T2.EXAMINE_NAME
		ORDER BY T2.EXAMINE_ID DESC
	</select>
	
	<!-- 实施考试一览信息件数 --> 
	<select id="getImplementTC" resultClass="long" parameterClass="k060051searchInfo">
		SELECT COUNT(DISTINCT T2.EXAMINE_ID)
		FROM ((
			<include refid="selectimplementsql"/>
			<include refid="canimplementsql"/>
			) UNION ALL
			(<include refid="selectimplementsql"/>
			<include refid="cangradesql"/>
		)) AS T2
	</select>

	<!-- 编辑考试一览_检索信息-->
	<sql id="editsql">
		SELECT 
			T2.EXAMINE_ID AS examineId ,
			T2.EXAMINE_NAME AS examineName,
			CONCAT(CASE T2.CATEGORY1_ID 
				WHEN 0 THEN ""
				ELSE 
					(SELECT CATEGORY_NAME 
					   FROM tt_fenlei
					  WHERE CATEGORY1_ID = T2.CATEGORY1_ID AND
							CATEGORY2_ID = 0 AND 
							CATEGORY3_ID = 0 AND
							CATEGORY_LEVEL = 1)
			END,
			CASE T2.CATEGORY2_ID
				WHEN 0 THEN ""
				ELSE CONCAT("-",(
					SELECT CATEGORY_NAME 
						FROM tt_fenlei
						WHERE CATEGORY1_ID = T2.CATEGORY1_ID AND 
							CATEGORY2_ID = T2.CATEGORY2_ID AND
							CATEGORY3_ID = 0 AND
							CATEGORY_LEVEL = 2))
			END ,
			CASE T2.CATEGORY3_ID
				WHEN 0 THEN ""
				ELSE CONCAT("-",(
					SELECT CATEGORY_NAME 
						FROM tt_fenlei t4 
						WHERE CATEGORY1_ID = T2.CATEGORY1_ID AND 
							CATEGORY2_ID = T2.CATEGORY2_ID AND
							CATEGORY3_ID = T2.CATEGORY3_ID AND
							CATEGORY_LEVEL = 3))
			END) AS categoryName,
			(SELECT 
				USER_CNM
			 FROM V_TT_USER
			 WHERE USER_ID = T2.UPDATE_USER_ID 
			) AS updateUserId,
			(SELECT 
				USER_CNM
			 FROM V_TT_USER
			 WHERE USER_ID = T2.CREATE_USER_ID 
			) AS createUserId,
			T2.UPDATE_TIME AS updateTime,
			SUM(T2.operatorFlg) AS operate  
	</sql>	
	
	<!-- 编辑考试一览_内层基本检索项目 -->
	<sql id="selecteditsql">
		select
			T1.EXAMINE_ID,
			T1.EXAMINE_NAME,
			T1.CATEGORY1_ID,
			T1.CATEGORY2_ID,
			T1.CATEGORY3_ID,
			T1.UPDATE_TIME,
			T1.UPDATE_USER_ID,
			T1.CREATE_USER_ID,
	</sql>
	
	<!-- 编辑考试一览_检索条件-->
	<sql id="conditioneditsql">
		<isNotEmpty prepend="AND" property="examineId">
			T1.EXAMINE_ID like CONCAT(#examineId#,'%')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="examineName">
			T1.EXAMINE_NAME like CONCAT('%', #examineName#, '%')
		</isNotEmpty>
		<isNotEmpty property="categoryInfo.category1Id">
			<isNotEqual prepend="AND" property="categoryInfo.category1Id" compareValue="0">
				T1.CATEGORY1_ID = #categoryInfo.category1Id#
			</isNotEqual>
		</isNotEmpty>
		<isNotEmpty property="categoryInfo.category2Id">
			<isNotEqual prepend="AND" property="categoryInfo.category2Id" compareValue="0">
				T1.CATEGORY2_ID = #categoryInfo.category2Id#
			</isNotEqual>
		</isNotEmpty>
		<isNotEmpty property="categoryInfo.category3Id">
			<isNotEqual prepend="AND" property="categoryInfo.category3Id" compareValue="0">
				T1.CATEGORY3_ID = #categoryInfo.category3Id#
			</isNotEqual>
		</isNotEmpty>
	</sql>
	
	<!-- 编辑考试一览_检索用户能管理的考试-->
	<sql id="canmanagesql">	
		2 AS operatorFlg
		FROM TT_KS_XINXI T1
		WHERE 
			(T1.PARENT_EXAMINE_ID IS NULL OR T1.PARENT_EXAMINE_ID = '')
			<isNull property="categoryInfolist">
				AND -1 = 1
			</isNull>
			<include refid="conditioneditsql"/>
			
			<isNotEmpty prepend="AND" open="(" close=")" property="categoryInfolist">
				<iterate conjunction="or" property="categoryInfolist" >
					<isNotEqual property="categoryInfolist[].category1Id" compareValue="0">
						(
						T1.CATEGORY1_ID = #categoryInfolist[].category1Id#
						<isNotEqual prepend="AND" property="categoryInfolist[].category2Id" compareValue="0">
							T1.CATEGORY2_ID = #categoryInfolist[].category2Id#
						</isNotEqual>
						<isNotEqual prepend="AND" property="categoryInfolist[].category3Id" compareValue="0">
							T1.CATEGORY3_ID = #categoryInfolist[].category3Id#
						</isNotEqual>
						)
					</isNotEqual>
				</iterate>
			</isNotEmpty>
	</sql>

	<!-- 编辑考试一览_检索用户能编辑的考试 -->
	<sql id="caneditsql">
		1 AS OPERATE			
		FROM TT_KS_XINXI AS T1,TT_QUANXIAN TQ
		WHERE T1.EXAMINE_ID = TQ.RELATEDOBJECT_ID
			<include refid="conditioneditsql"/>
			AND TQ.AUTHORITY_ID = 8
			AND TQ.USER_ID = #userId#
			AND NOW() >= TQ.START_TIME
			AND TQ.END_TIME >= NOW()
			AND (T1.PARENT_EXAMINE_ID IS NULL OR T1.PARENT_EXAMINE_ID = '')
	</sql>
			
    <!-- 编辑考试一览信息 --> 
    <select id="getK060051editinfo" resultClass="k651examineInfo" parameterClass="k060051searchInfo"> 
		<include refid="editsql"/>
		FROM (
		(
			<include refid="selecteditsql"/>
			<include refid="canmanagesql"/>
			) UNION ALL
			(<include refid="selecteditsql"/>
			<include refid="caneditsql"/>
		)) AS T2
		GROUP BY 
			T2.EXAMINE_ID ,
			T2.EXAMINE_NAME
		ORDER BY T2.EXAMINE_ID DESC
	</select>

	<!-- 编辑考试一览信息件数 --> 
	<select id="getEditTC" resultClass="long" parameterClass="k060051searchInfo">
		SELECT COUNT(DISTINCT T2.EXAMINE_ID)
		FROM (
			(
			<include refid="selecteditsql"/>
			<include refid="canmanagesql"/>
			) UNION ALL
			(<include refid="selecteditsql"/>
			<include refid="caneditsql"/>
		)) AS T2
	</select>
	
	<!-- 取得考试状态 -->
	<select id="getExamstus" resultClass="k060051examineStatus" >
		SELECT 
			TYPE_ID AS typeId, 
			DIFF_NO AS diffNo, 
			TYPE_NAME AS typeName, 
			DIFF_NAME AS diffName, 
			DISP_SEQ AS dispSeq, 
			REFER AS refer
		FROM COM_CODE_MST
		WHERE TYPE_ID = 'R12' AND DIFF_NO !=1 AND DIFF_NO != 4
	</select>
	
	<!-- 取得考试更新时间 -->
	<select id="getExamineInfoById" resultClass="k651examineInfo" parameterClass="String" >
		SELECT
			EXAMINE_ID AS examineId ,
			EXAMINE_NAME AS examineName,
			EXAMINE_FLG AS examineFlg,
			UPDATE_USER_ID AS updateUserId,
			UPDATE_TIME AS updateTime
		FROM TT_KS_XINXI
		WHERE  EXAMINE_ID = #examineId#
	</select>
	
	<!-- 更新考试状态 -->
	<update id="updateExamineInfo" parameterClass="k651examineInfo" >
		UPDATE TT_KS_XINXI
		SET EXAMINE_STATUS = #examineStatus#,
			UPDATE_TIME = NOW()
		WHERE EXAMINE_ID = #examineId#
	</update>

	<!-- 更新考试员工状态 -->
	<update id="updateExamineEmployee" parameterClass="k651examemployee" >
		UPDATE TT_KS_YUANGONG
		SET EMP_EXAM_STATUS = #empExamStatus#
		WHERE EXAMINE_ID = #examineId#
		<isNull prepend="AND" property="paperId">
			EMP_EXAM_STATUS = 8		
		</isNull>
		<isNotNull prepend="AND" property="paperId">
			EMP_EXAM_STATUS = 7		
		</isNotNull>
	</update>
	
	<!-- 取得未评分结果数量 -->
	<select id="getCheckGradeCT" resultClass="Integer">
		SELECT COUNT(dj.EXAMINE_ID)
		FROM   TT_KS_YUANGONG yg, TT_KS_DAJUAN dj
		WHERE yg.EXAMINE_ID = #examineId#
			AND yg.EMP_EXAM_STATUS = 7
			AND dj.EXAMINE_ID = #examineId#
			AND dj.EMPLOYEES_ID = yg.EMPLOYEES_ID
			AND dj.MARK_FLG = 2
			AND dj.QUESTION_FLG != 2 
	</select>
	
	<!-- 取得分数检索条件 -->
	<sql id="getpoint">
		FROM   TT_KS_YUANGONG yg, TT_KS_DAJUAN dj
		WHERE yg.EXAMINE_ID = #examineId#
			AND yg.EMP_EXAM_STATUS = 7
			AND dj.EXAMINE_ID = #examineId#
			AND dj.EMPLOYEES_ID = yg.EMPLOYEES_ID
			AND yg.EXAMINE_JOIN_TIMES IN(
				SELECT MAX(EXAMINE_JOIN_TIMES)
				FROM TT_KS_YUANGONG
				WHERE EXAMINE_ID = #examineId#
				AND dj.EMPLOYEES_ID = EMPLOYEES_ID
			)
			AND yg.EXAMINE_JOIN_TIMES = dj.EXAMINE_JOIN_TIMES
	</sql>
	
	<!-- 取得组合题分数 -->
	<select id="getAssociezInfo" resultClass="k651examemployeeAnswer" parameterClass="String">
		SELECT 
			SUM(dj.QUESTION_POINT) AS questionPoint,
			dj.QUESTION_ID AS questionId,
			dj.EMPLOYEES_ID AS employeesId,
			dj.EXAMINE_JOIN_TIMES AS examineJoinTimes
		<include refid="getpoint"/>
			AND dj.QUESTION_FLG = 3
		GROUP BY 
			dj.QUESTION_ID,			
			dj.EMPLOYEES_ID,
			dj.EXAMINE_JOIN_TIMES 			
	</select>

	<!-- 更新考试员工答卷信息 -->
	<update id="updateEmployeeAnswerInfo" parameterClass="k651examemployeeAnswer">
		UPDATE TT_KS_DAJUAN
		SET QUESTION_POINT = #questionPoint#
		WHERE EXAMINE_ID = #examineId#
			AND QUESTION_ID = #questionId#
			AND EMPLOYEES_ID = #employeesId#
			AND EXAMINE_JOIN_TIMES = #examineJoinTimes#
			AND QUESTION_FLG = 2
	</update>
	
	<!-- 取得个人成绩 -->
	<select id="getPersonalInfo" parameterClass="String" resultClass="k651examemployeeAnswer">
		SELECT 
			SUM(dj.QUESTION_POINT) AS questionPoint,
			dj.EMPLOYEES_ID AS employeesId,
			dj.EXAMINE_JOIN_TIMES AS examineJoinTimes
		<include refid="getpoint"/>
		AND dj.QUESTION_FLG != 2
		GROUP BY 
			dj.EMPLOYEES_ID,
			dj.EXAMINE_JOIN_TIMES
	</select>
	
	<!-- 个人评定等级信息 -->
	<select id="getRatings" parameterClass="String" resultClass="k651examineInfo">
		SELECT 	
			RESULTLEVEL_NUM AS resultlevelNum,
			PASSEXAMINE_LEVEL AS passexamineLevel, 
			RESULTLEVEL1_ID AS resultlevel1Id, 
			RESULTLEVEL1_SCORE AS resultlevel1Score, 
			RESULTLEVEL2_ID AS resultlevel2Id, 
			RESULTLEVEL2_SCORE AS resultlevel2Score, 
			RESULTLEVEL3_ID AS resultlevel3Id, 
			RESULTLEVEL3_SCORE AS resultlevel3Score, 
			RESULTLEVEL4_ID AS resultlevel4Id, 
			RESULTLEVEL4_SCORE AS resultlevel4Score, 
			RESULTLEVEL5_ID AS resultlevel5Id, 
			RESULTLEVEL5_SCORE AS resultlevel5Score
		FROM TT_KS_XINXI
		WHERE EXAMINE_ID = #examineId#
	</select>
	
	<!-- 更新个人成绩 -->
	<update id="updatexamEmployee" parameterClass="k651examemployee">
		UPDATE TT_KS_YUANGONG
		SET SCORE = #score#,
			RESULTLEVEL_ID = #resultlevelId#,
			PASSEXAMINE_FLG = #passexamineFlg#
		WHERE EXAMINE_ID = #examineId#
			AND EMPLOYEES_ID = #employeesId#
			AND EXAMINE_JOIN_TIMES = #examineJoinTimes#
	</update>
	
	<!-- 取得最大参加次数 -->
	<sql id="getmaxjointimes">
		AND EXAMINE_ID = #examineId#
		AND EXAMINE_JOIN_TIMES IN(
		SELECT MAX(EXAMINE_JOIN_TIMES)
		FROM TT_KS_YUANGONG
		WHERE EXAMINE_ID = #examineId#)
	</sql>
	
	<!-- 取得考试员工汇总 -->
	<select id="getExamEmployeeTotal" parameterClass="String" resultClass="k651testResultsInfo">
		SELECT (SELECT COUNT(EMPLOYEES_ID)	
				FROM TT_KS_YUANGONG
				WHERE RESULTLEVEL_ID = '1'
				<include refid="getmaxjointimes"/>
				) AS resultlevel1Num,
			   (SELECT COUNT(EMPLOYEES_ID)	
				FROM TT_KS_YUANGONG
				WHERE RESULTLEVEL_ID = '2'
				<include refid="getmaxjointimes"/>
				) AS resultlevel2Num,
			   (SELECT COUNT(EMPLOYEES_ID)	
				FROM TT_KS_YUANGONG
				WHERE RESULTLEVEL_ID = '3'
				<include refid="getmaxjointimes"/>
				) AS resultlevel3Num,
				(SELECT COUNT(EMPLOYEES_ID)	
				FROM TT_KS_YUANGONG
				WHERE RESULTLEVEL_ID = '4'
				<include refid="getmaxjointimes"/>
				) AS resultlevel4Num,
				(SELECT COUNT(EMPLOYEES_ID)	
				FROM TT_KS_YUANGONG
				WHERE RESULTLEVEL_ID = '5'
				<include refid="getmaxjointimes"/>
				) AS resultlevel5Num,
				(SELECT COUNT(EMPLOYEES_ID)	
				FROM TT_KS_YUANGONG
				WHERE PASSEXAMINE_FLG = '1'
				<include refid="getmaxjointimes"/>
				) AS passExamineNum,				
				(SELECT COUNT(EMPLOYEES_ID)	
				FROM TT_KS_YUANGONG
				WHERE PASSEXAMINE_FLG = '2'
				<include refid="getmaxjointimes"/>
				) AS notPassExamineNum,			
				(SELECT COUNT(EMPLOYEES_ID)	
				 FROM TT_KS_YUANGONG
				 WHERE EXAMINE_ID = #examineId#
					AND	EXAMINE_JOIN_TIMES IN(
						SELECT MAX(EXAMINE_JOIN_TIMES)
						FROM TT_KS_YUANGONG
						WHERE EXAMINE_ID = #examineId#)
				) AS joinExamineNum,
				(SELECT SUM(SCORE)	
				 FROM TT_KS_YUANGONG
				 WHERE EXAMINE_ID = #examineId#
					AND	EXAMINE_JOIN_TIMES IN(
						SELECT MAX(EXAMINE_JOIN_TIMES)
						FROM TT_KS_YUANGONG
						WHERE EXAMINE_ID = #examineId#)
				) AS totalScore,
				(SELECT SUM(TIME_TO_SEC(TIMEDIFF(EXAMINE_END_TIME, EXAMINE_START_TIME)))
				 FROM TT_KS_YUANGONG
				 WHERE EXAMINE_ID = #examineId#
					AND	EXAMINE_JOIN_TIMES IN(
						SELECT MAX(EXAMINE_JOIN_TIMES)
						FROM TT_KS_YUANGONG
						WHERE EXAMINE_ID = #examineId#)
				) AS totalTime
		FROM   TT_KS_YUANGONG yg
		WHERE yg.EXAMINE_ID = #examineId#
			AND yg.EMP_EXAM_STATUS = 7
			AND yg.EXAMINE_JOIN_TIMES IN(
				SELECT MAX(EXAMINE_JOIN_TIMES)
				FROM TT_KS_YUANGONG
				WHERE EXAMINE_ID = #examineId#
			)
		GROUP BY yg.EXAMINE_ID
	</select>

	<!-- 取得考试成绩汇总的数量 -->
	<select id="getCountgather" parameterClass="String" resultClass="Integer">
		SELECT COUNT(*)
		FROM TT_KS_CHENGJIHUIZONG
		WHERE EXAMINE_ID = #examineId#
	</select>
	
	<!-- 更新考试成绩汇总信息 -->
	<update id="updateCountgather" parameterClass="k651testResultsInfo">
		UPDATE TT_KS_CHENGJIHUIZONG
		SET 
			RESULTLEVEL1_NUM = #resultlevel1Num#, 
			RESULTLEVEL2_NUM = #resultlevel2Num#, 
			RESULTLEVEL3_NUM = #resultlevel3Num#, 
			RESULTLEVEL4_NUM = #resultlevel4Num#, 
			RESULTLEVEL5_NUM = #resultlevel5Num#, 
			PASSEXAMINE_NUM = #passExamineNum#, 
			NOT_PASSEXAMINE_NUM = #notPassExamineNum#, 
			JOINEXAMINE_NUM = #joinExamineNum#, 
			AVERAGE_SCORE = #averageScore#
		WHERE
			EXAMINE_ID = #examineId#
	</update>
	
	<!-- 添加考试成绩汇总信息 -->
	<insert id="insertCountgather" parameterClass="k651testResultsInfo">
		INSERT INTO TT_KS_CHENGJIHUIZONG
			(EXAMINE_ID, 
			RESULTLEVEL1_NUM, 
			RESULTLEVEL2_NUM, 
			RESULTLEVEL3_NUM, 
			RESULTLEVEL4_NUM, 
			RESULTLEVEL5_NUM, 
			PASSEXAMINE_NUM, 
			NOT_PASSEXAMINE_NUM, 
			JOINEXAMINE_NUM, 
			AVERAGE_SCORE
			)
		VALUES
			(#examineId#, 
			#resultlevel1Num#, 
			#resultlevel2Num#, 
			#resultlevel3Num#,  
			#resultlevel4Num#,  
			#resultlevel5Num#, 
			#passExamineNum#, 
			#notPassExamineNum#, 
			#joinExamineNum#, 
			#averageScore#
			);
	</insert>
	
	<!-- 取得参加考试的员工ID -->
	<select id="getEmployeeId" parameterClass="String" resultClass="java.util.HashMap">
		SELECT EMPLOYEES_ID AS employeesId
		FROM TT_KS_YUANGONG
		WHERE EXAMINE_ID = #examineId#
			AND EXAMINE_JOIN_TIMES = 1
			AND EMP_EXAM_STATUS = 7
	</select>
	
	<!-- 取得员工提醒信息条数 -->
	<select id="getCountEmp" parameterClass="k651mesReminding" resultClass="Integer">
		SELECT COUNT(*)
		FORM TT_TXXIAOXI
		WHERE USER_ID = #userId#
			AND MODE = #mode#
			AND PARAMETER = #parameter#		
	</select>
	
	<!-- 更新失效时间 -->
	<update id="updateLosetime" parameterClass="k651mesReminding">
		UPDATE TT_TXXIAOXI
		SET LOSETIME = NOW()
		WHERE USER_ID = #userId#
			AND MODE = #mode#
			AND PARAMETER = #parameter#
	</update>

	<!-- 取得评分者权限 -->
	<select id="getMarkingEmpId" resultClass="java.util.HashMap">
		SELECT MARKING_EMPID AS markingEmpId
		FROM TT_PINGFENRENWU
	</select>

 </sqlMap>  
