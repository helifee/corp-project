<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTDSQLMap2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="EduGadgetDao">
		<typeAlias alias="examineInfo" type="com.yds.tt.testing.bean.ExamineInfo"/>
		<typeAlias alias="courseInfo" type="com.yds.tt.training.bean.CourseInfo"/>
		<!-- 课程一览信息共同抽出条件 -->
	<sql id="selectCourseInfos">
		SELECT 	T1.COURSE_ID AS courseId, 
				T1.COURSE_NAME AS courseName,
				T1.ABSTRACT AS courseAbstract,
				T1.NECESSARY_FLAG AS necessaryFlag,
				CONCAT
				(CASE t1.CATEGORY1_ID 
					WHEN 0 THEN ""
					ELSE 
						(SELECT CATEGORY_NAME 
						   FROM tt_fenlei
						  WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
								CATEGORY_LEVEL = 1)
				END,
				CASE t1.CATEGORY2_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY_LEVEL = 2))
				END ,
				CASE t1.CATEGORY3_ID
					WHEN 0 THEN ""
					ELSE CONCAT("-",(SELECT CATEGORY_NAME 
								FROM tt_fenlei 
							   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
									 CATEGORY2_ID = t1.CATEGORY2_ID AND
									 CATEGORY3_ID = t1.CATEGORY3_ID AND
									 CATEGORY_LEVEL = 3))
				END) AS categoryName,
				
				CASE T1.NECESSARY_FLAG 
				    WHEN 1 THEN '必修'
				    ELSE (SELECT DIFF_NAME
					  FROM COM_CODE_MST
			                  WHERE TYPE_ID = 'C32'
                    AND DIFF_NO = T2.ATTENTION_FLAG
			    ) END AS attentionFlag,
			    
				CASE T1.NECESSARY_FLAG
				    WHEN 1 THEN '0'
				    ELSE (CASE T2.ATTENTION_FLAG 
					          WHEN "" THEN '2'
							  ELSE T2.ATTENTION_FLAG
						 END)
				    END AS attentionFlagOB,
				T1.UPDATE_TIME AS updateTime
	</sql>
	<!-- 考试一览信息共同抽出条件 -->
	<sql id="selectExamineInfos">
		SELECT T1.EXAMINE_ID AS examineId,
		   T1.EXAMINE_NAME AS examineName,
		   T1.MUST_EXAMINE_FLG AS mustExamineFlg,
		   T1.EXAMINE_COMMENT AS examineComment,
		   T1.EXAMINE_TIME AS examineTime,
			(SELECT COM_CODE_MST.DIFF_NAME
				FROM COM_CODE_MST
				WHERE COM_CODE_MST.TYPE_ID = 'C08'
				AND COM_CODE_MST.DIFF_NO = T1.EXAMINE_FLG
			) AS examineFlgName,
		   CONCAT
			(CASE t1.CATEGORY1_ID 
				WHEN 0 THEN ""
				ELSE 
					(SELECT CATEGORY_NAME 
					   FROM tt_fenlei
					  WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
							CATEGORY_LEVEL = 1)
			END,
			CASE t1.CATEGORY2_ID
				WHEN 0 THEN ""
				ELSE CONCAT("-",(SELECT CATEGORY_NAME 
							FROM tt_fenlei
						   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
								 CATEGORY2_ID = t1.CATEGORY2_ID AND
								 CATEGORY_LEVEL = 2))
			END ,
			CASE t1.CATEGORY3_ID
				WHEN 0 THEN ""
				ELSE CONCAT("-",(SELECT CATEGORY_NAME 
							FROM tt_fenlei 
						   WHERE CATEGORY1_ID = t1.CATEGORY1_ID AND 
								 CATEGORY2_ID = t1.CATEGORY2_ID AND
								 CATEGORY3_ID = t1.CATEGORY3_ID AND
								 CATEGORY_LEVEL = 3))
			END) AS categoryName,
	   T1.APPLY_CLOSING_TIME AS applyClosingTime,
	   T1.EXAMINE_START_TIME AS examineStartTime,
	   (SELECT COM_CODE_MST.DIFF_NAME
		 FROM COM_CODE_MST
		 WHERE COM_CODE_MST.TYPE_ID = 'C21'
		   AND COM_CODE_MST.DIFF_NO = T2.PASSEXAMINE_FLG
		)AS score,
		T2.EMP_EXAM_STATUS AS examineStatus,
			(SELECT COM_CODE_MST.DIFF_NAME
				FROM COM_CODE_MST
				WHERE COM_CODE_MST.TYPE_ID = 'R12'
				AND COM_CODE_MST.DIFF_NO = T1.EXAMINE_STATUS)
		   AS examineStatusName,
		  (SELECT COM_CODE_MST.DIFF_NAME
				FROM COM_CODE_MST
				WHERE COM_CODE_MST.TYPE_ID = 'R13'
				AND COM_CODE_MST.DIFF_NO = T2.EMP_EXAM_STATUS)
		   AS empExamStatusName,
		CASE T1.MUST_EXAMINE_FLG 
		WHEN 2 THEN '必考'
		ELSE (SELECT DIFF_NAME
			FROM COM_CODE_MST
			WHERE TYPE_ID = 'C32'
						AND DIFF_NO = T3.ATTENTION_FLAG
			  ) END AS attentionFlag,
					
		CASE T1.MUST_EXAMINE_FLG
		WHEN 1 THEN '0'
		ELSE T3.ATTENTION_FLAG 
		END AS attentionFlagOB,
		T1.EXAMINE_NOTIFY_DATE	as updateTime	   
	</sql>

	<!-- 课程一览信息 -->
	<select id="getCourseInfos" resultClass="courseInfo" parameterClass="String">
		<!-- ①针对对象为全员的课程检索 -->
		(		<include refid="selectCourseInfos"/>
		FROM 
				tt_kecheng T1 LEFT JOIN tt_kecheng_yuangong T2
				ON T1.COURSE_ID = T2.COURSE_ID 
				AND T2.EMPLOYEES_ID = #userId#
				
		WHERE
				T1.OBJECT_TYPE = 1
				AND T1.COURSE_PUBLISH_STATUS = 2
		) UNION ALL
		<!-- ②针对对象为项目组的课程检索 -->
		(		<include refid="selectCourseInfos"/>
		FROM 
				v_emp_org_list T3,tt_kecheng T1 LEFT JOIN tt_kecheng_yuangong T2 ON
				T1.COURSE_ID = T2.COURSE_ID 
				AND T2.EMPLOYEES_ID = #userId#
		WHERE
     		    T1.OBJECT_TYPE = 2
				AND T1.COURSE_PUBLISH_STATUS = 2
				AND T3.EMP_ID = #userId#
     		    AND T1.OBJECT_VALUE = T3.ORG_ID
		) UNION ALL
		<!-- ③针对对象为工龄的课程检索 -->
		(		<include refid="selectCourseInfos"/>
		FROM 
				v_tt_user T4,tt_kecheng T1 LEFT JOIN tt_kecheng_yuangong T2 ON
				T1.COURSE_ID = T2.COURSE_ID 
				AND T2.EMPLOYEES_ID = #userId#
		WHERE
     		    T1.OBJECT_TYPE = 3
				AND T1.COURSE_PUBLISH_STATUS = 2
				AND T4.USER_ID = #userId#
     		    AND T1.OBJECT_VALUE >= YEAR(NOW()) - YEAR(T4.START_DATE)
		) UNION ALL
		<!-- ④针对对象为个人的课程检索 -->
		(		<include refid="selectCourseInfos"/>
		FROM 
				tt_kecheng T1,tt_kecheng_yuangong T2
		WHERE
     		    T1.OBJECT_TYPE = 4
				AND T1.COURSE_PUBLISH_STATUS = 2
				AND T1.COURSE_ID = T2.COURSE_ID 
				AND T2.EMPLOYEES_ID = #userId#
		) ORDER BY updateTime,courseId DESC
		limit 3
	</select>
	
	<!-- 考试一览信息 -->
	<select id="getExamineInfos" resultClass="examineInfo" parameterClass="String">
		<!-- ①针对对象为全员的考试检索 -->
		(		<include refid="selectExamineInfos"/>
		FROM tt_ks_xinxi T1
				LEFT JOIN tt_ks_yuangong T2 ON (T2.EXAMINE_ID = T1.EXAMINE_ID
					AND T2.EMPLOYEES_ID = #userId#
					AND EXAMINE_JOIN_TIMES = (SELECT MAX(T6.EXAMINE_JOIN_TIMES) 
									FROM tt_ks_yuangong T6
									WHERE T6.EXAMINE_ID = T1.EXAMINE_ID
									  AND T6.EMPLOYEES_ID = #userId#))

				LEFT JOIN tt_ks_duixiang T3 ON (T3.EXAMINE_ID = T1.EXAMINE_ID
					AND T3.EXAMINE_OBJECT_ID = #userId#)
		WHERE T1.OBJECT_TYPE = 1
				AND T1.EXAMINE_VISIBLE_FLG = 1
		) UNION ALL
		<!-- ②针对对象为项目组的考试检索 -->
		(		<include refid="selectExamineInfos"/>
		FROM v_emp_org_list T4,tt_ks_xinxi T1
				LEFT JOIN tt_ks_yuangong T2 ON (T2.EXAMINE_ID = T1.EXAMINE_ID
					AND T2.EMPLOYEES_ID = #userId#
					AND EXAMINE_JOIN_TIMES = (SELECT MAX(T6.EXAMINE_JOIN_TIMES) 
									FROM tt_ks_yuangong T6
									WHERE T6.EXAMINE_ID = T1.EXAMINE_ID
									  AND T6.EMPLOYEES_ID = #userId#))
				LEFT JOIN tt_ks_duixiang T3 ON (T3.EXAMINE_ID = T1.EXAMINE_ID
					AND T3.EXAMINE_OBJECT_ID = #userId#)
		WHERE T1.OBJECT_TYPE = 2
			AND T1.EXAMINE_VISIBLE_FLG = 1
		  	AND T1.OBJECT_VALUE = T4.ORG_ID 
		  	AND T4.EMP_ID = #userId#
		) UNION ALL
		<!-- ③针对对象为工龄的考试检索 -->
		(		<include refid="selectExamineInfos"/>
		FROM v_tt_user T5,tt_ks_xinxi T1
				LEFT JOIN tt_ks_yuangong T2 ON (T2.EXAMINE_ID = T1.EXAMINE_ID
					AND T2.EMPLOYEES_ID = #userId#
					AND EXAMINE_JOIN_TIMES = (SELECT MAX(T6.EXAMINE_JOIN_TIMES) 
									FROM tt_ks_yuangong T6
									WHERE T6.EXAMINE_ID = T1.EXAMINE_ID
									  AND T6.EMPLOYEES_ID = #userId#))
				LEFT JOIN tt_ks_duixiang T3 ON (T3.EXAMINE_ID = T1.EXAMINE_ID
					AND T3.EXAMINE_OBJECT_ID = #userId#)
		WHERE T1.OBJECT_TYPE = 3 
			AND T1.EXAMINE_VISIBLE_FLG = 1
		  	AND T1.OBJECT_VALUE >= YEAR(NOW()) - YEAR(T5.START_DATE) 
		  	AND T5.USER_ID = #userId#
		) UNION ALL
		<!-- ④针对对象为个人的考试检索 -->
		(		<include refid="selectExamineInfos"/>
		FROM tt_ks_duixiang T3 ,tt_ks_xinxi T1
				LEFT JOIN tt_ks_yuangong T2 ON (T2.EXAMINE_ID = T1.EXAMINE_ID
					AND T2.EMPLOYEES_ID = #userId#
					AND EXAMINE_JOIN_TIMES = (SELECT MAX(T6.EXAMINE_JOIN_TIMES) 
									FROM tt_ks_yuangong T6
									WHERE T6.EXAMINE_ID = T1.EXAMINE_ID
									  AND T6.EMPLOYEES_ID = #userId#))
		WHERE T1.OBJECT_TYPE = 4
			AND T1.EXAMINE_VISIBLE_FLG = 1
			AND T3.EXAMINE_ID = T1.EXAMINE_ID
			AND T3.EXAMINE_OBJECT_ID = #userId#
		) ORDER BY updateTime, examineId DESC
		limit 3
	</select>
</sqlMap>
