/**
 * プログラム名：サービス１
 * 機能概要：データベースでテープルの情報を検索する
 * 作成者：張瑜
 * 作成日：2008/9/26
 * バージョン：1.0
 * 修正履歴：
 */ 
package services;

import java.util.ArrayList;
import java.util.List;

import pojo.dao.PjinfoDAO;
import pojo.Pjinfo; 
import pojo.dao.UsermstDAO;
import pojo.Usermst; 
//import pojo.dao.BusyomstDAO;
//import pojo.Busyomst; 
import pojo.dao.PjpginfoDAO;
import pojo.Pjpginfo; 

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.springframework.orm.hibernate3.HibernateCallback;

public class ManageUser01Service {
	private PjinfoDAO pjinfoDAO; 
	public PjinfoDAO getPjinfoDAO() {
		return pjinfoDAO;
	} 
	public void setPjinfoDAO(PjinfoDAO pjinfoDAO) {
		this.pjinfoDAO = pjinfoDAO;
	} 
	private UsermstDAO usermstDAO; 
	public UsermstDAO getUsermstDAO() {
		return usermstDAO;
	} 
	public void setUsermstDAO(UsermstDAO usermstDAO) {
		this.usermstDAO = usermstDAO;
	} 	
	private PjpginfoDAO pjpginfoDAO; 
	public PjpginfoDAO getPjpginfoDAO() {
		return pjpginfoDAO;
	} 
	public void setPjpginfoDAO(PjpginfoDAO pjpginfoDAO) {
		this.pjpginfoDAO = pjpginfoDAO;
	} 
	
	public void saveinfo(Pjinfo pjinfo) {
		try{	
			pjinfoDAO.getHibernateTemplate().save(pjinfo);
		}catch(Exception ex){
				
		}
	}
	/**
	 * Pjpginfoテーブルの管理者IDによって、Usermstテーブルを探す
	 * @param userid
	 * @return
	 */
	public List<Usermst> getUserById(String userid) {
		String queryString="from Usermst u where trim(u.userid)=?";
		return (List<Usermst>) usermstDAO.getHibernateTemplate().find(queryString,userid.trim());
	}
	/**
	 * ログインIDによって、Pjpginfoテーブルを探す
	 * @param userid
	 * @return
	 */
	public List findbyuserid(String userid){
		String queryString="from Pjpginfo u where trim(u.id.userid)=?";
		List<Pjpginfo> result =new ArrayList<Pjpginfo>();
		result= (List<Pjpginfo>)pjpginfoDAO.getHibernateTemplate().find(queryString,userid.trim());
		System.out.println(result.size());
		List pid=new ArrayList();
		int n=result.size();
		for(int i=0;i<n;i++){
			pid.add(result.get(i).getId().getProjectid().trim());
			
		}
		return pid;
	}
	/**
	 * PjpginfoテーブルのプログラムIDによって、Pjinfoテーブルを探す
	 * @param projectid
	 * @return
	 */
	public List<Pjinfo> findByid(List projectid){
		
		String str="";
		for(int i=0;i<projectid.size()-1;i++){
			str="'"+projectid.get(i).toString().trim()+"'"+","+str;
		}
		str=str+"'"+projectid.get(projectid.size()-1)+"'";
		System.out.println(str+"str");
		String queryString="from Pjinfo u where trim(u.projectid) in ("+str+")";
		return (List<Pjinfo>) pjinfoDAO.getHibernateTemplate().find(queryString);
	}
	/**
	 * 検索時間とログインIDによって、Pjinfoテーブルを探す
	 * @param startdate
	 * @param muserid
	 * @return
	 */
	public List<Pjinfo> findBytime(String startdate,String muserid ){
		String hql="from Pjinfo u where SUBSTR(u.startdate,1,4)=? and trim(u.muserid)=?";
		String[] userlist=new String[2];
		userlist[0]=startdate;	
		userlist[1]=muserid;
		return (List<Pjinfo>) pjinfoDAO.getHibernateTemplate().find(hql,userlist);
	}
	/**
	 * 該当ユーザー所属プロジェクト一覧のページ数を分割する
	 * @param projectid
	 * @param pageNum
	 * @param pageSize
	 * @return list
	 */
	public List findAllByPage1(final List projectid,final int pageNum, final int pageSize) {
		List list = (List) pjinfoDAO.getHibernateTemplate().execute(
				new HibernateCallback() {
					int numBegin = 0;
					{
						if(pageNum<1){
							numBegin = 0;
						}
						else{
							numBegin = (pageNum - 1)*pageSize;
						}
					}
					public Object doInHibernate(Session session)throws HibernateException {
						System.out.println("★☆彡★☆彡★☆彡"+projectid+"★☆彡★☆彡★☆彡"); 
						
						String str="";
						for(int i=0;i<projectid.size()-1;i++){
							str="'"+projectid.get(i)+"'"+","+str;
						}
						str=str+"'"+projectid.get(projectid.size()-1)+"'";
						System.out.println(str+"str");
						Query q = session.createQuery("from Pjinfo u where trim(u.projectid) in ("+str+")");
						System.out.println("★☆彡★☆彡★☆彡"+str+"★☆彡★☆彡★☆彡"); 
						q.setFirstResult(numBegin);
						q.setMaxResults(pageSize);
						List cats = q.list();
						return cats;
						
					}
					
				}
		);
		return list;
	}
	/**
	 * 管理者担当プロジェクト一覧のページ数を分割する
	 * @param muserid
	 * @param startdate
	 * @param pageNum
	 * @param pageSize
	 * @return list
	 */
	public List findAllByPage2(final String muserid,final String startdate,final int pageNum, final int pageSize) {
		List list = (List) pjinfoDAO.getHibernateTemplate().execute(
				new HibernateCallback() {
					int numBegin = 0;{
						if(pageNum<1){
							numBegin = 0;
						}
						else{
							numBegin = (pageNum - 1)*pageSize;
						}
					}
					public Object doInHibernate(Session session)throws HibernateException {
						System.out.println("★☆彡★☆彡★☆彡"+startdate+"★☆彡★☆彡★☆彡"); 
						Query q = session
								.createQuery("from Pjinfo u where SUBSTR(u.startdate,1,4)="+startdate+" and trim(u.muserid)="+muserid);
						System.out.println("★☆彡★☆彡★☆彡"+pageSize+"★☆彡★☆彡★☆彡"); 
						q.setFirstResult(numBegin);
						q.setMaxResults(pageSize);
						List cats = q.list();
						return cats;
						
					}
					
				}
		);
		return list;
	}
}
