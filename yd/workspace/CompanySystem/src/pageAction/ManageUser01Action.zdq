/**
 * プログラム名：管理者初期画面のプログラム
 * 機能概要：管理者関連情報が表示されますが、クエリする、該当ユーザー所属プロジェクト一覧をExcelに出力
 * 作成者：張瑜
 * 作成日：2008/9/26
 * バージョン：1.0
 * 修正履歴：
 */ 
package pageAction;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import jxl.Cell;
import jxl.Workbook;
import jxl.format.Alignment;
import jxl.format.CellFormat;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import parameter.ManageUser02Para;
import parameter.ManageUser03Para;
import parameter.SimpleUserPara;
import pojo.Pjinfo;
import pojo.Usermst;
import pojo.Pjpginfo;
import services.ManageUser01Service;
import com.opensymphony.xwork2.ActionSupport;
import com.parameter.ParaManager;
public class ManageUser01Action extends ActionSupport { 
	private static final long serialVersionUID = 1L;
	//レコードの数
	int cnt0 = 0;
	//頁数
	int ss = 0;
	int cnt2 = 0;
	int ss2= 0;
	//ぺーじでレコードの数を収容する
	int pageSize = 5;
	int pageNum = 1;
	int pageNum1 = 1;
	//前一頁 のアドレース
	private String url_pre;
	//次一頁 のアドレース
	private String url_next;
	private String url_pre1;
	private String url_next1;
	private String url;
	private int pagenum=2;
	private int pagenum1=2;
	//隠れるプロジェクトID
	private String key_hidden1;
	private String key_hidden;
	//クエリ年
	private String year;
	//該当ユーザー所属プロジェクト一覧のリスト
	private List<List_user> PJIN;
	//管理者担当プロジェクト一覧のリスト
	private List<List_user1> PJ;
	//online リスト
	private static List<UserDeteil> onlineusers;
	//該当ユーザー所属プロジェクト一覧のリストの初期化
	public class List_user{
		//項目番号
		private String projectid_a;
		//日文名
		private String prjmei_a;
		//客さん名
		private String kyakuname_a;
		//主管 
		private String username_a;
		//実際開始日  
		private String startdate_a;
		//実際終了日
		private String enddate_a;
		//作業量
		private String usernum_a;
		//中文名
		private String projecttyuname_a;
		//英文名
		private String projecteiname_a;
		private int radio_a;
		public  String getProjectid_a() {
			return projectid_a; 
		}
		public void SetProjectid_a(String projectid_a) {
			this.projectid_a = projectid_a;
		}
		public  String getPrjmei_a() {
			return prjmei_a; 
		}
		public void setPrjmei_a(String prgmei_a) {
			this.prjmei_a = prgmei_a;
		}
		public  String getUsername_a() {
			return username_a; 
		}
		public void setUsername_a(String username_a) { 
			this.username_a = username_a;
		}
		public  String getKyakuname_a() {
			return kyakuname_a; 
		}
		public void setKyakuname_a(String kyakuname_a) { 
			this.kyakuname_a = kyakuname_a;
		}	
		public  String getStartdate_a() {
			return startdate_a; 
		}
		public void setStartdate_a(String startdate_a) { 
			this.startdate_a = startdate_a;
		}	
		public  String getEnddate_a() {
			return enddate_a; 
		}
		public void setEnddate_a(String enddate_a) { 
			this.enddate_a = enddate_a;
		}	
		public  String getUsernum_a() {
			return usernum_a; 
		}
		public void setUsernum_a(String usernum_a) { 
			this.usernum_a = usernum_a;
		}		
		public  String getProjecttyuname_a() {
			return projecttyuname_a; 
		}
		public void setProjecttyuname_a(String projecttyuname_a) { 
			this.projecttyuname_a = projecttyuname_a;
		}		
		public  String getProjecteiname_a () {
			return projecteiname_a; 
		}
		public void setProjecteiname_a(String projecteiname_a) { 
			this.projecteiname_a = projecteiname_a;
		}		
		public void setRadio_a(int radio_a){ 
		this.radio_a = radio_a;
		}
		public int getRadio_a(){
			return radio_a; 
		}
	}
	//管理者担当プロジェクト一覧のリストの初期化
	public class List_user1{
		private String projectid_b;
		private String prjmei_b;
		private String kyakuname_b;
		private String username_b;
		private String startdate_b;
		private String enddate_b;
		private String usernum_b;
		private String projecttyuname_b;
		private String projecteiname_b;
		private int radio_b;
		public  String getProjectid_b() {
			return projectid_b; 
		}
		public void SetProjectid_b(String projectid_b) { 
			this.projectid_b = projectid_b;
		}		
		public  String getPrjmei_b() {
			return prjmei_b; 
		}
		public void setPrjmei_b(String prgmei_b) { 
			this.prjmei_b = prgmei_b;
		}
		public  String getUsername_b() {
			return username_b; 
		}
		public void setUsername_b(String username_b) { 
			this.username_b = username_b;
		}	
		public  String getKyakuname_b() {
			return kyakuname_b; 
		}
		public void setKyakuname_b(String kyakuname_b) { 
			this.kyakuname_b= kyakuname_b;
		}	
		public  String getStartdate_b() {
			return startdate_b; 
		}
		public void setStartdate_b(String startdate_b) { 
			this.startdate_b = startdate_b;
		}	
		public  String getEnddate_b() {
			return enddate_b; 
		}
		public void setEnddate_b(String enddate_b) { 
			this.enddate_b = enddate_b;
		}	
		public  String getUsernum_b() {
			return usernum_b; 
		}
		public void setUsernum_b(String usernum_b) { 
			this.usernum_b= usernum_b;
		}		
		public  String getProjecttyuname_b() {
			return projecttyuname_b; 
		}
		public void setProjecttyuname_b(String projecttyuname_b) { 
			this.projecttyuname_b = projecttyuname_b;
		}		
		public  String getProjecteiname_b() {
			return projecteiname_b; 
		}
		public void setProjecteiname_b(String projecteiname_b) { 
			this.projecteiname_b= projecteiname_b;
		}		
		public void setRadio_b(int radio_b){ 
			this.radio_b= radio_b;
			}
		public int getRadio_b(){
			return radio_b; 
		}
	}
	//online　リストの初期化
	public class UserDeteil{
		//ユーザー名
		private java.lang.String username_a;
		//online時間
		private java.lang.String intime_a;
		//部門の名
		private java.lang.String busyoname_a;
		//部門のカテゴリー
		private java.lang.String userkindname_a;
		public java.lang.String getUsername_a () {
			return username_a;
		}
		public void setUsername_a (java.lang.String username_a) {
			this.username_a = username_a;
		}
		public java.lang.String getIntime_a () {
			return intime_a;
		}
		public void setIntime_a (java.lang.String intime_a) {
			this.intime_a = intime_a;
		}
		public java.lang.String getBusyoname_a () {
			return busyoname_a;
		}
		public void setBusyoname_a (java.lang.String busyoname_a) {
			this.busyoname_a = busyoname_a;
		}
		public java.lang.String getUserkindname_a () {
			return userkindname_a;
		}
		public void setUserkindname_a (java.lang.String userkindname_a) {
			this.userkindname_a = userkindname_a;
		}
	}	
	public  List<List_user> getPJIN() {
		return PJIN;
	}
	public void setPJIN(List<List_user> PJIN) {
		this.PJIN = PJIN;
	}
	public  List<List_user1> getPJ() {
		return PJ;
	}
	public void setPJ(List<List_user1> PJ) {
		this.PJ = PJ;
	}
	public  List<UserDeteil> getOnlineusers() {
		return onlineusers;
	}
	public void setOnlineusers(List<UserDeteil> onlineusers) {
		this.onlineusers = onlineusers;
	}
	public InputStream getInputStream()throws Exception{
		return new FileInputStream(System.getProperty("catalina.home")+"/../text1.xls" );
	}
	public  String getYear() {
		return year;
	}
	public  void setYear(String year) {
		this.year= year;
	}
	public  String getKey_hidden() {
		return key_hidden;
	}
	public void setKey_hidden(String key_hidden) { 
		this.key_hidden = key_hidden;
	}
	public  String getKey_hidden1() {
		return key_hidden1;
	}
	public void setKey_hidden1(String key_hidden1) { 
		this.key_hidden1 = key_hidden1;
	}
	private ManageUser01Service ms;
	public void setMs(ManageUser01Service ms){
		this.ms=ms;
	}
	public void validate(){
		clearErrorsAndMessages();
	}
	public int getCnt0() {
		return cnt0;
	}
	public void setCnt0(int cnt0) {
		this.cnt0 = cnt0;
	}
	public int getSs() {
		return ss;
	}
	public void setSs(int ss) {
		this.ss = ss;
	}
	public int getPageSize() {
		return pageSize;
	}
	public void setPageSize(int pageSize) {
		this.pageSize = pageSize;
	}
	public int getPageNum() {
		return pageNum;
	}
	public void setPageNum(int pageNum) {
		this.pageNum = pageNum;
	}
	public int getCnt2() {
		return cnt2;
	}
	public void setCnt2(int cnt2) {
		this.cnt2 = cnt2;
	}
	public int getSs2() {
		return ss2;
	}
	public void setSs2(int ss2) {
		this.ss2 = ss2;
	}
	public String getUrl_pre() {
		return url_pre;
	}
	public void setUrl_pre(String url_pre) {
		this.url_pre = url_pre;
	}
	public int getPagenum() {
		return pagenum;
	}
	public void setPagenum(int pagenum) {
		this.pagenum = pagenum;
	}
	public String getUrl_next() {
		return url_next;
	}
	public void setUrl_next(String url_next) {
		this.url_next = url_next;
	}
	public String getUrl() {
		return url;
	}
	public void setUrl(String url) {
		this.url = url;
	}
	public int getPagenum1() {
		return pagenum1;
	}
	public void setPagenum1(int pagenum1) {
		this.pagenum1 = pagenum1;
	}
	public String getUrl_pre1() {
		return url_pre1;
	}
	public void setUrl_pre1(String url_pre1) {
		this.url_pre1 = url_pre1;
	}
	public String getUrl_next1() {
		return url_next1;
	}
	public void setUrl_next1(String url_next1) {
		this.url_next1 = url_next1;
	}
	public int getPageNum1() {
		return pageNum1;
	}
	public void setPageNum1(int pageNum1) {
		this.pageNum1 = pageNum1;
	}

	/**
	 * 機能概要：該当ユーザー所属プロジェクト一覧ページの前一頁を設置する
	 */
	public String searchlist_a() {
	
		System.out.println("=====pagenum="+pagenum);
		List<Pjinfo> result = new ArrayList<Pjinfo>();
		List<Pjpginfo> result0 = new ArrayList<Pjpginfo>();
		System.out.println();
		SimpleUserPara myPara=new SimpleUserPara();
		ParaManager ParaGm =new ParaManager("onlineuser");
		myPara=(SimpleUserPara)ParaGm.getParameter();
		//ログインID
		String userid_page;
		System.out.println("---------");		
		userid_page=myPara.getUsername().toString().trim();
		System.out.println("++++++++++++++"+userid_page);
		//ログインIDによって、Pjpginfoテーブルを探す
		result0=ms.findbyuserid(userid_page);
		List<List_user> temp = new ArrayList<List_user>();
		//cnt0検索数を表す
		cnt0=result0.size();
		System.out.println(cnt0+"cnt0");
		//ss検索数のページ数を表す
		ss=((double)cnt0/(double)pageSize)>(cnt0/pageSize)?cnt0/pageSize+1:cnt0/pageSize;
		
		if (pagenum > 1){
			this.setPagenum(pagenum-1);
		}else if (pagenum == 1){
			this.setPagenum(pagenum +1);
		}

		List<Pjinfo> result3 = new ArrayList<Pjinfo>();
	
		//検索のエントリの空がありません
		if(result0.size()>0){
		
			//PjpginfoテーブルのプログラムIDによって、Pjinfoテーブルを探す
			result = ms.findByid(result0);
			System.out.println("%%%%%%%%%%pageNum="+pageNum);

			result3=ms.findAllByPage1(result0,pageNum, pageSize);
			for(int j =0;j<result3.size();j++){
			if(result3.size()>0){
				List_user one_list=new List_user();
				one_list.SetProjectid_a(result3.get(j).getProjectid());
				one_list.setPrjmei_a(result3.get(j).getPrjmei());
				one_list.setKyakuname_a(result3.get(j).getKyakuname());
				one_list.setStartdate_a(result3.get(j).getStartdate());
				one_list.setEnddate_a(result3.get(j).getEnddate());
				one_list.setUsernum_a(result3.get(j).getUsernum());
				one_list.setProjecttyuname_a(result3.get(j).getProjecttyuname());
				one_list.setProjecteiname_a(result3.get(j).getProjecteiname());
				String username_temp = "";
				List<Usermst> result1= new ArrayList<Usermst>();
				System.out.println(result.get(j).getMuserid().toString());
				//Pjpginfoテーブルの管理者IDによって、Usermstテーブルを探す
				result1=ms.getUserById(result3.get(j).getMuserid().toString().trim());
				if(result1.size()>0){
					username_temp=result1.get(0).getUsername();
				}
				one_list.setUsername_a(username_temp);
				temp.add(one_list);	
				}
			}
		
		}
		System.out.println(temp.size());
		//リストが該当ユーザー所属プロジェクト一覧テーブルを加わる
		this.setPJIN(temp);
		return SUCCESS ;
	}
	/**
	 * 機能概要：該当ユーザー所属プロジェクト一覧ページの次一頁を設置する
	 */
	public String searchlist_aa() {

		
	
		
		List<Pjinfo> result = new ArrayList<Pjinfo>();
		List<Pjpginfo> result0 = new ArrayList<Pjpginfo>();
		System.out.println();
		SimpleUserPara myPara=new SimpleUserPara();
		ParaManager ParaGm =new ParaManager("onlineuser");
		myPara=(SimpleUserPara)ParaGm.getParameter();
		//ログインID
		String userid_page;
		System.out.println("---------");		
		userid_page=myPara.getUsername().toString().trim();
		System.out.println("++++++++++++++"+userid_page);
		//ログインIDによって、Pjpginfoテーブルを探す
		result0=ms.findbyuserid(userid_page);
		
//		System.out.println("++++++++++++++"+result0.get(0).getProjectid());
		List<List_user> temp = new ArrayList<List_user>();
		//cnt0検索数を表す
		cnt0=result0.size();
		System.out.println(cnt0+"cnt0");
		//ss検索数のページ数を表す
		ss=((double)cnt0/(double)pageSize)>(cnt0/pageSize)?cnt0/pageSize+1:cnt0/pageSize;
		System.out.println("**********pagenum---(before+1)="+pagenum);
		
		
		System.out.println("**********pagenum---(after+1)="+pagenum);
		if (pagenum == ss){
			pagenum=pagenum-1;
			this.setPagenum(pagenum);
		
		}else if (pagenum < ss){
			this.setPagenum(pagenum+1);
		}
		System.out.println("**********pagenum---="+pagenum);
		List<Pjinfo> result3 = new ArrayList<Pjinfo>();
	
		//検索のエントリの空がありません
		if(result0.size()>0){
		
			//PjpginfoテーブルのプログラムIDによって、Pjinfoテーブルを探す
			result = ms.findByid(result0);
			System.out.println("%%%%%%%%%%pageNum="+pageNum);
			result3=ms.findAllByPage1(result0, pageNum, pageSize);
			for(int j =0;j<result3.size();j++){
			if(result3.size()>0){
				List_user one_list=new List_user();
				one_list.SetProjectid_a(result3.get(j).getProjectid());
				one_list.setPrjmei_a(result3.get(j).getPrjmei());
				one_list.setKyakuname_a(result3.get(j).getKyakuname());
				one_list.setStartdate_a(result3.get(j).getStartdate());
				one_list.setEnddate_a(result3.get(j).getEnddate());
				one_list.setUsernum_a(result3.get(j).getUsernum());
				one_list.setProjecttyuname_a(result3.get(j).getProjecttyuname());
				one_list.setProjecteiname_a(result3.get(j).getProjecteiname());
				String username_temp = "";
				List<Usermst> result1= new ArrayList<Usermst>();
				System.out.println(result.get(j).getMuserid().toString());
				//Pjpginfoテーブルの管理者IDによって、Usermstテーブルを探す
				result1=ms.getUserById(result3.get(j).getMuserid().toString().trim());
				if(result1.size()>0){
					username_temp=result1.get(0).getUsername();
				}
				one_list.setUsername_a(username_temp);
				temp.add(one_list);	
				}
			}
		
		}
		System.out.println(temp.size());
		//リストが該当ユーザー所属プロジェクト一覧テーブルを加わる
		this.setPJIN(temp);
		return SUCCESS ;
	}
	/**
	 * 機能概要：管理者担当プロジェクト一覧ページの前一頁を設置する
	 */
	public String searchlist_b(){
		List<Pjinfo> result = new ArrayList<Pjinfo>();
		List<Pjinfo> result1 = new ArrayList<Pjinfo>();
		SimpleUserPara myPara=new SimpleUserPara();
		ParaManager ParaGm =new ParaManager("onlineuser");
		myPara=(SimpleUserPara)ParaGm.getParameter();
		//ログインID
		String userid_page;
		System.out.println("---------");		
		userid_page=myPara.getUsername().toString().trim();
		//検索時間が２００８年を設定する
		String page_time = "2008";
		SimpleUserPara myPara1=new SimpleUserPara();
		ParaManager ParaGm1 =new ParaManager("onlineuser");
		myPara=(SimpleUserPara)ParaGm.getParameter();
	    String userid_page1;
	    System.out.println("++++++++++++++");		
	    userid_page1=myPara1.getUsername();
	    //検索時間とログインIDによって、Pjinfoテーブルを探す
	    result = ms.findBytime(page_time,userid_page);
	    List<Pjinfo> result7 = new ArrayList<Pjinfo>();
	    result7=ms.findAllByPage2(userid_page, page_time, pageNum1, pageSize);
		//cnt２検索数を表す
	    cnt2=result.size();
	    System.out.println(cnt2+"++++++++++++++");	
	    //ss2検索数のページ数を表す
		ss2=((double)cnt2/(double)pageSize)>(cnt2/pageSize)?cnt2/pageSize+1:cnt2/pageSize;
		if (pagenum1 > 1){
			this.setPagenum(pagenum1-1);
		}else if (pagenum1 == 1){
			this.setPagenum(pagenum1+1);
		}
	    int cnt = result7.size();
	    List<List_user1> temp1=new ArrayList<List_user1>();
	    for(int i=0;i<cnt;i++){
	    	List_user1 one_list=new List_user1();
	    	one_list.SetProjectid_b(result7.get(i).getProjectid());
	    	one_list.setPrjmei_b(result7.get(i).getPrjmei());
	    	one_list.setKyakuname_b(result7.get(i).getKyakuname());
	    	one_list.setStartdate_b(result7.get(i).getStartdate());
	    	one_list.setEnddate_b(result7.get(i).getEnddate());
	    	one_list.setUsernum_b(result7.get(i).getUsernum());
	    	one_list.setProjecttyuname_b(result7.get(i).getProjecttyuname());
	    	one_list.setProjecteiname_b(result7.get(i).getProjecteiname());
	    	String username_temp1 = "";
	    	List<Usermst> result2= new ArrayList<Usermst>();	
	    	//  //検索時間とログインIDによって、Pjinfoテーブルを探す
	    	result2=ms.getUserById(result7.get(i).getMuserid().toString().trim());
	    	if(result2.size()>0){
	    		username_temp1=result2.get(0).getUsername();
	    	}
	    	one_list.setUsername_b(username_temp1);temp1.add(one_list);
	    }
	    //リストが管理者担当プロジェクト一覧テーブルを加わる
	    
	    System.out.println(temp1.size()+"++++++++++++++");	
	    this.setPJ(temp1);
	    return  INPUT;	
	}
	/**
	 * 機能概要：管理者担当プロジェクト一覧ページの次一頁を設置する
	 */
	public String searchlist_bb(){
		List<Pjinfo> result = new ArrayList<Pjinfo>();
		List<Pjinfo> result1 = new ArrayList<Pjinfo>();
		SimpleUserPara myPara=new SimpleUserPara();
		ParaManager ParaGm =new ParaManager("onlineuser");
		myPara=(SimpleUserPara)ParaGm.getParameter();
		//ログインID
		String userid_page;
		System.out.println("---------");		
		userid_page=myPara.getUsername().toString().trim();
		//検索時間が２００８年を設定する
		String page_time = "2008";
		SimpleUserPara myPara1=new SimpleUserPara();
		ParaManager ParaGm1 =new ParaManager("onlineuser");
		myPara=(SimpleUserPara)ParaGm.getParameter();
	    String userid_page1;
	    System.out.println("++++++++++++++");		
	    userid_page1=myPara1.getUsername();
	    //検索時間とログインIDによって、Pjinfoテーブルを探す
	    result = ms.findBytime(page_time,userid_page);
	    List<Pjinfo> result7 = new ArrayList<Pjinfo>();
	    result7=ms.findAllByPage2(userid_page, page_time, pageNum1, pageSize);
		//cnt２検索数を表す
	    cnt2=result.size();
	    System.out.println(cnt2+"++++++++++++++");	
	    //ss2検索数のページ数を表す
		ss2=((double)cnt2/(double)pageSize)>(cnt2/pageSize)?cnt2/pageSize+1:cnt2/pageSize;
		if (pagenum1 == ss2){
			pagenum1=pagenum1-1;
			this.setPagenum1(pagenum1);
		
		}else if (pagenum1 < ss2){
			this.setPagenum1(pagenum1+1);
		}
	    int cnt = result7.size();
	    List<List_user1> temp1=new ArrayList<List_user1>();
	    for(int i=0;i<cnt;i++){
	    	List_user1 one_list=new List_user1();
	    	one_list.SetProjectid_b(result7.get(i).getProjectid());
	    	one_list.setPrjmei_b(result7.get(i).getPrjmei());
	    	one_list.setKyakuname_b(result7.get(i).getKyakuname());
	    	one_list.setStartdate_b(result7.get(i).getStartdate());
	    	one_list.setEnddate_b(result7.get(i).getEnddate());
	    	one_list.setUsernum_b(result7.get(i).getUsernum());
	    	one_list.setProjecttyuname_b(result7.get(i).getProjecttyuname());
	    	one_list.setProjecteiname_b(result7.get(i).getProjecteiname());
	    	String username_temp1 = "";
	    	List<Usermst> result2= new ArrayList<Usermst>();	
	    	//  //検索時間とログインIDによって、Pjinfoテーブルを探す
	    	result2=ms.getUserById(result7.get(i).getMuserid().toString().trim());
	    	if(result2.size()>0){
	    		username_temp1=result2.get(0).getUsername();
	    	}
	    	one_list.setUsername_b(username_temp1);temp1.add(one_list);
	    }
	    //リストが管理者担当プロジェクト一覧テーブルを加わる
	    
	    System.out.println(temp1.size()+"++++++++++++++");	
	    this.setPJ(temp1);
	    return  INPUT;	
	}
	
	/**
	 * 機能概要：ページの初期化、このユーザーの該当ユーザー所属プロジェクトを検索します
	 */
	public String search() {
		setUrl_pre("searchlist_a");
		setUrl_next("searchlist_aa");
		setUrl("ManageUser01_init");
		List<Pjinfo> result = new ArrayList<Pjinfo>();
		List<Pjpginfo> result0 = new ArrayList<Pjpginfo>();
		System.out.println();
		SimpleUserPara myPara=new SimpleUserPara();
		ParaManager ParaGm =new ParaManager("onlineuser");
		myPara=(SimpleUserPara)ParaGm.getParameter();
		//ログインID
		String userid_page;
		System.out.println("---------");		
		userid_page=myPara.getUsername().toString().trim();
		System.out.println("++++++++++++++"+userid_page);
		//ログインIDによって、Pjpginfoテーブルを探す
		result0=ms.findbyuserid(userid_page);
		List<List_user> temp = new ArrayList<List_user>();
		//cnt0検索数を表す
		cnt0=result0.size();
		System.out.println(cnt0+"cnt0");
		//ss検索数のページ数を表す
		ss=((double)cnt0/(double)pageSize)>(cnt0/pageSize)?cnt0/pageSize+1:cnt0/pageSize;
		List<Pjinfo> result3 = new ArrayList<Pjinfo>();
	
		//検索のエントリの空がありません
		if(result0.size()>0){
		
			//PjpginfoテーブルのプログラムIDによって、Pjinfoテーブルを探す
			result = ms.findByid(result0);
			System.out.println("&&&&&&&&&&&pageNum="+pageNum);
			result3=ms.findAllByPage1(result0, pageNum, pageSize);
			for(int j =0;j<result3.size();j++){
			if(result3.size()>0){
				List_user one_list=new List_user();
				one_list.SetProjectid_a(result3.get(j).getProjectid());
				one_list.setPrjmei_a(result3.get(j).getPrjmei());
				one_list.setKyakuname_a(result3.get(j).getKyakuname());
				one_list.setStartdate_a(result3.get(j).getStartdate());
				one_list.setEnddate_a(result3.get(j).getEnddate());
				one_list.setUsernum_a(result3.get(j).getUsernum());
				one_list.setProjecttyuname_a(result3.get(j).getProjecttyuname());
				one_list.setProjecteiname_a(result3.get(j).getProjecteiname());
				String username_temp = "";
				List<Usermst> result1= new ArrayList<Usermst>();
				System.out.println(result.get(j).getMuserid().toString());
				//Pjpginfoテーブルの管理者IDによって、Usermstテーブルを探す
				result1=ms.getUserById(result3.get(j).getMuserid().toString().trim());
				if(result1.size()>0){
					username_temp=result1.get(0).getUsername();
				}
				one_list.setUsername_a(username_temp);
				temp.add(one_list);	
				}
			}
		
		}
		System.out.println(temp.size());
		//リストが該当ユーザー所属プロジェクト一覧テーブルを加わる
		this.setPJIN(temp);
		return search2() ;
	}

	/**
	 * 機能概要：ページの初期化、このユーザーの2008年参与するすべてのプロジェクトを検索します
	 */
	public String search2(){
		setUrl_pre1("searchlist_b");
		setUrl_next1("searchlist_bb");
		List<Pjinfo> result = new ArrayList<Pjinfo>();
		List<Pjinfo> result1 = new ArrayList<Pjinfo>();
		SimpleUserPara myPara=new SimpleUserPara();
		ParaManager ParaGm =new ParaManager("onlineuser");
		myPara=(SimpleUserPara)ParaGm.getParameter();
		//ログインID
		String userid_page;
		System.out.println("---------");		
		userid_page=myPara.getUsername().toString().trim();
		//検索時間が２００８年を設定する
		String page_time = "2008";
		SimpleUserPara myPara1=new SimpleUserPara();
		ParaManager ParaGm1 =new ParaManager("onlineuser");
		myPara=(SimpleUserPara)ParaGm.getParameter();
	    String userid_page1;
	    System.out.println("++++++++++++++");		
	    userid_page1=myPara1.getUsername();
	    //検索時間とログインIDによって、Pjinfoテーブルを探す
	    result = ms.findBytime(page_time,userid_page);
	    List<Pjinfo> result7 = new ArrayList<Pjinfo>();
	    result7=ms.findAllByPage2(userid_page, page_time, pageNum1, pageSize);
		//cnt２検索数を表す
	    cnt2=result.size();
	    System.out.println(cnt2+"++++++++++++++");	
	    //ss2検索数のページ数を表す
		ss2=((double)cnt2/(double)pageSize)>(cnt2/pageSize)?cnt2/pageSize+1:cnt2/pageSize;
	    int cnt = result7.size();
	    List<List_user1> temp1=new ArrayList<List_user1>();
	    for(int i=0;i<cnt;i++){
	    	List_user1 one_list=new List_user1();
	    	one_list.SetProjectid_b(result7.get(i).getProjectid());
	    	one_list.setPrjmei_b(result7.get(i).getPrjmei());
	    	one_list.setKyakuname_b(result7.get(i).getKyakuname());
	    	one_list.setStartdate_b(result7.get(i).getStartdate());
	    	one_list.setEnddate_b(result7.get(i).getEnddate());
	    	one_list.setUsernum_b(result7.get(i).getUsernum());
	    	one_list.setProjecttyuname_b(result7.get(i).getProjecttyuname());
	    	one_list.setProjecteiname_b(result7.get(i).getProjecteiname());
	    	String username_temp1 = "";
	    	List<Usermst> result2= new ArrayList<Usermst>();	
	    	//  //検索時間とログインIDによって、Pjinfoテーブルを探す
	    	result2=ms.getUserById(result7.get(i).getMuserid().toString().trim());
	    	if(result2.size()>0){
	    		username_temp1=result2.get(0).getUsername();
	    	}
	    	one_list.setUsername_b(username_temp1);temp1.add(one_list);
	    }
	    //リストが管理者担当プロジェクト一覧テーブルを加わる
	    
	    System.out.println(temp1.size()+"++++++++++++++");	
	    this.setPJ(temp1);
	    return  INPUT;	
	}
	
	/**
	 * 機能概要：時間によるとこのユーザー参与するすべてのプロジェクトを検索します
	 */
	public String se() {
		List<Pjinfo> result = new ArrayList<Pjinfo>();
		//ページ選ぶの検索時間を得る
		String page_time = this.getYear().toString().trim();
		System.out.println("%%%%page_time="+page_time);
		SimpleUserPara myPara=new SimpleUserPara();
		ParaManager ParaGm =new ParaManager("onlineuser");
		myPara=(SimpleUserPara)ParaGm.getParameter();
		String userid_page;
		System.out.println("++++++++++++++");		
		userid_page=myPara.getUsername();
		System.out.println("$$$$$userid_page="+userid_page);
		//ページ選ぶの検索時間とログインIDによって、Pjinfoテーブルを探す
		result = ms.findBytime(page_time,userid_page);
		List<Pjinfo> result7 = new ArrayList<Pjinfo>();
		result7=ms.findAllByPage2(userid_page, page_time, pageNum1, pageSize);
		//cnt２検索数を表す
		cnt2=result.size();
		System.out.println(cnt2+"++++++++++++++");	
		//ss２検索数のページ数を表す
		ss2=((double)cnt2/(double)pageSize)>(cnt2/pageSize)?cnt2/pageSize+1:cnt2/pageSize;
		int cnt = result7.size();
		List<List_user1> temp=new ArrayList<List_user1>();
		for(int i=0;i<cnt;i++){
		List_user1 one_list=new List_user1();
		one_list.SetProjectid_b(result.get(i).getProjectid());
		one_list.setPrjmei_b(result.get(i).getPrjmei());
		one_list.setKyakuname_b(result.get(i).getKyakuname());
		one_list.setStartdate_b(result.get(i).getStartdate());
		one_list.setEnddate_b(result.get(i).getEnddate());
		one_list.setUsernum_b(result.get(i).getUsernum());
		one_list.setProjecttyuname_b(result.get(i).getProjecttyuname());
		one_list.setProjecteiname_b(result.get(i).getProjecteiname());
		String username_temp = "";
		List<Usermst> result1= new ArrayList<Usermst>();
		//管理者IDによって、Usermstテーブルを探す
		result1=ms.getUserById(result.get(i).getMuserid().toString().trim());
		if(result1.size()>0){
			username_temp=result1.get(0).getUsername();
		}
		one_list.setUsername_b(username_temp);
		temp.add(one_list);
		}
		 //リストが管理者担当プロジェクト一覧テーブルを加わる
		this.setPJ(temp);
		return INPUT;
	}
	/**
	 * 機能概要：該当ユーザー所属プロジェクトの詳細消息を検索します
	 */
	public String move() {
		System.out.println("projectid="+getKey_hidden());
		ManageUser02Para sendPara=new ManageUser02Para();
		ParaManager ParaGm =new ParaManager("ManageUser02");
		sendPara.setProjectid(getKey_hidden());
		ParaGm.saveParameter(sendPara);
		return SUCCESS;
	}	
	/**
	 * 機能概要：管理者担当プロジェクトの詳細消息を検索します
	 */
	public String detail(){
		System.out.println("projectid="+getKey_hidden1());
		ManageUser03Para sendPara=new ManageUser03Para();
		ParaManager ParaGm =new ParaManager("ManageUser03");
		sendPara.setProjectid(getKey_hidden1());
		ParaGm.saveParameter(sendPara);
		return LOGIN;
	}
	
	/**
	 * 機能概要：該当ユーザー所属プロジェクトのExcelに出力
	 */
	public String outputExcel1() throws Exception {  
		//Eclipseの場所を得る
		System.out.println(System.getProperty("user.dir")); 
		//workspaceのmetadataの場所を得る
		System.out.println(System.getProperty("catalina.base"));  
		//tomcatの場所を得る
		System.out.println(System.getProperty("catalina.home"));  
		String temp1 = System.getProperty("catalina.home")+"/../Book2.xls"; 
		System.out.println(System.getProperty("catalina.home")+"/../Book2.xls"); 
		String temp2 = System.getProperty("catalina.home")+"/../text1.xls"; 
		try{
			//テンプレートの形式を得る
			Workbook wb = Workbook.getWorkbook(new File(temp1));           
			ByteArrayOutputStream targetFile = new ByteArrayOutputStream();
  	   		WritableWorkbook wwb = Workbook.createWorkbook(targetFile, wb);
  	   		//新しいシートを打ち立てる、テンプレートのSheet1を得る
  	   		WritableSheet sheet = wwb.getSheet("Sheet1"); 
  	   		WritableCellFormat wc = new WritableCellFormat(); 
  	   		//中央に組むを設置する  
  	   		wc.setAlignment(Alignment.CENTRE);    
  	   		// セルの背景色を設定する
  	   		wc.setBackground(jxl.format.Colour.GOLD);                    
  	   		//セルの2行、１列の形式を得る
  	   		Cell a=sheet.getCell(1, 2);          
  	   		CellFormat cfot = a.getCellFormat(); 
  	   		Cell b=sheet.getCell(8, 2);
  	   		CellFormat cfo = b.getCellFormat();
  	   		Cell c=sheet.getCell(2, 3);
  	   		CellFormat cf = c.getCellFormat();
  	   		//生成セルを作業テーブルに追加する
  	   		sheet.addCell(new Label(0, 0,"該当ユーザー所属プロジェクト一覧",wc));
  	   		sheet.addCell(new Label(0, 2,"项目编号",cfot));
  	   		sheet.addCell(new Label(1, 2,"日文名称",cfot));
  	   		sheet.addCell(new Label(2, 2,"主管",cfot));
  	   		sheet.addCell(new Label(3, 2,"客户名称",cfot));
  	   		sheet.addCell(new Label(4, 2,"开始",cfot));
  	   		sheet.addCell(new Label(5, 2,"结束",cfot));
  	   		sheet.addCell(new Label(6, 2,"量",cfot));
  	   		sheet.addCell(new Label(7, 2,"中文名称",cfot));
  	   		sheet.addCell(new Label(8, 2,"英文名称",cfo));
  	   		System.out.println("管.xls"); 
  	   		//列の幅を設定する
  	   		sheet.setColumnView(1, 20);                                 
  	   		sheet.setColumnView(3, 20);
  	   		int i = 3; 
  	   		for (int j=0;j<PJIN.size();j++)
  	   		{
  	   			//データを得って、セルを生成する
  	   			System.out.println(PJIN.size());
  	   			System.out.println(PJIN.get(0).getProjectid_a());
  	   			Label  label1=new  Label(0,i,PJIN.get(j).getProjectid_a(),cfot);
  	   			Label  label2=new  Label(1,i,PJIN.get(j).getPrjmei_a(),cfot);
  	   			Label  label3=new  Label(2,i,PJIN.get(j).getUsername_a(),cf);
  	   			Label  label4=new  Label(3,i,PJIN.get(j).getKyakuname_a(),cfot);
  	   			Label  label5=new  Label(4,i,PJIN.get(j).getStartdate_a(),cfot);
  	   			Label  label6=new  Label(5,i,PJIN.get(j).getEnddate_a(),cfot);
  	   			Label  label7=new  Label(6,i,PJIN.get(j).getUsernum_a(),cfot);
  	   			Label  label8=new  Label(7,i,PJIN.get(j).getProjecttyuname_a(),cfot); 
  	   			Label  label9=new  Label(8,i,PJIN.get(j).getProjecteiname_a().trim(),cfo);   
  	   			System.out.println(PJIN.get(0).getPrjmei_a());
  	   			//生成セルを作業テーブルに追加する  
  	   			sheet.addCell(label1);
  	   			sheet.addCell(label2);
  	   			sheet.addCell(label3);
  	   			sheet.addCell(label4);
  	   			sheet.addCell(label5);
  	   			sheet.addCell(label6);
  	   			sheet.addCell(label7); 
  	   			sheet.addCell(label8);
  	   			sheet.addCell(label9);
  	   			i++; 
  	   		}
  	   		wwb.write();
  	   		wwb.close();   
  	   		wb.close();  
  	   		//目標のドキュメントを生成する
  	   		FileOutputStream fos = new FileOutputStream(temp2);     
  	   		targetFile.writeTo(fos);
  	   		targetFile.close();
  	   		}catch (WriteException e) {               
  	   			e.printStackTrace();
  	   		} catch (IOException e) {              
  	   			e.printStackTrace();
  	   		}
  	   		return "output"; 
  	  }

}



	 



