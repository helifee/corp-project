/**
 * プログラム名：ログインプログラム
 * 機能概要：ユーザログイン（ユーザID、パスワード、権限などの判断）
 * 作成者：李化娟
 * 作成日：2008/9/12
 * バージョン：1.0
 * 修正履歴：
 */
package pageAction;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import parameter.OnlineUserPara;
import parameter.SimpleUserPara;
import parameter.UserTrace;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;
import com.parameter.ParaManager;
import com.parameter.UserDeteils;
import services.LoginService; 
import pojo.Busyomst;   
import pojo.Userkindmst;
import pojo.Usermst;

public class LoginAction extends ActionSupport{	
	
	private static final long serialVersionUID = 1L;
	
	//ハンドル名
	private String username;
	
	//ユーザID
	private String userid;
	
	//パスワード
	private String password;
	
	//ユーザーの種類ID
	private String userkindid;
	
	//ユーザの種類名
	private String userkindname;
	
	//ユーザーの部門ID
	private String busyoid;

	//ハンドル名のget方法
	public  String getUsername() {
		return username; 
	}
		
	/**
	 * ハンドル名set方法
	 */
	public void setUsername(String username) { 
		this.username = username;
	}
	
	/**
	 * ユーザIDのget方法
	 */
	public  String getUserid() {
		return userid; 
	}
	
	/**
	 * ユーザIDのset方法
	 */
	public void setUserid(String userid) { 
		this.userid = userid;
	}	

	/**
	 * パスワードのget方法
	 */
	
	public String getPassword() {
		return password; 
	}
	
	/**
	 * パスワードの set方法
	 */
	public void setPassword(String password){
		this.password = password;
	}
	
	
	/**
	 * ユーザ種類名のget方法
	 */
	public  String getUserkindname() {
		return userkindname; 
	}

	/**
	 * ユーザ種類名のset方法
	 */
	public void setUserkindname(String userkindname) { 
		this.userkindname = userkindname;
	}	
	
	/**
	 * ユーザ種類IDのget方法
	 */
	public  String getUserkindid() {
		return userkindid; 
	}
	
	/**
	 * ユーザ種類IDのset方法
	 */
	public void setUserkindid(String userkindid) { 
		this.userkindid = userkindid;
	}	
	
	/**
	 * ユーザの部門IDのget方法
	 */
	public java.lang.String getBusyoid () {
		return busyoid;
	}

	/**
	 * ユーザの部門IDのset方法
	 */
	public void setBusyoid (java.lang.String busyoid) {
		this.busyoid = busyoid;
	}

	
	//List_user型はリストします
	private List<List_user> users;
	
	//ユーザリスト
	public class List_user{
		
		//ハンドル名
		private String username_a;
		
		//ユーザID
		private String userid_a;
		
		//パスワード
		private String password_a;
		
		//ユーザの種類ID
		private String userkindid_a;
		
		//ユーザの種類名
		private String userkindname_a;
		
		//ユーザの部門ID
		private String busyoid_a;
	
		/**
		 * パンドル名のget方法
		 */
		public  String getUsername_a() {
			return username_a; 
		}

		/**
		 * パンドル名のset方法
		 */
		public void setUsername_a(String username_a) { 
			this.username_a = username_a;
		}	
		
		/**
		 * ユーザIDのget方法
		 */
		public  String getUserid_a() {
			return userid_a; 
		}
		
		/**
		 * ユーザIDのset方法
		 */
		public void setUserid_a(String userid_a) { 
			this.userid_a = userid_a;
		}	
		
		/**
		 * パスワードのget方法
		 * @return
		 */
		public  String getPassword_a() {
			return password_a; 
		}
		
		/**
		 * パスワードのset方法
		 * @param password_a
		 */
		public void setPassword_a(String password_a) { 
			this.password_a = password_a;
		}

		/**
		 * ユーザ種類名のget方法
		 * @return
		 */
		public  String getUserkindname_a() {
			return userkindname_a; 
		}

		/**
		 * ユーザ種類名のset方法
		 * @param userkindname_a
		 */
		public void setUserkindname_a(String userkindname_a) { 
			this.userkindname_a = userkindname_a;
		}
		
		/**
		 * ユーザ種類IDのget方法
		 * @return
		 */
		public  String getUserkindid_a() {
			return userkindid_a; 
		}
		
		/**
		 * ユーザ種類IDのset方法
		 * @param userkindid_a
		 */
		public void setUserkindid_a(String userkindid_a) { 
			this.userkindid_a = userkindid_a;
		}
		
		/**
		 * ユーザ部門IDのget方法
		 * @return
		 */
		public java.lang.String getBusyoid_a () {
			return busyoid_a;
		}

		/**
		 * ユーザ部門IDのset方法
		 * @param busyoid_a
		 */
		public void setBusyoid_a (java.lang.String busyoid_a) {
			this.busyoid_a = busyoid_a;
		}
	
	}

	/**
	 * ユーザリストのget方法
	 * @return
	 */
	public  List<List_user> getUsers() {
		return users;
	}
	
	/**
	 * ユーザリストのset方法
	 * @param users
	 */
	public void setUsers(List<List_user> users) {
		this.users = users;
	} 
	
	//ユーザーの登録Service
	private LoginService ms;
	
	/**
	 * ユーザの登録Serviceのset方法
	 * @param ms
	 */
	public void setMs(LoginService ms){
		
		this.ms=ms;
	}
	

	/**
	 * 機能概要：ユーザーは異なった権限によって異なっているページに上陸します
	 * @return
	 * @throws Exception
	 */
	public String login()throws Exception{
		
		//もしユーザーは暇というならば、戻ってページに上陸します、”ハンドル名を入力して下さい”にヒントを与えます
		if(getUsername()==null||getUsername().trim().equals("")){
			addFieldError("username",getText("ハンドル名を入力して下さい！"));
			return INPUT;
		}

		//ユーザ種類IDを取ります
		String page_userkindid = this.getUserkindid().trim();
		
		List<Usermst> result = new ArrayList<Usermst>();
		
		//このユーザーIDを探します
		result = ms.findByid(getUsername());
		
		//もしこのユーザーIDは存在しませんならば、戻ってページに登録します、”ハンドル名は存在しません！”にヒントを与えます
		if(result.size()==0){
			addFieldError("username",getText("ハンドル名は存在しません！"));
			return INPUT;
		}
		
		//パスワードを取ります
		String upassword=result.get(0).getPassword().trim();
		
		//ユーザ種類IDを取ります
		String ukindid=result.get(0).getUserkindid().trim();
		
		//もしパスワードは正しいならば
		if(upassword.equals(getPassword().trim())){
			
			//もしユーザ種類IDは正しいならば
			if(ukindid.equals(page_userkindid)){
				
				UserDeteils onelist= new UserDeteils();
				List<Usermst> result1=new ArrayList<Usermst>();
				List<Busyomst> result2=new ArrayList<Busyomst>();
				List<Userkindmst> result3=new ArrayList<Userkindmst>();
		
				//ページのユーザIDを取ります
				String page_userid=this.getUsername();
				
				//ユーザ名によってゆーざすべての属性を探します
				result1=ms.findByid(page_userid);
				
				//onelistのユーザ名に値を作ります
				onelist.setUsername_a(result1.get(0).getUsername());
					
				//ユーザーの部門IDを通じて(通って)ユーザーの部門名を探します
				result2=ms.findByBusyoid(result1.get(0).getBusyoid());
				
				//onelistのユーザ部門名に値を作ります
				onelist.setBusyoname_a(result2.get(0).getBusyoidname());
				
				//ユーザーの種類IDを通じて(通って)ユーザーの種類名を探します
				result3=ms.findBykindid(result1.get(0).getUserkindid());
				
				//onelistのユーザ種類名のに値を作ります
				onelist.setUserkindname_a(result3.get(0).getUserkindname());
				
				//onelistのユーザIDのに値を作ります
				onelist.setUserid_a(page_userid);
				
				//OnlineUserPara対象を新たに作ります
				OnlineUserPara myPara1=new OnlineUserPara();
				
				//onlineuserというsession空間を新たに作ります
				ParaManager ParaGm1 =new ParaManager("onlineuser1");
				
				myPara1.setUser(onelist);
				
				//myParaをsessionの中に預け入れます
				ParaGm1.saveParameter(myPara1);
				
				
				
				SimpleUserPara myPara=new SimpleUserPara();
				ParaManager ParaGm =new ParaManager("onlineuser");				
				myPara.setUsername(page_userid);
				ParaGm.saveParameter(myPara);
					
				//usertraceをsessionの中に預け入れます
				ActionContext actionContext = ActionContext.getContext();
				Map session = actionContext.getSession(); 
				UserTrace usertrace=new UserTrace();
				usertrace.setUserDeteils(onelist);
				session.put("usertrace", usertrace);
		
				//もしユーザーの種類は1なるならば、一般のユーザーのページに戻ります
				if("1".equals(ukindid)){				
					return "user";						
				}
				
				//もしユーザーの種類は２なるならば、管理者のユーザーのページに戻ります
				else if("2".equals(ukindid)){
					return "guanlizhe";
				}
				
				//もしユーザーの種類は３なるならば、スパーのユーザーのページに戻ります
				else if("3".equals(ukindid)){                                     
					 return "pj";
				}

				//種類が選ぶならばが正しくありませんて、戻ってページに上陸して、”あなたの選択の権限は正しくありません！”にヒントを与えます
				}else{
					addFieldError("userkindid",getText("あなたの選択の権限は正しくありません！"));
					return INPUT;
				}
			}else{
				addFieldError("password",getText("パスワードの誤り！"));
				return INPUT;
			}
	
			return "login.jsp";
		
		
	}
		

}
