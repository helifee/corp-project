package com.jzy.hio.base;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.BeansException;
import org.springframework.beans.factory.config.AutowireCapableBeanFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;

/**
 * <p>
 * application的基类
 * 
 * @author coffee
 * @author coffee2
 * @date 2018年2月8日上午9:25:28
 */
public abstract class BaseApplication implements ApplicationContextAware {

	private static AutowireCapableBeanFactory autowireCapableBeanFactory;

	/**
	 * 保证JedisUtil的加载顺序、优先加载
	 */
	@SuppressWarnings({ "unchecked", "serial", "rawtypes" })
	private static List<Class<?>> beanClassList = new ArrayList() {
		{
			// add(JedisUtil.class);
		}
	};

	// private static List<Class<?>> beanClassList = new ArrayList<>(Arrays.asList(JedisUtil.class));

	/**
	 * 动态设置需要加载的Bean<br>
	 * 顺序加载
	 * 
	 * @param beanClass
	 */
	protected static void setLoadBeanClass(Class<?>... beanClasses) {
		for (Class<?> beanClass : beanClasses) {
			beanClassList.add(beanClass);
		}
	}

	private static ApplicationContext context;
	 
	@Override
	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
		context = applicationContext;
		autowireCapableBeanFactory = applicationContext.getAutowireCapableBeanFactory();
		if (beanClassList != null) {
			for (Class<?> beanClass : beanClassList) {
				autowireCapableBeanFactory.createBean(beanClass);
			}
		}
	}

	/**
	 * <p>
	 * 提供创建context之外的Bean的能力<br>
	 * 
	 * 
	 * @author coffee
	 * @date 2018年2月8日上午9:36:09
	 * 
	 * @return
	 */
	public static AutowireCapableBeanFactory getBeanFactory() {
		return autowireCapableBeanFactory;
	}

	public static ApplicationContext getContext() {
		return context;
	}
	
}