package com.jzy.hio.aop;

import java.lang.reflect.Parameter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.aspectj.lang.reflect.MethodSignature;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.annotation.Order;
import org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.jzy.hio.annotation.DataSource;
import com.jzy.hio.base.Base;
import com.jzy.hio.base.BaseConstants;
import com.jzy.hio.database.DataSourceContextHolder;
import com.jzy.hio.exception.HioHttpRequestDuplicateException;
import com.jzy.hio.utils.OrderValue;

/**
 * spring的事务aop与数据源切换aop的关系<br/>
 *
 * <pre>
 * 假设  @Pointcut("execution(* com.jzy.hio..service.*.*(..) )")拦截所有service的方法
 * spring事务默认会优先执行,即打开数据库连接---查找数据源
 * 执行  {@link AbstractRoutingDataSource#determineTargetDataSource}
 *        {@linkDynamicDataSource#determineCurrentLookupKey()}
 *  此时如果数据源没设置的话就会出错，所以数据源切换需要优先执行
 * </pre>
 *
 * @author chc<br />
 *         2018年6月11日
 */
@Aspect
@Order(OrderValue.PU_SYNC)
@Configuration
public class PuSyncAop extends Base {

	private Logger logger = LoggerFactory.getLogger(PuSyncAop.class);

	private final String pointcut = "execution(* com.jzy.hio..puInterface.controller.*.*(..) )";

	public PuSyncAop() {

	}

	@Pointcut(pointcut)
	public void excudeService() {

	}

	@Before("excudeService()")
	public void before(JoinPoint thisJoinPoint) {
		logger.info("pu验证接口参数 {} ", thisJoinPoint.toString());
		for (Object arg : thisJoinPoint.getArgs()) {
			String argsJson = Base.obj2json(arg);
			logger.info("请求参数>> {}", argsJson);
			Map<String,Object> map = Base.json2map(argsJson);
			if (Base.isNotEquals(map.get("puEncryption"), BaseConstants.PU_ENCRYPTION)) {
				throw new HioHttpRequestDuplicateException("您没有权限");
			}
		}
	}

}
