package com.jzy.hio.database;

import javax.ws.rs.core.Link;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.jzy.hio.base.BaseConstants;

/**
 * 
 * @author wt.coffee
 * @date 2018年5月9日下午4:03:38
 */
public class DataSourceContextHolder {

	private static Logger log = LoggerFactory.getLogger(DataSourceContextHolder.class);
	private static final ThreadLocal<String> contextHolder = new ThreadLocal<String>();

	/**
	 * 用{@link #setDataSourceType(String, Object)}代替
	 * 
	 * @param dataSourceType
	 */
	@Deprecated
	public static void setDataSourceType(String dataSourceType) {
		contextHolder.set(dataSourceType);
		log.info("set {}", dataSourceType);
	}

	@Deprecated
	public static String getDataSourceType() {
		String dataSourceType = contextHolder.get();
		log.info("get {}", dataSourceType);
		if (dataSourceType == null) {
			dataSourceType = BaseConstants.DATASOURCE_DEFAULT;
		}
		return dataSourceType;
	}

	/**
	 * 
	 * @param dataSourceType
	 * @param source
	 *            调用该方法的对象或者方法、默认传入this
	 */
	public static void setDataSourceType(String dataSourceType, Object source) {
		contextHolder.set(dataSourceType);
		log.info("set {}, {}", dataSourceType, source);
	}

	/**
	 * 
	 * @param dataSourceType
	 * @param thiz
	 *            调用的地方
	 */
	public static String getDataSourceType(Object source) {
		String dataSourceType = contextHolder.get();
		log.info("get {} {}", dataSourceType, source);
		if (dataSourceType == null) {
			dataSourceType = BaseConstants.DATASOURCE_DEFAULT;
		}
		return dataSourceType;
	}

	public static void clearDataSourceType() {
		contextHolder.remove();
	}

}
