package com.jzy.hio.base.redis.impl;

import java.util.Collection;
import java.util.HashMap;

import javax.persistence.Table;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jzy.hio.base.entity.BaseEntity2;
import com.jzy.hio.base.redis.RedisClient;
import com.jzy.hio.base.redis.RedisService;
import com.jzy.tools.data.JacksonUtils;

/**
 * 
 * @author wt.coffee<br/>
 *         2018年3月7日下午3:00:25
 */
@Service
public class RedisServiceImpl implements RedisService {

	private static HashMap<String, String> map = new HashMap<>();

	@Autowired
	private RedisClient redisClient;

	@Override
	public void put(String key, Object obj) {
		if (obj instanceof String) {
			redisClient.set(key, (String) obj);
		} else {
			String json = JacksonUtils.toJson(obj);
			redisClient.set(key, json);
		}
	}

	@Override
	public void put(BaseEntity2 entity) {
		String tableName = getTableName(entity.getClass());
		String key = tableName + "_" + entity.getId();
		String json = JacksonUtils.toJson(entity);
		redisClient.set(key, json);
	}

	@Override
	public void delete(Class<?> entityClass) {
		String tableName = getTableName(entityClass);
		Collection<String> keys = redisClient.keys(tableName + "*");
		redisClient.delete(keys);
	}

	private String getTableName(Class<?> entityClass) {
		String tableName = map.get(entityClass.getName());
		if (tableName == null) {
			tableName = entityClass.getAnnotation(Table.class).name();
			map.put(entityClass.getName(), tableName);
		}
		return tableName;
	}
}
