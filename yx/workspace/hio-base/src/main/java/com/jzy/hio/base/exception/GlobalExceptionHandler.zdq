package com.jzy.hio.base.exception;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.NoHandlerFoundException;

import com.jzy.hio.base.springmvc.ApiResponse;

/**
 * 全局的的异常拦截器
 * 
 * @author wt.coffee<br/>
 *         2018年3月5日下午2:42:09
 */
@ControllerAdvice
public class GlobalExceptionHandler {

	Logger logger = LoggerFactory.getLogger(this.getClass());

	/**
	 * 处理Exception异常
	 *
	 * @param e
	 * @return
	 */
	@ExceptionHandler(Exception.class)
	@ResponseBody
	public Object dealException(Exception e) {
		e.printStackTrace();
		ApiResponse<?> resp = new ApiResponse<>();
		if (e instanceof NoHandlerFoundException) {
			resp.setCode(HttpStatus.NOT_FOUND.value());
		} else {
			resp.setCode(HttpStatus.INTERNAL_SERVER_ERROR.value());
		}
		if (e.getMessage() == null) {
			if (e.getCause() != null) {
				resp.setMessage(e.getCause().getMessage());
			} else {
				// 忽略
			}
		} else {
			resp.setMessage(e.getMessage());
		}
		return resp;
	}

}
