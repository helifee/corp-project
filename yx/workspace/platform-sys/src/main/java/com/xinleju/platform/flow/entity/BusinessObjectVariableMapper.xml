<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.flow.entity.BusinessObjectVariable">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.flow.entity.BusinessObjectVariable">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.flow.entity.BusinessObjectVariable">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.flow.entity.BusinessObjectVariable">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	
	<!-- 此方法还需要在继续加查询的限制条件 -->
	<select id="queryBusiVariableListByTemlateId" 
		resultType="com.xinleju.platform.flow.entity.BusinessObjectVariable" 
	    parameterType="java.lang.String">
		SELECT bov.id, bov.code, bov.name FROM pt_flow_business_object_variable bov 
		WHERE bov.business_object_id = #{businessObjectId} AND bov.delflag=0
	</select>
	
	<select id="queryVariableUsedInExpressionBy" parameterType="java.lang.String" resultType="com.xinleju.platform.flow.entity.BusinessObjectVariable">
		SELECT
			code, name, type
		FROM
			pt_flow_business_object_variable
		WHERE
			business_object_id = #{businessObjectId}
		AND delflag = 0
	</select>
	
	<update id="deleteVariableListByObjectId">
		UPDATE pt_flow_business_object_variable SET delflag = 1, create_date=now()
		WHERE business_object_id = #{businessObjectId} AND delflag = 0
	</update>
	
	<!-- 查询所有父节点 -->
	<select id="selectAllParentId" parameterType="map" resultType="String">
	    SELECT DISTINCT r.parent_id from pt_flow_business_object_variable r 
		WHERE r.parent_id is not null and r.parent_id !=''  and r.delflag=0
		<if test="appId !=null">
			and r.app_id=#{appId} 
		</if>
	</select>
	
	<!-- 获取列表根据条件查询 -->
	<select id="queryListByCondition" resultType="com.xinleju.platform.flow.dto.BusinessObjectVariableDto" parameterType="java.util.HashMap">
		SELECT
			r.sort, r.id,
			r.code AS code,
			r.name AS name,
			r.type AS type,
			r.relation_code AS relationCode,
			r.business_object_id AS businessObjectId,
			  
			r.key_name AS keyName,
			r.parent_id AS parentId,
			r.system_app_id AS systemAppId,
			r.for_flow_branch AS forFlowBranch,
			r.for_finance AS forFinance,
			
			r.comment AS comment,
			r.prefix_id AS prefixId,
			r.prefix_name AS prefixName,
			r.prefix_sort AS prefixSort,
			
			rr.name AS parentName,
			obj.name AS  busiObjectName
		FROM  
			pt_flow_business_object_variable r
		LEFT JOIN pt_flow_business_object_variable rr ON r.parent_id = rr.id
		LEFT JOIN pt_flow_business_object obj ON r.business_object_id = obj.id 
		WHERE r.delflag = 0 and obj.delflag = 0 
		
		<if test="businessObjectId != null and businessObjectId != ''">
			and r.business_object_id = #{businessObjectId}
		</if>
		<if test="businessObjectCode != null and businessObjectCode != ''">
			and obj.code = #{businessObjectCode}
		</if>
		<if test="id != null and id != ''">
			and r.id = #{id}
		</if>
		 order by r.sort
	</select>
	
	<select id="getVariableTreeByBusiObject" resultType="com.xinleju.platform.flow.dto.BusinessObjectVariableDto">
		SELECT bo.id, bo.parent_id AS parentId, bo.name, bo.code, 'busiVariable' AS type 
 		FROM pt_flow_business_object_variable bo 
		WHERE bo.business_object_id = #{businessObjectId} and bo.delflag = 0 
		ORDER BY bo.name  
	</select>
	
	<update id="updateObjectPrefixIdByParamMap" parameterType="java.util.HashMap">
		update pt_flow_business_object_variable 
		set prefix_id = replace(prefix_id, #{oldPrefixId}, #{newPrefixId}),
		prefix_sort = replace(prefix_sort, #{oldPrefixSort}, #{newPrefixSort}) 
		where prefix_id LIKE concat(#{oldPrefixId}, '%') 
	</update>
	
	<select id="queryRelatedCountByPrefixMap" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		SELECT count(t.id) countSum FROM pt_flow_fl t WHERE t.delflag=0  
		<if test="businessObjectId != null and businessObjectId != '-1'">
			AND t.business_object_id = #{businessObjectId}
		</if>
		
		<if test="variableIds != null and variableIds != '-1'">
			AND 
			<foreach item="item" index="index" collection="variableIds" open="(" separator=" or" close=")">  
	              t.flow_title like CONCAT('%@', #{item} ,'@%') 
	        </foreach>
		</if>
		
	</select>
	
	<select id="queryRelatedVariableIdsByPrefixMap" resultType="java.lang.String" parameterType="java.util.HashMap">
	   SELECT t.code FROM pt_flow_business_object_variable t  
	   WHERE t.delflag=0 AND t.prefix_id like CONCAT(#{prefixId},'%')
	</select>
	
	<update id="deleteObjectAndChileren" parameterType="java.util.HashMap">
		update pt_flow_business_object_variable 
		set delflag=1, update_date=now(), 
		update_person_id=#{updatePersonId}, 
		update_person_name=#{updatePersonName}
		where delflag=0 and prefix_id like concat('%',#{prefixId},'%') 
	</update>
	
	
	<select id="queryListByParamMap" resultType="com.xinleju.platform.flow.dto.BusinessObjectVariableDto" parameterType="java.util.HashMap">
		SELECT r.id, r.code AS code, r.name AS name, r.type AS type, r.relation_code AS relationCode,
		r.business_object_id AS businessObjectId, r.key_name AS keyName, r.parent_id AS parentId,
		r.system_app_id AS systemAppId, r.for_flow_branch AS forFlowBranch, r.for_finance AS forFinance,
		r.comment AS comment, r.prefix_id AS prefixId, r.prefix_name AS prefixName, r.prefix_sort AS prefixSort
		FROM pt_flow_business_object_variable r where 1=1 AND r.delflag = 0 
		<if test="variableIds != null and variableIds != '-1'">
			AND r.id in
			<foreach item="item" index="index" collection="variableIds" open="(" separator="," close=")">  
	            #{item}
	        </foreach>
		</if>
		
		<if test="variableNames != null and variableNames != '-1'">
			AND r.name in
			<foreach item="item" index="index" collection="variableNames" open="(" separator="," close=")">  
	            #{item}
	        </foreach>
		</if>
		
		<if test="businessObjectId != null and businessObjectId != '-1'">
			AND r.business_object_id = #{businessObjectId}
		</if>
		
		<if test="codeText != null and codeText != '-1'">
			AND r.code LIKE  concat('%', #{codeText} ,'%') 
		</if>
		
	</select>
	
	
	<select id="queryBusinessObjectVariableListByParam" resultType="com.xinleju.platform.flow.entity.BusinessObjectVariable" parameterType="java.util.HashMap">
		SELECT
			r.sort, r.id,
			r.code AS code,
			r.name AS name,
			r.type AS type,
			r.relation_code AS relationCode,
			r.business_object_id AS businessObjectId,
			  
			r.key_name AS keyName,
			r.parent_id AS parentId,
			r.system_app_id AS systemAppId,
			r.for_flow_branch AS forFlowBranch,
			r.for_finance AS forFinance,
			
			r.comment AS comment,
			r.prefix_id AS prefixId,
			r.prefix_name AS prefixName,
			r.prefix_sort AS prefixSort
		    FROM pt_flow_business_object_variable r where delflag = 0
		    
		 <if test="businessObjectId != null and businessObjectId != '' and businessObjectId != '-1'">
			AND r.business_object_id = #{businessObjectId}  
		</if>   
		<if test="parentId != null and parentId != '' and parentId != '-1'">
			AND r.parent_id = #{parentId}  
		</if>
		<if test='parentId=="-1"'>  
	    	AND (r.parent_id is null or r.parent_id ='' )
		</if>
		order by r.sort
	</select>
	
	<update id="updateAllNodes" parameterType="java.util.HashMap">
       UPDATE pt_flow_business_object_variable t
	   SET t.sort = REPLACE( t.sort, #{oldSort}, #{newSort} )
	   WHERE t.delflag =0 AND t.prefix_id LIKE CONCAT('%', #{prefixId}, '%')
	</update>
	
	<update id="updateAllNodesSortAndPrefix" parameterType="java.util.HashMap">
       UPDATE pt_flow_business_object_variable t
	   SET t.sort = REPLACE(t.sort, #{oldSort}, #{newSort}),
       t.prefix_id = REPLACE(t.sort, #{oldPrefixId}, #{newPrefixId})
       WHERE t.delflag=0 AND t.prefix_id LIKE CONCAT('%',#{oldPrefixId},'%')  
	</update>
	
	
	<select id="queryToFixDataList" resultType="com.xinleju.platform.flow.entity.BusinessObjectVariable" parameterType="java.util.HashMap">
		SELECT r.sort, r.id, r.code AS code, r.name AS name, r.type AS type,
			r.business_object_id AS businessObjectId
		    FROM pt_flow_business_object_variable r
		    where  r.delflag=0  and (r.sort is null or r.sort='' )
	    	order by r.business_object_id, sort desc
	</select>
	
	<update id="doFixDataUpdate" parameterType="java.util.HashMap">
       UPDATE pt_flow_business_object_variable t SET t.sort = #{sort} 
	   WHERE t.business_object_id = #{businessObjectId} AND t.id=#{dataId}
	</update>
	
</mapper>