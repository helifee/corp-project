package com.jzy.tools.login;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.jzy.hio.base.utils.SecurityUserBeanInfo;
import com.jzy.hio.base.utils.SecurityUserBeanRelationInfo;
import com.jzy.hio.redis.RedisClient;
import com.jzy.tools.data.JacksonUtils;

/**
 * controller中引用 {@link com.jzy.hio.base.utils.LoginUtils}
 * 
 * @author coffee<br/>
 *         2018年1月23日下午5:57:12
 */
@Component
public class LoginUtils {

	
	public static RedisClient redisClient;

	public static SecurityUserBeanInfo getSecurityUserBeanInfo() {
		SecurityUserBeanInfo securityUserBeanInfo = new SecurityUserBeanInfo();
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		HttpSession session = request.getSession();
//		System.out.println(session.getId());
		securityUserBeanInfo = (SecurityUserBeanInfo) session.getAttribute(SecurityUserBeanInfo.TOKEN_TEND_USER);
		// 代码待优化、解决网关访问无法获取登录属性的问题
		if (securityUserBeanInfo == null && redisClient != null) {
			String json = redisClient.get(SecurityUserBeanInfo.TOKEN_TEND_USER);
			securityUserBeanInfo = JacksonUtils.fromJson(json, SecurityUserBeanInfo.class);
			if (securityUserBeanInfo != null) {
				session.setAttribute(SecurityUserBeanInfo.TOKEN_TEND_USER, securityUserBeanInfo);
			}
		}
		return securityUserBeanInfo;
	}

	public static SecurityUserBeanRelationInfo getSecurityUserBeanRelationInfo() {
		SecurityUserBeanRelationInfo securityUserBeanRelationInfo = new SecurityUserBeanRelationInfo();
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		HttpSession session = request.getSession();
		securityUserBeanRelationInfo = (SecurityUserBeanRelationInfo) session.getAttribute(SecurityUserBeanRelationInfo.TOKEN_TEND_USER_MENU);
		if (securityUserBeanRelationInfo == null && redisClient != null) {
			String json = redisClient.get(SecurityUserBeanRelationInfo.TOKEN_TEND_USER_MENU);
			securityUserBeanRelationInfo = JacksonUtils.fromJson(json, SecurityUserBeanRelationInfo.class);
			if (securityUserBeanRelationInfo != null) {
				session.setAttribute(SecurityUserBeanRelationInfo.TOKEN_TEND_USER_MENU, securityUserBeanRelationInfo);
			}
		}
		return securityUserBeanRelationInfo;
	}

	public static String getSessionId() {
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		HttpSession session = request.getSession();
		return session.getId();
	}

	@Autowired
	public void setRedisClient(RedisClient redisClient) {
		LoginUtils.redisClient = redisClient;
	}
	
	
}
