package com.jzy.hio.sys.user.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.jzy.hio.base.Base;
import com.jzy.hio.base.BaseConstants;
import com.jzy.hio.entity.OaSysExternalContact;
import com.jzy.hio.entity.OaSysUser;
import com.jzy.hio.entity.OaSysUserPosition;
import lombok.Data;

/**
 * 组织机构人员
 *
 * @author wt.coffee
 * @date 2018年3月23日下午4:14:22
 */
@Data
public class ImUserDto {
	@JsonProperty("sid")
	private String id;
	private String imUserId;
	private String name;
	private String nickname; // 昵称
	private String nameSimple; //
	private String nameFull; //

	private String aliasName; // 备注
	private String aliasNameFull; // 备注拼音全拼
	private String aliasNameSimple;// 备注拼音简拼

	private String resourceImgUrl;// 头像原图
	// private String imgUrl;//缩略图
	private String mobile;
	private String workStatus;// 用户状态、0未激活、1在职、2离职
	private String status; //
	private String sex;// 0女、1男
	private String pinyinFull;//
	private String pinyinFirst;
	private Integer sort;
	private String email;

	private String positionId;
	private String position;// 职务名称
	private String organizationId;// 部门id
	@JsonProperty("isDefault")
	private boolean isDefault;//是否是主职务
	private String tendId;// 租户id

	/**
	 * {@link BaseConstants#MYSQL_ORGANIZATION_TYPE_USER}
	 */
	private String type;
	private String createTime;
	private String updateTime;
	/**
	 * 外部联系人类型--我负责的-我管理的-与我无关的<br>
	 * {@link BaseConstants#MYSQL_ORGANIZATION_TYPE_EXTERNAL_MANAGER}
	 */
	@JsonInclude(JsonInclude.Include.NON_NULL)
	private String externalType;
	/**
	 * 外部联系人负责人ID
	 */
	@JsonInclude(JsonInclude.Include.NON_NULL)
	private String externalManagerId;
	/**
	 * 外部联系人负责人名称
	 */
	@JsonInclude(JsonInclude.Include.NON_NULL)
	private String externalManagerName;
	/**
	 * 外部联系人创建者姓名
	 */
	@JsonInclude(JsonInclude.Include.NON_NULL)
	private String externalCreatorName;
	/**
	 * 外部联系人创建者ID
	 */
	@JsonInclude(JsonInclude.Include.NON_NULL)
	private String externalCreatorId;
	/**
	 * 外部联系人所在的公司
	 */
	@JsonInclude(JsonInclude.Include.NON_NULL)
	private String externalCompany;

	public ImUserDto() {
		super();
	}

	public ImUserDto(String tendId, OaSysUser user, OaSysUserPosition position) {
		this.tendId = tendId;
		this.id = user.getId();
		this.imUserId = user.getImUserId();
		this.name = user.getRealName();
		this.mobile = user.getMobile();
		this.workStatus = user.getWorkStatus();
		// 先过滤人是否删除，如果删除那么所有下部门的标识status都为删除标志；人未删除，那么需要判断sys_user_position是否是删除标志。如果是删除则该人在部门下也是删除的。
		this.status = (user.getDelflag() == null || user.getDelflag() == 0)
				? (position.getDelflag() == 0 ? BaseConstants.MYSQL_ORGANIZATION_USER_STATUS_NORMAL : BaseConstants.MYSQL_ORGANIZATION_USER_STATUS_DELETED)
				: BaseConstants.MYSQL_ORGANIZATION_USER_STATUS_DELETED;
		this.sex = Base.getStr(user.getIsMale());
		this.pinyinFull = user.getPinyinFull();
		this.pinyinFirst = user.getPinyinFirstLetter();
		this.sort = user.getSort() == null ? 1 : user.getSort();
		this.positionId = position.getId();
		this.position = position.getPosition();
		this.email = user.getEmail() == null ? "" : user.getEmail();
		this.organizationId = position.getOrganizationId();
		this.type = BaseConstants.MYSQL_ORGANIZATION_TYPE_USER;
		this.isDefault = Base.isNotEmpty(position.getIsDefault())&&(position.getIsDefault() == 1 );
		if (user.getCreateDate() != null) {
			this.createTime = Base.getStr(user.getCreateDate().getTime());
		}
		if (user.getUpdateDate() != null) {
			this.updateTime = Base.getStr(user.getUpdateDate().getTime());
		}
	}

	public ImUserDto(String tendId, OaSysExternalContact contact) {
		this.tendId = tendId;
		this.id = contact.getId();
		this.name = contact.getName();
		this.mobile = contact.getMobile();
		this.workStatus = contact.getStatus();
		this.status = (contact.getDelflag() == null || contact.getDelflag() == 0) ? //
				BaseConstants.MYSQL_ORGANIZATION_USER_STATUS_NORMAL : BaseConstants.MYSQL_ORGANIZATION_USER_STATUS_DELETED;
		this.sex = Base.getStr(contact.getIsMale());
		this.pinyinFull = contact.getPinyinFull();
		this.pinyinFirst = contact.getPinyinFirstLetter();
		this.imUserId = contact.getImUserId();
		this.position = contact.getPosition();
		this.positionId = -1 + "";
		this.email = contact.getEmail() == null ? "" : contact.getEmail();
		this.organizationId = BaseConstants.MYSQL_ORGANIZATION_ID_EXTERNAL;
		this.type = BaseConstants.MYSQL_ORGANIZATION_TYPE_EXTERNAL;
		this.createTime = Base.getStr(contact.getCreateDate().getTime());
		this.updateTime = Base.getStr(contact.getUpdateDate().getTime());
		this.position = contact.getPosition() == null ? "" : contact.getPosition();
		this.sort = 1 ;
	}

}
