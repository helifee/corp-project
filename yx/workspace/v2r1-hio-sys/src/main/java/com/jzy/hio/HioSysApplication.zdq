package com.jzy.hio;

import java.net.InetAddress;

import org.springframework.amqp.rabbit.connection.ConnectionFactory;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;
import org.springframework.boot.Banner.Mode;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
import org.springframework.cloud.netflix.feign.EnableFeignClients;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.EnableAspectJAutoProxy;
import org.springframework.context.annotation.Import;
import org.springframework.scheduling.annotation.EnableAsync;
import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;

import com.jzy.hio.base.BaseApplication;
import com.jzy.hio.database.DataSourceRegister;

/**
 * 
 * @author wt.coffee
 * @date 2018年4月19日上午10:21:41
 */
@Import({ DataSourceRegister.class })
@EnableEurekaClient
@EnableFeignClients // 开启feign注解扫描、可以调用feign服务
@EnableCircuitBreaker
@SpringBootApplication
@EnableAspectJAutoProxy(proxyTargetClass = true, exposeProxy = true)
@EnableRedisHttpSession
@EnableAsync
public class HioSysApplication extends BaseApplication {

	public static void main(String[] args) {
		// 动态设置需要加载的bean
		// BaseApplication.setLoadBeanClass(RedisSyncInit.class, //
		// RedisAop.class, PermissionAop.class);
		try {
			String address = InetAddress.getLocalHost().getHostAddress();
			if ("10.17.8.244".equals(address)) {
				args = new String[] { "--spring.profiles.active=dev" };
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		SpringApplication application = new SpringApplication(HioSysApplication.class);
		application.setBannerMode(Mode.OFF);
		application.run(args);
		// new SpringApplicationBuilder(HioPortalApplication.class).web(true).run(args);
		System.out.println("【【【【【【 HioSysApplication-v2微服务 】】】】】】已启动.");
	}

	// @Bean
	// public RedisAop createRedisAop() {
	// return new RedisAop();
	// }

	// @Bean
	// @Order(OrderValue.AOP_PREMISSION)
	// public PermissionAop createPremissionAop() {
	// return new PermissionAop();
	// }

	@Bean
	public RabbitTemplate rabbitTemplate(ConnectionFactory connectionFactory) {
		RabbitTemplate template = new RabbitTemplate(connectionFactory);
		template.setMessageConverter(new Jackson2JsonMessageConverter());
		return template;
	}

}
