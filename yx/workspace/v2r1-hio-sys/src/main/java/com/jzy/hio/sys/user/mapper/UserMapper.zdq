package com.jzy.hio.sys.user.mapper;

import com.jzy.hio.base.mapper.BaseMapper;
import com.jzy.hio.entity.OaSysUser;
import com.jzy.hio.sys.organization.dto.FlowUserDto;
import com.jzy.hio.sys.organization.dto.SysCurrencyDto;
import com.jzy.hio.sys.user.dto.OAUserDto;
import com.jzy.hio.sys.user.dto.UserDto;
import com.jzy.hio.sys.user.dto.UserStatusDto;
import org.apache.ibatis.annotations.MapKey;
import org.apache.ibatis.annotations.Param;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Map;

public interface UserMapper extends BaseMapper<OaSysUser> {

    /**
     * 按照组织id查询 对应的角色人员
     *
     * @param organizationId 如果传入null、代表查询全部
     * @return
     */
    List<UserDto> queryList(@Param("organizationId") String organizationId,@Param("workStatus") Integer workStatus,@Param("isMainOrg") boolean isMainOrg);

    int queryUserByMobile(@Param("mobile") String userMobile, @Param("isDeleted") boolean isDeleted);

    /**
     * 获取最大的排序
     *
     * @return
     */
    int getMaxSort();

    /**
     * 通过姓名模糊查询
     *
     * @param queryCondition
     * @return
     */
    List<OAUserDto> queryUserListByName(@Param("queryCondition") String queryCondition);

    /**
     * 批量更新
     *
     * @param ids
     * @param nowDate
     */
    void updateBatchUpdateTime(@Param("userIds") HashSet ids, @Param("now") Date nowDate);

    /**
     * 通过名字精确查询
     * @param userNames
     * @return
     */
    @MapKey("userName")
    Map<String,FlowUserDto> queryUserMapByName(@Param("userNames") List<String> userNames);

    /**
     * 通过imUserId查询 用户ID
     * @param imUserId
     * @return
     */
    String queryOaUserIdByImId(@Param("imUserId") String imUserId);

    /**
     *
     * @param ids
     * @return
     */
    @MapKey("id")
    Map<String,UserStatusDto> queryUserStatusByIds(@Param("ids") List<String> ids);

    /**
     *
     * @param sysUserIds
     * @return
     */
    String queryUserIsNormal(@Param("ids") List<String> sysUserIds);

    List<UserDto> queryOrganizationAndExternalUsers(@Param("workStatus") Integer workStatus,@Param("userIds") List<String> userIds);

    @MapKey("imUserId")
    Map<String,SysCurrencyDto> queryUsersByIMUserIds(@Param("imUserIds") List<String> imUserIds);
}
