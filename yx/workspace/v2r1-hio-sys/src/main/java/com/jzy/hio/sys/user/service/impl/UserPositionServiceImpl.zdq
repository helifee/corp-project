package com.jzy.hio.sys.user.service.impl;


import com.jzy.hio.annotation.DataSource;
import com.jzy.hio.base.BaseConstants;
import com.jzy.hio.base.service.impl.BaseSysServiceImpl;
import com.jzy.hio.entity.OaSysUserPosition;
import com.jzy.hio.sys.user.mapper.UserPositionMapper;
import com.jzy.hio.sys.user.service.UserPositionService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import tk.mybatis.mapper.entity.Example;

import java.util.Date;
import java.util.HashSet;

/**
 * 用户职务
 *
 * @author wt.coffee<br>
 * 2018年3月12日下午1:58:11
 */
@Service
public class UserPositionServiceImpl extends BaseSysServiceImpl<OaSysUserPosition> implements UserPositionService {

    @Autowired
    private UserPositionMapper userPositionMapper;

    @Override
    public int save(@DataSource String tendId, OaSysUserPosition userPosition) {
        return super.save(userPosition);
    }

    @Override
    public boolean queryPositionIsExits(@DataSource String tendId, String organizationId, String userId, String excludeId) {
        Example example = new Example(OaSysUserPosition.class);
        Example.Criteria criteria = example.createCriteria();
        criteria.andEqualTo("organizationId", organizationId);
        criteria.andEqualTo("userId", userId);
        criteria.andEqualTo("delflag", 0);
        if (excludeId != null) {
            criteria.andNotEqualTo("id", excludeId);
        }
        int count = userPositionMapper.selectCountByExample(example);
        return count > 0 ? true : false;
    }

    @Override
    public void updateBatchUpdateTime(@DataSource String tendId, HashSet<String> userPositionsSet, Date date) {
        userPositionMapper.updateBatchUpdateTime(userPositionsSet, date);
    }

    @Override
    public OaSysUserPosition queryPositionByUserIdAndOrganizationId(@DataSource String tendId, String userId, String organizationId) {
        OaSysUserPosition oaSysUserPosition = new OaSysUserPosition();
        oaSysUserPosition.setOrganizationId(organizationId);
        oaSysUserPosition.setUserId(userId);
        oaSysUserPosition.setDelflag(BaseConstants.MYSQL_DELFLAG_NORMAL);
        return userPositionMapper.selectOne(oaSysUserPosition);
    }

    @Override
    public OaSysUserPosition queryMainUserPosition(@DataSource String tendId, String userId) {
        OaSysUserPosition oaSysUserPosition = new OaSysUserPosition();
        oaSysUserPosition.setUserId(userId);
        oaSysUserPosition.setDelflag(BaseConstants.MYSQL_DELFLAG_NORMAL);
        oaSysUserPosition.setIsDefault(BaseConstants.MYSQL_STATUS_USABLE);
        return userPositionMapper.selectOne(oaSysUserPosition);
    }
}
