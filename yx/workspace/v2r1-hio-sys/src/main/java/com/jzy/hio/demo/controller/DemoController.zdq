package com.jzy.hio.demo.controller;

import com.jzy.hio.Version;
import com.jzy.hio.base.anno.TODO;
import com.jzy.hio.base.controller.BaseSysController;
import com.jzy.hio.demo.entity.DemoEntity;
import com.jzy.hio.demo.service.DemoService;
import com.jzy.hio.entity.OaSysUser;
import com.jzy.hio.exception.HioException;
import com.jzy.hio.feign.PlatformFeignService;
import com.jzy.hio.feign.SysFeignService;
import com.jzy.hio.feign.SysRoleFeignService;
import com.jzy.hio.springmvc.ApiResponse;
import com.jzy.hio.sys.app.service.AppUserService;
import com.jzy.hio.sys.redis.SysRedis;
import com.jzy.hio.sys.role.service.RoleUserService;
import com.jzy.hio.sys.user.mapper.UserMapper;
import com.jzy.hio.sys.user.service.UserService;
import com.jzy.hio.utils.JacksonUtils;
import com.jzy.hio.utils.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 
 * @author wt.coffee
 * @date 2018年4月19日上午9:14:02
 */
@RestController
@RequestMapping("demo")
public class DemoController extends BaseSysController {

	@Autowired
	private DemoService demoService;
	@Autowired
	private SysRedis sysRedis;
	@Autowired
	private SysFeignService sysFeignService;
	@Autowired
	private SysRoleFeignService sysRoleFeignService;
	@Autowired
	private PlatformFeignService platformFeignService;

	public static void main(String[] args) {
		for (int i = 0; i < 10; i++) {
			new Runnable() {
				@Override
				public void run() {
					RestTemplate restTemplate = new RestTemplate();
					String url = "http://localhost:9090/sys/user/position/update";
					HttpHeaders headers = new HttpHeaders();
					headers.setContentType(MediaType.APPLICATION_JSON_UTF8);
					headers.add("Authorization", "Bearer 1f4c3b61-e306-4962-9735-a8a230bb755d");
					headers.add("Content-Type", "application/json");
					Map postParameters = new HashMap();
					postParameters.put("organizationId", "1001");
					postParameters.put("postName", "创建者");
					postParameters.put("userPositionId", "1001");
					postParameters.put("userId", "");
					String body = JacksonUtils.toJson(postParameters);
					HttpEntity<String> entity = new HttpEntity<String>(body, headers);
					ResponseEntity<String> response = restTemplate.exchange(url, HttpMethod.POST, entity, String.class);
					System.out.println("返回结果-------" + response.getBody());
				}
			}.run();
		}
	}

	@TODO("该方法有xxx问题")
	@PostMapping("save")
	public Object save(@RequestBody DemoEntity demo1) {
		// ValidatorUtils.validateEntity(demo);
		// for (int i = 0; i < 1; i++) {
		// final int ii = i;
		// Thread thread = new Thread(new Runnable() {
		// @Override
		// public void run() {
		// for (int j = 0; j < 1; j++) {
		// DemoEntity demo = new DemoEntity();
		// demo.setId(generatePk());
		// demo.setName(Thread.currentThread().getName() + " " + ii + "" + j);
		// demo.setCreateDate(new Date());
		// demo.setUpdateDate(new Date());
		// demo.setCreatePersonId("");
		// demo.setUpdatePersonId("");
		// demo.setIndate(new Date());
		// try {
		// demoService.save(demo);
		// } catch (Exception e) {
		// e.printStackTrace();
		// }
		// }
		// }
		// });
		// thread.start();
		// }
		return "hello world";
	}

	@com.jzy.hio.base.anno.Deprecated(Version.V001)
	public Object update(@PathVariable("id") String id, @RequestBody String paramMap) {
		DemoEntity demo = new DemoEntity();
		demo.setId("2");
		demo.setName("update-coffee");
		demoService.update(demo);
		return "hello world";
	}

	@Autowired
	private RoleUserService roleUserService;
	@Autowired
	private AppUserService appUserService;

	@RequestMapping("demo")
	public Object demo() {

		String tendId = "test_test014";
		String userId = "100030";
		appUserService.saveOnCreate(tendId, userId,false);

		// roleUserService.saveReplaceRoleUser("10132", "1002");

		// String userId = "10106";
		// ApiFeignResponse<List<RoleButtonHRDto>> resp = sysRoleFeignService.queryRoleButton(tendId, userId, "office_manager");

		Map<String, Object> paramMap = new HashMap<>();
		paramMap.put("province", "110000");
		// ApiFeignResponse<List<RegionDto>> resp = platformFeignService.queryNode(paramMap);
		// System.out.println(resp);

		// ApiFeignResponse<Page<RoleDto>> resp = sysRoleFeignService.queryRole(null);
		// System.out.println(resp);
		//
		// String userIds = "10106,10111";
		// ApiFeignResponse<OrganizationDto> resp = sysFeignService.queryOrganizationTreeByUserIds(tendId, userIds);
		// System.out.println(resp);
		// return resp;
		// LoginUser user = getLoginUser();
		// // System.out.println(1/0);
		// return "hello world " + user.getUserId();
		return null;
	}

	@Autowired
	private UserMapper userMapper;
	/**
	 * 直接返回异常
	 * 
	 * @return
	 */
	@RequestMapping("demo2")
	public Object demo2() {
		String tendId = "hio_tend116";

		OaSysUser oaSysUser = userService.getObjectById(tendId, "1001");
		logger.info("first query user:{}"+JacksonUtils.toJson(oaSysUser));
		oaSysUser.setCreatePersonName("kimchou---modify"+new Date());
		userMapper.updateByPrimaryKey(oaSysUser);

		OaSysUser objectById = userService.getObjectById(tendId, "1001");
		logger.info("second query user:{}"+JacksonUtils.toJson(oaSysUser));
		return objectById;
	}

	@RequestMapping("demo3")
	public Object demo3() {
		return HioException.sysPremission;
		// return new HioException("111", 111);
	}

	@RequestMapping("demo4")
	public Page<?> demo4() {
		ApiResponse<List<String>> result = new ApiResponse<>();
		// result.setResult();
		// return result;

		return new Page<>();
	}

	@Autowired
	private UserService userService;

	@RequestMapping("demo5")
	public ApiResponse<List<String>> demo5() {
		String tendId = "hio_tend11";
		for (int i = 0; i < 9; i++) {
			List<OaSysUser> userList = userService.queryListByTendId(tendId, false);
			System.out.println(userList);
		}

		return null;
	}
}
