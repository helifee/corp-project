package com.jzy.hio.sys.user.param;

import com.jzy.hio.BaseTendParam;

import java.util.List;

/**
 * OA通过用户ID、角色ID、组织ID查询所有对应的人员 Name、Id--去重
 *
 * @author kimchou
 * @create 2018-04-02 10:15
 **/
public class OAUserParam extends BaseTendParam {
    /**
     * 角色id的集合
     */
    private List<String> roleIds;
    /**
     * 组织id的集合
     */
    private List<String> organizationIds;
    /**
     * 用户id的集合
     */
    private List<String> userIds;
    /**
     *  0 表示查询正常状态人员(不包含删除以及离职的)；1表示查询包含离职人员但不包含删除的；2表示查询包含删除但不包含离职的；3表示不需要状态（包含删除以及离职的）
     */
    private int status;
    /**
     * 查询部门下的用户==》是否需要包含部门的子部门的所有用户==》默认false
     */
    private boolean containsChildOrgUser;
    /**
     * 查询用户的部门==》是否需要包含部门的所有父部门==》默认false
     */
    private boolean containsParentUserOrg;


    public List<String> getRoleIds() {
        return roleIds;
    }

    public void setRoleIds(List<String> roleIds) {
        this.roleIds = roleIds;
    }

    public List<String> getOrganizationIds() {
        return organizationIds;
    }

    public void setOrganizationIds(List<String> organizationIds) {
        this.organizationIds = organizationIds;
    }

    public List<String> getUserIds() {
        return userIds;
    }

    public void setUserIds(List<String> userIds) {
        this.userIds = userIds;
    }

    public int getStatus() {
        return status;
    }

    public void setStatus(int status) {
        this.status = status;
    }


    public boolean isContainsChildOrgUser() {
        return containsChildOrgUser;
    }

    public void setContainsChildOrgUser(boolean containsChildOrgUser) {
        this.containsChildOrgUser = containsChildOrgUser;
    }

    public boolean isContainsParentUserOrg() {
        return containsParentUserOrg;
    }

    public void setContainsParentUserOrg(boolean containsParentUserOrg) {
        this.containsParentUserOrg = containsParentUserOrg;
    }
}
