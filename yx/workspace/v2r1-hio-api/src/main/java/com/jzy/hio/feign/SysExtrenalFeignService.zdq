package com.jzy.hio.feign;

import com.jzy.hio.ApiFeignResponse;
import com.jzy.hio.sys.external.dto.ExternalContactDto;
import com.jzy.hio.sys.external.dto.UserIsNormalDto;
import com.jzy.hio.sys.external.param.ExternalContactRelationParam;
import com.jzy.hio.sys.external.param.UserIsNormalParam;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;

/**
 * 外部联系人
 *
 * @author wt.coffee
 * @date 2018年4月25日下午5:17:58
 */
@FeignClient(name = "v2r1-sys-service/sys")
public interface SysExtrenalFeignService {

    /**
     * 查询详情
     * @param sid
     * @return
     */
    @RequestMapping(value = "externalContact/queryDetail", method = RequestMethod.POST)
    ApiFeignResponse<ExternalContactDto> queryDetail(@RequestParam("sid") String sid);

    /**
     * 查询外部联系人详情 通过状态
     *
     * @param sid
     * @param status 0-查询未删除的；1-可以查询删除的
     * @return
     */
    @RequestMapping(value = "externalContact/queryDetailByStatus", method = RequestMethod.POST)
    ApiFeignResponse<ExternalContactDto> queryDetailByStatus(@RequestParam("tendId") String tendId,@RequestParam("sid") String sid,@RequestParam("status") int status);

    /**
     * 查询用户Ids
     * @param userIds
     * @return
     */
    @RequestMapping(value = "externalContact/queryExternalUsersByUserIds", method = RequestMethod.POST)
    ApiFeignResponse<List<ExternalContactDto>> queryExternalUsersByUserIds(@RequestParam("userIds") List<String> userIds);

    /**
     * 查询用户Ids 通过状态
     * @param userIds
     * @param status 0-查询未删除的；1-可以查询删除的
     * @return
     */
    @RequestMapping(value = "externalContact/queryExternalUsersByUserIdsAndStatus", method = RequestMethod.POST)
    ApiFeignResponse<List<ExternalContactDto>> queryExternalUsersByUserIdsAndStatus(@RequestParam("tendId") String tendId,@RequestParam("userIds") List<String> userIds,@RequestParam("status") int status);

    /**
     * 查询外部联系人和当前人是否有关系
     * @param apiParam
     * @return  true 表示有关系，false表示无关联关系
     */
    @RequestMapping(value = "externalContact/queryExternalIsHaveRelation", method = RequestMethod.POST)
    ApiFeignResponse<Boolean> queryExternalIsHaveRelation(@RequestBody ExternalContactRelationParam apiParam);


    /**
     * 查询外部联系人和当前人是否有关系
     * @param apiParam
     * @return
     */
    @RequestMapping(value = "externalContact/queryUserIsNormal", method = RequestMethod.POST)
    ApiFeignResponse<UserIsNormalDto> queryUserIsNormal(@RequestBody UserIsNormalParam apiParam);
}
