function mxGraphAbstractHierarchyCell(){this.x=[];this.y=[];this.temp=[]}mxGraphAbstractHierarchyCell.prototype.maxRank=-1;mxGraphAbstractHierarchyCell.prototype.minRank=-1;mxGraphAbstractHierarchyCell.prototype.x=null;mxGraphAbstractHierarchyCell.prototype.y=null;mxGraphAbstractHierarchyCell.prototype.width=0;mxGraphAbstractHierarchyCell.prototype.height=0;mxGraphAbstractHierarchyCell.prototype.nextLayerConnectedCells=null;mxGraphAbstractHierarchyCell.prototype.previousLayerConnectedCells=null;mxGraphAbstractHierarchyCell.prototype.temp=null;mxGraphAbstractHierarchyCell.prototype.getNextLayerConnectedCells=function(A){return null};mxGraphAbstractHierarchyCell.prototype.getPreviousLayerConnectedCells=function(A){return null};mxGraphAbstractHierarchyCell.prototype.isEdge=function(){return false};mxGraphAbstractHierarchyCell.prototype.isVertex=function(){return false};mxGraphAbstractHierarchyCell.prototype.getGeneralPurposeVariable=function(A){return null};mxGraphAbstractHierarchyCell.prototype.setGeneralPurposeVariable=function(A,B){return null};mxGraphAbstractHierarchyCell.prototype.setX=function(A,B){if(this.isVertex()){this.x[0]=B}else{if(this.isEdge()){this.x[A-this.minRank-1]=B}}};mxGraphAbstractHierarchyCell.prototype.getX=function(A){if(this.isVertex()){return this.x[0]}else{if(this.isEdge()){return this.x[A-this.minRank-1]}}return 0};mxGraphAbstractHierarchyCell.prototype.setY=function(A,B){if(this.isVertex()){this.y[0]=B}else{if(this.isEdge()){this.y[A-this.minRank-1]=B}}};function mxGraphHierarchyNode(A){mxGraphAbstractHierarchyCell.apply(this,arguments);this.cell=A;this.id=mxObjectIdentity.get(A);this.connectsAsTarget=[];this.connectsAsSource=[]}mxGraphHierarchyNode.prototype=new mxGraphAbstractHierarchyCell();mxGraphHierarchyNode.prototype.constructor=mxGraphHierarchyNode;mxGraphHierarchyNode.prototype.cell=null;mxGraphHierarchyNode.prototype.id=null;mxGraphHierarchyNode.prototype.connectsAsTarget=null;mxGraphHierarchyNode.prototype.connectsAsSource=null;mxGraphHierarchyNode.prototype.hashCode=false;mxGraphHierarchyNode.prototype.getRankValue=function(A){return this.maxRank};mxGraphHierarchyNode.prototype.getNextLayerConnectedCells=function(C){if(this.nextLayerConnectedCells==null){this.nextLayerConnectedCells=[];this.nextLayerConnectedCells[0]=[];for(var A=0;A<this.connectsAsTarget.length;A++){var B=this.connectsAsTarget[A];if(B.maxRank==-1||B.maxRank==C+1){this.nextLayerConnectedCells[0].push(B.source)}else{this.nextLayerConnectedCells[0].push(B)}}}return this.nextLayerConnectedCells[0]};mxGraphHierarchyNode.prototype.getPreviousLayerConnectedCells=function(C){if(this.previousLayerConnectedCells==null){this.previousLayerConnectedCells=[];this.previousLayerConnectedCells[0]=[];for(var A=0;A<this.connectsAsSource.length;A++){var B=this.connectsAsSource[A];if(B.minRank==-1||B.minRank==C-1){this.previousLayerConnectedCells[0].push(B.target)}else{this.previousLayerConnectedCells[0].push(B)}}}return this.previousLayerConnectedCells[0]};mxGraphHierarchyNode.prototype.isVertex=function(){return true};mxGraphHierarchyNode.prototype.getGeneralPurposeVariable=function(A){return this.temp[0]};mxGraphHierarchyNode.prototype.setGeneralPurposeVariable=function(A,B){this.temp[0]=B};mxGraphHierarchyNode.prototype.isAncestor=function(A){if(A!=null&&this.hashCode!=null&&A.hashCode!=null&&this.hashCode.length<A.hashCode.length){if(this.hashCode==A.hashCode){return true}if(this.hashCode==null||this.hashCode==null){return false}for(var B=0;B<this.hashCode.length;B++){if(this.hashCode[B]!=A.hashCode[B]){return false}}return true}return false};mxGraphHierarchyNode.prototype.getCoreCell=function(){return this.cell};function mxGraphHierarchyEdge(B){mxGraphAbstractHierarchyCell.apply(this,arguments);this.edges=B;this.ids=[];for(var A=0;A<B.length;A++){this.ids.push(mxObjectIdentity.get(B[A]))}}mxGraphHierarchyEdge.prototype=new mxGraphAbstractHierarchyCell();mxGraphHierarchyEdge.prototype.constructor=mxGraphHierarchyEdge;mxGraphHierarchyEdge.prototype.edges=null;mxGraphHierarchyEdge.prototype.ids=null;mxGraphHierarchyEdge.prototype.source=null;mxGraphHierarchyEdge.prototype.target=null;mxGraphHierarchyEdge.prototype.isReversed=false;mxGraphHierarchyEdge.prototype.invert=function(A){var B=this.source;this.source=this.target;this.target=B;this.isReversed=!this.isReversed};mxGraphHierarchyEdge.prototype.getNextLayerConnectedCells=function(B){if(this.nextLayerConnectedCells==null){this.nextLayerConnectedCells=[];for(var A=0;A<this.temp.length;A++){this.nextLayerConnectedCells[A]=[];if(A==this.temp.length-1){this.nextLayerConnectedCells[A].push(this.source)}else{this.nextLayerConnectedCells[A].push(this)}}}return this.nextLayerConnectedCells[B-this.minRank-1]};mxGraphHierarchyEdge.prototype.getPreviousLayerConnectedCells=function(B){if(this.previousLayerConnectedCells==null){this.previousLayerConnectedCells=[];for(var A=0;A<this.temp.length;A++){this.previousLayerConnectedCells[A]=[];if(A==0){this.previousLayerConnectedCells[A].push(this.target)}else{this.previousLayerConnectedCells[A].push(this)}}}return this.previousLayerConnectedCells[B-this.minRank-1]};mxGraphHierarchyEdge.prototype.isEdge=function(){return true};mxGraphHierarchyEdge.prototype.getGeneralPurposeVariable=function(A){return this.temp[A-this.minRank-1]};mxGraphHierarchyEdge.prototype.setGeneralPurposeVariable=function(A,B){this.temp[A-this.minRank-1]=B};mxGraphHierarchyEdge.prototype.getCoreCell=function(){if(this.edges!=null&&this.edges.length>0){return this.edges[0]}return null};function mxGraphHierarchyModel(H,I,N,M,O){var C=H.getGraph();this.tightenToSource=O;this.roots=N;this.parent=M;this.vertexMapper=new mxDictionary();this.edgeMapper=new mxDictionary();this.maxRank=0;var L=[];if(I==null){I=this.graph.getChildVertices(M)}this.maxRank=this.SOURCESCANSTARTRANK;this.createInternalCells(H,I,L);for(var G=0;G<I.length;G++){var B=L[G].connectsAsSource;for(var E=0;E<B.length;E++){var A=B[E];var F=A.edges;if(F!=null&&F.length>0){var D=F[0];var K=H.getVisibleTerminal(D,false);var J=this.vertexMapper.get(K);if(L[G]==J){K=H.getVisibleTerminal(D,true);J=this.vertexMapper.get(K)}if(J!=null&&L[G]!=J){A.target=J;if(J.connectsAsTarget.length==0){J.connectsAsTarget=[]}if(mxUtils.indexOf(J.connectsAsTarget,A)<0){J.connectsAsTarget.push(A)}}}}L[G].temp[0]=1}}mxGraphHierarchyModel.prototype.maxRank=null;mxGraphHierarchyModel.prototype.vertexMapper=null;mxGraphHierarchyModel.prototype.edgeMapper=null;mxGraphHierarchyModel.prototype.ranks=null;mxGraphHierarchyModel.prototype.roots=null;mxGraphHierarchyModel.prototype.parent=null;mxGraphHierarchyModel.prototype.dfsCount=0;mxGraphHierarchyModel.prototype.SOURCESCANSTARTRANK=100000000;mxGraphHierarchyModel.prototype.tightenToSource=false;mxGraphHierarchyModel.prototype.createInternalCells=function(G,H,L){var B=G.getGraph();for(var F=0;F<H.length;F++){L[F]=new mxGraphHierarchyNode(H[F]);this.vertexMapper.put(H[F],L[F]);var E=G.getEdges(H[F]);L[F].connectsAsSource=[];for(var D=0;D<E.length;D++){var M=G.getVisibleTerminal(E[D],false);if(M!=H[F]&&G.graph.model.isVertex(M)&&!G.isVertexIgnored(M)){var C=G.getEdgesBetween(H[F],M,false);var K=G.getEdgesBetween(H[F],M,true);if(C!=null&&C.length>0&&this.edgeMapper.get(C[0])==null&&K.length*2>=C.length){var A=new mxGraphHierarchyEdge(C);for(var J=0;J<C.length;J++){var I=C[J];this.edgeMapper.put(I,A);B.resetEdge(I);if(G.disableEdgeStyle){G.setEdgeStyleEnabled(I,false);G.setOrthogonalEdge(I,true)}}A.source=L[F];if(mxUtils.indexOf(L[F].connectsAsSource,A)<0){L[F].connectsAsSource.push(A)}}}}L[F].temp[0]=0}};mxGraphHierarchyModel.prototype.initialRank=function(){var L=[];if(this.roots!=null){for(var G=0;G<this.roots.length;G++){var A=this.vertexMapper.get(this.roots[G]);if(A!=null){L.push(A)}}}var E=this.vertexMapper.getValues();for(var G=0;G<E.length;G++){E[G].temp[0]=-1}var D=L.slice();while(L.length>0){var A=L[0];var H;var N;H=A.connectsAsTarget;N=A.connectsAsSource;var M=true;var F=this.SOURCESCANSTARTRANK;for(var G=0;G<H.length;G++){var B=H[G];if(B.temp[0]==5270620){var K=B.source;F=Math.min(F,K.temp[0]-1)}else{M=false;break}}if(M){A.temp[0]=F;this.maxRank=Math.min(this.maxRank,F);if(N!=null){for(var G=0;G<N.length;G++){var B=N[G];B.temp[0]=5270620;var K=B.target;if(K.temp[0]==-1){L.push(K);K.temp[0]=-2}}}L.shift()}else{var I=L.shift();L.push(A);if(I==A&&L.length==1){break}}}for(var G=0;G<E.length;G++){E[G].temp[0]-=this.maxRank}for(var G=0;G<D.length;G++){var A=D[G];var C=0;var H=A.connectsAsSource;for(var J=0;J<H.length;J++){var B=H[J];var K=B.target;A.temp[0]=Math.max(C,K.temp[0]+1);C=A.temp[0]}}this.maxRank=this.SOURCESCANSTARTRANK-this.maxRank};mxGraphHierarchyModel.prototype.fixRanks=function(){var E=[];this.ranks=[];for(var B=0;B<this.maxRank+1;B++){E[B]=[];this.ranks[B]=E[B]}var A=null;if(this.roots!=null){var F=this.roots;A=[];for(var B=0;B<F.length;B++){var D=F[B];var C=this.vertexMapper.get(D);A[B]=C}}this.visit(function(M,J,I,K,G){if(G==0&&J.maxRank<0&&J.minRank<0){E[J.temp[0]].push(J);J.maxRank=J.temp[0];J.minRank=J.temp[0];J.temp[0]=E[J.maxRank].length-1}if(M!=null&&I!=null){var L=M.maxRank-J.maxRank;if(L>1){I.maxRank=M.maxRank;I.minRank=J.maxRank;I.temp=[];I.x=[];I.y=[];for(var H=I.minRank+1;H<I.maxRank;H++){E[H].push(I);I.setGeneralPurposeVariable(H,E[H].length-1)}}}},A,false,null)};mxGraphHierarchyModel.prototype.visit=function(C,D,F,E){if(D!=null){for(var B=0;B<D.length;B++){var A=D[B];if(A!=null){if(E==null){E=new Object()}if(F){A.hashCode=[];A.hashCode[0]=this.dfsCount;A.hashCode[1]=B;this.extendedDfs(null,A,null,C,E,A.hashCode,B,0)}else{this.dfs(null,A,null,C,E,0)}}}this.dfsCount++}};mxGraphHierarchyModel.prototype.dfs=function(J,G,K,C,F,I){if(G!=null){var D=G.id;if(F[D]==null){F[D]=G;C(J,G,K,I,0);var A=G.connectsAsSource.slice();for(var H=0;H<A.length;H++){var B=A[H];var E=B.target;this.dfs(G,E,B,C,F,I+1)}}else{C(J,G,K,I,1)}}};mxGraphHierarchyModel.prototype.extendedDfs=function(L,F,N,C,I,H,K,M){if(F!=null){if(L!=null){if(F.hashCode==null||F.hashCode[0]!=L.hashCode[0]){var A=L.hashCode.length+1;F.hashCode=L.hashCode.slice();F.hashCode[A-1]=K}}var D=F.id;if(I[D]==null){I[D]=F;C(L,F,N,M,0);var G=F.connectsAsSource.slice();for(var J=0;J<G.length;J++){var B=G[J];var E=B.target;this.extendedDfs(F,E,B,C,I,F.hashCode,J,M+1)}}else{C(L,F,N,M,1)}}};function mxSwimlaneModel(H,I,N,M,O){var C=H.getGraph();this.tightenToSource=O;this.roots=N;this.parent=M;this.vertexMapper=new mxDictionary();this.edgeMapper=new mxDictionary();this.maxRank=0;var L=[];if(I==null){I=this.graph.getChildVertices(M)}this.maxRank=this.SOURCESCANSTARTRANK;this.createInternalCells(H,I,L);for(var G=0;G<I.length;G++){var B=L[G].connectsAsSource;for(var E=0;E<B.length;E++){var A=B[E];var F=A.edges;if(F!=null&&F.length>0){var D=F[0];var K=H.getVisibleTerminal(D,false);var J=this.vertexMapper.get(K);if(L[G]==J){K=H.getVisibleTerminal(D,true);J=this.vertexMapper.get(K)}if(J!=null&&L[G]!=J){A.target=J;if(J.connectsAsTarget.length==0){J.connectsAsTarget=[]}if(mxUtils.indexOf(J.connectsAsTarget,A)<0){J.connectsAsTarget.push(A)}}}}L[G].temp[0]=1}}mxSwimlaneModel.prototype.maxRank=null;mxSwimlaneModel.prototype.vertexMapper=null;mxSwimlaneModel.prototype.edgeMapper=null;mxSwimlaneModel.prototype.ranks=null;mxSwimlaneModel.prototype.roots=null;mxSwimlaneModel.prototype.parent=null;mxSwimlaneModel.prototype.dfsCount=0;mxSwimlaneModel.prototype.SOURCESCANSTARTRANK=100000000;mxGraphHierarchyModel.prototype.tightenToSource=false;mxSwimlaneModel.prototype.ranksPerGroup=null;mxSwimlaneModel.prototype.createInternalCells=function(H,I,N){var B=H.getGraph();var O=H.swimlanes;for(var G=0;G<I.length;G++){N[G]=new mxGraphHierarchyNode(I[G]);this.vertexMapper.put(I[G],N[G]);N[G].swimlaneIndex=-1;for(var D=0;D<O.length;D++){if(B.model.getParent(I[G])==O[D]){N[G].swimlaneIndex=D;break}}var F=H.getEdges(I[G]);N[G].connectsAsSource=[];for(var E=0;E<F.length;E++){var L=H.getVisibleTerminal(F[E],false);if(L!=I[G]&&H.graph.model.isVertex(L)&&!H.isVertexIgnored(L)){var C=H.getEdgesBetween(I[G],L,false);var M=H.getEdgesBetween(I[G],L,true);if(C!=null&&C.length>0&&this.edgeMapper.get(C[0])==null&&M.length*2>=C.length){var A=new mxGraphHierarchyEdge(C);for(var K=0;K<C.length;K++){var J=C[K];this.edgeMapper.put(J,A);B.resetEdge(J);if(H.disableEdgeStyle){H.setEdgeStyleEnabled(J,false);H.setOrthogonalEdge(J,true)}}A.source=N[G];if(mxUtils.indexOf(N[G].connectsAsSource,A)<0){N[G].connectsAsSource.push(A)}}}}N[G].temp[0]=0}};mxSwimlaneModel.prototype.initialRank=function(){this.ranksPerGroup=[];var M=[];var J=new Object();if(this.roots!=null){for(var K=0;K<this.roots.length;K++){var A=this.vertexMapper.get(this.roots[K]);this.maxChainDfs(null,A,null,J,0);if(A!=null){M.push(A)}}}var E=[];var H=[];for(var K=this.ranksPerGroup.length-1;K>=0;K--){if(K==this.ranksPerGroup.length-1){E[K]=0}else{E[K]=H[K+1]+1}H[K]=E[K]+this.ranksPerGroup[K]}this.maxRank=H[0];var F=this.vertexMapper.getValues();for(var K=0;K<F.length;K++){F[K].temp[0]=-1}var D=M.slice();while(M.length>0){var A=M[0];var I;var O;I=A.connectsAsTarget;O=A.connectsAsSource;var N=true;var G=H[0];for(var K=0;K<I.length;K++){var B=I[K];if(B.temp[0]==5270620){var L=B.source;G=Math.min(G,L.temp[0]-1)}else{N=false;break}}if(N){if(G>H[A.swimlaneIndex]){G=H[A.swimlaneIndex]}A.temp[0]=G;if(O!=null){for(var K=0;K<O.length;K++){var B=O[K];B.temp[0]=5270620;var L=B.target;if(L.temp[0]==-1){M.push(L);L.temp[0]=-2}}}M.shift()}else{var C=M.shift();M.push(A);if(C==A&&M.length==1){break}}}};mxSwimlaneModel.prototype.maxChainDfs=function(J,E,K,G,I){if(E!=null){var F=mxCellPath.create(E.cell);if(G[F]==null){G[F]=E;var C=E.swimlaneIndex;if(this.ranksPerGroup[C]==null||this.ranksPerGroup[C]<I){this.ranksPerGroup[C]=I}var A=E.connectsAsSource.slice();for(var H=0;H<A.length;H++){var B=A[H];var D=B.target;if(E.swimlaneIndex<D.swimlaneIndex){this.maxChainDfs(E,D,B,mxUtils.clone(G,null,true),0)}else{if(E.swimlaneIndex==D.swimlaneIndex){this.maxChainDfs(E,D,B,mxUtils.clone(G,null,true),I+1)}}}}}};mxSwimlaneModel.prototype.fixRanks=function(){var E=[];this.ranks=[];for(var B=0;B<this.maxRank+1;B++){E[B]=[];this.ranks[B]=E[B]}var A=null;if(this.roots!=null){var F=this.roots;A=[];for(var B=0;B<F.length;B++){var D=F[B];var C=this.vertexMapper.get(D);A[B]=C}}this.visit(function(M,J,I,K,G){if(G==0&&J.maxRank<0&&J.minRank<0){E[J.temp[0]].push(J);J.maxRank=J.temp[0];J.minRank=J.temp[0];J.temp[0]=E[J.maxRank].length-1}if(M!=null&&I!=null){var L=M.maxRank-J.maxRank;if(L>1){I.maxRank=M.maxRank;I.minRank=J.maxRank;I.temp=[];I.x=[];I.y=[];for(var H=I.minRank+1;H<I.maxRank;H++){E[H].push(I);I.setGeneralPurposeVariable(H,E[H].length-1)}}}},A,false,null)};mxSwimlaneModel.prototype.visit=function(C,D,F,E){if(D!=null){for(var B=0;B<D.length;B++){var A=D[B];if(A!=null){if(E==null){E=new Object()}if(F){A.hashCode=[];A.hashCode[0]=this.dfsCount;A.hashCode[1]=B;this.extendedDfs(null,A,null,C,E,A.hashCode,B,0)}else{this.dfs(null,A,null,C,E,0)}}}this.dfsCount++}};mxSwimlaneModel.prototype.dfs=function(J,G,K,C,F,I){if(G!=null){var D=G.id;if(F[D]==null){F[D]=G;C(J,G,K,I,0);var A=G.connectsAsSource.slice();for(var H=0;H<A.length;H++){var B=A[H];var E=B.target;this.dfs(G,E,B,C,F,I+1)}}else{C(J,G,K,I,1)}}};mxSwimlaneModel.prototype.extendedDfs=function(M,G,O,C,J,I,L,N){if(G!=null){if(M!=null){if(G.hashCode==null||G.hashCode[0]!=M.hashCode[0]){var A=M.hashCode.length+1;G.hashCode=M.hashCode.slice();G.hashCode[A-1]=L}}var D=G.id;if(J[D]==null){J[D]=G;C(M,G,O,N,0);var H=G.connectsAsSource.slice();var E=G.connectsAsTarget.slice();for(var K=0;K<H.length;K++){var B=H[K];var F=B.target;if(G.swimlaneIndex<=F.swimlaneIndex){this.extendedDfs(G,F,B,C,J,G.hashCode,K,N+1)}}for(var K=0;K<E.length;K++){var B=E[K];var F=B.source;if(G.swimlaneIndex<F.swimlaneIndex){this.extendedDfs(G,F,B,C,J,G.hashCode,K,N+1)}}}else{C(M,G,O,N,1)}}};