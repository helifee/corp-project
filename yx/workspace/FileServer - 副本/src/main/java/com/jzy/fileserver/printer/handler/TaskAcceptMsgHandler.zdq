package com.jzy.fileserver.printer.handler;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.jzy.fileserver.dao.PrintTaskDao;
import com.jzy.fileserver.domain.PrintTaskVo;
import com.jzy.fileserver.enums.TaskStatus;
import com.jzy.fileserver.printer.PrintEventMonitor;
import com.jzy.fileserver.printer.msg.PrinterMsg;
import com.jzy.fileserver.printer.msg.TaskAcceptMsg;
import com.jzy.fileserver.printer.msg.external.TaskAcceptMsgExternal;
import com.jzy.fileserver.socket.ServerBorad;
import com.jzy.fileserver.utils.JacksonUtils;

/**
 * 打印任务接收处理器
 *
 * Created by daoqi on 2018年8月14日
 */
@Component
public class TaskAcceptMsgHandler extends BaseMsgHandler implements MsgHandler {
	private static final Logger logger = LoggerFactory.getLogger(TaskAcceptMsgHandler.class);
	
	@Autowired
	private PrintTaskDao printTaskDao;

	@Override
	public String handle(PrinterMsg msg, PrintEventMonitor printEventMonitor) {
		super.handle(msg, printEventMonitor);
		TaskAcceptMsg taskAcceptMsg = (TaskAcceptMsg)msg;
		if(taskAcceptMsg.getRequest_result() == 0) {
			int taskId = taskAcceptMsg.getTask_id();
			printTaskDao.updateTaskStatusAndHost(taskId, TaskStatus.task_accept.name(), printEventMonitor.getPrinter().getHost());
			
			PrintTaskVo printTaskVo = printTaskDao.findById(taskId);
			taskAcceptMsg.setFile_id(printTaskVo.getFileId());
			
			TaskAcceptMsgExternal taskAcceptMsgExternal = convertToExternalVo(taskAcceptMsg);
			
			ServerBorad.broadcast(JacksonUtils.toJson(taskAcceptMsgExternal));
			
			logger.info("任务【{}】接收成功！", taskId);
			
		} else {
			//失败重试在定时任务中处理
		}
		
		return null;
	}
	
	private TaskAcceptMsgExternal convertToExternalVo(TaskAcceptMsg genThumbMsg) {
		TaskAcceptMsgExternal externalVo = new TaskAcceptMsgExternal();
		externalVo.setMsgType(genThumbMsg.getMsg_type());
		externalVo.setFileId(genThumbMsg.getFile_id());
		externalVo.setConfId(genThumbMsg.getConf_id());
		externalVo.setGroupId(genThumbMsg.getGroup_id());
		externalVo.setRequestResult(genThumbMsg.getRequest_result());
		return externalVo;
	}
}
