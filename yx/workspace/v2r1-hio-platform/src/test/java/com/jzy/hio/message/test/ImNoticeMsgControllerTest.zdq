/*
package com.jzy.hio.message.test;

import java.util.ArrayList;
import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.RequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import com.jzy.hio.HioPlatformApplication;
import com.jzy.hio.platform.message.param.IMToUserParam;
import com.jzy.hio.platform.message.param.ImNoticeMsgSendParam;
import com.jzy.hio.platform.message.param.ImNoticeMsgsParam;
import com.jzy.hio.utils.JacksonUtils;

@RunWith(SpringRunner.class)
@SpringBootTest(classes = HioPlatformApplication.class)
@AutoConfigureMockMvc
@WebAppConfiguration
public class ImNoticeMsgControllerTest {
    private MockMvc mvc;
    @Autowired
    private WebApplicationContext context;

    @Before
    public void setupMockMvc() throws Exception {
        mvc = MockMvcBuilders.webAppContextSetup(context).build();
    }


    *//**
     * 群发消息(多个人对应同一条消息)
     * @throws Exception
     *//*
    @Test
    public void sendTest1() throws Exception {
        //1.请求参数封装
        ImNoticeMsgSendParam imNoticeMsgSendParam = new ImNoticeMsgSendParam();
        List<ImNoticeMsgsParam> imNoticeMsgsParamList = new ArrayList<ImNoticeMsgsParam>();
        ImNoticeMsgsParam imNoticeMsgsParam = new ImNoticeMsgsParam();
        List<IMToUserParam> list =  new ArrayList<IMToUserParam>();
        IMToUserParam imToUserParam  = new IMToUserParam();
        imToUserParam.setToUserId("wftest");
        imToUserParam.setToUserName("wf");
        imToUserParam.setToUserPhone("18333199575");
        IMToUserParam imToUserParam1  = new IMToUserParam();
        imToUserParam1.setToUserId("lh");
        imToUserParam1.setToUserName("lh");
        imToUserParam1.setToUserPhone("15831900000");
        list.add(imToUserParam);
        list.add(imToUserParam1);
        imNoticeMsgsParam.setToUsers(list);
        imNoticeMsgsParam.setFromUserId("wffrom");
        imNoticeMsgsParam.setFromUserName("setFromUserName");
//        imNoticeMsgsParam.setTendId("tendId");
//        imNoticeMsgsParam.setTendName("setTendName");
//        imNoticeMsgsParam.setBusinessId("111");
//        imNoticeMsgsParam.setMsg("msg");
//        imNoticeMsgsParam.setOpType("DB");
//        imNoticeMsgsParam.setModuleType("1001");
//        imNoticeMsgsParam.setModuleName("HR系统");
//        imNoticeMsgsParam.setMobibleParam("setMobibleParam");
//        imNoticeMsgsParam.setMobibleUrl("setMobibleUrl");
//        imNoticeMsgsParam.setPcUrl("pcurl");
        imNoticeMsgsParam.setSendMsgType("text");//文本消息 cmd
        imNoticeMsgsParam.setMsgType("msg");
        imNoticeMsgsParamList.add(imNoticeMsgsParam);
        imNoticeMsgSendParam.setMsgs(imNoticeMsgsParamList);
        String jsonstr =  JacksonUtils.toJson(imNoticeMsgSendParam);
        System.out.println("================================请求入参：" + jsonstr);
        //封装请求
        RequestBuilder request = MockMvcRequestBuilders.post("/message/send")
                .contentType(MediaType.APPLICATION_JSON)
                .content(jsonstr).accept(MediaType.APPLICATION_JSON);

        //调用接口
        MvcResult mvcResult = mvc.perform(request).andReturn();
        //返回结果
        int status = mvcResult.getResponse().getStatus();
        String content = mvcResult.getResponse().getContentAsString();
        System.out.println("返回结果：" + content);

    }


    *//**
     * 单发消息(一个人对应一条消息)
     * @throws Exception
     *//*
    @Test
    public void sendTest2() throws Exception {
        //1.请求参数封装
        ImNoticeMsgSendParam imNoticeMsgSendParam = new ImNoticeMsgSendParam();
        List<ImNoticeMsgsParam> imNoticeMsgsParamList = new ArrayList<ImNoticeMsgsParam>();
        ImNoticeMsgsParam imNoticeMsgsParam = new ImNoticeMsgsParam();

        //封装消息接受人
        List<IMToUserParam> list =  new ArrayList<IMToUserParam>();
        IMToUserParam imToUserParam  = new IMToUserParam();
        imToUserParam.setToUserId("wftest");
        imToUserParam.setToUserName("wf");
        imToUserParam.setToUserPhone("18333199575");
        list.add(imToUserParam);
        imNoticeMsgsParam.setToUsers(list);

        //封装发送消息
        imNoticeMsgsParam.setFromUserId("wffrom");
        imNoticeMsgsParam.setFromUserName("setFromUserName");
        imNoticeMsgsParam.setTendId("tendId");
        imNoticeMsgsParam.setTendName("setTendName");
        imNoticeMsgsParam.setBusinessId("111");
        imNoticeMsgsParam.setMsg("msg");
        imNoticeMsgsParam.setOpType("DB");
        imNoticeMsgsParam.setModuleType("1001");
        imNoticeMsgsParam.setModuleName("HR系统");
        imNoticeMsgsParam.setMobibleParam("setMobibleParam");
        imNoticeMsgsParam.setMobibleUrl("setMobibleUrl");
        imNoticeMsgsParam.setPcUrl("pcurl");
        imNoticeMsgsParam.setSendMsgType("text");//文本消息 cmd
        imNoticeMsgsParam.setMsgType("msg");
        imNoticeMsgsParamList.add(imNoticeMsgsParam);

        imNoticeMsgSendParam.setMsgs(imNoticeMsgsParamList);
        String jsonstr =  JacksonUtils.toJson(imNoticeMsgSendParam);
        System.out.println("================================请求入参：" + jsonstr);
        //封装请求
        RequestBuilder request = MockMvcRequestBuilders.post("/message/send")
                .contentType(MediaType.APPLICATION_JSON)
                .content(jsonstr).accept(MediaType.APPLICATION_JSON);

        //调用接口
        MvcResult mvcResult = mvc.perform(request).andReturn();
        //返回结果
        int status = mvcResult.getResponse().getStatus();
        String content = mvcResult.getResponse().getContentAsString();
        System.out.println("返回结果：" + content);

    }


    *//**
     * 多个人对应多条消息
     * @throws Exception
     *//*
    @Test
    public void sendTest3() throws Exception {
        //1.请求参数封装
        ImNoticeMsgSendParam imNoticeMsgSendParam = new ImNoticeMsgSendParam();
        List<ImNoticeMsgsParam> imNoticeMsgsParamList = new ArrayList<ImNoticeMsgsParam>();
        ImNoticeMsgsParam imNoticeMsgsParam = new ImNoticeMsgsParam();

        //封装消息接受人
        List<IMToUserParam> list =  new ArrayList<IMToUserParam>();
        IMToUserParam imToUserParam  = new IMToUserParam();
        imToUserParam.setToUserId("lh");
        imToUserParam.setToUserName("lh");
        imToUserParam.setToUserPhone("158");
        list.add(imToUserParam);
        imNoticeMsgsParam.setToUsers(list);
        //封装发送消息
        imNoticeMsgsParam.setFromUserId("wffrom");
        imNoticeMsgsParam.setFromUserName("setFromUserName");
//        imNoticeMsgsParam.setTendId("tendId");
//        imNoticeMsgsParam.setTendName("setTendName");
//        imNoticeMsgsParam.setBusinessId("111");
//        imNoticeMsgsParam.setMsg("lhsendsssssssssssssssssssss");
//        imNoticeMsgsParam.setOpType("DB");
//        imNoticeMsgsParam.setModuleType("1001");
//        imNoticeMsgsParam.setModuleName("HR系统");
//        imNoticeMsgsParam.setMobibleParam("setMobibleParam");
//        imNoticeMsgsParam.setMobibleUrl("setMobibleUrl");
//        imNoticeMsgsParam.setPcUrl("pcurl");
//        imNoticeMsgsParam.setSendMsgType("text");//文本消息 cmd
//        imNoticeMsgsParam.setMsgType("msg");
//        imNoticeMsgsParamList.add(imNoticeMsgsParam);


        //封装消息接受人
        ImNoticeMsgsParam imNoticeMsgsParam1 = new ImNoticeMsgsParam();
        List<IMToUserParam> list1 =  new ArrayList<IMToUserParam>();
        IMToUserParam imToUserParam1  = new IMToUserParam();
        imToUserParam1.setToUserId("wf");
        imToUserParam1.setToUserName("wf");
        imToUserParam1.setToUserPhone("183");
        list1.add(imToUserParam1);
        imNoticeMsgsParam1.setToUsers(list1);
        //封装发送消息
        imNoticeMsgsParam1.setFromUserId("wffrom");
        imNoticeMsgsParam1.setFromUserName("setFromUserName");
//        imNoticeMsgsParam1.setTendId("tendId");
//        imNoticeMsgsParam1.setTendName("setTendName");
//        imNoticeMsgsParam1.setBusinessId("111");
//        imNoticeMsgsParam1.setMsg("wfsendsssssssssssssssssssss");
//        imNoticeMsgsParam1.setOpType("DB");
//        imNoticeMsgsParam1.setModuleType("1001");
//        imNoticeMsgsParam1.setModuleName("HR系统");
//        imNoticeMsgsParam1.setMobibleParam("setMobibleParam");
//        imNoticeMsgsParam1.setMobibleUrl("setMobibleUrl");
//        imNoticeMsgsParam1.setPcUrl("pcurl");
//        imNoticeMsgsParam1.setSendMsgType("text");//文本消息 cmd
//        imNoticeMsgsParam1.setMsgType("msg");
//        imNoticeMsgsParamList.add(imNoticeMsgsParam1);

        imNoticeMsgSendParam.setMsgs(imNoticeMsgsParamList);
        String jsonstr =  JacksonUtils.toJson(imNoticeMsgSendParam);
        System.out.println("================================请求入参：" + jsonstr);
        //封装请求
        RequestBuilder request = MockMvcRequestBuilders.post("/message/send")
                .contentType(MediaType.APPLICATION_JSON)
                .content(jsonstr).accept(MediaType.APPLICATION_JSON);

        //调用接口
        MvcResult mvcResult = mvc.perform(request).andReturn();
        //返回结果
        int status = mvcResult.getResponse().getStatus();
        String content = mvcResult.getResponse().getContentAsString();
        System.out.println("返回结果：" + content);

    }
    }
=======
//package com.jzy.hio.message.test;
//
//import java.util.ArrayList;
//import java.util.List;
//
//import org.junit.Before;
//import org.junit.Test;
//import org.junit.runner.RunWith;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
//import org.springframework.boot.test.context.SpringBootTest;
//import org.springframework.http.MediaType;
//import org.springframework.test.context.junit4.SpringRunner;
//import org.springframework.test.context.web.WebAppConfiguration;
//import org.springframework.test.web.servlet.MockMvc;
//import org.springframework.test.web.servlet.MvcResult;
//import org.springframework.test.web.servlet.RequestBuilder;
//import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
//import org.springframework.test.web.servlet.setup.MockMvcBuilders;
//import org.springframework.web.context.WebApplicationContext;
//
//import com.jzy.hio.HioPlatformApplication;
//import com.jzy.hio.platform.message.param.IMToUserParam;
//import com.jzy.hio.platform.message.param.ImNoticeMsgSendParam;
//import com.jzy.hio.platform.message.param.ImNoticeMsgsParam;
//import com.jzy.hio.utils.JacksonUtils;
//
//@RunWith(SpringRunner.class)
//@SpringBootTest(classes = HioPlatformApplication.class)
//@AutoConfigureMockMvc
//@WebAppConfiguration
//public class ImNoticeMsgControllerTest {
//    private MockMvc mvc;
//    @Autowired
//    private WebApplicationContext context;
//
//    @Before
//    public void setupMockMvc() throws Exception {
//        mvc = MockMvcBuilders.webAppContextSetup(context).build();
//    }
//
//
//    /**
//     * 群发消息(多个人对应同一条消息)
//     * @throws Exception
//     */
//    @Test
//    public void sendTest1() throws Exception {
//        //1.请求参数封装
//        ImNoticeMsgSendParam imNoticeMsgSendParam = new ImNoticeMsgSendParam();
//        List<ImNoticeMsgsParam> imNoticeMsgsParamList = new ArrayList<ImNoticeMsgsParam>();
//        ImNoticeMsgsParam imNoticeMsgsParam = new ImNoticeMsgsParam();
//        List<IMToUserParam> list =  new ArrayList<IMToUserParam>();
//        IMToUserParam imToUserParam  = new IMToUserParam();
//        imToUserParam.setToUserId("wftest");
//        imToUserParam.setToUserName("wf");
//        imToUserParam.setToUserPhone("18333199575");
//        IMToUserParam imToUserParam1  = new IMToUserParam();
//        imToUserParam1.setToUserId("lh");
//        imToUserParam1.setToUserName("lh");
//        imToUserParam1.setToUserPhone("15831900000");
//        list.add(imToUserParam);
//        list.add(imToUserParam1);
//        imNoticeMsgsParam.setToUsers(list);
//        imNoticeMsgsParam.setFromUserId("wffrom");
//        imNoticeMsgsParam.setFromUserName("setFromUserName");
//        imNoticeMsgsParam.setTendId("tendId");
//        imNoticeMsgsParam.setTendName("setTendName");
//        imNoticeMsgsParam.setBusinessId("111");
//        imNoticeMsgsParam.setMsg("msg");
//        imNoticeMsgsParam.setOpType("DB");
//        imNoticeMsgsParam.setModuleType("1001");
//        imNoticeMsgsParam.setModuleName("HR系统");
//        imNoticeMsgsParam.setMobibleParam("setMobibleParam");
//        imNoticeMsgsParam.setMobibleUrl("setMobibleUrl");
//        imNoticeMsgsParam.setPcUrl("pcurl");
//        imNoticeMsgsParam.setSendMsgType("text");//文本消息 cmd
//        imNoticeMsgsParam.setMsgType("msg");
//        imNoticeMsgsParamList.add(imNoticeMsgsParam);
//        imNoticeMsgSendParam.setMsgs(imNoticeMsgsParamList);
//        String jsonstr =  JacksonUtils.toJson(imNoticeMsgSendParam);
//        System.out.println("================================请求入参：" + jsonstr);
//        //封装请求
//        RequestBuilder request = MockMvcRequestBuilders.post("/message/send")
//                .contentType(MediaType.APPLICATION_JSON)
//                .content(jsonstr).accept(MediaType.APPLICATION_JSON);
//
//        //调用接口
//        MvcResult mvcResult = mvc.perform(request).andReturn();
//        //返回结果
//        int status = mvcResult.getResponse().getStatus();
//        String content = mvcResult.getResponse().getContentAsString();
//        System.out.println("返回结果：" + content);
//
//    }
//
//
//    /**
//     * 单发消息(一个人对应一条消息)
//     * @throws Exception
//     */
//    @Test
//    public void sendTest2() throws Exception {
//        //1.请求参数封装
//        ImNoticeMsgSendParam imNoticeMsgSendParam = new ImNoticeMsgSendParam();
//        List<ImNoticeMsgsParam> imNoticeMsgsParamList = new ArrayList<ImNoticeMsgsParam>();
//        ImNoticeMsgsParam imNoticeMsgsParam = new ImNoticeMsgsParam();
//
//        //封装消息接受人
//        List<IMToUserParam> list =  new ArrayList<IMToUserParam>();
//        IMToUserParam imToUserParam  = new IMToUserParam();
//        imToUserParam.setToUserId("wftest");
//        imToUserParam.setToUserName("wf");
//        imToUserParam.setToUserPhone("18333199575");
//        list.add(imToUserParam);
//        imNoticeMsgsParam.setToUsers(list);
//
//        //封装发送消息
//        imNoticeMsgsParam.setFromUserId("wffrom");
//        imNoticeMsgsParam.setFromUserName("setFromUserName");
//        imNoticeMsgsParam.setTendId("tendId");
//        imNoticeMsgsParam.setTendName("setTendName");
//        imNoticeMsgsParam.setBusinessId("111");
//        imNoticeMsgsParam.setMsg("msg");
//        imNoticeMsgsParam.setOpType("DB");
//        imNoticeMsgsParam.setModuleType("1001");
//        imNoticeMsgsParam.setModuleName("HR系统");
//        imNoticeMsgsParam.setMobibleParam("setMobibleParam");
//        imNoticeMsgsParam.setMobibleUrl("setMobibleUrl");
//        imNoticeMsgsParam.setPcUrl("pcurl");
//        imNoticeMsgsParam.setSendMsgType("text");//文本消息 cmd
//        imNoticeMsgsParam.setMsgType("msg");
//        imNoticeMsgsParamList.add(imNoticeMsgsParam);
//
//        imNoticeMsgSendParam.setMsgs(imNoticeMsgsParamList);
//        String jsonstr =  JacksonUtils.toJson(imNoticeMsgSendParam);
//        System.out.println("================================请求入参：" + jsonstr);
//        //封装请求
//        RequestBuilder request = MockMvcRequestBuilders.post("/message/send")
//                .contentType(MediaType.APPLICATION_JSON)
//                .content(jsonstr).accept(MediaType.APPLICATION_JSON);
//
//        //调用接口
//        MvcResult mvcResult = mvc.perform(request).andReturn();
//        //返回结果
//        int status = mvcResult.getResponse().getStatus();
//        String content = mvcResult.getResponse().getContentAsString();
//        System.out.println("返回结果：" + content);
//
//    }
//
//
//    /**
//     * 多个人对应多条消息
//     * @throws Exception
//     */
//    @Test
//    public void sendTest3() throws Exception {
//        //1.请求参数封装
//        ImNoticeMsgSendParam imNoticeMsgSendParam = new ImNoticeMsgSendParam();
//        List<ImNoticeMsgsParam> imNoticeMsgsParamList = new ArrayList<ImNoticeMsgsParam>();
//        ImNoticeMsgsParam imNoticeMsgsParam = new ImNoticeMsgsParam();
//
//        //封装消息接受人
//        List<IMToUserParam> list =  new ArrayList<IMToUserParam>();
//        IMToUserParam imToUserParam  = new IMToUserParam();
//        imToUserParam.setToUserId("lh");
//        imToUserParam.setToUserName("lh");
//        imToUserParam.setToUserPhone("158");
//        list.add(imToUserParam);
//        imNoticeMsgsParam.setToUsers(list);
//        //封装发送消息
//        imNoticeMsgsParam.setFromUserId("wffrom");
//        imNoticeMsgsParam.setFromUserName("setFromUserName");
//        imNoticeMsgsParam.setTendId("tendId");
//        imNoticeMsgsParam.setTendName("setTendName");
//        imNoticeMsgsParam.setBusinessId("111");
//        imNoticeMsgsParam.setMsg("lhsendsssssssssssssssssssss");
//        imNoticeMsgsParam.setOpType("DB");
//        imNoticeMsgsParam.setModuleType("1001");
//        imNoticeMsgsParam.setModuleName("HR系统");
//        imNoticeMsgsParam.setMobibleParam("setMobibleParam");
//        imNoticeMsgsParam.setMobibleUrl("setMobibleUrl");
//        imNoticeMsgsParam.setPcUrl("pcurl");
//        imNoticeMsgsParam.setSendMsgType("text");//文本消息 cmd
//        imNoticeMsgsParam.setMsgType("msg");
//        imNoticeMsgsParamList.add(imNoticeMsgsParam);
//
//
//        //封装消息接受人
//        ImNoticeMsgsParam imNoticeMsgsParam1 = new ImNoticeMsgsParam();
//        List<IMToUserParam> list1 =  new ArrayList<IMToUserParam>();
//        IMToUserParam imToUserParam1  = new IMToUserParam();
//        imToUserParam1.setToUserId("wf");
//        imToUserParam1.setToUserName("wf");
//        imToUserParam1.setToUserPhone("183");
//        list1.add(imToUserParam1);
//        imNoticeMsgsParam1.setToUsers(list1);
//        //封装发送消息
//        imNoticeMsgsParam1.setFromUserId("wffrom");
//        imNoticeMsgsParam1.setFromUserName("setFromUserName");
//        imNoticeMsgsParam1.setTendId("tendId");
//        imNoticeMsgsParam1.setTendName("setTendName");
//        imNoticeMsgsParam1.setBusinessId("111");
//        imNoticeMsgsParam1.setMsg("wfsendsssssssssssssssssssss");
//        imNoticeMsgsParam1.setOpType("DB");
//        imNoticeMsgsParam1.setModuleType("1001");
//        imNoticeMsgsParam1.setModuleName("HR系统");
//        imNoticeMsgsParam1.setMobibleParam("setMobibleParam");
//        imNoticeMsgsParam1.setMobibleUrl("setMobibleUrl");
//        imNoticeMsgsParam1.setPcUrl("pcurl");
//        imNoticeMsgsParam1.setSendMsgType("text");//文本消息 cmd
//        imNoticeMsgsParam1.setMsgType("msg");
//        imNoticeMsgsParamList.add(imNoticeMsgsParam1);
//
//        imNoticeMsgSendParam.setMsgs(imNoticeMsgsParamList);
//        String jsonstr =  JacksonUtils.toJson(imNoticeMsgSendParam);
//        System.out.println("================================请求入参：" + jsonstr);
//        //封装请求
//        RequestBuilder request = MockMvcRequestBuilders.post("/message/send")
//                .contentType(MediaType.APPLICATION_JSON)
//                .content(jsonstr).accept(MediaType.APPLICATION_JSON);
//
//        //调用接口
//        MvcResult mvcResult = mvc.perform(request).andReturn();
//        //返回结果
//        int status = mvcResult.getResponse().getStatus();
//        String content = mvcResult.getResponse().getContentAsString();
//        System.out.println("返回结果：" + content);
//
//    }
//    }
