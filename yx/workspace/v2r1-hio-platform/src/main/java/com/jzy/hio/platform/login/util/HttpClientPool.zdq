package com.jzy.hio.platform.login.util;

import org.apache.http.client.config.AuthSchemes;
import org.apache.http.client.config.CookieSpecs;
import org.apache.http.client.config.RequestConfig;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;

import java.util.Arrays;

public class HttpClientPool {
//    private static PoolingHttpClientConnectionManager cm;
//    private static RequestConfig globalConfig = RequestConfig.custom()
//            .setConnectTimeout(120000)  //连接建立时间，三次握手完成时间
//            .setSocketTimeout(60000)   // 数据传输过程中数据包之间间隔的最大时间
//            .setConnectionRequestTimeout(60000) //从连接池获取连接的超时时间
//            .setCookieSpec(CookieSpecs.IGNORE_COOKIES)
//            .setExpectContinueEnabled(true)
//            .setTargetPreferredAuthSchemes(Arrays.asList(AuthSchemes.NTLM, AuthSchemes.DIGEST))
//            .setProxyPreferredAuthSchemes(Arrays.asList(AuthSchemes.BASIC)).build();
//    static {
//        cm = null;
//        cm = new PoolingHttpClientConnectionManager();
//        cm.setMaxTotal(10000);
//        cm.setDefaultMaxPerRoute(1000);
//    }
//    public static CloseableHttpClient getHttpClient(){
////        RequestConfig globalConfig = RequestConfig.custom()
////                .setCookieSpec(CookieSpecs.IGNORE_COOKIES).build();
//        CloseableHttpClient client = HttpClientBuilder.create().setConnectionManager(cm).setDefaultRequestConfig(globalConfig).build();
//
//        return client;
//    }
    private static PoolingHttpClientConnectionManager cm = null;
    static RequestConfig globalConfig = RequestConfig.custom().setCookieSpec(CookieSpecs.IGNORE_COOKIES).build();
    private static HttpClientBuilder httpClientBuilder;
    static{
        cm = new PoolingHttpClientConnectionManager();
        cm.setMaxTotal(1000);
        cm.setDefaultMaxPerRoute(50);
    }

    public static CloseableHttpClient getHttpClient(){
        if(httpClientBuilder==null){
            httpClientBuilder = HttpClients.custom().setConnectionManager(cm).setDefaultRequestConfig(globalConfig);
        }
        return httpClientBuilder.build();
    }


}
