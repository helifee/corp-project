package com.jzy.hio.platform.userinfo.service;

import java.util.Date;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.amqp.core.Message;
import org.springframework.amqp.rabbit.annotation.RabbitHandler;
import org.springframework.amqp.rabbit.annotation.RabbitListener;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.jzy.hio.base.Base;
import com.jzy.hio.base.BaseConstants;
import com.jzy.hio.entity.ImFriendAlias;
import com.rabbitmq.client.Channel;

/**
 * 备注名消费
 * @author 
 *
 */
@Component
public class ImFriendAliasReceiver extends Base{
	protected Logger logger = LoggerFactory.getLogger(this.getClass());

	@Autowired
	private ImFriendAliasService imFriendAliasService;
	
	// chc edit 2018-04-19
	@RabbitListener(queues = "${queue.imFriendAliasQueue}", containerFactory="rabbitListenerContainerFactory")
	@RabbitHandler
    public void process(Message message, Channel channel) {
		try {
			ImFriendAlias alias = json2obj(new String(message.getBody(),"utf-8"),ImFriendAlias.class);
			ImFriendAlias param = new ImFriendAlias();
			param.setFid(alias.getFid());
			param.setUid(alias.getUid());
			param.setDelflag(BaseConstants.MYSQL_DELFLAG_NORMAL);
			List<ImFriendAlias> list = imFriendAliasService.queryList(param);
			if(isNotEmpty(list)) {
				ImFriendAlias result = list.get(0);
				result.setAliasName(isEmpty(alias.getAliasName())?"":alias.getAliasName());
				result.setAliasNameFull(isEmpty(alias.getAliasNameFull())?"":alias.getAliasNameFull());
				result.setAliasNameSimple(isEmpty(alias.getAliasNameSimple())?"":alias.getAliasNameSimple());
				result.setCreatePersonId(alias.getUid());
				result.setCreatePersonName(alias.getUid());
				result.setUpdatePersonId(alias.getUid());
				result.setUpdatePersonName(alias.getUid());
				result.setUpdateDate(new Date());
				imFriendAliasService.update(result);
			}else {
				alias.setCreatePersonId(alias.getUid());
				alias.setCreatePersonName(alias.getUid());
				alias.setUpdatePersonId(alias.getUid());
				alias.setUpdatePersonName(alias.getUid());
				alias.setCreateDate(new Date());
				alias.setUpdateDate(new Date());
				imFriendAliasService.saveFriendAlias(alias);
			}
			channel.basicAck(message.getMessageProperties().getDeliveryTag(), true);
		}catch(Exception e) {
			e.printStackTrace();
			logger.error("备注失败：{}" , e.getMessage());
		}
	}
	
}
