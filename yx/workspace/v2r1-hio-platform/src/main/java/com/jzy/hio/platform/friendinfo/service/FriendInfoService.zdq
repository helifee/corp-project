package com.jzy.hio.platform.friendinfo.service;

import java.util.List;
import java.util.Map;

import com.jzy.hio.base.anno.TargetUserInfo;
import com.jzy.hio.base.service.BaseService;
import com.jzy.hio.entity.FriendInfo;
import com.jzy.hio.exception.HioException;
import com.jzy.hio.platform.friendinfo.dto.FriendAliasDto;
import com.jzy.hio.platform.friendinfo.dto.FriendInfoDto;
import com.jzy.hio.platform.friendinfo.param.FriendInfoSaveParam;
import com.jzy.hio.platform.param.FriendInfoParam;
import com.jzy.hio.platform.tenduser.mode.TendUserInfoAppDto;
import com.jzy.hio.springmvc.ApiResponse;

/**
 * 好友管理
 * 
 * @author chc<br/>
 * 		2018年3月22日
 */
public interface FriendInfoService extends BaseService<FriendInfo> {

	/**
	 * 查询好友列表
	 * @return
	 * @throws HioException
	 */
	@TargetUserInfo
	public List<FriendInfoDto> queryList() throws HioException;
	
	/**
	 * 更新黑名单状态
	 * @param map
	 * @throws HioException
	 */
	public void updateBlack(Map<String,Object> map) throws HioException;
	
	/**
	 * 查询用户黑名单
	 * @param uid
	 * @return
	 * @throws HioException
	 */
	public List<FriendInfo> getBlackList(String uid) throws HioException;
	
	/**
	 * 查询用户共享手机号的好友
	 * @param map
	 * @return
	 * @throws HioException
	 */
	public List<FriendAliasDto> getShareFriendList(FriendInfo param) throws HioException;
	
	/**
	 * 查询用户好友
	 * @param map
	 * @return
	 * @throws HioException
	 */
	public List<FriendInfoDto> getFriendList(Map<String,Object> map) throws HioException;
	
	/**
	 * 查询用户好友  含删除
	 * @param map
	 * @return
	 * @throws HioException
	 */
	public List<FriendInfoDto> getMyFriendList(Map<String,Object> map) throws HioException;
	
	/**
	 * 修改好友之间共享手机号码状态
	 * @param uid
	 * @param fid
	 * @param sharePhone 是否共享手机号码，0：否，1：是
	 * @return
	 */
	void updateSharePhone(String uid, String fid, Integer sharePhone);
	/**
	 * 修改好友之间黑名单状态
	 * @param uid
	 * @param fid
	 * @param blankName 是否黑名单，0：否，1：是
	 * @return
	 */
	int updateBlankName(String uid, String fid, Integer blankName);
	/**
	 * 修改被对方解除好友关系状态
	 * @param uid
	 * @param fid
	 * @param isDel 是否被对方解除好友关系，0：否，1：是
	 * @return
	 */
	int updateIsDel(String uid, String fid, Integer isDel);
	
	/**
	 * 解除好友关系
	 * @param uid
	 * @param fid
	 * @param delflag 0：否，1：是
	 * @throws HioException
	 */
	void updateDelflag(String uid, String fid, boolean delflag)throws HioException;
	
	/**
	 * 获取用户好友
	 * @param uid
	 * @param addflag
	 * @return
	 * @throws Exception
	 */
	Map<String,String> getUserFriend(String uid,String addflag) throws Exception;
	
	/**
	 * 发送好友申请
	 * @param param
	 * @return
	 * @throws Exception
	 */
	ApiResponse<Object> sendFriendApply(FriendInfoParam param)throws Exception;
	
	/**
	 * 邀请同事或者外部联系人
	 * @param param
	 * @return
	 * @throws Exception
	 */
	ApiResponse<Boolean> sendWorkApply(FriendInfoParam param)throws Exception;
	
	/**
	 * 修改个人缓存状态，更新我在我的好友列表中的状态（缓存）
	 * @param uid
	 * @param status
	 * @throws Exception
	 */
	public void changeStatus(String uid,String status)throws Exception;
	
	/**
	 * 查询手机号是否已注册，未注册默认创建禁用的账号
	 * @param param
	 * @param mobile
	 * @return
	 * @throws Exception
	 */
	public String saveUserInfo(String mobile)throws Exception;
	
	/**
	 * 批量 查询手机号是否已注册，未注册默认创建禁用的账号
	 * @param param
	 * @param mobile
	 * @return
	 * @throws Exception
	 */
	public ApiResponse<Map<String,String>> saveBatchUserInfo(List<String> param)throws Exception;
	
	/**
	 * 用户同意邀请为双方发送站内信
	 * @param friendInfoParam
	 * @throws Exception
	 */
	public void receiptInformation(FriendInfoSaveParam friendInfoParam,String znMsg,String msgType,String moduleType
			,String moduleName,String sendMsgType)throws Exception;
	
	/**
	 * 根据用户id查询租户列表
	 * @param userId
	 * @return
	 */
	public List<TendUserInfoAppDto> getTendUserList(String userId);
}
