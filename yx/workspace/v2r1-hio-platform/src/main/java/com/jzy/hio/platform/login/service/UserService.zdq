package com.jzy.hio.platform.login.service;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import com.jzy.hio.annotation.DataSource;import com.jzy.hio.database.DataSourceContextHolder;import com.jzy.hio.platform.login.service.impl.DemoServer;import com.jzy.hio.platform.login.util.JacksonUtils;import com.jzy.hio.redis.JedisUtil;import org.apache.ibatis.annotations.Param;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Propagation;import org.springframework.transaction.annotation.Transactional;import com.jzy.hio.platform.login.mapper.UserMapper;@Servicepublic class UserService {    @Autowired    private UserMapper userMapper;    @Autowired    private DemoServer demoServer;    public List<Map> queryUser() {        Map m = new HashMap();        return userMapper.queryUser(m);    }    @Transactional    public void addImUser(List<Map> userList){        for(Map<String,String> user:userList){            Map<String,String> u=userMapper.queryUserinfoByMobile(user.get("mobile").toString(),1);            if(u==null||u.size()==0){                userMapper.addImUser(user);            }        }    }    public int updatePassword(Map p) {        return userMapper.updatePassword(p);    }    @Transactional    public int updatePassword(List<Map> l) {        int count=0;        for(Map p:l){            userMapper.updatePassword(p);            count++;            Map<String, String> userinfo = userMapper.queryUserinfoByMobile(p.get("mobile").toString(), 1);            userinfo.put("sid",userinfo.get("id"));            userinfo.put("hxPassword",userinfo.get("HuanXin_password"));            userinfo.remove("HuanXin_password");            JedisUtil.hset("im_user_info",userinfo.get("id"), JacksonUtils.toJson(userinfo));        }        return count;    }    @Transactional//(propagation = Propagation.NOT_SUPPORTED)    public List queryDemo(String[] tendIds){        List all = new ArrayList();        for(String tendId: tendIds) {//        String tendId="";            DataSourceContextHolder.setDataSourceType(tendId);//            all.addAll(demoServer.adddemo012(tendId));//            all.addAll(demoServer.adddemo013(tendId));            all.addAll(demo010(tendId));//            all.addAll(demo011(tendId));        }        return all;    }    @Transactional    public List demo010(@DataSource String tendId){        return userMapper.demo010();    }    @Transactional    public List demo011(@DataSource String tendId){        return userMapper.demo011();    }    public Map<String,String> queryUserinfoByMobile(String mobile, Integer state){        return userMapper.queryUserinfoByMobile(mobile,state);    }}