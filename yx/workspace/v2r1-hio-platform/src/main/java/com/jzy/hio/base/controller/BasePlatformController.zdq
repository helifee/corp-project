package com.jzy.hio.base.controller;

import com.jzy.hio.base.Base;
import com.jzy.hio.base.BaseConstants;
import com.jzy.hio.base.entity.BaseEntity;
import com.jzy.hio.base.mq.Sender;
import com.jzy.hio.base.service.BaseService;
import com.jzy.hio.exception.HioMybatisInsertException;
import com.jzy.hio.platform.dto.tenantcompanyinfo.TenantCompanyInfoDto;
import com.jzy.hio.redis.JedisUtil;
import com.jzy.hio.utils.ClassUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.persistence.Table;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

public class BasePlatformController<T extends BaseService> extends BaseController{
	@Autowired
    private Sender sender;
	
	/**
	 * 保存实体对象
	 * 
	 * @param json
	 * @return
	 */
	public Object save(BaseEntity entity) throws HioMybatisInsertException {
		try {
//			Class beanClass = ClassUtils.getGenericClass(service.getClass(), 0);
//			BaseEntity entity = (BaseEntity) json2obj(json, beanClass);
			String pk = generatePk();
			entity.setId(pk);
			entity.setDelflag(BaseConstants.MYSQL_DELFLAG_NORMAL);
			entity.setCreateDate(new Date());
			entity.setCreatePersonId(getUserIdIM());
			entity.setUpdatePersonId(getUserIdIM());
			entity.setCreatePersonName("");
			entity.setUpdatePersonName("");
			JedisUtil.addRow(entity);
//			String tableName = entity.getClass().getAnnotation(Table.class).name();
//			sender.send(tableName + "_queue_1", obj2json(entity));
			return entity;
		} catch (Exception e) {
			logger.error("保存对象失败!" + e.getMessage());
			throw new HioMybatisInsertException(e);
		}
	}
	
	/**
	 * 更新实体对象
	 * 
	 * @param json
	 * @return
	 */
	@RequestMapping(value = "/updae", method = RequestMethod.POST, consumes = "application/json")
	public Object update(@RequestBody TenantCompanyInfoDto dto) throws HioMybatisInsertException {
		try {
			Class beanClass = ClassUtils.getGenericClass(service.getClass(), 0);
			BaseEntity entity = (BaseEntity) json2obj(obj2json(dto), beanClass);
			JedisUtil.editRow(entity);
			String tableName = entity.getClass().getAnnotation(Table.class).name();
			sender.send(tableName + "_queue", obj2json(entity));
			return entity;
		} catch (Exception e) {
			logger.error("保存对象失败!" + e.getMessage());
			throw new HioMybatisInsertException(e);
		}
	}
	
	public static Map<String, String> json2mapString(String json) {
		Map<String, Object> map = Base.json2map(json);
		Map<String, String> resultMap = new HashMap<String, String>();
		for (String key : map.keySet()) {
			resultMap.put(key, map.get(key)+"");
		}
		return resultMap;
	}
}
