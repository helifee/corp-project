package com.jzy.hio.platform.friendinfo.service.impl;

import org.springframework.stereotype.Service;

import com.jzy.hio.platform.friendinfo.service.ImRegisterUserApi;
import com.jzy.hio.platform.message.comm.EasemobAPI;
import com.jzy.hio.platform.message.comm.OrgInfo;
import com.jzy.hio.platform.message.comm.ResponseHandler;
import com.jzy.hio.platform.message.comm.TokenUtil;

import io.swagger.client.ApiException;
import io.swagger.client.api.UsersApi;
import io.swagger.client.model.NewPassword;
import io.swagger.client.model.Nickname;
import io.swagger.client.model.RegisterUsers;
/**
 * 环信im注册用户
 * @author chc
 * @create 2018-04-16 16:06
 **/
@Service
public class ImRegisterUserApiImpl implements ImRegisterUserApi {
	private UsersApi api = new UsersApi();
	private ResponseHandler responseHandler = new ResponseHandler();
	
	@Override
	public Object createNewIMUserSingle(final Object payload) {
		return responseHandler.handle(new EasemobAPI() {
			@Override
			public Object invokeEasemobAPI() throws ApiException {
//				return api.orgNameAppNameUsersPost(OrgInfo.ORG_NAME,OrgInfo.APP_NAME, (RegisterUsers) payload,TokenUtil.getAccessToken());
				return api.orgNameAppNameUsersPostWithHttpInfo(OrgInfo.ORG_NAME,OrgInfo.APP_NAME, (RegisterUsers) payload,TokenUtil.getAccessToken());
			}
		});
	}
	
	/**
     * 注册用户 批量 <br>
     * POST
     *
     * @param payload
     *            <code>{"usernamename":"testrestgrp12","password":"11111"}</code>
     * @return
     */
	@Override
	public Object createNewIMUserBatch(final Object payload) {
		return responseHandler.handle(new EasemobAPI() {
            @Override
            public Object invokeEasemobAPI() throws ApiException {
                return api.orgNameAppNameUsersPostWithHttpInfo(OrgInfo.ORG_NAME,OrgInfo.APP_NAME, (RegisterUsers) payload,TokenUtil.getAccessToken());
            }
        });
	}

	/**
	 * 禁用用户
	 */
	@Override
	public Object deactivateIMUser(final String userName) {
		return responseHandler.handle(new EasemobAPI() {
			@Override
			public Object invokeEasemobAPI() throws ApiException {
//				return api.orgNameAppNameUsersUsernameDeactivatePost(OrgInfo.ORG_NAME,OrgInfo.APP_NAME,TokenUtil.getAccessToken(),userName);
				return api.orgNameAppNameUsersUsernameDeactivatePostWithHttpInfo(OrgInfo.ORG_NAME,OrgInfo.APP_NAME,TokenUtil.getAccessToken(),userName);
			}
		});
	}

	/**
	 * 启用用户
	 */
	@Override
	public Object activateIMUser(final String userName) {
		return responseHandler.handle(new EasemobAPI() {
			@Override
			public Object invokeEasemobAPI() throws ApiException {
				return api.orgNameAppNameUsersUsernameActivatePost(OrgInfo.ORG_NAME,OrgInfo.APP_NAME,TokenUtil.getAccessToken(),userName);
			}
		});
	}
	
	/**
	 * 获取IM用户[单个] 
	 * @param userName
	 * @return
	 */
	@Override
	public Object getIMUserByUserName(final String userName) {
		return responseHandler.handle(new EasemobAPI() {
			@Override
			public Object invokeEasemobAPI() throws ApiException {
				return api.orgNameAppNameUsersUsernameGetWithHttpInfo(OrgInfo.ORG_NAME,OrgInfo.APP_NAME,TokenUtil.getAccessToken(),userName);
			}
		});
	}
	
	@Override
	public Object changePassword(final String userName, final Object payload) {
		return responseHandler.handle(new EasemobAPI() {
			@Override
			public Object invokeEasemobAPI() throws ApiException {
//				return api.orgNameAppNameUsersUsernamePasswordPut(OrgInfo.ORG_NAME,OrgInfo.APP_NAME,userName, (NewPassword) payload,TokenUtil.getAccessToken());
				return api.orgNameAppNameUsersUsernamePasswordPutWithHttpInfo(OrgInfo.ORG_NAME,OrgInfo.APP_NAME,userName, (NewPassword) payload,TokenUtil.getAccessToken());
			}
		});
	}
	
	@Override
	public Object modifyIMUserNickNameWithAdminToken(final String userName,final Object payload) {
		return responseHandler.handle(new EasemobAPI() {
			@Override
			public Object invokeEasemobAPI() throws ApiException {
				return api.orgNameAppNameUsersUsernamePutWithHttpInfo(OrgInfo.ORG_NAME,OrgInfo.APP_NAME,userName, (Nickname) payload,TokenUtil.getAccessToken());
			}
		});
	}

	@Override
	public Object disconnectIMUser(final String userName) {
		return responseHandler.handle(new EasemobAPI() {
			@Override
			public Object invokeEasemobAPI() throws ApiException {
//				return api.orgNameAppNameUsersUsernameDisconnectGet(TokenUtil.getOrgName(enterpriseId),TokenUtil.getAppName(enterpriseId),TokenUtil.getToken(enterpriseId),userName);
				return api.orgNameAppNameUsersUsernameDisconnectGetWithHttpInfo(OrgInfo.ORG_NAME,OrgInfo.APP_NAME, TokenUtil.getAccessToken(),userName);
			}
		});
	}
}
