package com.jzy.hio.util;

import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;

/**
 * 反射相关的工具类
 * 
 * @author coffee<br/>
 *         2018年1月30日下午3:12:22
 */
public class ClassUtils {

	/**
	 * 获取指定class的泛型的Class <br/>
	 * 
	 * @param clazz
	 *            <br/>
	 * @param index
	 *            泛型的第几个参数, 从0开始<br/>
	 * @return 2018年1月30日下午3:12:40
	 */
	public static Class<?> getGenericClass(Class<?> clazz, int index) {
		Type genType = clazz.getGenericSuperclass();// 得到泛型父类
		if (genType instanceof ParameterizedType == false) {
			return getGenericClass(clazz.getSuperclass(), index);
		}
		Type[] params = ((ParameterizedType) genType).getActualTypeArguments(); // 获取泛型参数
		try {
			return Class.forName(params[index].getTypeName());
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		return null;
	}
}
