package com.jzy.hio.interceptor;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.annotation.Order;

@Aspect
@Order(-2)
@Configuration
public class PremissionAop2 {

	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@Pointcut("execution(* com.jzy.hio..controller.*.*(..) )")
	public void checkPremission() {
		System.out.println("xxx");
	}

	/**
	 * 检测权限
	 * @param thisJoinPoint
	 */
	@Before("checkPremission()")
	public void before(JoinPoint thisJoinPoint) {
		System.out.println("权限判断");
	}
	
//	@Pointcut("execution(* com.jzy.hio..controller.*.*(..) )")
//	@Override
//	public void before(Method method, Object[] arg1, Object target) throws Throwable {
//		System.out.println("");
//	}
//
//	@Override
//	public void afterReturning(Object arg0, Method method, Object[] arg2, Object arg3) throws Throwable {
//		System.out.println(arg0);
//	}
//	
//
//	public void afterThrowing(Method method, Object[] args, Object target, Exception ex) throws Throwable {
//		ex.printStackTrace();
//		logger.error("-----error", ex.getMessage());
//	}

}
