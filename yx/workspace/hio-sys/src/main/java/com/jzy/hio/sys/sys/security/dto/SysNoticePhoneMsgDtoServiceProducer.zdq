package com.jzy.hio.sys.sys.security.dto;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jzy.hio.base.utils.DubboServiceResultInfo;
import com.jzy.hio.base.utils.Page;
import com.jzy.hio.sys.sys.notice.entity.SysNoticePhoneMsg;
import com.jzy.hio.sys.sys.notice.service.SysNoticePhoneMsgService;
import com.jzy.tools.data.JacksonUtils;

/**
 * @author admin
 * 
 *
 */
@Service
public class SysNoticePhoneMsgDtoServiceProducer implements SysNoticePhoneMsgDtoServiceCustomer{
	private static Logger log = Logger.getLogger(SysNoticePhoneMsgDtoServiceProducer.class);
	@Autowired
	private SysNoticePhoneMsgService sysNoticePhoneService;

	public String save(String userInfo, String saveJson){
		// TODO Auto-generated method stub
	   DubboServiceResultInfo info=new DubboServiceResultInfo();
	   try {
		   SysNoticePhoneMsg sysNoticePhone=JacksonUtils.fromJson(saveJson, SysNoticePhoneMsg.class);
		   sysNoticePhoneService.save(sysNoticePhone);
		   info.setResult(JacksonUtils.toJson(sysNoticePhone));
		   info.setSucess(true);
		   info.setMsg("保存对象成功!");
		} catch (Exception e) {
		 log.error("保存对象失败!"+e.getMessage());
		 info.setSucess(false);
		 info.setMsg("保存对象失败!");
		 info.setExceptionMsg(e.getMessage());
		}
	   return JacksonUtils.toJson(info);
	}

	
	@Override
	public String vaguePage(String userJson, String paramaterJson) {
		DubboServiceResultInfo info=new DubboServiceResultInfo();
		try {
			if(StringUtils.isNotBlank(paramaterJson)){
				@SuppressWarnings("unchecked")
				Map<String,Object> map=JacksonUtils.fromJson(paramaterJson, HashMap.class);
				Page page=sysNoticePhoneService.queryVaguePage(map);
				info.setResult(JacksonUtils.toJson(page));
			    info.setSucess(true);
			    info.setMsg("获取分页对象成功!");
			}else{
				Page page=sysNoticePhoneService.getPage(new HashMap<String,Object>(), null, null);
				info.setResult(JacksonUtils.toJson(page));
			    info.setSucess(true);
			    info.setMsg("获取分页对象成功!");
			}
		} catch (Exception e) {
			 log.error("获取分页对象失败!"+e.getMessage());
			 info.setSucess(false);
			 info.setMsg("获取分页对象失败!");
			 info.setExceptionMsg(e.getMessage());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String sendMsg(String userJson, String paramaterJson) {
		DubboServiceResultInfo info=new DubboServiceResultInfo();
		try {
			if(StringUtils.isNotBlank(paramaterJson)){
				@SuppressWarnings("unchecked")
				Map<String,Object> map=JacksonUtils.fromJson(paramaterJson, HashMap.class);
				String str=sysNoticePhoneService.saveSendMsg(map);
				info.setResult(JacksonUtils.toJson(str));
			    info.setSucess(true);
			    info.setMsg("发送短信成功!");
			}else{
				log.error("发送短信失败!参数为空。");
				info.setSucess(false);
				info.setMsg("发送短信失败!参数为空。");
				info.setExceptionMsg("paramaterJson为空。");
			}
		} catch (Exception e) {
			 log.error("发送短信失败!"+e.getMessage());
			 info.setSucess(false);
			 info.setMsg("发送短信失败!");
			 info.setExceptionMsg(e.getMessage());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String sendMsgTest(String userJson, String paramaterJson) {
		DubboServiceResultInfo info=new DubboServiceResultInfo();
		try {
			if(StringUtils.isNotBlank(paramaterJson)){
				@SuppressWarnings("unchecked")
				Map<String,Object> map=JacksonUtils.fromJson(paramaterJson, HashMap.class);
				String str=sysNoticePhoneService.saveSendMsgTest(map);
				info.setResult(JacksonUtils.toJson(str));
			    info.setSucess(true);
			    info.setMsg("发送短信成功!");
			}else{
				log.error("发送短信失败!参数为空。");
				info.setSucess(false);
				info.setMsg("发送短信失败!参数为空。");
				info.setExceptionMsg("paramaterJson为空。");
			}
		} catch (Exception e) {
			 log.error("发送短信失败!"+e.getMessage());
			 info.setSucess(false);
			 info.setMsg("发送短信失败!");
			 info.setExceptionMsg(e.getMessage());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String againSendMsg(String userJson, String paramaterJson) {
		DubboServiceResultInfo info=new DubboServiceResultInfo();
		try {
			if(StringUtils.isNotBlank(paramaterJson)){
				@SuppressWarnings("unchecked")
				Map<String,Object> map=JacksonUtils.fromJson(paramaterJson, HashMap.class);
				String str=sysNoticePhoneService.updateAgainSendMsg(map);
				info.setResult(JacksonUtils.toJson(str));
			    info.setSucess(true);
			    info.setMsg("发送短信成功!");
			}else{
				log.error("发送短信失败!参数为空。");
				info.setSucess(false);
				info.setMsg("发送短信失败!参数为空。");
				info.setExceptionMsg("paramaterJson为空。");
			}
		} catch (Exception e) {
			 log.error("发送短信失败!"+e.getMessage());
			 info.setSucess(false);
			 info.setMsg("发送短信失败!");
			 info.setExceptionMsg(e.getMessage());
		}
		return JacksonUtils.toJson(info);
	}

}
