package com.jzy.hio.sys.sys.base.service.impl;

import com.jzy.hio.base.service.impl.BaseServiceImpl;
import com.jzy.hio.base.utils.MessageInfo;
import com.jzy.hio.base.utils.MessageResult;
import com.jzy.hio.base.utils.Page;
import com.jzy.hio.base.utils.ResponseModel;
import com.jzy.hio.sys.sys.base.entity.CustomFormVersionHistory;
import com.jzy.hio.sys.sys.base.mapper.CustomFormVersionHistoryDao;
import com.jzy.hio.sys.sys.base.service.CustomFormVersionHistoryService;
import com.jzy.tools.data.JacksonUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author admin
 * 
 * 
 */

@Service
public class CustomFormVersionHistoryServiceImpl extends BaseServiceImpl<String, CustomFormVersionHistory>
		implements CustomFormVersionHistoryService {
	private static final Logger			logger	= Logger.getLogger(CustomArchivesServiceImpl.class);
	@Autowired
	private CustomFormVersionHistoryDao	customFormVersionHistoryDao;

	@Override
	public Page getPageSort(Map map) {
		// 分页显示
		Page page = new Page();
		// 获取分页list 数据
		List<CustomFormVersionHistory> list = customFormVersionHistoryDao.getPageSort(map);
		// 获取条件的总数据量
		Integer count = customFormVersionHistoryDao.getPageSortCount(map);
		page.setLimit((Integer) map.get("limit"));
		page.setList(list);
		page.setStart((Integer) map.get("start"));
		page.setTotal(count);
		// 封装成page对象 传到前台
		return page;
	}

	@Override
	public MessageResult updateBean(String id, Map map) {
		try {
			CustomFormVersionHistory oldCustomFormVersionHistory = this.customFormVersionHistoryDao
					.selectByPrimaryKey(id);
			if (oldCustomFormVersionHistory == null) {
				return ResponseModel.getResult(MessageInfo.UPDATEERROR, "不存在更新对象！");
			} else {
				Map oldMap = JacksonUtils.fromJson(JacksonUtils.toJson(oldCustomFormVersionHistory), HashMap.class);
				oldMap.putAll(map);
				CustomFormVersionHistory customFormVersionHistory = JacksonUtils.fromJson(JacksonUtils.toJson(oldMap),
						CustomFormVersionHistory.class);
				int updateResult = this.update(customFormVersionHistory);
				if (updateResult == 1) {
					return ResponseModel.getResult(MessageInfo.UPDATESUCCESS, updateResult);
				} else {
					return ResponseModel.getResult(MessageInfo.UPDATEERROR, updateResult);
				}
			}
		} catch (Exception e) {
			logger.error(e);
			return ResponseModel.getResult(MessageInfo.UPDATEERROR, "修改数据失败！");
		}
	}
}
