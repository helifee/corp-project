package com.jzy.hio.sys.sys.base.service;

import com.jzy.hio.base.service.BaseService;
import com.jzy.hio.base.utils.DubboServiceResultInfo;
import com.jzy.hio.base.utils.MessageResult;
import com.jzy.hio.base.utils.Page;
import com.jzy.hio.sys.sys.base.dto.CustomFormInstanceDto;
import com.jzy.hio.sys.sys.base.entity.CustomFormInstance;

import java.util.List;
import java.util.Map;

/**
 * @author admin
 */

public interface CustomFormInstanceService extends BaseService<String, CustomFormInstance> {

	/**
	 * @Description:分页查询（排序）
	 * @author:zhangfangzhi
	 * @date 2017年3月30日 下午4:28:57
	 * @version V1.0
	 */
	Page getPageForForm(Map<String, Object> paramater);

	/**
	 * @Description:获取实例对象（包括模板格式）
	 * @author:zhangfangzhi
	 * @date 2017年3月30日 下午4:26:51
	 * @version V1.0
	 */
	MessageResult getInstanceByFormId(String id, String customFormId);

	/**
	 * @Description:获取流程变量值
	 * @author:zhangfangzhi
	 * @date 2017年4月14日 上午9:25:58
	 * @version V1.0
	 */
	MessageResult getVariableById(String idJson);

	/**
	 * @Description:流程回调修改状态
	 * @author:zhangfangzhi
	 * @date 2017年4月20日 下午7:35:55
	 * @version V1.0
	 */
	int updateStatus(CustomFormInstance customFormInstance);

	/**
	 * @Description:流程回调修改状态
	 * @author:zhangfangzhi
	 * @date 2017年4月27日 下午4:27:26
	 * @version V1.0
	 */
	int updateStatusForCustomForm(String updateJson);

	/**
	 * @Description:付款管理分页查询
	 * @author:zhangfangzhi
	 * @date 2017年11月6日 下午4:37:55
	 * @version V1.0
	 */
	Page getFundPageForForm(Map map);

	/**
	 * @Description:导入资金平台
	 * @author:zhangfangzhi
	 * @date 2017年11月7日 下午2:28:54
	 * @version V1.0
	 */
	DubboServiceResultInfo importFundPayment(List<String> list);

	/**
	 * @Description:资金平台同步
	 * @author:zhangfangzhi
	 * @date 2017年11月8日 下午2:16:35
	 * @version V1.0
	 */
	void synFund(Map map);

	/**
	 * @Description:更新单据
	 * @author:zhangfangzhi
	 * @date 2017年12月19日 下午3:23:08
	 * @version V1.0
	 */
	int updateInstance(CustomFormInstanceDto customFormInstanceDto);

	MessageResult getBeanById(String id);

	MessageResult deleteBeanById(String id);

	MessageResult deleteAllBeanByIds(List<String> strings);

	MessageResult updateBean(String id, Map<String, Object> map);

	MessageResult deletePseudoBeanById(String id);

	MessageResult deletePseudoAllBeanByIds(String ids);

	MessageResult updateBeanStatus(Map<String, Object> map);
}
