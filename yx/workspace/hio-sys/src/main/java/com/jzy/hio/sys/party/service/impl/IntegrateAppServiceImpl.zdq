package com.jzy.hio.sys.party.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jzy.hio.base.service.impl.BaseServiceImpl;
import com.jzy.hio.base.utils.DubboServiceResultInfo;
import com.jzy.hio.base.utils.Page;
import com.jzy.hio.sys.party.entity.IntegrateApp;
import com.jzy.hio.sys.party.mapper.IntegrateAppDao;
import com.jzy.hio.sys.party.service.IntegrateAppService;
import com.jzy.hio.sys.sys.org.entity.ContentChildTreeData;
import com.jzy.tools.data.JacksonUtils;

/**
 * @author admin
 * 
 * 
 */

@Service
public class IntegrateAppServiceImpl extends  BaseServiceImpl<String,IntegrateApp> implements IntegrateAppService{


	@Autowired
	private IntegrateAppDao integrateAppDao;

	/* (non-Javadoc)
	 * @see com.xinleju.platform.party.service.IntegrateAppService#getIntegratePage(java.util.Map)
	 */
	@Override
	public Page getIntegratePage(Map map) throws Exception {
		Page page = new Page();
		List<IntegrateApp> list=integrateAppDao.getIntegrateAppPage(map);
		Integer count=integrateAppDao.getIntegrateAppCount(map);
		page.setLimit((Integer) map.get("limit"));
		page.setStart((Integer) map.get("start"));
		page.setList(list);
		page.setTotal(count);
		return page;
	}

	/* (non-Javadoc)
	 * @see com.xinleju.platform.party.service.IntegrateAppService#saveIntegrateApp(com.xinleju.platform.party.entity.IntegrateApp)
	 */
	@Override
	public int saveIntegrateApp(IntegrateApp integrateApp) {
		String name = integrateApp.getName();
		Map<String,Object> map= new HashMap<String, Object>();
		map.put("name", name);
		Integer count = integrateAppDao.getIntegrateAppCountByName(map);
		if(count>0){
			return 5;
		}else{
			return integrateAppDao.insertSelective(integrateApp);
		}

	}

	/* (non-Javadoc)
	 * @see com.xinleju.platform.party.service.IntegrateAppService#updateIntegrateApp(com.xinleju.platform.party.entity.IntegrateApp)
	 */
	@Override
	public int updateIntegrateApp(IntegrateApp integrateApp) {
		String name = integrateApp.getName();
		String id = integrateApp.getId();
		IntegrateApp app = integrateAppDao.selectByPrimaryKey(id);
		String oldName = app.getName();
		Map<String,Object> map= new HashMap<String, Object>();
		map.put("name", name);
		Integer count = integrateAppDao.getIntegrateAppCountByName(map);
		if(oldName.equals(name)&&count>1||(!oldName.equals(name))&&count>0){
			return 5;
		}else{
			return integrateAppDao.updateByPrimaryKeySelective(integrateApp);
		}
	}

	@Override
	public List<ContentChildTreeData> getAppTree(IntegrateApp integrateApp) {

		List<ContentChildTreeData> resultList = new ArrayList<ContentChildTreeData>();

		if (integrateApp != null) {

			List<IntegrateApp> list = this.queryList(integrateApp);
			if (list.size() > 0) {
				for (IntegrateApp treeNode : list) {
					ContentChildTreeData contentChildTreeData = new ContentChildTreeData();
					contentChildTreeData.setpId("1");
					contentChildTreeData.setName(String.valueOf(treeNode.getName()));
					contentChildTreeData.setId(String.valueOf(treeNode.getId()));
					contentChildTreeData.setParentId("1");
					resultList.add(contentChildTreeData);
				}
			}
		}

		return resultList;	
	}
}
