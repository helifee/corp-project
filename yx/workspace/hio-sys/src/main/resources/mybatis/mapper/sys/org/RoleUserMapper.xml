<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.sys.sys.org.mapper.RoleUserDao">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.jzy.hio.sys.sys.org.entity.RoleUser">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.jzy.hio.sys.sys.org.entity.RoleUser">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.jzy.hio.sys.sys.org.entity.RoleUser">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	
	<!-- 批量保存 -->
	<insert id="insertRoleUserBatch" parameterType="map">
		INSERT into pt_sys_org_role_user(id,target_type,user_id,post_id,role_id,delflag)
		values 
		<foreach collection="list" item="ur"   separator=",">
			(#{ur.id},#{ur.targetType},#{ur.userId},#{ur.postId},#{ur.roleId},0)
		</foreach>
	</insert>
	
	<!-- 删除roleUser -->
	<delete id="deleteByRoleId" parameterType="map">
		DELETE from pt_sys_org_role_user WHERE role_id=#{roleId}
		<choose>
			<when test="refStatus != null and refStatus == 0 ">
				and (post_id is null or post_id='')
			</when>
			<when test="refStatus != null and refStatus == 1 ">
				and (user_id is null or user_id='')
			</when>
			<otherwise>
				and post_id is not null
			</otherwise>
		</choose>
	</delete>
	
	<!-- 查询角色引用对象 -->
	<select id="queryRoleRefListByRoleId" parameterType="map" resultType="com.jzy.hio.sys.sys.org.dto.RoleUserDto">
		SELECT t.id,t.target_type targetType,t.user_id userId,t.post_id postId,CONCAT(o.prefix_name,'/',r.`name`,'/',u.real_name) targetName from pt_sys_org_role_user t
			LEFT JOIN pt_sys_org_user u on t.user_id=u.id
			LEFT JOIN pt_sys_org_post p on t.post_id =p.id 
			LEFT JOIN pt_sys_org_standard_role r on p.role_id=r.id
			LEFT JOIN pt_sys_org_orgnazation o on p.ref_id=o.id
			WHERE t.target_type='1'  and p.delflag=0 and p.`status`=1 and r.delflag=0 and r.`status`=1 and t.delflag=0 
			and t.role_id=#{roleId}
		UNION ALL
		SELECT t.id,t.target_type targetType,t.user_id userId,t.post_id postId,CONCAT(o.prefix_name,'/',u.real_name) targetName from pt_sys_org_role_user t
			LEFT JOIN pt_sys_org_user u on t.user_id=u.id
			LEFT JOIN pt_sys_org_orgnazation o on u.belong_org_id=o.id
			WHERE t.target_type='1'  and t.delflag=0 and (t.post_id ='' or t.post_id is null)
			and t.role_id=#{roleId}
		UNION ALL
		SELECT t.id,t.target_type targetType,'',t.post_id postId,CONCAT(o.prefix_name,'/',r.`name`) targetName from pt_sys_org_role_user t
		LEFT JOIN pt_sys_org_post p on t.post_id =p.id 
		LEFT JOIN pt_sys_org_standard_role r on p.role_id=r.id
		LEFT JOIN pt_sys_org_orgnazation o on p.ref_id=o.id
			WHERE t.target_type='2'  and p.delflag=0 and p.`status`=1 and r.delflag=0 and r.`status`=1 and t.delflag=0 
			and t.role_id=#{roleId}
	</select>
	<!-- 查询角色引用对象:岗位 -->
	<select id="queryRoleRefPostListByRoleId" parameterType="map" resultType="com.jzy.hio.sys.sys.org.dto.RoleUserDto">
		SELECT t.id,t.target_type targetType,'',t.post_id postId,CONCAT(o.prefix_name,'/',r.`name`) targetName from pt_sys_org_role_user t
		LEFT JOIN pt_sys_org_post p on t.post_id =p.id 
		LEFT JOIN pt_sys_org_standard_role r on p.role_id=r.id
		LEFT JOIN pt_sys_org_orgnazation o on p.ref_id=o.id
			WHERE t.target_type='2'  and p.delflag=0 and p.`status`=1 and r.delflag=0 and r.`status`=1 and t.delflag=0 
			and t.role_id=#{roleId}
	</select>
	<!-- 查询角色引用对象:人员 -->
	<select id="queryRoleRefUserListByRoleId" parameterType="map" resultType="com.jzy.hio.sys.sys.org.dto.RoleUserDto">
		SELECT t.id,t.target_type targetType,t.user_id userId,t.post_id postId,CONCAT(o.prefix_name,'/',u.real_name) targetName from pt_sys_org_role_user t
			LEFT JOIN pt_sys_org_user u on t.user_id=u.id
			LEFT JOIN pt_sys_org_orgnazation o on u.belong_org_id=o.id
			WHERE t.target_type='1' and t.delflag=0 and (t.post_id ='' or t.post_id is null)
			and t.role_id=#{roleId}
	</select>
	
	<!-- 查询人员岗位组织树 -->
	<select id="selectUserPostTree" parameterType="map" resultType="map">
		SELECT t.id,t.`name`,t.parent_id pId,t.id prefixId,t.`name` prefixName,'cata' type,'' postId,1 sort ,t.`status` from pt_sys_org_root t
	UNION
		SELECT o.id,o.`name`,if(IFNULL(o.parent_id ,'')='',o.root_id,o.parent_id) parentId,o.prefix_id prefixId,o.prefix_name prefixName,o.type nodeType,'' postId,o.sort,o.`status` from pt_sys_org_orgnazation o  
		WHERE o.delflag=0 and o.`status`=1  
			and not EXISTS (SELECT 1 from pt_sys_org_orgnazation p WHERE (p.delflag=1 or p.`status`=0) and o.prefix_id LIKE CONCAT('',p.prefix_id,'%'))
	UNION
		SELECT p.id,r.`name`,p.ref_id pId,CONCAT(o.prefix_id,'/',p.id) prefixId,CONCAT(o.prefix_name,'/',r.`name`) prefixName,'post' type,p.id postId,null sort ,o.`status` from pt_sys_org_post p  
		LEFT JOIN pt_sys_org_orgnazation o on p.ref_id=o.id
		LEFT JOIN pt_sys_org_standard_role r on r.id=p.role_id
		WHERE  r.delflag=0 and r.`status`=1 and o.delflag=0 and o.`status`=1 and p.delflag=0
			and not EXISTS (SELECT 1 from pt_sys_org_orgnazation p WHERE (p.delflag=1 or p.`status`=0) and o.prefix_id LIKE CONCAT('',p.prefix_id,'%'))
	UNION 
		SELECT u.id,u.real_name,p.id pId,CONCAT(o.prefix_id,'/',p.id,'/',u.id) prefixId,CONCAT(o.prefix_name,'/',r.`name`,'/',u.real_name) prefixName,'user' type,p.id postId ,u.sort,u.`status` from pt_sys_org_post_user pu  
		LEFT JOIN pt_sys_org_post p on pu.post_id=p.id
		LEFT JOIN pt_sys_org_orgnazation o on p.ref_id=o.id
		LEFT JOIN pt_sys_org_user u on pu.user_id=u.id
		LEFT JOIN pt_sys_org_standard_role r on r.id=p.role_id
		WHERE  r.delflag=0 and r.`status`=1 and u.delflag=0  and o.delflag=0 and o.`status`=1 and p.delflag=0
		<if test="userStatus !=null and userStatus !='' ">
			and u.`status`=#{userStatus}
		</if>
		and not EXISTS (SELECT 1 from pt_sys_org_orgnazation p WHERE (p.delflag=1 or p.`status`=0) and o.prefix_id LIKE CONCAT('',p.prefix_id,'%'))
	order by  case when sort is null then 1 else 0 end,  sort ,LENGTH(prefixId)
	</select>
	
	<!-- 查询人员岗位组织树 优化 begin -->
	<select id="selectTreeOrg" parameterType="map" resultType="map">
		SELECT t.id,t.`name`,t.parent_id pId,t.id prefixId,t.`name` prefixName,'cata' type,'' postId,1 sort ,t.`status` from pt_sys_org_root t
		UNION
		SELECT o.id,o.`name`,if(IFNULL(o.parent_id ,'')='',o.root_id,o.parent_id) parentId,o.prefix_id prefixId,o.prefix_name prefixName,o.type nodeType,'' postId,o.sort,o.`status` from pt_sys_org_orgnazation o  
		WHERE o.delflag=0 and o.`status`=1  
			and not EXISTS (SELECT 1 from pt_sys_org_orgnazation p WHERE (p.delflag=1 or p.`status`=0) and o.prefix_id LIKE CONCAT('',p.prefix_id,'%'))
		order by  case when sort is null then 1 else 0 end,  sort ,LENGTH(prefixId)
	</select>
	<select id="selectTreePost" parameterType="map" resultType="map">
		SELECT p.id,r.`name`,p.ref_id pId,CONCAT(o.prefix_id,'/',p.id) prefixId,CONCAT(o.prefix_name,'/',r.`name`) prefixName,'post' type,p.id postId,null sort ,o.`status` from pt_sys_org_post p  
		LEFT JOIN pt_sys_org_orgnazation o on p.ref_id=o.id
		LEFT JOIN pt_sys_org_standard_role r on r.id=p.role_id
		WHERE  r.delflag=0 and r.`status`=1 and o.delflag=0 and o.`status`=1 and p.delflag=0
			and not EXISTS (SELECT 1 from pt_sys_org_orgnazation p WHERE (p.delflag=1 or p.`status`=0) and o.prefix_id LIKE CONCAT('',p.prefix_id,'%'))
		order by 4
	</select>
	<select id="selectTreePostUser" parameterType="map" resultType="map">
		SELECT u.id,u.real_name name,u.login_name loginName,p.id pId,CONCAT(o.prefix_id,'/',p.id,'/',u.id) prefixId,CONCAT(o.prefix_name,'/',r.`name`,'/',u.real_name) prefixName,'user' type,p.id postId ,u.sort,u.`status`,pu.is_default isDefaultPost from pt_sys_org_post_user pu
		LEFT JOIN pt_sys_org_post p on pu.post_id=p.id
		LEFT JOIN pt_sys_org_orgnazation o on p.ref_id=o.id
		LEFT JOIN pt_sys_org_user u on pu.user_id=u.id
		LEFT JOIN pt_sys_org_standard_role r on r.id=p.role_id
		WHERE  r.delflag=0 and r.`status`=1 and u.delflag=0  and o.delflag=0 and o.`status`=1 and p.delflag=0
		<if test="userStatus !=null and userStatus !='' ">
			and u.`status`=#{userStatus}
		</if>
		<if test="isDefault !=null  ">
			and  pu.is_default = 1
		</if>
			and not EXISTS (SELECT 1 from pt_sys_org_orgnazation p WHERE (p.delflag=1 or p.`status`=0) and o.prefix_id LIKE CONCAT('',p.prefix_id,'%'))
		order by  case when u.sort is null then 1 else 0 end,  u.sort ,4
	</select>
	<select id="selectTreeOrgUser" parameterType="map" resultType="map">
		SELECT u.id,u.real_name name,o.id pId,CONCAT(o.prefix_id,'/',u.id) prefixId,CONCAT(o.prefix_name,'/',u.real_name) prefixName,'user' type ,u.sort from pt_sys_org_user u 
		LEFT JOIN pt_sys_org_orgnazation o on u.belong_org_id=o.id 
		WHERE o.delflag=0 and o.`status`=1 and u.delflag=0 and u.`status`=1  
			and not EXISTS (SELECT 1 from pt_sys_org_orgnazation p WHERE (p.delflag=1 or p.`status`=0) and o.prefix_id LIKE CONCAT('',p.prefix_id,'%'))
		order by  case when u.sort is null then 1 else 0 end,  u.sort ,4
	</select>
	<!-- 优化 end -->
	
	
	<!-- 查询人员组织树 -->
	<select id="selectUserOrgTree" parameterType="map" resultType="map">
		SELECT t.id,t.`name`,t.parent_id pId,t.id prefixId,t.`name` prefixName,'cata' type,'1' sort  from pt_sys_org_root t
	UNION
		SELECT o.id,o.`name`,if(IFNULL(o.parent_id ,'')='',o.root_id,o.parent_id) parentId,o.prefix_id prefixId,o.prefix_name prefixName,o.type nodeType,o.sort from pt_sys_org_orgnazation o 
		WHERE o.delflag=0 and o.`status`=1 and
			not EXISTS (SELECT 1 from pt_sys_org_orgnazation p WHERE (p.delflag=1 or p.`status`=0) and o.prefix_id LIKE CONCAT('',p.prefix_id,'%'))
	UNION 
		SELECT u.id,u.real_name,o.id pId,CONCAT(o.prefix_id,'/',u.id) prefixId,CONCAT(o.prefix_name,'/',u.real_name) prefixName,'user' type ,u.sort from pt_sys_org_user u 
		LEFT JOIN pt_sys_org_orgnazation o on u.belong_org_id=o.id 
		WHERE o.delflag=0 and o.`status`=1 and u.delflag=0 and u.`status`=1  
			and not EXISTS (SELECT 1 from pt_sys_org_orgnazation p WHERE (p.delflag=1 or p.`status`=0) and o.prefix_id LIKE CONCAT('',p.prefix_id,'%'))
	order by  case when sort is null then 1 else 0 end,  sort ,LENGTH(prefixId) 
	</select>
	
	
	<!-- 查询组织及其下级是否存在岗位 -->
	<select id="selectSonRefCount" parameterType="map" resultType="int">
		SELECT COUNT(*) from (
			SELECT ru.id FROM
						pt_sys_org_role_user ru
					LEFT JOIN pt_sys_org_standard_role s on s.id=ru.role_id
					LEFT JOIN pt_sys_org_role_catalog f on s.prefix_id like CONCAT('',f.prefix_id,'%')
					WHERE ru.delflag=#{delflag} and  f.id =#{cataId}
			UNION
			SELECT p.id FROM
						pt_sys_org_post p
					LEFT JOIN pt_sys_org_standard_role s on s.id=p.role_id
					LEFT JOIN pt_sys_org_role_catalog f on s.prefix_id like CONCAT('',f.prefix_id,'%')
					WHERE p.delflag=#{delflag} and  f.id =#{cataId}
		) t
	</select>
	
</mapper>