<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.sys.sys.res.mapper.ResourceDao">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.jzy.hio.sys.sys.res.entity.Resource">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.jzy.hio.sys.sys.res.entity.Resource">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.jzy.hio.sys.sys.res.entity.Resource">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	<!-- 根据系统id获取资源-->
		<select id="queryResourceListByAppId" resultType="com.jzy.hio.sys.sys.res.dto.DataNodeDto" parameterType="java.lang.String">
		 SELECT
			id,
			NAME,
			sort,
			openmode,
			url as resourceurl,
			parent_id AS 'parentId'
		FROM
			pt_sys_res_resource
		WHERE
			app_id = #{appId}
		AND
			delflag = false 
		AND 
			status = '1'
		AND (
			parent_id IS NULL
			OR parent_id = ''
		)
		ORDER BY
			sort
	</select>
		<select id="queryResourceListByParentId" resultType="com.jzy.hio.sys.sys.res.dto.DataNodeDto" parameterType="java.lang.String">
		 SELECT
			id,
			NAME,
			sort,
			openmode,
			url as resourceurl,
			parent_id AS 'parentId'
		FROM
			pt_sys_res_resource
		<choose>
                <when test="_parameter != null">
                        where parent_id= #{_parameter,jdbcType=VARCHAR} AND delflag = false AND status = '1'
                </when>
                <otherwise>
                        where parent_id is null  AND delflag = false AND status = '1'
                 </otherwise>
         </choose>
         ORDER BY
			sort
	</select>
	<select id="queryResourceListAll" resultType="com.jzy.hio.sys.sys.res.dto.DataNodeDto" parameterType="java.lang.String">
		 SELECT
			id,
			NAME,
			sort,
			openmode,
			url as resourceurl,
			parent_id AS 'parentId'
		FROM
			pt_sys_res_resource
        where delflag = false AND status = '1'
         ORDER BY
			sort
	</select>
	<!-- 获取列表根据条件查询 -->
	<select id="queryListByCondition" resultType="com.jzy.hio.sys.sys.res.dto.ResourceDto" parameterType="java.util.HashMap">
		SELECT
			r.id AS id,
			r.concurrency_version AS concurrencyVersion,
			r.CODE AS CODE,
			r.NAME AS NAME,
			r.tend_id AS tendId,
			r.url AS url,
			r.mobile_url As mobileUrl,
			r.app_id AS appId,
			r.parent_id AS parentId,
			r.STATUS AS STATUS,
			r.icon AS icon,
			r.sort AS sort,
			r.isinventedmenu AS isinventedmenu,
			r.isoutmenu AS isoutmenu,
			r.remark AS remark,
			r.create_date AS createDate,
			r.update_date AS updateDate,
			r.create_person_id AS createPersonId,
			r.create_person_name AS createPersonName,
			r.update_person_id AS updatePersonId,
			r.update_person_name AS updatePersonName,
			r.create_org_id AS createOrgId,
			r.create_org_name AS createOrgName,
			r.create_company_id AS createCompanyId,
			r.create_company_name AS createCompanyName,
			r.delflag AS delflag,
			r.openmode AS openmode,
		    rr. NAME AS 'parentName',
			app.`name` AS 'appName',
			r.prefix_id AS prefixId,
			r.prefix_name AS prefixName,
			r.prefix_sort AS prefixSort
		FROM
			pt_sys_res_resource r
		  
		LEFT JOIN pt_sys_res_resource rr ON r.parent_id = rr.id
		LEFT JOIN pt_sys_res_app app ON r.app_id = app.id
		
		WHERE 1=1
		<if test="menuDelFlag !=null">
			and r.delflag = #{menuDelFlag} 
		</if>
		<if test="appId != null and appId != ''">
				and r.app_id = #{appId}
		</if>
		<if test="isCustomForm == null and appId != null and appId != ''">
			and r.prefix_id not like '%23087b7b97324c93afd817a5c400b8ea%'
		</if>
		<if test="id != null and id != ''">
				and r.id = #{id}
		</if>
		<if test="menuStatus !=null">
			and r.`status`=#{menuStatus}
		</if>
		 order by r.prefix_sort
		 <if test="start !=null and limit !=null and limit!=-1">
			 limit #{start},#{limit}
		 </if>
	</select>
	
	<!-- 校验编码重复 -->
	<select id="getCodeCount" parameterType="map" resultType="int">
		SELECT count(*) from pt_sys_res_resource t where t.`code` =#{code} and t.app_id=#{appId}  and t.delflag=0
		<if test="id !=null">
			and t.id !=#{id}
		</if>
	</select>
	
	<!-- 查询所有父节点 -->
	<select id="selectAllParentId" parameterType="map" resultType="String">
	SELECT DISTINCT r.parent_id from pt_sys_res_resource r 
		where r.parent_id is not null and r.parent_id !=''  and r.delflag=0
		<if test="appId !=null">
			and r.app_id=#{appId} 
		</if>
	</select>
	
	<!-- 判断菜单是否存在下级菜单或按钮 -->
	<!-- <select id="selectSonNum" parameterType="map" resultType="int">
		SELECT
			count(*)
		FROM
			(
				SELECT
					t.id
				FROM
					pt_sys_res_resource t
				WHERE
					t.delflag=0 and 
					t.parent_id = #{menuId}
				UNION
				SELECT
					o.id
				FROM
					pt_sys_res_operation o
				WHERE
					o.delflag=0 and 
					o.resource_id = #{menuId}
			) a
	</select> -->
	<!-- 判断菜单下级是否被引用 -->
	<select id="selectSonNum" parameterType="map" resultType="int">
		SELECT count(*) FROM
			pt_sys_res_operation o
			LEFT JOIN pt_sys_res_resource s on s.id=o.resource_id
			LEFT JOIN pt_sys_res_resource p on s.prefix_id like CONCAT('',p.prefix_id,'%')
			WHERE o.delflag=0 and  p.id =#{menuId}
	</select>
	
	<!-- 禁用菜单并禁用其下级菜单-->
	<update id="lockMenu" parameterType="map">
		UPDATE pt_sys_res_resource SET ${tableCol}=#{val} WHERE prefix_id like CONCAT(#{menuId},'%')
	</update>
	<!-- 启用菜单并启用其上级菜单 -->
	<update id="unLockMenu" parameterType="map">
		UPDATE pt_sys_res_resource SET `status`=1 WHERE id in 
		<foreach collection="menuIds" item="menuId" open="(" close=")" separator=",">
			#{menuId}
		</foreach>
	</update>
	
	<!-- 获取用户的菜单(认证)-->
	<select id="queryAuthMenu" resultType="com.jzy.hio.sys.sys.res.dto.ResourceDto" parameterType="java.util.HashMap">
		select * from (
			select t.id as id,t.name as name,t.parent_id as parentId,t.resource_id as resourceId ,t.app_id as appId,t.url as resourceUrl,'OPERATION' type, t.prefix_id as prefixId,t.prefix_name as prefixName ,t.prefix_sort as prefixSort,tt.role_id as roleId
			from pt_sys_res_operation t,pt_sys_res_func_permission tt ,pt_sys_res_app ttt ,pt_sys_res_resource tttt 
			where t.resource_id = tttt.id and  t.app_id = ttt.id and t.id = tt.operation_id and t.delflag = 0 and ttt.delflag =0 and tttt.delflag =0 
			<if test="roleIds != null ">
				and  tt.role_id in
				<foreach item="item" index="index" collection="roleIds" open="(" separator="," close=")">  
		            #{item} 
		        </foreach>
			</if>
			UNION 
			select r.id as id,r.name as name,r.parent_id as parentId,'' as resourceId,r.app_id as appId,r.url as resourceUrl,'RESOURCE' type, r.prefix_id as prefixId,r.prefix_name as prefixName ,r.prefix_sort as prefixSort,'' roleId 
			from pt_sys_res_resource r ,pt_sys_res_operation t,pt_sys_res_func_permission tt,pt_sys_res_app ttt where r.id = t.resource_id and  t.app_id = ttt.id and r.delflag =0 and t.delflag = 0 and ttt.delflag =0 and t.id = tt.operation_id 
			<if test="roleIds != null ">
				and  tt.role_id in
				<foreach item="item" index="index" collection="roleIds" open="(" separator="," close=")">  
		            #{item} 
		        </foreach>
			</if>
		) o GROUP BY o.id ORDER BY o.prefixSort
	</select>
</mapper>