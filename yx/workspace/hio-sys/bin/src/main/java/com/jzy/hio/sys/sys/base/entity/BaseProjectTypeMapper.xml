<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.platform.sys.base.entity.BaseProjectType">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.platform.sys.base.entity.BaseProjectType">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.platform.sys.base.entity.BaseProjectType">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.platform.sys.base.entity.BaseProjectType">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>

		 <!-- 根据parentId/sort查询对象-->
	<select id="getBaseProjectBySort" resultType="com.xinleju.platform.sys.base.entity.BaseProjectType"  parameterType="java.util.HashMap">
			select 
		 	id as id ,
           create_date as  createDate,
           update_date as updateDate,
           disabled_date as disabledDate,
           create_person_id as createPersonId,
           create_person_name as createPersonName,
           update_person_id as updatePersonId,
           update_person_name as updatePersonName,
            create_org_id as createOrgId,
            create_org_name as createOrgName,
            create_company_id as createCompanyId,
            create_company_name as createCompanyName,
            concurrency_version as concurrencyVersion,
          	delflag as delflag,
            name  as name,
            code as  code,
            prefix_id as prefixId,
           parent_id as  parentId,
            status as  status,
            remark as  remark,
            sort as sort
			 from pt_sys_base_project_type where 1=1
		<choose>
                <when test="parentId != null">
                     and   parent_id = #{parentId}
                </when>
                <otherwise>
                     and    parent_id  is Null
                 </otherwise>
        </choose> 
        	 	<choose>
                <when test="status != null and status!=''">
                   and    status = #{status}
                </when>
        	 	</choose> 
				 <choose>
                <when test="sort != null">
                       and sort=#{sort}  
                </when>
         		</choose>
			and delflag=0  order by sort 
	</select>
	
		 <!-- 根据查询重复的对象-->
	<select id="getRepeatObject" resultType="com.xinleju.platform.sys.base.entity.BaseProjectType"  parameterType="java.util.HashMap">
			select 
		 	id as id ,
           create_date as  createDate,
           update_date as updateDate,
           disabled_date as disabledDate,
           create_person_id as createPersonId,
           create_person_name as createPersonName,
           update_person_id as updatePersonId,
           update_person_name as updatePersonName,
            create_org_id as createOrgId,
            create_org_name as createOrgName,
            create_company_id as createCompanyId,
            create_company_name as createCompanyName,
            concurrency_version as concurrencyVersion,
          	delflag as delflag,
            name  as name,
            code as  code,
            prefix_id as prefixId,
           parent_id as  parentId,
            status as  status,
            remark as  remark,
            sort as sort
			 from pt_sys_base_project_type where   delflag=0 and (name=#{name} or code=#{code} )
	</select>
	
	
			 <!--查询列表对象-->
	<select id="getBaseProjectListToView" resultType="com.xinleju.platform.sys.base.entity.BaseProjectType"  parameterType="java.util.HashMap">
			select 
		 	id as id ,
           create_date as  createDate,
           update_date as updateDate,
           disabled_date as disabledDate,
           create_person_id as createPersonId,
           create_person_name as createPersonName,
           update_person_id as updatePersonId,
           update_person_name as updatePersonName,
            create_org_id as createOrgId,
            create_org_name as createOrgName,
            create_company_id as createCompanyId,
            create_company_name as createCompanyName,
            concurrency_version as concurrencyVersion,
          	delflag as delflag,
          	     prefix_id as prefixId,
            name  as name,
            code as  code,
           parent_id as  parentId,
            status as  status,
            remark as  remark,
            sort as sort
			from pt_sys_base_project_type p  where 
<!--   EXISTS (
	SELECT
		1
	FROM
		pt_sys_base_project_type pp 
	WHERE
		locate(p.sort,pp.sort) > 0 
) and -->
 p.delflag=0
 <if test="name!=null and name!=''">
   and p.name  like CONCAT(CONCAT('%',#{name}),'%')
 </if>
 <if test="pstatus!='-1' and pstatus!='' ">
  and p.status=#{pstatus}
 </if>
ORDER BY
	p.sort
	limit #{start},#{limitNum}
	</select>
	
			 <!--查询列表对象-->
	<select id="updateAllNodes" resultType="java.lang.Integer"  parameterType="java.util.HashMap">
       UPDATE pt_sys_base_project_type t
		SET t.sort = REPLACE (
			t.sort,
			#{oldSort},
			#{newSort}
		)
WHERE
	t.prefix_id LIKE  CONCAT(CONCAT('%',#{prefixId}),'%')
	</select>
	
	<select id="getBaseProjectParentIdList" resultType="java.lang.String">
SELECT DISTINCT
	(
		CASE
		WHEN t.parent_id IS NULL THEN
			concat('null_', t.id)
		ELSE
			t.parent_id
		END
	) AS parentId
FROM (SELECT g.id ,g.parent_id from pt_sys_base_project_type g where g.delflag=0) as t

	</select>
		    <update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<select id="getDeleteBaseProjectList"  resultType="java.lang.String"   parameterType="java.util.HashMap">
			select 
		 	t.id 
			 from pt_sys_base_project_type t where t.prefix_id like CONCAT(#{prefixId},'%') and t.delflag=0
	</select>
	
	<!-- 查询所有产品类型 -->
	<select id="getAllProductType" parameterType="map" resultType="map">
		select id,name,code,parent_id from pt_sys_base_project_type t ORDER BY t.sort 
	</select>
	<select id="queryListByIds" parameterType="java.util.Map" resultType="com.xinleju.platform.sys.base.entity.BaseProjectType">
			select 
		 	id as id ,
           create_date as  createDate,
           update_date as updateDate,
           disabled_date as disabledDate,
           create_person_id as createPersonId,
           create_person_name as createPersonName,
           update_person_id as updatePersonId,
           update_person_name as updatePersonName,
            create_org_id as createOrgId,
            create_org_name as createOrgName,
            create_company_id as createCompanyId,
            create_company_name as createCompanyName,
            concurrency_version as concurrencyVersion,
          	delflag as delflag,
          	     prefix_id as prefixId,
            name  as name,
            code as  code,
           parent_id as  parentId,
            status as  status,
            remark as  remark,
            sort as sort
			from pt_sys_base_project_type p  where p.id in 	
			<foreach collection="setIds" index="index"  item="item" open="(" separator="," close=)">#{item}</foreach>
			order by p.sort
	</select>
	
	<select id="getLeafBaseProjectType" resultType="java.util.Map">
	SELECT
	t.id,
	t.name
FROM
	pt_sys_base_project_type t
WHERE
	not EXISTS (
		SELECT 
			p.parent_id
		FROM
			pt_sys_base_project_type p where p.parent_id = t.id
	)

	
	
	</select>
</mapper>