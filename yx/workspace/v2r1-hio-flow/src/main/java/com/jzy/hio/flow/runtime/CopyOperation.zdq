package com.jzy.hio.flow.runtime;

import java.util.List;

import com.jzy.hio.exception.ApiException;
import com.jzy.hio.exception.HioException;
import com.jzy.hio.flow.entity.FlowVariables;
import com.jzy.hio.flow.entity.dto.FlowInstanceInfo;
import com.jzy.hio.flow.entity.enums.FlowStateEnum;
import com.jzy.hio.flow.entity.param.CopyParam;
import com.jzy.hio.flow.utils.FlowConstants;
import com.jzy.hio.platform.message.param.MessageEnum;
import com.jzy.hio.utils.LoginUser;

public class CopyOperation extends AbstractBaseOperation {

	@Override
	public OperateType getType() {
		 
		return OperateType.COPY;
	}
	
	@Override
	public String copyOperation(CopyParam copyParam) {
		
		List<String> sendOutList = this.getService().getFlowCopyDao().haveSentOutList(copyParam.getInstanceId());

		FlowInstanceInfo instanceInfo = this.getService().getFlowInstanceDao().getInstanceInfoById(copyParam.getInstanceId());
		if (instanceInfo == null) {
			logger.error("传入实例Id不正确");
			throw new ApiException(FlowConstants.FLOW_NOT_EXIST.getMessage(), FlowConstants.FLOW_NOT_EXIST.getStatus());
		}

		int instanceState = instanceInfo.getInstanceState();
		if (instanceState == FlowStateEnum.DRAFT.getState()) {
			logger.error("当前实例状态 不可以抄送");
			throw new ApiException(FlowConstants.CURRENT_FLOW_CANNOT_COPY.getMessage(),
					FlowConstants.CURRENT_FLOW_CANNOT_COPY.getStatus());
		}

		LoginUser loginUser = this.getService().getLoginUser();
		FlowVariables flowVariables = getFlowVariables(loginUser, copyParam.getInstanceId(), instanceInfo,false);
		List<String> copyUserIds = copyParam.getCopyUserIds();
 
		setCopyAndFilterCopyPerson(flowVariables, copyUserIds, sendOutList);
		flowVariables.setMsgType(MessageEnum.TOREAD.getValue());
		insertApprovalInfo(flowVariables);

		return SUCCESS;
	}

}
