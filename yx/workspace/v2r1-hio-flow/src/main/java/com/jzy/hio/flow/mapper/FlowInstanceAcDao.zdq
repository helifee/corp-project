package com.jzy.hio.flow.mapper;

import java.util.Date;
import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.jzy.hio.base.mapper.BaseMapper;
import com.jzy.hio.flow.entity.FlowInstanceAc;
import com.jzy.hio.flow.entity.dto.InstanceAcRecordDto;

public interface FlowInstanceAcDao extends BaseMapper<FlowInstanceAc> {

	/**
	 * 实例环节
	 * 
	 * @param nextNodeIds
	 * @param instanceId
	 * @return
	 */
	List<FlowInstanceAc> queryNextInstanceList(@Param("nextNodeIds") String nextNodeIds,
			@Param("instanceId") String instanceId);

	int updateState(FlowInstanceAc flowInstanceAc);

	List<FlowInstanceAc> getInstanceAcByInstanceId(@Param("instanceId") String instanceId);

	/**
	 * 修改实例的 上下级实例Id指向
	 * 
	 * @param updatePreOrNextId
	 * @param string
	 */
	int updatePreOrNextId(@Param("instanceId") String instanceId, @Param("instanceAcId") String instanceAcId,
			@Param("preOrNext") String preOrNext, @Param("ids") String ids);

	/**
	 * 修改执行环节
	 * @param instanceId 
	 * 
	 * @param substring
	 * @return
	 */
	int updateRunTimeState(@Param("acIds") String acIds, @Param("state") Integer state,
			@Param("updateDate") Date updateDate,@Param("instanceId") String instanceId);

	/**
	 * 更新pre节点
	 * 
	 * @param updateInstanceAcPreIdList
	 * @return
	 */
	int updateInstanceAcPreIdsList(List<FlowInstanceAc> updateInstanceAcPreIdList);

	/**
	 * 更新next节点
	 * 
	 * @param updateInstanceAcPreIdList
	 * @return
	 */
	int updateInstanceAcNextIdsList(List<FlowInstanceAc> updateInstanceAcNextIdList);

	/**
	 * 查询 实例环节记录
	 * 
	 * @param instanceId
	 * @return
	 */
	List<InstanceAcRecordDto> queryInstanceAcApprovalRecord(@Param("instanceIds") String instanceIds);

	/**
	 * 修改当前正在执行的所有没有审批的环节 为驳回
	 * 
	 * @param instanceId
	 * @param state
	 * @param newIds
	 * @param updateDate
	 * @return
	 */
	int updateInstanceAcState(@Param("instanceId") String instanceId,@Param("instanceAcId") String instanceAcId, @Param("state") Integer state,
			 @Param("updateDate") Date updateDate);

	/**
	 * 查询拒绝实例加签已完成的环节
	 * 
	 * @param instanceIds
	 * @return
	 */
	List<FlowInstanceAc> queryRejectIntanceAddLabelAc(@Param("instanceIds") String instanceIds);

	/**
	 *  点亮环节
	 * @param updateInstanceAcList
	 * @return
	 */
	int updateBatchInstanceAcState(List<FlowInstanceAc> updateInstanceAcList);

	int updateApprovalState(List<FlowInstanceAc> updateInstanceAcList);

	/**
	 * 修改左右节点
	 * @param updateAroundNodeIdList
	 * @return
	 */
	int updateAroundNodeIdList(List<FlowInstanceAc> updateAroundNodeIdList);

	/**
	 * 批量删除环节
	 * @param acIds
	 * @param date 
	 * @param string 
	 * @param instanceId
	 * @param isStartNode 
	 * @return
	 */
	int deleteBatchPseudoAllAcById(@Param("acIds")List<String> acIds,@Param("instanceId") String instanceId,@Param("updateDate") Date updateDate,@Param("isStartNode")boolean isStartNode);

}