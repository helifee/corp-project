package com.jzy.hio.flow.interceptor;

import java.io.IOException;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpRequest;
import org.springframework.http.client.ClientHttpRequestExecution;
import org.springframework.http.client.ClientHttpRequestInterceptor;
import org.springframework.http.client.ClientHttpResponse;

import com.jzy.hio.exception.HioException;
import com.jzy.hio.flow.utils.LoginUtils;

/**
 * Token设置拦截器
 * 
 * @author daoqi
 *
 */
public class TokenInterceptor implements ClientHttpRequestInterceptor {
	private static final Logger logger = LoggerFactory.getLogger(TokenInterceptor.class);

	@Override
	public ClientHttpResponse intercept(HttpRequest request, byte[] body, ClientHttpRequestExecution execution) throws IOException {
		String authorization = LoginUtils.getAuthorization();
		if(StringUtils.isBlank(authorization)) {
			String errorMsg = "发送第三方请求前未取得当前用户token！";
			logger.error(errorMsg);
			throw new HioException(errorMsg);
		}
		
		request.getHeaders().add("Authorization", authorization);
		logger.info("发送第三方请求前设置token:" + authorization);
		
		return execution.execute(request, body);
	}
}
