package com.jzy.hio.flow.mapper;

import java.util.Date;
import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.jzy.hio.base.mapper.BaseMapper;
import com.jzy.hio.flow.entity.FlowCopy;
import com.jzy.hio.flow.entity.dto.ApprovalDto;
import com.jzy.hio.flow.entity.param.ApprovalParam;

public interface FlowCopyDao extends BaseMapper<FlowCopy> {

	/**
	 * 我 的抄送列表
	 * 
	 * @param approvalParam
	 * @return
	 */
	List<ApprovalDto> getFlowCopyList(ApprovalParam approvalParam);

	/**
	 * 我 的抄送列表总数
	 * 
	 * @param approvalParam
	 * @return
	 */
	Integer getCountFlowCopyList(ApprovalParam approvalParam);

	/**
	 * 删除草稿抄送
	 * 
	 * @param instanceId
	 * @return
	 */
	int deleteAllByInstranceId(String instanceId);

	/**
	 * 查询已发出的用户
	 * 
	 * @param instanceId
	 * @return
	 */
	List<String> haveSentOutList(String instanceId);

	/**
	 * 查询我的抄送列表中是否有当前实例
	 * 
	 * @param instanceId
	 * @param userId
	 * @return
	 */
	Integer isMyCopy(@Param("instanceId") String instanceId, @Param("userId") String userId);

	/**
	 * 删除非表单上的抄送
	 * 
	 * @param flowCopy
	 */
	void deleteCopy(FlowCopy flowCopy);

	/**
	 * 修改抄送指向重新发起的新的实例
	 * 
	 * @param id
	 * @param newInstanceId
	 * @param date
	 * @return
	 */
	int updateCopyInstanceByInstanceId(@Param("instanceId") String instanceId,
			@Param("newInstanceId") String newInstanceId, @Param("updateDate") Date updateDate);

	Integer queryMyUnreadCount(FlowCopy flowCopy);

	/**
	 * 移动端审批抄送列表
	 * 
	 * @param userIdOA
	 * @return
	 */
	List<ApprovalDto> getFlowCopyMobileList(String userIdOA);

	int updateIsReadByInstanceIdAndCopyUserId(@Param("instanceId") String instanceId, @Param("userId") String userId,
			@Param("updateDate") Date updateDate);
	
	int queryUnReadCount(@Param("instanceId") String instanceId, @Param("userId") String userId);

	List<String> getAlreadyCopyApprover(@Param("instanceId")String instanceId);
}