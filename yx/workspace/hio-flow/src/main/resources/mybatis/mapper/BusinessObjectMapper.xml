<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.flow.mapper.BusinessObjectDao">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.jzy.hio.flow.entity.BusinessObject">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.jzy.hio.flow.entity.BusinessObject">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.jzy.hio.flow.entity.BusinessObject">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	<!-- 获取业务对象树 -->
	<select id="getTree" resultType="com.jzy.hio.flow.dto.tobedeleted.BusinessObjectDto">
		SELECT DISTINCT aa.id, aa.pid, aa.name, aa.dataType,aa.sort,aa.`code` FROM (
		 SELECT id,0 AS pId,name, 'app' dataType, '$0000' sort,`code`  FROM pt_sys_res_app WHERE delflag=0 AND status=1
		UNION 
		SELECT bo.id,
		case when (bo.parent_id is null or bo.parent_id='') then bo.app_id else bo.parent_id end AS pId, 
		bo.name, bo.data_type dataType, bo.sort,bo.`code`
		FROM pt_flow_business_object bo,pt_sys_res_app app 
    	WHERE bo.app_id = app.id 
    	AND (bo.data_type='1' or bo.data_type='2' )
		AND app.delflag=0 AND app.status=1 AND bo.delflag=0 ) aa ORDER BY aa.sort
	</select>
	
	<select id="seachKeyword" resultType="com.jzy.hio.flow.dto.tobedeleted.BusinessObjectDto">
		SELECT bo.id, bo.app_id as appId, bo.code, bo.name FROM pt_flow_business_object bo 
		WHERE (bo.code like concat('%',#{keyword}, '%') OR bo.name like concat('%',#{keyword}, '%') ) 
		AND bo.app_id = #{appId} AND delflag = 0
	</select>
	
	<!-- 查询所有父节点 -->
	<select id="selectAllParentId" parameterType="map" resultType="String">
	    SELECT DISTINCT r.parent_id from pt_flow_business_object r 
		WHERE r.parent_id is not null and r.parent_id !=''  and r.delflag=0
		<if test="appId !=null">
			and r.app_id=#{appId} 
		</if>
	</select>
	
	<!-- 获取列表根据条件查询 -->
	<select id="queryListByCondition" resultType="com.jzy.hio.flow.dto.tobedeleted.BusinessObjectDto" parameterType="java.util.HashMap">
		SELECT
			r.sort, r.id,
			r.app_id AS appId,
			r.parent_id AS parentId,
			r.code AS code,
			r.name AS name,
			r.pc_url AS pcUrl,
			r.sort AS sort,
			r.phone_url AS phoneUrl,
			r.param_url AS paramUrl,
			
			r.comment AS comment,
			r.data_type AS dataType,
			r.prefix_id AS prefixId,
			rr.name AS parentName,
			app.name AS  appName
		FROM
			pt_flow_business_object r
		LEFT JOIN pt_flow_business_object rr ON r.parent_id = rr.id
		LEFT JOIN pt_sys_res_app app ON r.app_id = app.id 
		WHERE 1=1 and r.delflag = 0
		
		<if test="appId != null and appId != ''">
			and r.app_id = #{appId}
		</if>
		<if test="id != null and id != ''">
			and r.id = #{id}
		</if>
		 order by r.sort
	</select>
	
	<!-- 获取业务对象树 -->
	<select id="getTreeBySystemApp" resultType="com.jzy.hio.flow.dto.tobedeleted.BusinessObjectDto">
		SELECT bo.id, bo.parent_id AS parentId, bo.name, 'busiObject' AS type 
		FROM pt_flow_business_object bo, pt_sys_res_app app 
		WHERE bo.app_id = app.id AND app.delflag=0 AND app.status=1 
		AND bo.delflag=0 AND bo.app_id= #{appId}
		ORDER BY bo.sort
	</select>
	
	<!-- 根据业务对象Code获取业务对象 -->
	<select id="getObjectByCode" resultType="com.jzy.hio.flow.dto.tobedeleted.BusinessObjectDto" parameterType="java.lang.String">
		SELECT
			sort,id AS id,
			concurrency_version AS concurrencyVersion,
			CODE AS CODE,
			NAME AS NAME,
			parent_id AS parentId,
			pc_url AS pcUrl,
			phone_url AS phoneUrl,
			phone_business_url AS phoneBusinessUrl,
			param_url AS paramUrl,
			app_id AS appId,
			
			approve_class AS approveClass,
			approve_method AS approveMethod,
			busidata_class AS busidataClass,
			busidata_method AS busidataMethod,
			callback_class AS callbackClass,
			callback_method AS callbackMethod,
			
			COMMENT AS COMMENT,
			prefix_id AS prefixId,
			tend_id AS tendId,
			create_date AS createDate,
			update_date AS updateDate,
			create_person_id AS createPersonId,
			create_person_name AS createPersonName,
			update_person_id AS updatePersonId,
			update_person_name AS updatePersonName,
			create_org_id AS createOrgId,
			create_org_name AS createOrgName,
			create_company_id AS createCompanyId,
			create_company_name AS createCompanyName,
			delflag AS delflag
		FROM
			PT_FLOW_BUSINESS_OBJECT
		WHERE
			delflag = 0
		AND	code = #{businessObjectCode} 
	</select>
	
	<!-- 根据流程模板Code获取业务对象 -->
	<select id="getObjectByFlCode" resultType="com.jzy.hio.flow.dto.tobedeleted.BusinessObjectDto" parameterType="java.lang.String">
		SELECT
			obj.sort, obj.id AS id,
			obj.concurrency_version AS concurrencyVersion,
			obj.CODE AS CODE,
			obj.NAME AS NAME,
			parent_id AS parentId,
			pc_url AS pcUrl,
			phone_url AS phoneUrl,
			phone_business_url AS phoneBusinessUrl,
			param_url AS paramUrl,
			obj.app_id AS appId,
			approve_class AS approveClass,
			approve_method AS approveMethod,
			busidata_class AS busidataClass,
			busidata_method AS busidataMethod,
			callback_class AS callbackClass,
			callback_method AS callbackMethod,
			
			COMMENT AS COMMENT,
			prefix_id AS prefixId,
			obj.tend_id AS tendId,
			obj.create_date AS createDate,
			obj.update_date AS updateDate,
			obj.create_person_id AS createPersonId,
			obj.create_person_name AS createPersonName,
			obj.update_person_id AS updatePersonId,
			obj.update_person_name AS updatePersonName,
			obj.create_org_id AS createOrgId,
			obj.create_org_name AS createOrgName,
			obj.create_company_id AS createCompanyId,
			obj.create_company_name AS createCompanyName,
			obj.delflag AS delflag
		FROM
			PT_FLOW_BUSINESS_OBJECT obj,PT_FLOW_FL fl
		WHERE
			obj.id = fl.business_object_id
			and obj.delflag = 0 and fl.delflag = 0 and fl.status = '1' and fl.use_status = 1
			and fl.code = #{flCode}
	</select>	
	
	<update id="updateObjectPrefixIdByParamMap" parameterType="java.util.HashMap">
		update pt_flow_business_object 
		set prefix_id = replace(prefix_id, #{oldPrefixId}, #{newPrefixId})
		where prefix_id LIKE concat(#{oldPrefixId}, '%') 
	</update>
	
	
	<select id="queryCountLikePrefixMap" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		select count(*) from pt_flow_business_object
		 where prefix_id LIKE concat(#{prefixId}, '-%') 
	</select>
	
	
	<select id="getCategoryTreeBySystemApp" resultType="com.jzy.hio.flow.dto.tobedeleted.BusinessObjectDto">
		SELECT bo.id, bo.parent_id AS parentId, bo.name, 'busiObject' AS type, bo.data_type dataType
		FROM pt_flow_business_object bo, pt_sys_res_app app 
		WHERE bo.app_id = app.id AND app.delflag=0 AND app.status=1 
		AND bo.delflag=0 AND bo.app_id= #{appId}
		ORDER BY bo.name 
	</select>
	
	
	<select id="queryRelatedCountByPrefixMap" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		SELECT sum(countSum) FROM (
		 SELECT count(a.id) countSum FROM pt_flow_fl a WHERE a.delflag=0 and a.business_object_id in (
		 SELECT m.id from pt_flow_business_object m WHERE m.delflag = 0 and m.prefix_id LIKE concat(#{prefixId}, '%') 
		) UNION SELECT count(b.id) countSum FROM pt_flow_instance b WHERE b.delflag=0 and b.business_object_id in (
		 SELECT m.id FROM pt_flow_business_object m WHERE m.delflag = 0 and m.prefix_id LIKE concat(#{prefixId}, '%') 
		) ) aa
	</select>
	
	
	<update id="deleteObjectAndChileren" parameterType="java.util.HashMap">
		update pt_flow_business_object 
		set delflag=1, update_date=now(), 
		update_person_id=#{updatePersonId}, 
		update_person_name=#{updatePersonName}
		where delflag=0 and prefix_id like concat('%',#{prefixId},'%') 
	</update>
	
	<!-- 根据业务对象Code获取业务对象 -->
	<select id="queryBusiObjectTypeByParamMap" resultType="com.jzy.hio.flow.dto.tobedeleted.BusinessObjectDto" parameterType="java.util.HashMap">
		SELECT
			sort, id AS id,
			concurrency_version AS concurrencyVersion,
			code AS code,
			name AS name,
			parent_id AS parentId,
			pc_url AS pcUrl,
			phone_url AS phoneUrl,
			phone_business_url AS phoneBusinessUrl,
			param_url AS paramUrl,
			app_id AS appId,
			approve_class AS approveClass,
			approve_method AS approveMethod,
			busidata_class AS busidataClass,
			busidata_method AS busidataMethod,
			callback_class AS callbackClass,
			callback_method AS callbackMethod,
			COMMENT AS COMMENT,
			prefix_id AS prefixId,
			tend_id AS tendId,
			create_date AS createDate,
			update_date AS updateDate,
			create_person_id AS createPersonId,
			create_person_name AS createPersonName,
			update_person_id AS updatePersonId,
			update_person_name AS updatePersonName,
			create_org_id AS createOrgId,
			create_org_name AS createOrgName,
			create_company_id AS createCompanyId,
			create_company_name AS createCompanyName,
			delflag AS delflag
		FROM
			PT_FLOW_BUSINESS_OBJECT
		WHERE delflag = 0 
		    <if test="parentCode != null and parentCode != '' and parentCode != '-1'">
				AND code = #{parentCode} 
			</if>
			<if test="systemAppId != null and systemAppId != '' and systemAppId != '-1'">
				AND app_id = #{systemAppId} 
			</if>
			<if test="prefixIdText != null and prefixIdText != '' and prefixIdText != '-1'">
				AND prefix_id LIKE concat('%', #{prefixIdText}, '%')  
			</if>
	</select>
	
	 
	<!-- //更新业务对象分类本身的name和prefixSort
	 updateMap0.put("dataId", parentItem.getId());
	updateMap0.put("newNameText", nameText);
	updateMap0.put("oldNameText", oldNameText); -->
	<!-- <update id="updateNameAndPrefixSort" parameterType="java.util.HashMap">
		update pt_flow_business_object 
		set name = #{nameText}
		where id = #{dataId} AND delflag=0 
	</update> -->
	
	<!-- //更新业务对象下面的子对象的的prefixSort   -->
	<!-- <update id="updateSubObjectsPrefixSortByParamMap" parameterType="java.util.HashMap">
		update pt_flow_business_object 
		set prefix_sort = replace(prefix_sort, concat('-', #{oldNameText}, '-'), concat('-', #{newNameText}, '-') ) 
		where delflag=0 AND prefix_id LIKE concat('%-', #{dataId}, '-%') 
	</update> -->
	
	<!-- <select id="getBusinessObjectToView" resultType="com.jzy.hio.flow.entity.BusinessObject"  parameterType="java.util.HashMap">
		select id as id , create_date as  createDate, update_date as updateDate, 
           create_person_id as createPersonId, create_person_name as createPersonName, update_person_id as updatePersonId,
           update_person_name as updatePersonName, create_org_id as createOrgId, create_org_name as createOrgName,
           create_company_id as createCompanyId, create_company_name as createCompanyName, concurrency_version as concurrencyVersion,
           delflag, prefix_id as prefixId, name  as name, code as  code, parent_id as  parentId, sort as sort,
           pc_url AS pcUrl,
		   phone_url AS phoneUrl,
		   phone_business_url AS phoneBusinessUrl,
		   param_url AS paramUrl,
		   app_id AS appId,
		   for_flow AS forFlow,
		   approve_class AS approveClass,
		   approve_method AS approveMethod,
		   busidata_class AS busidataClass,
		   busidata_method AS busidataMethod,
		   callback_class AS callbackClass,
		   callback_method AS callbackMethod,
		   for_finance AS forFinance,
		   finance_class AS financeClass,
			for_customize_form AS forCustomizeForm,
			for_data_auth AS forDataAuth,
			COMMENT AS COMMENT,
			prefix_sort AS prefixSort,
			prefix_name AS prefixName,
			tend_id AS tendId
		from pt_flow_business_object p  where EXISTS (
			SELECT 1 FROM pt_flow_business_object pp  WHERE locate(p.sort,pp.sort) > 0 ) and p.delflag=0
		ORDER BY p.sort
	</select>
	
	<select id="getBaseProjectParentIdList" resultType="java.lang.String">
		SELECT DISTINCT ( CASE WHEN t.parent_id IS NULL THEN concat('null_', t.id) ELSE t.parent_id END ) AS parentId
        FROM (SELECT g.id, g.parent_id from pt_flow_business_object g where g.delflag=0) as t
	</select> -->
	
	<select id="queryBusiObjectListByParam" resultType="com.jzy.hio.flow.entity.BusinessObject" parameterType="java.util.HashMap">
		SELECT
			r.sort, r.id,
			r.app_id AS appId,
			r.parent_id AS parentId,
			r.code AS code,
			r.name AS name,
			r.pc_url AS pcUrl,
			r.phone_url AS phoneUrl,
			r.param_url AS paramUrl,
			r.comment AS comment,
			r.data_type AS dataType,
			r.prefix_id AS prefixId 
		    FROM pt_flow_business_object r where delflag = 0
		 <if test="appId != null and appId != '' and appId != '-1'">
			AND r.app_id = #{appId}  
		</if>   
		<if test="parentId != null and parentId != '' and parentId != '-1'">
			AND r.parent_id = #{parentId}  
		</if>
		<if test='parentId=="-1"'>  
	    	AND (r.parent_id is null or r.parent_id ='' )
		</if>
		order by r.sort
	</select>
	
	<update id="updateAllNodes" parameterType="java.util.HashMap">
       UPDATE pt_flow_business_object t
	   SET t.sort = REPLACE( t.sort, #{oldSort}, #{newSort} )
	   WHERE t.delflag =0 AND t.prefix_id LIKE CONCAT('%', #{prefixId}, '%')
	</update>
	
	<update id="updateAllNodesSortAndPrefix" parameterType="java.util.HashMap">
       UPDATE pt_flow_business_object t
	   SET t.sort = REPLACE(t.sort, #{oldSort}, #{newSort}),
       t.prefix_id = REPLACE(t.sort, #{oldPrefixId}, #{newPrefixId})
       WHERE t.delflag=0 AND t.prefix_id LIKE CONCAT('%',#{oldPrefixId},'%')  
	</update>
	
	<!-- 根据流程实例查询业务对象callbackUrl -->
	<select id="selectCallBackUrlByInstanceId" parameterType="map" resultType="String">
	SELECT o.callback_url from pt_flow_business_object o
		LEFT JOIN pt_flow_fl f on f.business_object_id=o.id
		LEFT JOIN pt_flow_instance i on i.fl_id =f.id
		WHERE i.id=#{instanceId} LIMIT 1
	</select>
</mapper>