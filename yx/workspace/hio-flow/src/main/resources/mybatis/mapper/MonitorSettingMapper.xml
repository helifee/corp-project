<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.flow.mapper.MonitorSettingDao">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.jzy.hio.flow.entity.MonitorSetting">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.jzy.hio.flow.entity.MonitorSetting">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.jzy.hio.flow.entity.MonitorSetting">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	   
	<!-- 根据setttingId进行批量删除数据-->  
	<delete id="deleteAllFlowBySettingId" parameterType="java.lang.String">
		delete from pt_flow_monitor_fl where monitor_setting_id = #{setttingId}
	</delete>
	
	<!-- 根据setttingId进行批量删除数据-->
	<delete id="deleteAllMonitorBySettingId" parameterType="java.lang.String">
		delete from pt_flow_monitor_person where monitor_setting_id = #{setttingId}
	</delete>
	
	<!-- 根据setttingId进行批量删除数据-->
	<delete id="deleteAllMonitoredBySettingId" parameterType="java.lang.String">
		delete from pt_flow_monitored_person where monitor_setting_id = #{setttingId}
	</delete>
	
	<!-- 根据setttingId进行批量删除数据-->
	<delete id="deleteAllMonitorPointBySettingId" parameterType="java.lang.String">
		delete from pt_flow_monitor_point where monitor_setting_id = #{setttingId}
	</delete>
	
	<select id="queryMonitorList" parameterType="java.lang.String" resultType="java.util.HashMap">
		SELECT
			p.monitor_id AS id,
			p.monitor_name AS name,
			p.monitor_type AS type
		FROM
			pt_flow_monitor_person p
		WHERE
			p.monitor_setting_id = #{settingId};		
	</select>
	<select id="queryMonitoredList" parameterType="java.lang.String" resultType="java.util.HashMap">
		SELECT
			p.monitored_id AS id,
			p.monitored_name AS name,
			p.monitored_type AS type
		FROM
			pt_flow_monitored_person p
		WHERE
			p.monitor_setting_id = #{settingId};
	
	</select>
	<select id="queryFlowList" parameterType="java.lang.String" resultType="java.util.HashMap">
		SELECT
			p.fl_id AS flId,
			p.fl_name AS flName
		FROM
			pt_flow_monitor_fl p
		WHERE
			p.monitor_setting_id = #{settingId};	
	</select>
	<select id="queryPointList" parameterType="java.lang.String" resultType="java.util.HashMap">
		SELECT
			p.monitor_point_id AS id,
			p.monitor_point_name AS name,
			p.handle AS handle
		FROM
			pt_flow_monitor_point p
		WHERE
			p.monitor_setting_id = #{settingId};	
	</select>
	
	<select id="queryMonitorByUser" parameterType="java.util.HashMap" resultType="com.jzy.hio.flow.rt.model.FlowMonitorBean">
		SELECT
			m.monitor_id AS monitorId,
			m.monitor_name AS monitorName,
			m.monitor_type AS monitorType,
			p.handle AS handle
		FROM
			pt_flow_monitor_setting s,
			pt_flow_monitored_person me,
			pt_flow_monitor_person m,
			pt_flow_monitor_point p
		WHERE
			s.id = me.monitor_setting_id
		AND s.id = m.monitor_setting_id
		AND s.id = p.monitor_setting_id
		AND s.`status` = 1
		AND (
			me.monitored_id = #{monitoredId}
			OR me.monitored_id = #{postId}
		)
		AND p.monitor_point_id = #{monitoryPointType}
		AND s.delflag = 0
		<![CDATA[ AND s.start_date < #{currentTime, jdbcType=TIMESTAMP} ]]>
		<![CDATA[ AND s.end_date > #{currentTime, jdbcType=TIMESTAMP} ]]>
	</select>
	
	<select id="queryMonitorByFlow" parameterType="java.util.HashMap" resultType="com.jzy.hio.flow.rt.model.FlowMonitorBean">
		SELECT
			m.monitor_id AS monitorId,
			m.monitor_name AS monitorName,
			m.monitor_type AS monitorType,
			p.handle AS handle
		FROM
			pt_flow_monitor_setting s
		LEFT JOIN pt_flow_monitor_fl mf ON (
			s.id = mf.monitor_setting_id
			AND mf.delflag = 0
		)
		LEFT JOIN pt_flow_fl f ON (
			mf.fl_id = f.`code`
			AND f.delflag = 0
		)
		LEFT JOIN pt_flow_monitor_point p ON (
			s.id = p.monitor_setting_id
			AND p.delflag = 0
		)
		LEFT JOIN pt_flow_monitor_person m ON (s.id = m.monitor_setting_id)
		WHERE
			s.`status` = 1
		AND s.delflag = 0
		AND (
			f.id = #{flId}
			OR f.id IS NULL
		)
		AND p.monitor_point_id = #{monitoryPointType}
		<![CDATA[ AND s.start_date < #{currentTime, jdbcType=TIMESTAMP} ]]>
		<![CDATA[ AND s.end_date > #{currentTime, jdbcType=TIMESTAMP} ]]>
	</select>
	
	<select id="queryMonitorWhenException" parameterType="java.util.HashMap" resultType="com.jzy.hio.flow.rt.model.FlowMonitorBean">
		SELECT
			m.monitor_id AS monitorId,
			m.monitor_name AS monitorName,
			m.monitor_type AS monitorType,
			p.handle AS handle
		FROM
			pt_flow_monitor_setting s,
			pt_flow_monitor_person m,
			pt_flow_monitor_point p
		WHERE
			s.id = m.monitor_setting_id
		AND s.id = p.monitor_setting_id
		AND s.`status` = 1
		AND s.delflag = 0
		AND p.monitor_point_id = #{monitoryPointType}
		<![CDATA[ AND s.start_date < #{currentTime, jdbcType=TIMESTAMP} ]]>
		<![CDATA[ AND s.end_date > #{currentTime, jdbcType=TIMESTAMP} ]]>	
	</select>
</mapper>