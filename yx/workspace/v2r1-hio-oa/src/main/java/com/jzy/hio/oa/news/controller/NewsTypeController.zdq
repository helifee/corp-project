/**
 * 
 * @Title NewsTypeController.java
 * @Package com.jzy.hio.oa.news.controller
 * @author shangb
 * @date 2018年4月10日 上午11:07:04
 * @version V1.0
 */

package com.jzy.hio.oa.news.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.jzy.hio.base.controller.BaseOaController;
import com.jzy.hio.entity.NewsType;
import com.jzy.hio.exception.HioException;
import com.jzy.hio.exception.HioMybatisDeleteException;
import com.jzy.hio.exception.HioMybatisGetException;
import com.jzy.hio.exception.HioMybatisInsertException;
import com.jzy.hio.exception.HioMybatisQueryException;
import com.jzy.hio.exception.HioMybatisUpdateException;
import com.jzy.hio.oa.news.service.NewsTypeService;

/**
 * 新闻栏目
 * @author shangb
 * @date 2018年4月10日 上午11:07:04
 */
@RestController
@RequestMapping("/newsType")
public class NewsTypeController extends BaseOaController {
	
	@Autowired
	private NewsTypeService newsTypeService;
	
	/**
	 * 根据Id获取新闻栏目
	 * @param id 业务对象主键
	 * @return 业务对象
	 */
	@GetMapping("/get/{id}")
	public Object get(@PathVariable("id") String id) throws HioMybatisGetException {
		return super.get(id);
	}
	
	/**
	 * 保存新闻栏目
	 * 
	 * @param json
	 * @return
	 */
	@PostMapping(value="/save", consumes = "application/json")
	public Object save(@RequestBody NewsType newsType) throws HioMybatisInsertException {
		if(StringUtils.isBlank(newsType.getName())) {
			return HioException.newsTypeNameIsNull;
		}
		Map<String, Object> map = new HashMap<>();
		map.put("name", newsType.getName());
		NewsType nt = newsTypeService.getObjectByExample(map);
		if(nt != null && nt.getDelflag() == 0) {
			return HioException.newsTypeExist;
		}
		Integer order = newsTypeService.findMaxOrder();
		if(order == null) {
			// 排序号从100开始
			order = 100;
		} else {
			order++;
		}
		if(newsType.getNewsCount() == null) {
			newsType.setNewsCount(0);
		}
		newsType.setOrderBy(order);
		newsType.setUpdateOrderTime(new Date());
		return super.save(newsType);
	}
	
	/**
	 * 修改新闻栏目
	 * 
	 * @param id
	 * @param map
	 * @return·
	 */
	@PutMapping("/update/{id}")
	public Object update(@PathVariable("id") String id, @RequestBody NewsType newsType) throws HioMybatisUpdateException {
		if(StringUtils.isBlank(newsType.getName())) {
			return HioException.newsTypeNameIsNull;
		}
		Map<String, Object> map = new HashMap<>();
		map.put("name", newsType.getName());
		NewsType nt = newsTypeService.getObjectByExample(map);
		if(nt != null && nt.getDelflag() == 0 && !nt.getId().equals(id)) {
			return HioException.newsTypeExist;
		}
		newsType.setId(id);
		newsTypeService.updateNewsType(newsType);
		return null;
	}
	
	/**
	 * 修改新闻栏目排序
	 * @param originId
	 * @param targetId
	 * @return
	 * @throws HioMybatisUpdateException
	 */
	@PutMapping("/updateOrder/{originId}/{targetId}")
	public Object updateOrder(@PathVariable("originId") String originId, @PathVariable("targetId") String targetId) throws HioMybatisUpdateException {
		NewsType originNewsType = (NewsType) super.get(originId);
		if("-1".equals(targetId)) {
			// 拖拽到最后
			int minOrder = newsTypeService.findMinOrder();
			originNewsType.setOrderBy(minOrder - 1);
			originNewsType.setUpdateOrderTime(new Date());
		} else {
			NewsType targetNewsType = (NewsType) super.get(targetId);
			originNewsType.setOrderBy(targetNewsType.getOrderBy());
			originNewsType.setUpdateOrderTime(new Date());
			
			targetNewsType.setOrderBy(targetNewsType.getOrderBy() - 1);
			targetNewsType.setUpdateOrderTime(new Date());
			super.update(targetNewsType.getId(), targetNewsType);
		}
		return super.update(originNewsType.getId(), originNewsType);
	}
	
	/**
	 * 删除新闻栏目，但是如果当前栏目中有文章，那么该栏目是不允许删除的。
	 *
	 * @param id
	 * @return
	 */
	@DeleteMapping("/delete/{id}")
	public Object delete(@PathVariable("id") String id) throws HioMybatisDeleteException {
		return newsTypeService.deleteNewsType(id);
	}

	/**
	 * 查询新闻栏目列表
	 * @param map
	 * @return
	 */
	@GetMapping("/queryList")
	public List<NewsType> queryList() throws HioMybatisQueryException {
		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("delflag", 0);
		paramMap.put("orderBy", "order_by desc,update_order_time desc");// 多个字段排序
		List<NewsType> newsTypeList = newsTypeService.queryListByExample(paramMap);
		return newsTypeList;
	}

}
