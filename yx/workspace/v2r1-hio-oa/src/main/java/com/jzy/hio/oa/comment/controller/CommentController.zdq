package com.jzy.hio.oa.comment.controller;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.entity.Comment;
import com.jzy.hio.exception.HioMybatisInsertException;
import com.jzy.hio.oa.comment.dto.QueryCommentDto;
import com.jzy.hio.oa.comment.param.DeleteCommentParam;
import com.jzy.hio.oa.comment.param.QueryCommentParam;
import com.jzy.hio.oa.comment.param.SaveCommentParam;
import com.jzy.hio.oa.comment.service.CommentService;
import com.jzy.hio.utils.LoginUser;
import com.jzy.hio.utils.OaUserUtil;
import com.jzy.hio.utils.Page;

/**
 * 评论
 * @author wdy
 * @date 2018年4月14日
 */
@RestController
@RequestMapping("comment")
public class CommentController extends BaseController{

	private static Logger logger = LoggerFactory.getLogger(CommentController.class);

	@Autowired
	private CommentService commentService;
	
	

	/**
	 * 新建评论
	 * 
	 * @param buildScheduleParam
	 * @return
	 */
	@RequestMapping(value = "/save", method = RequestMethod.POST, consumes = "application/json")
	public Object save(@RequestBody SaveCommentParam saveCommentParam) throws HioMybatisInsertException {
		try {

			LoginUser loginUser = getLoginUser();
			if(loginUser != null){
				Comment comment = new Comment();
				comment.setUserId(loginUser.getUserId());
				comment.setBusinessId(saveCommentParam.getBusinessId());
				comment.setCommentUserId(saveCommentParam.getCommentUserId());
				comment.setCommentContent(saveCommentParam.getCommentContent());
				comment.setCommentDate(new Date());
				comment.setBusinessType(saveCommentParam.getBusinessType());
				return commentService.save(comment);
			}else{
				logger.info(">>>>>>>>未获取到登录信息>>>>>>>>>>");
				return 0;
			}
			
		} catch (Exception e) {
			logger.error("新建评论失败!" + e.getMessage());
			throw new HioMybatisInsertException(e);
		}
	}

	/**
	 * 根据id查询评论列表
	 * @param paramater
	 * @return
	 */
	@RequestMapping(value = "/queryList", method = RequestMethod.POST, consumes = "application/json")
	public Page queryList(@RequestBody QueryCommentParam queryCommentParam) {

		Page page = new Page();

		LoginUser loginUser = getLoginUser();
		if (loginUser != null) {
			page = commentService.queryTaskList(queryCommentParam, loginUser);
		} else {
			logger.info(">>>>>>>>未获取到登录信息>>>>>>>>>>");
		}
		
		return page;
	}

	/**
	 * 删除评论
	 * 
	 * @param buildScheduleParam
	 * @return
	 */
	@RequestMapping(value = "/delete", method = RequestMethod.POST, consumes = "application/json")
	public Object delete(@RequestBody DeleteCommentParam deleteCommentParam) throws HioMybatisInsertException {
		try {

			Comment comment = new Comment();
			comment.setId(deleteCommentParam.getCommentId());
			comment.setBusinessId(deleteCommentParam.getBusinessId());
			return commentService.delete(comment);
		} catch (Exception e) {
			logger.error("删除评论失败!" + e.getMessage());
			throw new HioMybatisInsertException(e);
		}
	}
}
