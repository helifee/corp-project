package com.jzy.hio.oa.project.controller;


import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.entity.ProjectInfoMobileParam;
import com.jzy.hio.exception.HioMybatisDeleteException;
import com.jzy.hio.exception.HioMybatisInsertException;
import com.jzy.hio.oa.OaConstant;
import com.jzy.hio.oa.project.dto.ProjectInfoDto;
import com.jzy.hio.oa.project.dto.ProjectInfoPageParam;
import com.jzy.hio.oa.project.dto.ProjectInfoStautsParam;
import com.jzy.hio.oa.project.service.ProjectInfoService;

import com.jzy.hio.utils.LoginUser;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import com.jzy.hio.exception.HioMybatisQueryException;

import com.jzy.hio.utils.Page;

/**
 * 項目詳情
 *
 * @author yangn
 *
 */
@RestController
@RequestMapping("project/projectInfo")
public class ProjectInfoController extends BaseController {

	private static Logger logger = LoggerFactory.getLogger(ProjectInfoController.class);
	@Autowired
	private ProjectInfoService projectInfoService;



	/**
	 * 根据Id获取項目详情
	 *
	 * @param id
	 *            业务对象主键
	 *
	 * @return
	 */
	@RequestMapping(value = "/queryWhitelistProject/{id}", method = RequestMethod.GET)
	public Object queryWhitelistProject(@PathVariable("id") String id) throws HioMybatisQueryException {


		return projectInfoService.queryWhitelistProject(id);

	}



	/**
	 *
	 * 获取项目ID
	 *
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/queryProjectId", method = RequestMethod.POST, consumes = "application/json")
	public Object queryProjectId() throws HioMybatisQueryException {
		return projectInfoService.queryProjectId();
	}


	/**
	 * 根据Id获取項目详情
	 * 
	 * @param id
	 *            业务对象主键
	 * 
	 * @return
	 */
	@RequestMapping(value = "/get/{id}", method = RequestMethod.GET)
	@Override
	public Object get(@PathVariable("id") String id) throws HioMybatisQueryException {

		LoginUser loginUser = getLoginUser();

		return projectInfoService.queryProjectInfoById(id, loginUser);

	}
	/**
	 * mobile 根据Id获取項目详情
	 *
	 * @param id
	 *            业务对象主键
	 *
	 * @return
	 */
	@RequestMapping(value = "/mobile/query",  method = RequestMethod.POST, consumes = "application/json")
	public Object mobileQuery(@RequestBody ProjectInfoMobileParam projectInfoMobileParam) throws HioMybatisQueryException {

		LoginUser loginUser = getLoginUser();
		return projectInfoService.queryMobileProjectInfoById(projectInfoMobileParam.getProjectId(),projectInfoMobileParam.getIsOut(), loginUser);

	}

	/**
	 *
	 * 项目显示列表 page
	 * 
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/page", method = RequestMethod.POST, consumes = "application/json")
	public Page page(@RequestBody ProjectInfoPageParam param) throws HioMybatisQueryException {

		LoginUser loginUser = getLoginUser();

		return projectInfoService.queryProjectInfoPage(param, loginUser, OaConstant.PROJECTALLPAGE);

	}

	/**
	 *
	 * 我创建的项目 page
	 * 
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/myCreatePage", method = RequestMethod.POST, consumes = "application/json")
	public Page myCreatePage(@RequestBody ProjectInfoPageParam param) throws HioMybatisQueryException {


			LoginUser loginUser = getLoginUser();

			return projectInfoService.queryProjectInfoPage(param, loginUser, OaConstant.PROJECTMYCREATEPAGE);

	}

	/**
	 *
	 * 我负责的项目 page
	 * 
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/myResponsiblePage", method = RequestMethod.POST, consumes = "application/json")
	public Page myResponsiblePage(@RequestBody ProjectInfoPageParam param) throws HioMybatisQueryException {



			LoginUser loginUser = getLoginUser();

			return projectInfoService.queryProjectInfoPage(param, loginUser, OaConstant.PROJECTMYRESPONSIBLEPAGE);

	}

	/**
	 *
	 * 我参与的项目 page
	 * 
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/myParticipatePage", method = RequestMethod.POST, consumes = "application/json")
	public Page myParticipatePage(@RequestBody ProjectInfoPageParam param) throws HioMybatisQueryException {



			LoginUser loginUser = getLoginUser();

			return projectInfoService.queryProjectInfoPage(param, loginUser, OaConstant.PROJECTMYPARTICIPANTPAGE);

	}

	/**
	 *
	 * 分享项目表 page
	 * 
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/mySharePage", method = RequestMethod.POST, consumes = "application/json")
	public Page mySharePage(@RequestBody ProjectInfoPageParam param) throws HioMybatisQueryException {



			LoginUser loginUser = getLoginUser();

			return projectInfoService.queryProjectInfoPage(param, loginUser, OaConstant.PROJECTMYSHAREPAGE);

	}

	/**
	 *
	 * 关注项目表 page
	 * 
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/myConcernPage", method = RequestMethod.POST, consumes = "application/json")
	public Page myConcernPage(@RequestBody ProjectInfoPageParam param) throws HioMybatisQueryException {



			LoginUser loginUser = getLoginUser();

			return projectInfoService.queryProjectInfoPage(param, loginUser, OaConstant.PROJECTMYCONCERNPAGE);

	}

	/**
	 * 获取项目信息列表
	 */
	@RequestMapping(value = "/getAllProjectInfo", method = RequestMethod.POST)
	public Object getAllProjectInfo() throws HioMybatisQueryException {


			LoginUser loginUser = getLoginUser();

			return projectInfoService.queryAllProjectInfo();

	}

	/**
	 * 新建项目
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/save", method = RequestMethod.POST, consumes = "application/json")
	public Object save(@RequestBody ProjectInfoDto projectInfoDto) throws HioMybatisInsertException {

		LoginUser loginUser = getLoginUser();

		return projectInfoService.saveProjectInfo(projectInfoDto, loginUser);

	}

	/**
	 * 编辑项目
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/update", method = RequestMethod.POST, consumes = "application/json")
	public Object update(@RequestBody ProjectInfoDto projectInfoDto) throws HioMybatisInsertException {
		LoginUser loginUser = getLoginUser();
		return projectInfoService.updateProjectInfo(projectInfoDto, loginUser);

	}

	/**
	 * 删除项目
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/delete/{id}", method = RequestMethod.GET)
	@Override
	public Object delete(@PathVariable("id") String id) throws HioMybatisDeleteException {


			LoginUser loginUser = getLoginUser();

			return projectInfoService.deleteProjectInfoById(id, loginUser);

	}

	/**
	 * 查询指定用户所在的项目
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/queryProjectInfoByTeamPerson/{id}", method = RequestMethod.GET)
	public Object queryProjectInfoByTeamPerson(@PathVariable("id") String id) throws HioMybatisDeleteException {


			LoginUser loginUser = getLoginUser();

			return projectInfoService.queryProjectInfoByTeamPerson(id);

	}

	/**
	 * 更改项目状态
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/updateProjectStauts", method = RequestMethod.POST, consumes = "application/json")
	public Object updateProjectStauts(@RequestBody ProjectInfoStautsParam projectInfoStautsParam) throws HioMybatisDeleteException {

			LoginUser loginUser = getLoginUser();

			return projectInfoService.updateProjectStauts(projectInfoStautsParam, loginUser);

	}

}
