/**
 * 
 */
package com.jzy.hio.oa.contract.util;

import java.awt.Color;
import java.io.OutputStream;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFColor;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder.BorderSide;

import com.jzy.hio.oa.OaConstant;
import com.jzy.hio.utils.DateUtil;

/**
 * <p>导出Excel<br>
 * @author wliang
 * @date 2018年4月17日 上午12:30:40
 */
public class ExportExcelUtils {
	
	/**
	 * 字体
	 */
	private final static String CONTRACT_EXCEL_FONT_NAME = "宋体";
	/**
	 * 颜色
	 */
	private final static Color CONTRACT_EXCEL_COLOR_1 = new Color(0, 0, 0);
	/**
	 * 颜色
	 */
	private final static Color CONTRACT_EXCEL_COLOR_2 = new Color(182, 184, 192);
	/**
	 * 单元格自增宽带
	 */
	private final static int CONTRACT_EXCEL_CELL_ADD_WIDTH = 3000;
	/**
	 * 表头起始行
	 */
	private final static int CONTRACT_EXCEL_TITLE_ROW_INDEX = 0;
	/**
	 * 数据起始行
	 */
	private final static int CONTRACT_EXCEL_DATA_ROW_INDEX = 1;
	
	
	
	/**
	 * 
	 * <p>导出入口<br>
	 * @author wliang
	 * @date 2018年4月18日 下午4:49:56 
	 * @param response
	 * @param data
	 * @throws Exception
	 */
	public static void exportExcel(HttpServletResponse response,ExcelData data) throws Exception {
		
		response.reset();
		//告知浏览器此文件类型
	    //response.setHeader("content-Type", "application/vnd.ms-excel");
	    response.setContentType("application/vnd.ms-excel");
	    response.addHeader("Cache-Control", "no-cache, no-store, must-revalidate");
        response.addHeader("charset", "utf-8");
        response.addHeader("Pragma", "no-cache");
	    //导出Excel文件名称
	    String fileName = data.getName() + OaConstant.CONTRACT_EXPORT_CONNECTOR 
	        			+ DateUtil.getCurZhCNDateTime() + OaConstant.CONTRACT_EXPORT_TYPE;
	    
	    //下载文件的默认名称
	    //response.setHeader("Content-Disposition", "attachment;filename="+URLEncoder.encode(fileName, "utf-8"));
	    fileName = URLEncoder.encode(fileName, StandardCharsets.UTF_8.toString());
        //response.setHeader("Content-Disposition", "attachment; filename=\"" + fileName + "\"; filename*=utf-8''" + fileName);
        response.setHeader("Content-Disposition", "attachment;filename*=utf-8'zh_cn'"+fileName);
	    //导出操作
	    exportExcel(response.getOutputStream(),data);
	}
	
	/**
	 * 
	 * <p>创建表<br>
	 * @author wliang
	 * @date 2018年4月18日 下午4:49:08 
	 * @param out
	 * @param data
	 * @throws Exception
	 */
	public static void exportExcel(OutputStream out,ExcelData data) throws Exception {
    	
        XSSFWorkbook wb = new XSSFWorkbook();
        try {
            String sheetName = data.getName();
            if (null == sheetName) {
                sheetName = "Sheet1";
            }
            XSSFSheet sheet = wb.createSheet(sheetName);
            writeExcel(wb, sheet, data);
            wb.write(out);
            out.flush();
        } finally {
        	 if (out != null) {
        		 out.close();
        		 out = null;
             }
             System.gc();
        }
    }
	
	/**
	 * 
	 * <p>数据写入<br>
	 * @author wliang
	 * @date 2018年4月18日 下午4:49:00 
	 * @param wb
	 * @param sheet
	 * @param data
	 */
	private static void writeExcel(XSSFWorkbook wb, Sheet sheet, ExcelData data) {
		
		writeTitlesToExcel(wb, sheet, data.getTitles());
		//数据写入excel
	    writeRowsToExcel(wb, sheet, data.getRows(), CONTRACT_EXCEL_DATA_ROW_INDEX);
	    //列宽度
	    autoSizeColumns(sheet, data.getTitles().size() + 1);
	    
	}
	 
	 /**
	  * 
	  * <p>表头<br>
	  * @author wliang
	  * @date 2018年4月18日 下午4:43:49 
	  * @param wb
	  * @param sheet
	  * @param titles
	  */	 
	 private static void writeTitlesToExcel(XSSFWorkbook wb, Sheet sheet, List<String> titles) {
		 //int rowIndex = 0;
		 Font titleFont = wb.createFont();
		 titleFont.setFontName(CONTRACT_EXCEL_FONT_NAME);
		 //titleFont.setBold(true);
		 titleFont.setBoldweight(Short.parseShort("1"));
		 // titleFont.setFontHeightInPoints((short) 14);
		 titleFont.setColor(IndexedColors.BLACK.index);
		 
		 //表格样式设置
		 XSSFCellStyle titleStyle = wb.createCellStyle();
		 titleStyle.setAlignment(XSSFCellStyle.ALIGN_CENTER);
		 titleStyle.setVerticalAlignment(XSSFCellStyle.VERTICAL_CENTER);
		 titleStyle.setFillForegroundColor(new XSSFColor(CONTRACT_EXCEL_COLOR_2));
		 titleStyle.setFillPattern(XSSFCellStyle.SOLID_FOREGROUND);
		 titleStyle.setFont(titleFont);
		 setBorder(titleStyle, BorderStyle.THIN, new XSSFColor(CONTRACT_EXCEL_COLOR_1));

		 Row titleRow = sheet.createRow(CONTRACT_EXCEL_TITLE_ROW_INDEX);
		 //titleRow.setHeightInPoints(25);
		 int colIndex = 0;
		 //表头赋值
		 for (String field : titles) {
		     Cell cell = titleRow.createCell(colIndex);
		     cell.setCellValue(field);
		     cell.setCellStyle(titleStyle);
		     colIndex++;
		 }
		 //return rowIndex;
	 }
	 
	 /**
	  * 
	  * <p>列表数据<br>
	  * @author wliang
	  * @date 2018年4月18日 下午4:44:35 
	  * @param wb
	  * @param sheet
	  * @param rows
	  * @param rowIndex
	  * @return
	  */
	 private static int writeRowsToExcel(XSSFWorkbook wb, Sheet sheet, List<List<Object>> rows, int rowIndex) {
		 
		 int colIndex = 0;
		 Font dataFont = wb.createFont();
		 dataFont.setFontName(CONTRACT_EXCEL_FONT_NAME);
		 // dataFont.setFontHeightInPoints((short) 14);
		 dataFont.setColor(IndexedColors.BLACK.index);

		 XSSFCellStyle dataStyle = wb.createCellStyle();
		 dataStyle.setAlignment(XSSFCellStyle.ALIGN_CENTER);
		 dataStyle.setVerticalAlignment(XSSFCellStyle.VERTICAL_CENTER);
		 dataStyle.setFont(dataFont);
		 setBorder(dataStyle, BorderStyle.THIN, new XSSFColor(CONTRACT_EXCEL_COLOR_1));
		 
		 //循环对象数据
		 for (List<Object> rowData : rows) {
		     Row dataRow = sheet.createRow(rowIndex);
		     // dataRow.setHeightInPoints(25);
		     colIndex = 0;
		     
		     //循环每个对象的列
		     for (Object cellData : rowData) {
		         Cell cell = dataRow.createCell(colIndex);
		         if (cellData != null) {
		             cell.setCellValue(cellData.toString());
		         } else {
		             cell.setCellValue("");
		         }

		         cell.setCellStyle(dataStyle);
		         colIndex++;
		     }
		     rowIndex++;
		 }
		 return rowIndex;
	 }
	 
	 /**
	  * 
	  * <p>单元格宽度设置<br>
	  * @author wliang
	  * @date 2018年4月18日 下午4:48:27 
	  * @param sheet
	  * @param columnNumber
	  */
	 private static void autoSizeColumns(Sheet sheet, int columnNumber) {
		 
		 //循环每一列
		 for (int i = 0; i < columnNumber; i++) {
			 /*int orgWidth = sheet.getColumnWidth(i);
	         sheet.autoSizeColumn(i, true);
	         int newWidth = sheet.getColumnWidth(i) + CONTRACT_EXCEL_CELL_ADD_WIDTH;
	         if (newWidth > orgWidth) {
	              sheet.setColumnWidth(i, newWidth);
	          } else {
	              sheet.setColumnWidth(i, orgWidth);
	          }*/
			 
			 sheet.setColumnWidth(i, CONTRACT_EXCEL_CELL_ADD_WIDTH);
	      }
	 }
	 
	 
	 /**
	  * 
	  * <p>边框线设置<br>
	  * @author wliang
	  * @date 2018年4月18日 下午4:48:19 
	  * @param style
	  * @param border
	  * @param color
	  */
	 private static void setBorder(XSSFCellStyle style, BorderStyle border, XSSFColor color) {
		 
		 style.setBorderTop(border);
	     style.setBorderLeft(border);
	     style.setBorderRight(border);
	     style.setBorderBottom(border);
	     style.setBorderColor(BorderSide.TOP, color);
	     style.setBorderColor(BorderSide.LEFT, color);
	     style.setBorderColor(BorderSide.RIGHT, color);
	     style.setBorderColor(BorderSide.BOTTOM, color);
	 }
	
	    
}
