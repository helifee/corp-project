package com.jzy.hio.oa.project.controller;

import java.util.Map;

import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.entity.ProjectStage;
import com.jzy.hio.exception.*;
import com.jzy.hio.oa.project.dto.ProjectStageDto;
import com.jzy.hio.oa.project.dto.ProjectStagePageParam;
import com.jzy.hio.oa.project.service.ProjectStageService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import com.jzy.hio.base.controller.BaseOaController;
import com.jzy.hio.entity.ProjectInfo;
import com.jzy.hio.oa.project.dto.ProjectInfoDto;
import com.jzy.hio.oa.project.service.ProjectInfoService;
import com.jzy.hio.utils.Page;

/**
 * 項目阶段
 *
 * @author yangn
 *
 */
@RestController
@RequestMapping("project/projectStage")
public class ProjectStageController extends BaseController {

	private static Logger logger = LoggerFactory.getLogger(ProjectStageController.class);
	@Autowired
	private ProjectStageService projectStageService;

	/**
	 * 根据Id获取項目详情
	 *
	 * @param id
	 *            业务对象主键
	 *
	 * @return 业务对象
	 */
	@RequestMapping(value = "/get/{id}", method = RequestMethod.GET)
	@Override
	public Object get(@PathVariable("id") String id) throws HioMybatisGetException {
		ProjectStageDto projectStageDto = projectStageService.getProjectStageById(id);
		return projectStageDto;
	}

	/**
	 *根据项目id获取项目阶段,分页
	 * 
	 * @param projectStagePageParam
	 * @return
	 */
	@RequestMapping(value = "/page", method = RequestMethod.POST, consumes = "application/json")
	public Page page(@RequestBody ProjectStagePageParam projectStagePageParam) throws HioMybatisQueryException {
		try {
			return projectStageService.queryProjectStagePageByProjectInfoId(projectStagePageParam);
		} catch (Exception e) {
			logger.error("获取项目阶段分页失败!" + e.getMessage());
			throw new HioMybatisQueryException(e);
		}

	}

	/**
	 * 编辑项目阶段
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/updateProjectStage", method = RequestMethod.POST, consumes = "application/json")
	public Object updateProjectStage(@RequestBody ProjectStageDto projectStageDto) throws HioMybatisInsertException {
		try {
			return projectStageService.updateProjectStage(projectStageDto);
		} catch (Exception e) {
			logger.error("编辑项目阶段失败!" + e.getMessage());
			throw new HioMybatisUpdateException(e);
		}
	}

	/**
	 * 删除项目阶段
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/deleteProjectStage", method = RequestMethod.POST, consumes = "application/json")
	public Object deleteProjectStage(@RequestBody ProjectStageDto projectStageDto) throws HioMybatisInsertException {
		try {
			return projectStageService.deleteProjectStageById(projectStageDto);
		} catch (Exception e) {
			logger.error("删除项目阶段失败!" + e.getMessage());
			throw new HioMybatisDeleteException(e);
		}
	}

	/**
	 * 根据项目Id查询全部阶段
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/getProjectStageListByProjectId/{id}", method = RequestMethod.GET)
	public Object getProjectStageListByProjectId(@PathVariable("id") String id) throws HioMybatisInsertException {
		try {
			return projectStageService.getProjectStageByProjectId(id);
		} catch (Exception e) {
			logger.error("根据项目ID查询项目阶段失败!" + e.getMessage());
			throw new HioMybatisDeleteException(e);
		}
	}

	/**
	 * 新建项目阶段
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/saveProjectStage", method = RequestMethod.POST, consumes = "application/json")
	public Object saveProjectStage(@RequestBody ProjectStageDto projectStageDto) throws HioMybatisInsertException {
		try {

			return projectStageService.saveProjectStage(projectStageDto);

		} catch (Exception e) {
			logger.error("新建项目阶段失败!" + e.getMessage());
			throw new HioMybatisInsertException(e);
		}
	}




}
