package com.jzy.hio.oa.office.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.jzy.hio.base.controller.BaseOaController;
import com.jzy.hio.entity.OfficeHouse;
import com.jzy.hio.exception.HioException;
import com.jzy.hio.exception.HioMybatisDeleteException;
import com.jzy.hio.exception.HioMybatisGetException;
import com.jzy.hio.exception.HioMybatisInsertException;
import com.jzy.hio.exception.HioMybatisQueryException;
import com.jzy.hio.exception.HioMybatisUpdateException;
import com.jzy.hio.oa.OaConstant;
import com.jzy.hio.oa.office.dto.OfficeHouseDto;
import com.jzy.hio.oa.office.service.OfficeHouseService;
import com.jzy.hio.utils.LoginUser;

/**
 * 办公用品类别
 *
 * @author shangb
 * @date 2018年3月15日 上午10:43:35
 */
@RestController
@RequestMapping("office/officeHouse")
public class OfficeHouseController extends BaseOaController {
	
	private static Logger logger = LoggerFactory.getLogger(OfficeHouseController.class);
	
	@Autowired
	private OfficeHouseService officeHouseService;

	/**
	 * 根据Id获取用品类别
	 * @param id 业务对象主键
	 * @return 业务对象
	 */
	@RequestMapping(value = "/get/{id}", method = RequestMethod.GET)
	public Object get(@PathVariable("id") String id) throws HioMybatisQueryException {
		
		LoginUser loginUser = getLoginUser();
		return officeHouseService.getOfficeHouseById(id, loginUser);
	}
	
	/**
	 * 保存用品类别
	 * 
	 * @param json
	 * @return
	 */
	@RequestMapping(value = "/save", method = RequestMethod.POST, consumes = "application/json")
	public Object save(@RequestBody OfficeHouse officeHouse) throws HioMybatisInsertException {
		
		LoginUser loginUser = getLoginUser();
		return officeHouseService.saveOfficeHouse(officeHouse, loginUser);
	}

	/**
	 * 修改用品类别
	 * 
	 * @param id
	 * @param map
	 * @return·
	 */
	@RequestMapping(value = "/update/{id}", method = RequestMethod.PUT, consumes = "application/json")
	public Object update(@PathVariable("id") String id, @RequestBody OfficeHouse officeHouse) throws HioMybatisUpdateException {
		
		LoginUser loginUser = getLoginUser();
		officeHouse.setId(id);
		return officeHouseService.updateOfficeHouse(officeHouse);
	}
	
	/**
	 * 删除用品类别
	 *
	 * @param id
	 * @return
	 */
	@RequestMapping(value = "/delete/{id}", method = RequestMethod.DELETE)
	public Object delete(@PathVariable("id") String id) throws HioMybatisDeleteException {
		return super.deletePseudo(id);
	}
	
	/**
	 * 返回符合条件的用品类别列表
	 * 
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/queryList", method = { RequestMethod.POST }, consumes = "application/json")
	public List queryList(@RequestBody OfficeHouse officeHouse) throws HioMybatisQueryException {
//		map.put("delflag", 0);
//		return super.queryList(map);
		officeHouse.setDelflag(0);
		return officeHouseService.queryList(officeHouse);
	}
	
	/**
	 * 启用禁用用品类别
	 * 
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/enableOrNot/{id}", method = RequestMethod.PUT, consumes = "application/json")
	public Object enableOrNot(@PathVariable("id") String id, @RequestBody OfficeHouse officeHouse) throws HioMybatisUpdateException {
		String state = officeHouse.getState();
		// 查询该物品类别下的所有物品库存是否为0，true为0，false不为0
		boolean flag = officeHouseService.checkOfficeHouseOfficeInfoStockCount(id, state);
		if (!flag) {
			return HioException.officeHouseStockCountNotZero_1;
		}
		
		officeHouse.setId(id);// 状态 0是禁用 1是启用
		return officeHouseService.enableOrNotOfficeHouse(officeHouse);// 禁用一级类别时把二级类别也禁用了;启用二级时，把对应的一级也启用
	}

	/**
	 * 多条件查询物品分类树
	 * 
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/selectTree", method = { RequestMethod.POST }, consumes = "application/json")
	public List<OfficeHouseDto> selectTree(@RequestBody OfficeHouse officeHouse) throws HioMybatisQueryException {
//		map.put("delflag", 0);
//		List<OfficeHouse> officeHouseList = super.queryList(map);
//		officeHouse.setDelflag(0);
		List<OfficeHouseDto> officeHouseDtoList = officeHouseService.queryOfficeHouseTree(officeHouse);
		// OfficeHouse的list转成OfficeHouseDto的list
//		List<OfficeHouseDto> officeHouseDtoList = officeHouseService.officeHouseToOfficeHouseDto(officeHouseList);
		// 最后的结果
	    List<OfficeHouseDto> resultOfficeHouseDtoList = new ArrayList<OfficeHouseDto>();
	    // 先找到所有的一级菜单
	    for (int i = 0; i < officeHouseDtoList.size(); i++) {
	        // 一级菜单没有parentId
	        if (StringUtils.isBlank(officeHouseDtoList.get(i).getParentId())) {
	            resultOfficeHouseDtoList.add(officeHouseDtoList.get(i));
	        }
	    }
	    // 为一级菜单设置子菜单，getChild是递归调用的
	    for (OfficeHouseDto officeHouseDto : resultOfficeHouseDtoList) {
	    	officeHouseDto.setOfficeHouseList(officeHouseService.getChildTree(officeHouseDto.getId(), officeHouseDtoList));
	    }
		return resultOfficeHouseDtoList;
	}
	
	
}
