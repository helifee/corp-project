
package com.jzy.hio.oa.meeting.service.impl;

import java.util.Date;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jzy.hio.base.Base;
import com.jzy.hio.base.service.impl.BaseServiceImpl;
import com.jzy.hio.entity.MeetingBoardroom;
import com.jzy.hio.entity.MeetingReserveBoardroom;
import com.jzy.hio.oa.OaConstant;
import com.jzy.hio.oa.meeting.dto.MeetingReserveBoardroomDto;
import com.jzy.hio.oa.meeting.mapper.MeetingReserveBoardroomMapper;
import com.jzy.hio.oa.meeting.service.MeetingBoardroomService;
import com.jzy.hio.oa.meeting.service.MeetingReserveBoardroomService;
import com.jzy.hio.utils.LoginUser;
import com.jzy.hio.utils.OaUserUtil;

@Service("meetingReserveBoardroomService")
public class MeetingReserveBoardroomServiceImpl extends BaseServiceImpl<MeetingReserveBoardroom> implements MeetingReserveBoardroomService {

	@Autowired
	private MeetingReserveBoardroomMapper meetingReserveBoardroomMapper;
	
	@Autowired
	private OaUserUtil oaUserUtil;
	
	@Autowired
	private MeetingBoardroomService meetingBoardroomService;

	@Override
	public MeetingReserveBoardroomDto queryMeetingReserveBoardroomById(String id) {
		LoginUser loginUser = super.getLoginUser();// 获取当前登录用户
		String loginUserId = loginUser.getUserId();// 当前登录用户的userID
		
		MeetingReserveBoardroom meetingReserveBoardroom = (MeetingReserveBoardroom)super.getObjectById(id);
		MeetingReserveBoardroomDto meetingReserveBoardroomDto = new MeetingReserveBoardroomDto();
		BeanUtils.copyProperties(meetingReserveBoardroom, meetingReserveBoardroomDto);
		String meetingBoardroomId = meetingReserveBoardroom.getMeetingBoardroomId();// 会议室表ID
		if (!StringUtils.isEmpty(meetingBoardroomId)) {
			MeetingBoardroom meetingBoardroom = meetingBoardroomService.getObjectById(meetingBoardroomId);
			if (meetingBoardroom != null) {
				meetingReserveBoardroomDto.setMeetingBoardroomName(meetingBoardroom.getName());// 会议室名称
			}
		}
		String useUserid = meetingReserveBoardroom.getUseUserid();// 使用人
		//String useUserName = oaUserUtil.selectUserName(useUserid);// 根据一个userID查询一个userName
		//包含离职/删除人员
		String useUserName = oaUserUtil.selectUserNameByTendIdAndStatus(useUserid,loginUser.getTendId(),OaConstant.OA_USER_QUERY_STATUS_3);
		meetingReserveBoardroomDto.setUseUserName(useUserName);
		
		// 是否显示编辑、删除按钮，1显示，0不显示
		String createPersonId = meetingReserveBoardroom.getCreatePersonId();
		
		if (Base.isNotEmpty(loginUserId) && Base.isNotEmpty(createPersonId)
				&& Base.isEquals(loginUserId,createPersonId)) {
			/*long nowTime = new Date().getTime();
			long startTime = meetingReserveBoardroomDto.getReserveStartTime() == null ?0l:meetingReserveBoardroomDto.getReserveStartTime().getTime();
			//预定时间已过的不能修改和删除
			if (nowTime < startTime) {
				meetingReserveBoardroomDto.setExistUpdateDeleteButton(OaConstant.MEETING_RESERVE_BOARDROOM_UPDATE_DELETE_BUTTON_TRUE);
			}*/
			meetingReserveBoardroomDto.setExistUpdateDeleteButton(OaConstant.MEETING_RESERVE_BOARDROOM_UPDATE_DELETE_BUTTON_TRUE);
		}
		
		return meetingReserveBoardroomDto;
	}
	
	@Override
	public List<MeetingReserveBoardroom> selectMeetingReserveBoardroomList(MeetingReserveBoardroom meetingReserveBoardroomParam) {
		return meetingReserveBoardroomMapper.selectMeetingReserveBoardroomList(meetingReserveBoardroomParam);
	}
	
}
