package com.jzy.hio.entity;

import com.jzy.hio.base.entity.BaseEntity;
import javax.persistence.Column;
import javax.persistence.Table;

@Table(name = "office_house")
public class OfficeHouse extends BaseEntity {
    /**
     * 类别编码
     */
    @Column(name = "number_code")
    private String numberCode;

    /**
     * 父节点
     */
    @Column(name = "parent_id")
    private String parentId;

    /**
     * 类别名称
     */
    @Column(name = "type_name")
    private String typeName;

    /**
     * 状态 0是禁用 1是启用
     */
    @Column(name = "state")
    private String state;

    /**
     * 类别描述
     */
    @Column(name = "remark")
    private String remark;

    /**
     * 
     */
    @Column(name = "reserve1")
    private String reserve1;

    /**
     * 
     */
    @Column(name = "reserve2")
    private String reserve2;

    /**
     * 
     */
    @Column(name = "reserve3")
    private String reserve3;

    /**
     * 
     */
    @Column(name = "reserve4")
    private String reserve4;

    /**
     * 
     */
    @Column(name = "reserve5")
    private String reserve5;

    /**
     * 类别编码
     * @return number_code 类别编码
     */
    public String getNumberCode() {
        return numberCode;
    }

    /**
     * 类别编码
     * @param numberCode 类别编码
     */
    public void setNumberCode(String numberCode) {
        this.numberCode = numberCode == null ? null : numberCode.trim();
    }

    /**
     * 父节点
     * @return parent_id 父节点
     */
    public String getParentId() {
        return parentId;
    }

    /**
     * 父节点
     * @param parentId 父节点
     */
    public void setParentId(String parentId) {
        this.parentId = parentId == null ? null : parentId.trim();
    }

    /**
     * 类别名称
     * @return type_name 类别名称
     */
    public String getTypeName() {
        return typeName;
    }

    /**
     * 类别名称
     * @param typeName 类别名称
     */
    public void setTypeName(String typeName) {
        this.typeName = typeName == null ? null : typeName.trim();
    }

    /**
     * 状态 0是禁用 1是启用
     * @return state 状态 0是禁用 1是启用
     */
    public String getState() {
        return state;
    }

    /**
     * 状态 0是禁用 1是启用
     * @param state 状态 0是禁用 1是启用
     */
    public void setState(String state) {
        this.state = state == null ? null : state.trim();
    }

    /**
     * 类别描述
     * @return remark 类别描述
     */
    public String getRemark() {
        return remark;
    }

    /**
     * 类别描述
     * @param remark 类别描述
     */
    public void setRemark(String remark) {
        this.remark = remark == null ? null : remark.trim();
    }

    /**
     * 
     * @return reserve1 
     */
    public String getReserve1() {
        return reserve1;
    }

    /**
     * 
     * @param reserve1 
     */
    public void setReserve1(String reserve1) {
        this.reserve1 = reserve1 == null ? null : reserve1.trim();
    }

    /**
     * 
     * @return reserve2 
     */
    public String getReserve2() {
        return reserve2;
    }

    /**
     * 
     * @param reserve2 
     */
    public void setReserve2(String reserve2) {
        this.reserve2 = reserve2 == null ? null : reserve2.trim();
    }

    /**
     * 
     * @return reserve3 
     */
    public String getReserve3() {
        return reserve3;
    }

    /**
     * 
     * @param reserve3 
     */
    public void setReserve3(String reserve3) {
        this.reserve3 = reserve3 == null ? null : reserve3.trim();
    }

    /**
     * 
     * @return reserve4 
     */
    public String getReserve4() {
        return reserve4;
    }

    /**
     * 
     * @param reserve4 
     */
    public void setReserve4(String reserve4) {
        this.reserve4 = reserve4 == null ? null : reserve4.trim();
    }

    /**
     * 
     * @return reserve5 
     */
    public String getReserve5() {
        return reserve5;
    }

    /**
     * 
     * @param reserve5 
     */
    public void setReserve5(String reserve5) {
        this.reserve5 = reserve5 == null ? null : reserve5.trim();
    }

    /**
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", numberCode=").append(numberCode);
        sb.append(", parentId=").append(parentId);
        sb.append(", typeName=").append(typeName);
        sb.append(", state=").append(state);
        sb.append(", remark=").append(remark);
        sb.append(", reserve1=").append(reserve1);
        sb.append(", reserve2=").append(reserve2);
        sb.append(", reserve3=").append(reserve3);
        sb.append(", reserve4=").append(reserve4);
        sb.append(", reserve5=").append(reserve5);
        sb.append("]");
        return sb.toString();
    }
}