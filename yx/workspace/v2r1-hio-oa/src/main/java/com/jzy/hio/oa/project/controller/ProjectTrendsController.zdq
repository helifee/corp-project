package com.jzy.hio.oa.project.controller;

import java.util.List;
import java.util.Map;

import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.entity.ProjectTrends;
import com.jzy.hio.exception.HioMybatisInsertException;
import com.jzy.hio.oa.project.dto.ProjectTrendsDto;
import com.jzy.hio.oa.project.dto.ProjectTrendsPageParam;
import com.jzy.hio.oa.project.service.ProjectTrendsService;
import com.jzy.hio.utils.LoginUser;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import com.jzy.hio.base.controller.BaseOaController;
import com.jzy.hio.entity.ProjectInfo;
import com.jzy.hio.exception.HioMybatisGetException;
import com.jzy.hio.exception.HioMybatisQueryException;
import com.jzy.hio.oa.project.dto.ProjectInfoDto;
import com.jzy.hio.oa.project.service.ProjectInfoService;
import com.jzy.hio.utils.Page;

/**
 * 項目动态
 *
 * @author yangn
 *
 */
@RestController
@RequestMapping("project/projectTrends")
public class ProjectTrendsController extends BaseController {

	private static Logger logger = LoggerFactory.getLogger(ProjectTrendsController.class);
	@Autowired
	private ProjectTrendsService projectTrendsService;

	/**
	 * 根据Id动态详情
	 * 
	 * @param id
	 *            业务对象主键
	 * 
	 * @return 业务对象
	 */
	@RequestMapping(value = "/get/{id}", method = RequestMethod.GET)
	@Override
	public Object get(@PathVariable("id") String id) throws HioMybatisGetException {
		ProjectTrends projectTrends = (ProjectTrends) super.get(id);
		ProjectTrendsDto projectTrendsDto = new ProjectTrendsDto();
		BeanUtils.copyProperties(projectTrends, projectTrendsDto);

		return projectTrendsDto;
	}

	/**
	 * 根据项目ID获取项目动态
	 * 
	 * @param id
	 *            业务对象主键
	 *
	 * @return
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/queryProjectTrendsByProjectId/{id}", method = RequestMethod.GET)
	public List<ProjectTrendsDto> queryProjectTrendsByProjectId(@PathVariable("id") String id) throws HioMybatisGetException {

		try {
			return projectTrendsService.queryProjectTrendsListByProjectInfoId(id);
		} catch (Exception e) {
			logger.error("根据项目ID获取项目动态失败!" + e.getMessage());
			throw new HioMybatisQueryException(e);
		}

	}

	/**
	 * 分页
	 * 
	 * @param projectTrendsPageParam
	 * @return
	 */
	@RequestMapping(value = "/page", method = RequestMethod.POST, consumes = "application/json")
	public Page page(@RequestBody ProjectTrendsPageParam projectTrendsPageParam) throws HioMybatisQueryException {
		try {
			return projectTrendsService.queryProjectTrendsPageByProjectInfoId(projectTrendsPageParam);
		} catch (Exception e) {
			logger.error("获取项目动态分页失败!" + e.getMessage());
			throw new HioMybatisQueryException(e);
		}

	}

	/**
	 * 编辑项目
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/update", method = RequestMethod.POST, consumes = "application/json")
	public Object update(@RequestBody ProjectTrends projectTrends) throws HioMybatisInsertException {
		try {
			return projectTrendsService.update(projectTrends);
		} catch (Exception e) {
			logger.error("编辑项目动态失败!" + e.getMessage());
			throw new HioMybatisInsertException(e);
		}
	}

	/**
	 * 删除项目
	 *
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/delete", method = RequestMethod.POST, consumes = "application/json")
	@Override
	public Object delete(@PathVariable("id") String id) throws HioMybatisInsertException {
		try {
			return projectTrendsService.deleteObjectById(id);
		} catch (Exception e) {
			logger.error("删除项目动态失败!" + e.getMessage());
			throw new HioMybatisInsertException(e);
		}
	}

}
