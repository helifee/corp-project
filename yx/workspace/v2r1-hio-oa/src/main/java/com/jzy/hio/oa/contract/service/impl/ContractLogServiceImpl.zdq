package com.jzy.hio.oa.contract.service.impl;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.jzy.hio.base.Base;
import com.jzy.hio.base.service.impl.BaseServiceImpl;
import com.jzy.hio.oa.OaConstant;
import com.jzy.hio.entity.ContractLog;
import com.jzy.hio.exception.HioMybatisDeleteException;
import com.jzy.hio.exception.HioMybatisGetException;
import com.jzy.hio.exception.HioMybatisInsertException;
import com.jzy.hio.exception.HioMybatisUpdateException;
import com.jzy.hio.oa.contract.dto.ContractLogDto;
import com.jzy.hio.oa.contract.dto.ContractLogTypeDto;
import com.jzy.hio.oa.contract.mapper.ContractLogMapper;
import com.jzy.hio.oa.contract.service.ContractLogService;
import com.jzy.hio.utils.DateUtil;
import com.jzy.hio.utils.LoginUser;
import com.jzy.hio.utils.Page;

/**
 * 
 * <p>合同日志信息接口实现<br>
 * @author wliang
 * @date 2018年4月25日 上午12:28:18
 */
@Service("contractLogService")
public class ContractLogServiceImpl extends BaseServiceImpl<ContractLog> implements ContractLogService {
	
	private static Logger logger = LoggerFactory.getLogger(ContractLogServiceImpl.class);
	
	@Autowired
	private ContractLogMapper contractLogMapper;

	@Override
	public ContractLogDto getContractLogById(String id,LoginUser loginUser) throws HioMybatisGetException {
		
		logger.debug(">>>>>>>>>>>>>查询合同日志!id={}>>>>>>>>>>>>>",id);
		
		ContractLogDto logDto = null;
		try {
			logDto = contractLogMapper.getContractLogById(id);
		} catch (Exception e) {
			//
			logger.error(">>>>>>>>>>>>>>>>>>>>>查询合同日志出错!id={}>>>>>>>>>>>>>>>>>>>>>",id);
			throw new HioMybatisGetException(e);
		}
		return logDto;
	}

	@Override
	public int saveContractLog(ContractLogDto contractLogDto,LoginUser loginUser) throws HioMybatisInsertException {
		
		//保存
		int count = 0;
		try {
			ContractLog contractLog = new ContractLog();
			//对象复制方法
			BeanUtils.copyProperties(contractLogDto,contractLog);
			if(Base.isEmpty(contractLog.getCreateDate())){
				contractLog.setCreateDate(DateUtil.getDate(DateUtil.getCurDateTime()));
			}
			if(Base.isEmpty(contractLog.getDelflag())){
				contractLog.setDelflag(OaConstant.CONTRACT_DEL_FLAG_0);
			}
			if(Base.isEmpty(contractLog.getConcurrencyVersion())){
				contractLog.setConcurrencyVersion(OaConstant.CONTRACT_DEL_FLAG_0);
			}
			
			count = save(contractLog);
		} catch (BeansException e) {
			//
			logger.error(">>>>>>>>>>>保存合同日志出错!id={}>>>>>>contractId={}>>>>>>>>>>>>",contractLogDto.getId(),contractLogDto.getContractId());
			throw new HioMybatisInsertException("保存合同日志出错!");
		}
		
		return count;
	}

	@Override
	public int deleteContractLogById(ContractLogDto contractLogDto,LoginUser loginUser) throws HioMybatisDeleteException{
		//
		return contractLogMapper.deleteContractLogById(contractLogDto);
	}

	@Override
	public int updateContractLog(ContractLogDto contractLogDto,LoginUser loginUser) throws HioMybatisUpdateException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Page getContractLogPage(ContractLogDto contractLogDto,LoginUser loginUser) throws HioMybatisGetException {
		
		try {
			
			//
			pageStart(contractLogDto);
			//查询
			List<ContractLogDto> list = contractLogMapper.getContractLogListByContractId(contractLogDto);
					
			/*日志表已增加类型名称字段
			 * //日志类型名称处理
			//this.getLogTypeName(list);
			 */			
			return pageReturn(list);
			
		} catch (Exception e) {
			//
			logger.error(">>>>>>>>>>>>>分页查询合同日志出错!contractId={}>>>>>>>>>>>>>",contractLogDto.getContractId());
			throw new HioMybatisGetException(e);
		}
		
	}

	@Override
	public List<ContractLogDto> getContractLogByContractId(ContractLogDto contractLogDto, LoginUser loginUser)
			throws HioMybatisGetException {

		//查询
		List<ContractLogDto> list = contractLogMapper.getContractLogListByContractId(contractLogDto);
				
		try {
			/*日志表已增加类型名称字段
			 * //日志类型名称处理
			//this.getLogTypeName(list);
			 */
			
		} catch (Exception e) {
			//
			logger.error(">>>>>>>>>>>>>查询合同日志出错!contractId={}>>>>>>>>>>>>>",contractLogDto.getContractId());
			throw new HioMybatisGetException(e);
		}
		
		return list;
	}
	
	@Override
	public List<ContractLogTypeDto> getLogTypeList(ContractLogDto contractLogDto, LoginUser loginUser) throws HioMybatisGetException {
		
		List<ContractLogTypeDto> typeDtos = new ArrayList<ContractLogTypeDto>();
		Iterator<Integer> iterator = OaConstant.LOG_TYPE_TEXT_MAP.keySet().iterator();
		while(iterator.hasNext()){
			ContractLogTypeDto typeDto = new ContractLogTypeDto();
			typeDto.setSid((Integer)iterator.next());
			typeDto.setTypeName(OaConstant.LOG_TYPE_TEXT_MAP.get(typeDto.getSid()));
			typeDtos.add(typeDto);
		}
		
		return typeDtos;
	}
	
	private Page pageReturn(List<? extends Object> list) throws Exception{
	     PageInfo<?> pageInfo = new PageInfo<>(list);
	     Page resultPage = super.getResultPage(pageInfo);
	     return resultPage;
	 }
	 
	 /**
	  * 
	  * <p>本次翻页起始下标和每页数据量
	  * @author wliang
	  * @date 2018年4月18日 下午4:18:56 
	  * @param contractLogDto
	  */
	 private void pageStart(ContractLogDto contractLogDto) throws Exception{
	     int pageNum = contractLogDto.getPageNum();
	     int pageCount = contractLogDto.getPageCount();
	    /* int pageStart = (pageNum - 1) * pageCount;
	     if (pageStart < 0) {
	         pageStart = 0;
	     }*/
	     PageHelper.startPage(pageNum, pageCount, true, false, null);
	 }
	 
	 /**
	  * 
	  * <p>日志类型->组织类型名称<br>
	  * @author wliang
	  * @date 2018年5月4日 下午2:35:41 
	  * @param list
	  */
	 private void getLogTypeName(List<ContractLogDto> list) throws Exception{
		 if(Base.isNotEmpty(list)){
			 for(ContractLogDto dto : list){
				 dto.setLogTypeName(OaConstant.LOG_TYPE_TEXT_MAP.get(dto.getLogType()));
			 }			 
		 }
	 }

}
