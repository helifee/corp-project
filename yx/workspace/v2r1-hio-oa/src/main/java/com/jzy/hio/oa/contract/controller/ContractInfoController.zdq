package com.jzy.hio.oa.contract.controller;

import com.jzy.hio.exception.HioMybatisDeleteException;
import com.jzy.hio.exception.HioMybatisInsertException;

import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import com.jzy.hio.base.Base;
import com.jzy.hio.base.controller.BaseOaController;
import com.jzy.hio.exception.HioMybatisGetException;
import com.jzy.hio.exception.HioMybatisQueryException;
import com.jzy.hio.exception.HioMybatisUpdateException;
import com.jzy.hio.oa.contract.dto.ContractInfoDto;
import com.jzy.hio.oa.contract.dto.ResultMsg;
import com.jzy.hio.oa.contract.service.ContractInfoService;
import com.jzy.hio.utils.LoginUser;
import com.jzy.hio.utils.Page;

/**
 * 
 * <p>合同信息Controller<br>
 * @author wliang
 * @date 2018年4月16日 上午11:07:59
 */
@RestController
@RequestMapping("contract/contractInfo")
public class ContractInfoController extends BaseOaController {

	private static Logger logger = LoggerFactory.getLogger(ContractInfoController.class);
	@Autowired
	private ContractInfoService contractInfoService;
	
	
	/**
	 * 
	 * <p>根据Id获取合同详情<br>
	 * @author wliang
	 * @date 2018年4月16日 上午10:39:29 
	 * @param id 业务对象主键
	 * @return 业务对象
	 * @throws Exception
	 */
	@RequestMapping(value = "/get/{id}", method = RequestMethod.GET)
	public Object get(@PathVariable("id") String id) throws HioMybatisGetException {

		LoginUser loginUser = getLoginUser();
		return contractInfoService.getContractInfoById(id,loginUser);
	}
	
	@RequestMapping(value = "/getContractInfo", method = RequestMethod.POST, consumes = "application/json")
	public Object getContractInfo(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisGetException {
		LoginUser loginUser = getLoginUser();
		return contractInfoService.getContractInfo(contractInfoDto,loginUser);
	}
	
	/**
	 * 
	 * <p>获取合同信息、分页<br>
	 * @author wliang
	 * @date 2018年4月16日 上午10:39:29 
	 * @param contractInfoDto 查询条件
	 * @return 业务对象
	 * @throws Exception
	 */
	@RequestMapping(value = "/page", method = RequestMethod.POST , consumes = "application/json")
	public Page page(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisQueryException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.getContractInfoPage(contractInfoDto,loginUser);
	}
	
	/**
	 * 
	 * <p>新建合同信息--暂存<br>
	 * @author wliang
	 * @date 2018年4月16日 上午10:39:29 
	 * @param contractInfoDto 业务对象
	 * @return 业务对象
	 * @throws Exception
	 */
	@RequestMapping(value = "/save", method = RequestMethod.POST, consumes = "application/json")
	public Object save(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisInsertException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.saveContractInfo(contractInfoDto,loginUser);
	}



	/**
	 * 
	 * <p>编辑合同信息<br>
	 * @author wliang
	 * @date 2018年4月16日 上午10:39:29 
	 * @param contractInfoDto 业务对象
	 * @return 业务对象
	 * @throws HioMybatisUpdateException
	 */
	@RequestMapping(value = "/update", method = RequestMethod.POST, consumes = "application/json")
	public Object update(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisUpdateException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.updateContractInfo(contractInfoDto,loginUser);
	}

	/**
	 * 
	 * <p>删除合同信息<br>
	 * @author wliang
	 * @date 2018年4月16日 上午10:39:29 
	 * @param id 业务主键
	 * @return 业务对象
	 * @throws HioMybatisDeleteException
	 */
	@RequestMapping(value = "/delete", method = RequestMethod.POST, consumes = "application/json")
	public Object delete(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisDeleteException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.deleteContractInfoById(contractInfoDto,loginUser);
	}
	
	/**
	 * 
	 * <p>更新合同状态:作废<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param contractInfoDto
	 * @return
	 * @throws HioMybatisUpdateException
	 */
	@RequestMapping(value = "/updateStatus", method = RequestMethod.POST , consumes = "application/json")
	public Object updateStatus(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisUpdateException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.updateStatusToCancel(contractInfoDto,loginUser);
	}
	
	/**
	 * 
	 * <p>更新合同审批状态<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param contractInfoDto
	 * @return
	 * @throws HioMybatisUpdateException
	 */
	@RequestMapping(value = "/updateApproveStatus", method = RequestMethod.POST , consumes = "application/json")
	public Object updateApproveStatus(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisUpdateException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.updateApproveStatus(contractInfoDto,loginUser);
	}
	
	/**
	 * 
	 * <p>更新合同结算状态<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param contractInfoDto
	 * @return
	 * @throws HioMybatisUpdateException
	 */
	@RequestMapping(value = "/updateBalanceStatus", method = RequestMethod.POST , consumes = "application/json")
	public Object updateBalanceStatus(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisUpdateException {
		
		LoginUser loginUser = getLoginUser();
		//contractInfoDto.setBalanceStatus(OaConstant.CONTRACT_BALANCE_STATUS_2);
		return contractInfoService.updateBalanceStatus(contractInfoDto,loginUser);
	}
	
	/**
	 * 
	 * <p>更新合同结算状态:结算/反结算<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param contractInfoDto
	 * @return
	 * @throws HioMybatisUpdateException
	 */
	@RequestMapping(value = "/updateReactBalanceStatus", method = RequestMethod.POST , consumes = "application/json")
	public Object updateReactBalanceStatus(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisUpdateException {
		
		LoginUser loginUser = getLoginUser();
		//contractInfoDto.setBalanceStatus(OaConstant.CONTRACT_BALANCE_STATUS_0);
		return contractInfoService.updateBalanceStatus(contractInfoDto,loginUser);
	}
	
	/**
	 * 
	 * <p>导出合同<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param contractInfoDto
	 * @return
	 * @throws HioMybatisUpdateException
	 */
	@RequestMapping(value = "/exportExcel", method = RequestMethod.POST)
	public void getExcelFile(ContractInfoDto contractInfoDto,HttpServletResponse response) throws HioMybatisQueryException{
		
		LoginUser loginUser = getLoginUser();
		contractInfoService.getExportExcel(contractInfoDto,response,loginUser);   
    }
	
	/**
	 * 
	 * <p>获取合同操作菜单<br>
	 * @author wliang
	 * @date 2018年4月24日 上午10:39:29 
	 * @param id 业务对象主键
	 * @return 业务对象
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/getContractAuthForSingle", method = RequestMethod.POST)
	public Object getContractAuthForSingle(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.getContractAuthForSingle(contractInfoDto,loginUser,null);
	}	
	
	/**
	 * 
	 * <p>获取用户信息<br>
	 * @author wliang
	 * @date 2018年4月24日 下午22:27:55 
	 * @return
	 * @throws HioMybatisQueryException
	 */
	@RequestMapping(value = "/getCurrentLoginUser", method = RequestMethod.GET)
	public Object getCurrentLoginUser() throws HioMybatisGetException {
		
		return getLoginUser();
	}
	
	/**
	 * 
	 * <p>获取主键信息<br>
	 * @author wliang
	 * @date 2018年4月24日 下午22:27:55 
	 * @return
	 * @throws HioMybatisQueryException
	 */
	@RequestMapping(value = "/getContractGeneratePk", method = RequestMethod.POST)
	public Object getContractGeneratePk(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.getContractGeneratePk(contractInfoDto,loginUser);
		
	}
	
	/**
	 * 
	 * <p>移动端按月度查询<br>
	 * @author wliang
	 * @date 2018年4月27日 下午9:40:06 
	 * @return
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/getTotalListByMonth", method = RequestMethod.POST)
	public Object getTotalListByMonth(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.getTotalListByMonth(contractInfoDto,loginUser);
		
	}
	
	/**
	 * 
	 * <p>移动端按年度查询<br>
	 * @author wliang
	 * @date 2018年4月27日 下午9:40:06 
	 * @return
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/getTotalListByYear", method = RequestMethod.POST)
	public Object getTotalListByYear(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.getTotalListByYear(contractInfoDto,loginUser);
		
	}
	
	/**
	 * 
	 * <p>移动端列表查询<br>
	 * @author wliang
	 * @date 2018年4月27日 下午9:40:06 
	 * @return
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/getContractMobilePage", method = RequestMethod.POST)
	public Page getContractMobilePage(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.getContractMobilePage(contractInfoDto,loginUser);
		
	}
	/**
	 * 
	 * <p>移动端查询详细信息<br>
	 * @author wliang
	 * @date 2018年4月27日 下午9:40:06 
	 * @return
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/getContractMobileById", method = RequestMethod.POST)
	public Object getContractMobileById(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.getContractMobileById(contractInfoDto,loginUser);
		
	}
	
	/**
	 * 
	 * <p>审批新建/修改合同信息<br>
	 * @author wliang
	 * @date 2018年5月10日 下午3:48:33 
	 * @param contractInfoDto
	 * @return
	 * @throws HioMybatisInsertException
	 */
	@RequestMapping(value = "/saveForApprove", method = RequestMethod.POST, consumes = "application/json")
	public Object saveForApprove(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisInsertException {
		
		LoginUser loginUser = getLoginUser();
		return contractInfoService.saveContractInfoForApprove(contractInfoDto,loginUser);
	}
	
	/**
	 * 
	 * <p>新增付款或变更前校验<br>
	 * @author wliang
	 * @date 2018年6月26日 上午11:22:47 
	 * @param contractInfoDto
	 * @return
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/checkBeforeAddPaymentOrChange", method = RequestMethod.POST)
	public Object checkBeforeAddPaymentOrChange(@RequestBody ContractInfoDto contractInfoDto) throws HioMybatisQueryException {
		
		LoginUser loginUser = getLoginUser();
		ResultMsg addMsg = contractInfoService.checkBeforeAddPaymentOrChange(contractInfoDto,loginUser);
		if(Base.isEmpty(addMsg) || addMsg.isSuccess()){
			return true;
		}else{
			throw new HioMybatisQueryException(addMsg.getMsg());
		}
		
	}


}
