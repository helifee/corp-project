package com.jzy.hio.oa.mailbox.service.impl;

import com.jzy.hio.base.service.impl.BaseServiceImpl;
import com.jzy.hio.oa.mailbox.entity.MailboxAccount;
import com.jzy.hio.oa.mailbox.mapper.MailboxAccountMapper;
import com.jzy.hio.oa.mailbox.param.MailboxAccountParam;
import com.jzy.hio.oa.mailbox.service.MailboxAccountService;
import com.jzy.hio.oa.mailbox.utils.CommonUtils;
import com.jzy.hio.oa.mailbox.utils.MailboxConstant;
import com.jzy.hio.utils.StringUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * 邮箱账号 Service 接口实现类
 *
 * @author haoqipeng 2018-05-08
 */
@Service
public class MailboxAccountServiceImpl extends BaseServiceImpl<MailboxAccount> implements MailboxAccountService {

    /**
     * 邮箱账号mapper
     */
    @Autowired
    private MailboxAccountMapper mailboxAccountMapper;

    @Override
    public int saveOrUpdate(MailboxAccountParam param) {
        // 初始化持久化Entity类
        MailboxAccount mailboxAccount = new MailboxAccount();

        // 复制参数到Entity类
        CommonUtils.copyProperties(param, mailboxAccount);

        mailboxAccount.setUserId(getUserIdIM());
        if (MailboxConstant.MAILBOX_TYPE_COMPANY.equals(mailboxAccount.getMailboxType())) {
            mailboxAccount.setTenantId(getTendId());
        }

        // 添加
        if (StringUtil.isBlank(param.getId())) {
            // 如果邮箱已存在（查询条件：account、userId、mailboxType、tenantId），则不执行保存


            //mailboxAccountMapper.selectCount()
            initBaseEntity(mailboxAccount, true);
            return mailboxAccountMapper.insert(mailboxAccount);
        }
        // 更新
        else {
            initBaseEntityForUpdate(mailboxAccount);
            return mailboxAccountMapper.updateByPrimaryKeySelective(mailboxAccount);
        }


    }

}
