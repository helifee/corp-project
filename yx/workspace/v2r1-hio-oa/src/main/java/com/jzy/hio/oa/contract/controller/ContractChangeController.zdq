package com.jzy.hio.oa.contract.controller;

import java.util.List;

import com.jzy.hio.exception.HioMybatisDeleteException;
import com.jzy.hio.exception.HioMybatisInsertException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import com.jzy.hio.base.controller.BaseOaController;
import com.jzy.hio.exception.HioMybatisGetException;
import com.jzy.hio.exception.HioMybatisQueryException;
import com.jzy.hio.exception.HioMybatisUpdateException;
import com.jzy.hio.oa.contract.dto.ContractChangeDto;
import com.jzy.hio.oa.contract.service.ContractChangeService;
import com.jzy.hio.utils.LoginUser;
import com.jzy.hio.utils.Page;

/**
 * 合同变更信息
 * @author wangliang
 *
 */
@RestController
@RequestMapping("contract/contractChange")
public class ContractChangeController extends BaseOaController {

	private static Logger logger = LoggerFactory.getLogger(ContractChangeController.class);
	@Autowired
	private ContractChangeService contractChangeService;

	
	/**
	 * 
	 * <p>根据Id获取合同变更详情<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param id
	 * @return
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/get/{id}", method = RequestMethod.GET)
	public Object get(@PathVariable("id") String id) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.getContractChangeById(id,loginUser);
	}
	
	
	@RequestMapping(value = "/getContractChangeForReEdit", method = RequestMethod.POST)
	public Object getContractChangeForReEdit(@RequestBody  ContractChangeDto contractChangeDto) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.getContractChangeForReEdit(contractChangeDto, loginUser);
	}
	
	/**
	 * 
	 * <p>获取用户信息<br>
	 * @author wliang
	 * @date 2018年4月24日 下午22:27:55 
	 * @return
	 * @throws HioMybatisQueryException
	 */
	@RequestMapping(value = "/getContractChangeGeneratePk", method = RequestMethod.POST)
	public Object getContractChangeGeneratePk(@RequestBody  ContractChangeDto contractChangeDto) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.getContractChangeGeneratePk(contractChangeDto,loginUser);
	}
	
	
	/**
	 * 
	 * <p>根据contractId获取合同变更列表<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param id
	 * @return
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/getChangeList", method = RequestMethod.POST)
	public List<ContractChangeDto> getChangeListByContractId(@RequestBody ContractChangeDto contractChangeDto) 
			throws HioMybatisGetException {

		LoginUser loginUser = getLoginUser();
		return contractChangeService.getChangeListByContractId(contractChangeDto,loginUser);
	}
	
	/**
	 * 
	 * <p>根据contractId获取合同变更列表分页<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param id
	 * @return
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/getChangePageByContractId", method = RequestMethod.POST)
	public Page getChangePageByContractId(@RequestBody ContractChangeDto contractChangeDto) 
			throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.getChangePageByContractId(contractChangeDto,loginUser);
	}
	
	/**
	 * 
	 * <p>获取合同变更信息、分页<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param id
	 * @return
	 * @throws HioMybatisQueryException
	 */
	@RequestMapping(value = "/page", method = RequestMethod.POST , consumes = "application/json")
	public Page page(@RequestBody ContractChangeDto contractChangeDto) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.getChangePageByContractId(contractChangeDto,loginUser);
	}
	
	/**
	 * 
	 * <p>新建合同变更<br>
	 * @author wliang
	 * @date 2018年4月25日 下午9:35:10 
	 * @param contractChangeDto
	 * @return
	 * @throws HioMybatisInsertException
	 */
	@RequestMapping(value = "/save", method = RequestMethod.POST, consumes = "application/json")
	public Object save(@RequestBody ContractChangeDto contractChangeDto) throws HioMybatisInsertException {

		LoginUser loginUser = getLoginUser();
		return contractChangeService.saveContractChange(contractChangeDto,loginUser);
	}



	/**
	 * 编辑合同变更
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/update", method = RequestMethod.POST, consumes = "application/json")
	public Object update(@RequestBody ContractChangeDto contractChangeDto) throws HioMybatisInsertException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.updateContractChange(contractChangeDto,loginUser);
	}
	
	/**
	 * 
	 * <p>更新变更状态:作废<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param contractInfoDto
	 * @return
	 * @throws HioMybatisUpdateException
	 */
	@RequestMapping(value = "/updateStatus", method = RequestMethod.POST , consumes = "application/json")
	public Object updateStatus(@RequestBody ContractChangeDto contractChangeDto) throws HioMybatisUpdateException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.updateStatusToCancel(contractChangeDto,loginUser);
	}

	/**
	 * 删除合同变更
	 * @param
	 * @return
	 */
	@RequestMapping(value = "/delete", method = RequestMethod.POST, consumes = "application/json")
	public Object delete(@RequestBody ContractChangeDto contractChangeDto) throws HioMybatisDeleteException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.deleteContractChangeById(contractChangeDto,loginUser);
	}
	
	/**
	 * 
	 * <p>更新合同变更审批状态<br>
	 * @author wliang
	 * @date 2018年4月16日 下午3:47:16 
	 * @param contractChangeDto
	 * @return
	 * @throws HioMybatisUpdateException
	 */
	@RequestMapping(value = "/updateApproveStatus", method = RequestMethod.POST , consumes = "application/json")
	public Object updateApproveStatus(@RequestBody ContractChangeDto contractChangeDto) throws HioMybatisUpdateException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.updateApproveStatus(contractChangeDto,loginUser);
	}
	
	/**
	 * 
	 * <p>获取用户信息<br>
	 * @author wliang
	 * @date 2018年4月24日 下午22:27:55 
	 * @return
	 * @throws HioMybatisQueryException
	 */
	@RequestMapping(value = "/getCurrentLoginUser", method = RequestMethod.GET)
	public Object getCurrentLoginUser() throws HioMybatisGetException {
		
		return getLoginUser();
	}
	
	/**
	 * 
	 * <p>获取合同变更操操作菜单<br>
	 * @author wliang
	 * @date 2018年4月24日 上午10:39:29 
	 * @param id 业务对象主键
	 * @return 业务对象
	 * @throws HioMybatisGetException
	 */
	@RequestMapping(value = "/getChangeAuthForSingle", method = RequestMethod.POST)
	public Object getChangeAuthForSingle(@RequestBody  ContractChangeDto contractChangeDto) throws HioMybatisGetException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.getChangeAuthForSingle(contractChangeDto,loginUser,null);
	}
	
	/**
	 * 
	 * <p>审批新建/修改合同变更信息<br>
	 * @author wliang
	 * @date 2018年5月10日 下午3:48:33 
	 * @param contractChangeDto
	 * @return
	 * @throws HioMybatisInsertException
	 */
	@RequestMapping(value = "/saveForApprove", method = RequestMethod.POST, consumes = "application/json")
	public Object saveForApprove(@RequestBody ContractChangeDto contractChangeDto) throws HioMybatisInsertException {
		
		LoginUser loginUser = getLoginUser();
		return contractChangeService.saveContractChangeForApprove(contractChangeDto, loginUser);
	}


}
