<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.oa.news.mapper.NewsMapper">

	<resultMap type="com.jzy.hio.entity.News" id="newsResult">
		<id property="id" column="id" />
		<result property="typeId" column="type_id"/>
		<result property="createDate" column="create_date" />
		<result property="updateDate" column="update_date" />
		<result property="createPersonId" column="create_person_id" />
		<result property="createPersonName" column="create_person_name" />
		<result property="updatePersonId" column="update_person_id"/>
		<result property="updatePersonName" column="update_person_name"/>
		<result property="headline" column="headline" />
		<result property="title" column="title" />
		<result property="delflag" column="delflag" />
		<result property="msgReminding" column="msg_reminding" />
		<result property="isComment" column="is_comment" />
		<result property="newsTop" column="news_top" />
		<result property="status" column="status" />
		<result property="publishDate" column="publish_date" />
		<result property="hitNum" column="hit_num"/>
		<result property="newsContent" column="news_content" />
		<result property="sid" column="sid" />
	</resultMap>
	
	<select id="findPublishedNews" resultType="com.jzy.hio.oa.news.dto.NewsDto" parameterType="Map">
		select 
		
			n.id id,
			n.type_id typeId,
			n.create_date createDate,
			n.update_date updateDate,
			n.create_person_id createPersonId,
			n.create_person_name createPersonName,
			n.update_person_id updatePersonId,
			n.update_person_name updatePersonName,
			n.headline headline,
			n.title title,
			n.delflag delflag,
			n.msg_reminding msgReminding,
			n.is_comment isComment,
			n.news_top newsTop,
			n.status status,
			n.publish_date publishDate,
			n.hit_num hitNum,
			n.news_content newsContent,
			t.name newsTypeName			
		
		from news n
		left join news_allowed_scope scope on n.id = scope.news_id
		left join news_type t on t.id = n.type_id
		where n.delflag = 0
		and (n.create_person_id = #{userId} or (
		<if test="orgIds != null and orgIds.size() > 0">
			(
				scope.allowed_type = 0 
				and scope.allowed_id in 
				<foreach item="orgId" collection="orgIds" separator="," open="(" close=")" index="">
					#{orgId}
				</foreach>
			)
			or
		</if>
		<if test="roleIds != null and roleIds.size() > 0">
			(
				scope.allowed_type = 2
				and scope.allowed_id in 
				<foreach item="roleId" collection="roleIds" separator="," open="(" close=")" index="">
					#{roleId}
				</foreach>
			)
			or 
		</if>
			(
				scope.allowed_type = 1 and scope.allowed_id = #{userId}
			)
		))
		<if test="newsTitle != null and newsTitle != ''">
			and n.title LIKE CONCAT(CONCAT('%', #{newsTitle}),'%')
		</if>
		<if test="newsTypeId != null and newsTypeId != ''">
			and n.type_id = #{newsTypeId}
		</if>
		and n.status = 1
		GROUP BY n.id
		order by n.status asc, n.news_top desc, n.publish_date desc
	</select>

	<select id="queryNewsList" resultType="com.jzy.hio.oa.news.dto.NewsDto" parameterType="Map">
		select 
		
			n.id id,
			n.type_id typeId,
			n.create_date createDate,
			n.update_date updateDate,
			n.create_person_id createPersonId,
			n.create_person_name createPersonName,
			n.update_person_id updatePersonId,
			n.update_person_name updatePersonName,
			n.headline headline,
			n.title title,
			n.delflag delflag,
			n.msg_reminding msgReminding,
			n.is_comment isComment,
			n.news_top newsTop,
			n.status status,
			n.publish_date publishDate,
			n.hit_num hitNum,
			n.news_content newsContent,
			t.name newsTypeName
			
		from news n
		left join news_allowed_scope scope on n.id = scope.news_id
		left join news_type t on t.id = n.type_id
		where n.delflag = 0
		and (n.create_person_id = #{userId} or (n.status=1 and (
		<if test="orgIds != null and orgIds.size() > 0">
			(
				scope.allowed_type = 0 
				and scope.allowed_id in 
				<foreach item="orgId" collection="orgIds" separator="," open="(" close=")" index="">
					#{orgId}
				</foreach>
			)
			or
		</if>
		<if test="roleIds != null and roleIds.size() > 0">
			(
				scope.allowed_type = 2
				and scope.allowed_id in 
				<foreach item="roleId" collection="roleIds" separator="," open="(" close=")" index="">
					#{roleId}
				</foreach>
			)
			or 
		</if>
			(
				scope.allowed_type = 1 and scope.allowed_id = #{userId}
			)
		)
		)
		)
		<if test="newsTitle != null and newsTitle != ''">
			and n.title LIKE CONCAT(CONCAT('%', #{newsTitle}),'%')
		</if>
		<if test="newsTypeId != null and newsTypeId != ''">
			and n.type_id = #{newsTypeId}
		</if>
		order by n.status asc, n.news_top desc, n.publish_date desc
	</select>
	
	<select id="findDraftNews" resultType="com.jzy.hio.oa.news.dto.NewsDto" parameterType="Map">
		select 
			
			n.id id,
			n.type_id typeId,
			n.create_date createDate,
			n.update_date updateDate,
			n.create_person_id createPersonId,
			n.create_person_name createPersonName,
			n.update_person_id updatePersonId,
			n.update_person_name updatePersonName,
			n.headline headline,
			n.title title,
			n.delflag delflag,
			n.msg_reminding msgReminding,
			n.is_comment isComment,
			n.news_top newsTop,
			n.status status,
			n.publish_date publishDate,
			n.hit_num hitNum,
			n.news_content newsContent,
			t.name newsTypeName
			
		from news n
		left join news_type t on t.id = n.type_id
		where n.status = 0 and n.create_person_id = #{userId} and n.delflag = 0 
		<if test="newsTitle != null and newsTitle != ''">
			and n.title LIKE CONCAT(CONCAT('%', #{newsTitle}),'%')
		</if>
		<if test="newsTypeId != null and newsTypeId != ''">
			and n.type_id = #{newsTypeId}
		</if>
		order by n.news_top desc, n.publish_date desc
	</select>
	
	<select id="findAllNews" resultType="com.jzy.hio.oa.news.dto.NewsDto" parameterType="Map">
		select
		
			n.id id,
			n.type_id typeId,
			n.create_date createDate,
			n.update_date updateDate,
			n.create_person_id createPersonId,
			n.create_person_name createPersonName,
			n.update_person_id updatePersonId,
			n.update_person_name updatePersonName,
			n.headline headline,
			n.title title,
			n.delflag delflag,
			n.msg_reminding msgReminding,
			n.is_comment isComment,
			n.news_top newsTop,
			n.status status,
			n.publish_date publishDate,
			n.hit_num hitNum,
			n.news_content newsContent,
			t.name newsTypeName
			
		from news n
		left join news_type t on t.id = n.type_id 
		where n.delflag = 0 
		<if test="newsTitle != null and newsTitle != ''">
			and n.title LIKE CONCAT(CONCAT('%', #{newsTitle}),'%')
		</if>
		<if test="newsTypeId != null and newsTypeId != ''">
			and n.type_id = #{newsTypeId}
		</if>
		<choose>
			<when test="newsStatus != null and newsStatus != '' and newsStatus =='0'.toString()">
				and n.status = 0 and n.create_person_id = #{createUserId}
			</when>
			<when test="newsStatus != null and newsStatus != '' and newsStatus =='1'.toString()">
				and n.status = 1
			</when>
			<otherwise>
				and (n.status = 1 or (n.status = 0 and n.create_person_id = #{createUserId}))
			</otherwise>
		</choose>
		order by n.status asc, n.news_top desc, n.publish_date desc
	</select>
	
	<update id="addHitNum" parameterType="String">
		update news set hit_num = hit_num + 1 where id = #{newsId}
	</update>
	
	<update id="topNewsById" parameterType="String">
		update news set news_top = 1 where id = #{newsId}
	</update>
	
	<update id="cancelTopNewsById" parameterType="String">
		update news set news_top = 0 where id = #{newsId}
	</update>
	<update id="cancelPublishNews" parameterType="String">
		update news set status = 0 where id = #{newsId}
	</update>
</mapper>