<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.oa.plan.mapper.PlanMapper">

	<resultMap type="com.jzy.hio.entity.Plan" id="planResult">
		<id property="id" column="id" />
		<result property="planTitle" column="plan_title"/>
		<result property="planYear" column="plan_year" />
		<result property="planType" column="plan_type" />
		<result property="planNumber" column="plan_number" />
		<result property="planContent" column="plan_content" />
		<result property="planResult" column="plan_result" />
		<result property="planSummary" column="plan_summary" />
		<result property="publishDate" column="publish_date" />
		<result property="weekPlanStartDate" column="week_plan_start_date" />
		<result property="weekPlanEndDate" column="week_plan_end_date" />
		<result property="delflag" column="delflag" />
		<result property="createDate" column="create_date" />
		<result property="updateDate" column="update_date" />
		<result property="createPersonId" column="create_person_id" />
		<result property="createPersonName" column="create_person_name" />
		<result property="updatePersonId" column="update_person_id"/>
		<result property="updatePersonName" column="update_person_name"/>
	</resultMap>

	<select id="findPlanDetail" resultMap="planResult" parameterType="com.jzy.hio.entity.Plan">
		select * from plan where plan_year = #{planYear} and plan_type = #{planType} and plan_number = #{planNumber} 
		and create_person_id = #{createPersonId} and delflag = 0
	</select>
	
	<select id="findSharePlanIdList" resultType="String" parameterType="Map">
		select DISTINCT(p.id) id
		from plan p, plan_allowed_scope scope
		where p.id = scope.plan_id and p.delflag = 0
		<if test="planType != null and planType gt 0">
			and p.plan_type = #{planType}
		</if>
		<if test="userIdList != null and userIdList.size() > 0">
			and p.create_person_id in 
			<foreach item="userId" collection="userIdList" separator="," open="(" close=")" index="">
					#{userId}
			</foreach>
		</if>
			and (
		<if test="loginOrgIdList != null and loginOrgIdList.size() > 0">
			(
				scope.allowed_type = 0 
				and scope.allowed_id in 
				<foreach item="orgId" collection="loginOrgIdList" separator="," open="(" close=")" index="">
					#{orgId}
				</foreach>
			)
			or
		</if>
		<if test="loginRoleIdList != null and loginRoleIdList.size() > 0">
			(
				scope.allowed_type = 2
				and scope.allowed_id in 
				<foreach item="roleId" collection="loginRoleIdList" separator="," open="(" close=")" index="">
					#{roleId}
				</foreach>
			)
			or 
		</if>
			(
				scope.allowed_type = 1 and scope.allowed_id = #{loginUserId}
			)
			)
	</select>
	
	<select id="findSharePlanList" resultType="com.jzy.hio.entity.Plan" parameterType="Map">
		select DISTINCT(p.id) id, p.plan_title planTitle, p.publish_date publishDate
		from plan p, plan_allowed_scope scope
		where p.id = scope.plan_id and p.delflag = 0
		<if test="planType != null and planType gt -1">
			and p.plan_type = #{planType}
		</if>
		<if test="userIdList != null and userIdList.size() > 0">
			and p.create_person_id in 
			<foreach item="userId" collection="userIdList" separator="," open="(" close=")" index="">
					#{userId}
			</foreach>
		</if>
			and (
		<if test="loginOrgIdList != null and loginOrgIdList.size() > 0">
			(
				scope.allowed_type = 0 
				and scope.allowed_id in 
				<foreach item="orgId" collection="loginOrgIdList" separator="," open="(" close=")" index="">
					#{orgId}
				</foreach>
			)
			or
		</if>
		<if test="loginRoleIdList != null and loginRoleIdList.size() > 0">
			(
				scope.allowed_type = 2
				and scope.allowed_id in 
				<foreach item="roleId" collection="loginRoleIdList" separator="," open="(" close=")" index="">
					#{roleId}
				</foreach>
			)
			or 
		</if>
			(
				scope.allowed_type = 1 and scope.allowed_id = #{loginUserId}
			)
			)
			order by p.publish_date desc
	</select>
	
	<select id="findCommentPlanList" resultType="com.jzy.hio.entity.Plan" parameterType="Map">
		select DISTINCT(p.id) id, p.plan_title planTitle, p.publish_date publishDate
		from plan p, comment c 
		where p.id = c.business_id and c.business_type = '2' and c.user_id = #{loginUserId}
		<if test="planType != null and planType gt -1">
			and p.plan_type = #{planType}
		</if>
		<if test="userIdList != null and userIdList.size() > 0">
			and c.comment_user_id in 
			<foreach item="userId" collection="userIdList" separator="," open="(" close=")" index="">
					#{userId}
			</foreach>
		</if>
		<choose>
			<when test="sharePlanIdList != null and sharePlanIdList.size() > 0">
				and (p.id in 
				<foreach item="planId" collection="sharePlanIdList" separator="," open="(" close=")" index="">
						#{planId}
				</foreach>
					or p.create_person_id = #{loginUserId})
			</when>
			<otherwise>
				and p.create_person_id = #{loginUserId}
			</otherwise>
		
		</choose>
		and p.delflag = 0 and c.delflag = 0 
		order by p.publish_date desc
	</select>
	
	<select id="findSharePlanUserIdList" resultType="String" parameterType="Map">
		select DISTINCT(p.create_person_id)
		from plan p, plan_allowed_scope scope
		where p.id = scope.plan_id and p.delflag = 0 
		and (
		<if test="loginOrgIdList != null and loginOrgIdList.size() > 0">
			(
				scope.allowed_type = 0 
				and scope.allowed_id in 
				<foreach item="orgId" collection="loginOrgIdList" separator="," open="(" close=")" index="">
					#{orgId}
				</foreach>
			)
			or
		</if>
		<if test="loginRoleIdList != null and loginRoleIdList.size() > 0">
			(
				scope.allowed_type = 2
				and scope.allowed_id in 
				<foreach item="roleId" collection="loginRoleIdList" separator="," open="(" close=")" index="">
					#{roleId}
				</foreach>
			)
			or 
		</if>
			(
				scope.allowed_type = 1 and scope.allowed_id = #{loginUserId}
			)
		)
	</select>
	
	<select id="findCommentPlanUserIdList" resultType="String" parameterType="String">
		select DISTINCT p.create_person_id
		from plan p, comment c 
		where p.id = c.business_id and c.business_type = '2' and c.user_id = #{loginUserId}
		<choose>
			<when test="sharePlanIdList != null and sharePlanIdList.size() > 0">
				and (p.id in 
				<foreach item="planId" collection="sharePlanIdList" separator="," open="(" close=")" index="">
						#{planId}
				</foreach>
				or p.create_person_id = #{loginUserId})
			</when>
			<otherwise>
				and p.create_person_id = #{loginUserId}
			</otherwise>
		</choose>
		and p.delflag = 0 and c.delflag = 0 
	</select>
  
</mapper>