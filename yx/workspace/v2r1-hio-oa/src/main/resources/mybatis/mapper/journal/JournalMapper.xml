<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.oa.journal.mapper.JournalMapper">

	<resultMap type="com.jzy.hio.entity.Journal" id="journalResult">
		<id property="id" column="id" />
		<result property="content" column="content" />
		<result property="journalDate" column="journal_date" />
		<result property="delflag" column="delflag" />
		<result property="createDate" column="create_date" />
		<result property="updateDate" column="update_date" />
		<result property="createPersonId" column="create_person_id" />
		<result property="createPersonName" column="create_person_name" />
		<result property="updatePersonId" column="update_person_id" />
		<result property="updatePersonName" column="update_person_name" />
	</resultMap>

	<select id="findJournalDetail" resultMap="journalResult"
		parameterType="com.jzy.hio.entity.Journal">
		select * from journal where journal_date =
		#{journalDate} and create_person_id = #{createPersonId} and delflag = 0
	</select>
	
	<select id="findShareJournalIdList" resultType="String" parameterType="Map">
		select DISTINCT(j.id) id
		from journal j, journal_allowed_scope scope
		where j.id = scope.journal_id
		and j.delflag = 0
		<if test="journalDate != null and journalDate != ''">
			and j.journal_date = #{journalDate}
		</if>
		<if test="userIdList != null and userIdList.size() > 0">
			and j.create_person_id in
			<foreach item="userId" collection="userIdList" separator=","
				open="(" close=")" index="">
				#{userId}
			</foreach>
		</if>
		and (
		<if test="loginOrgIdList != null and loginOrgIdList.size() > 0">
			(
			scope.allowed_type = 0
			and scope.allowed_id in
			<foreach item="orgId" collection="loginOrgIdList" separator=","
				open="(" close=")" index="">
				#{orgId}
			</foreach>
			)
			or
		</if>
		<if test="loginRoleIdList != null and loginRoleIdList.size() > 0">
			(
			scope.allowed_type = 2
			and scope.allowed_id in
			<foreach item="roleId" collection="loginRoleIdList"
				separator="," open="(" close=")" index="">
				#{roleId}
			</foreach>
			)
			or
		</if>
		(
		scope.allowed_type = 1 and scope.allowed_id = #{loginUserId}
		)
		)
	</select>

	<select id="findShareJournalList" resultType="com.jzy.hio.entity.Journal"
		parameterType="Map">
		select DISTINCT(j.id) id, j.content content, j.journal_date journalDate, j.create_person_name createPersonName,
		j.create_person_id createPersonId, j.create_date createDate, j.update_date updateDate
		from
		journal j, journal_allowed_scope scope
		where j.id = scope.journal_id
		and j.delflag = 0
		<if test="journalDate != null and journalDate != ''">
			and j.journal_date = #{journalDate}
		</if>
		<if test="userIdList != null and userIdList.size() > 0">
			and j.create_person_id in
			<foreach item="userId" collection="userIdList" separator=","
				open="(" close=")" index="">
				#{userId}
			</foreach>
		</if>
		and (
		<if test="loginOrgIdList != null and loginOrgIdList.size() > 0">
			(
			scope.allowed_type = 0
			and scope.allowed_id in
			<foreach item="orgId" collection="loginOrgIdList" separator=","
				open="(" close=")" index="">
				#{orgId}
			</foreach>
			)
			or
		</if>
		<if test="loginRoleIdList != null and loginRoleIdList.size() > 0">
			(
			scope.allowed_type = 2
			and scope.allowed_id in
			<foreach item="roleId" collection="loginRoleIdList"
				separator="," open="(" close=")" index="">
				#{roleId}
			</foreach>
			)
			or
		</if>
		(
		scope.allowed_type = 1 and scope.allowed_id = #{loginUserId}
		)
		)
		order by j.update_date desc
	</select>

	<select id="findCommentJournalList" resultType="com.jzy.hio.entity.Journal"
		parameterType="Map">
		select DISTINCT(j.id) id, j.content content, j.journal_date journalDate, 
		j.create_person_id createPersonId, j.create_person_name createPersonName, j.create_date createDate, j.update_date updateDate
		from journal j, comment c
		where j.id = c.business_id and c.business_type = '3' and c.user_id = #{loginUserId}
		<if test="journalDate != null and journalDate != ''">
			and j.journal_date = #{journalDate}
		</if>
		<!-- <if test="userIdList != null and userIdList.size() > 0">
			and c.comment_user_id in
			<foreach item="userId" collection="userIdList" separator=","
				open="(" close=")" index="">
				#{userId}
			</foreach>
		</if> -->
		<choose>
			<when test="journalShareIdList != null and journalShareIdList.size() > 0">
				and (j.id in
				<foreach item="journalId" collection="journalShareIdList" separator=","
					open="(" close=")" index="">
					#{journalId}
				</foreach>
				or j.create_person_id = #{loginUserId})
			</when>
			<otherwise>
				and j.create_person_id = #{loginUserId}
			</otherwise>
		
		</choose>
		
		and j.delflag = 0 and c.delflag = 0
		order by j.update_date desc
	</select>

	<select id="findShareJournalUserIdList" resultType="String"
		parameterType="Map">
		select DISTINCT(j.create_person_id)
		from journal j,
		journal_allowed_scope scope
		where j.id = scope.journal_id and j.delflag = 0 
		<if test="journalDate != null and journalDate != ''">
			and j.journal_date = #{journalDate}
		</if>
		and (
		<if test="loginOrgIdList != null and loginOrgIdList.size() > 0">
			(
			scope.allowed_type = 0
			and scope.allowed_id in
			<foreach item="orgId" collection="loginOrgIdList" separator=","
				open="(" close=")" index="">
				#{orgId}
			</foreach>
			)
			or
		</if>
		<if test="loginRoleIdList != null and loginRoleIdList.size() > 0">
			(
			scope.allowed_type = 2
			and scope.allowed_id in
			<foreach item="roleId" collection="loginRoleIdList"
				separator="," open="(" close=")" index="">
				#{roleId}
			</foreach>
			)
			or
		</if>
		(
		scope.allowed_type = 1 and scope.allowed_id = #{loginUserId}
		)
		)
	</select>

	<select id="findCommentJournalUserIdList" resultType="String" parameterType="Map">
		select DISTINCT j.create_person_id
		from journal j, comment c
		where j.id = c.business_id and c.business_type = '3' and c.user_id = #{loginUserId}
		<if test="journalDate != null and journalDate != ''">
			and j.journal_date = #{journalDate}
		</if>
		
		<choose>
			<when test="journalShareIdList != null and journalShareIdList.size() > 0">
				and (j.id in
				<foreach item="journalId" collection="journalShareIdList" separator=","
					open="(" close=")" index="">
					#{journalId}
				</foreach>
				or j.create_person_id = #{loginUserId})
			</when>
			<otherwise>
				and j.create_person_id = #{loginUserId}
			</otherwise>
		
		</choose>
		and j.delflag = 0 and c.delflag = 0
	</select>


	<select id="findJournalListByDate" resultMap="journalResult"
		parameterType="String">
		select * from journal where create_person_id = #{loginUserId} and
		delflag = 0
		<if test="startDate != null and startDate != ''">
			and journal_date &gt;= #{startDate}
		</if>
		<if test="endDate != null and endDate != ''">
			and journal_date &lt;= #{endDate}
		</if>
		order by update_date asc
	</select>

</mapper>