<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.oa.project.mapper.ProjectTeamPersonMapper">


    <select id="queryProjectTeamPersonByTeamQueryParam"  resultType="com.jzy.hio.entity.ProjectTeamPerson" >
			SELECT
			p.team_person_id AS teamPersonId,
			p.team_person_name AS teamPersonName,
			p.team_person_tag AS teamPersonTag,
		p.team_person_im_id AS teamPersonImId,
		p.team_person_dept_id AS teamPersonDeptId,
		p.team_person_company AS teamPersonCompany,
	  		p.create_date AS createDate,
  			p.project_id AS projectId,
  			p.team_type AS teamType,
			p.share_type AS shareType,
			p.out_type AS outType

		FROM
			oa_project_team_person p
		WHERE
		 1=1

		<if test="teamPersonId != null and teamPersonId != '' ">
			and p.team_person_id = #{teamPersonId}
		</if>
		<if test="projectId != null and projectId != '' ">
			and p.project_id = #{projectId}
		</if>
		<if test="teamType != null and teamType != '' ">
			and p.team_type = #{teamType}
		</if>
		<if test="shareType != null and shareType != '' ">
			and p.share_type = #{shareType}
		</if>
		<if test="outType != null and outType != '' ">
			and p.out_type = #{outType}
		</if>

    </select>

	<select id="queryProjectTeamPersonCountByProjectId" resultType="java.lang.Integer"  >

		SELECT

		count(distinct p.team_person_id)


		FROM
		oa_project_team_person p
		WHERE
		p.project_id = #{projectId} and p.delflag = 0 and p.team_type != '4'
	</select>

	<select id="queryProjectTeamPersonCount" resultType="java.lang.Integer"  >


		SELECT
		count(distinct t.teamPersonId)


		from
		(

		SELECT



		p.team_person_id AS teamPersonId,
		p.team_person_name AS teamPersonName,
		p.team_person_tag AS teamPersonTag,
		p.team_person_im_id AS teamPersonImId,
		p.team_person_dept_id AS teamPersonDeptId,
		p.team_person_company AS teamPersonCompany,
		p.create_date AS createDate,
		p.project_id AS projectId,
		p.share_type AS shareType,
		p.out_type AS outType



		FROM
		oa_project_team_person p
		WHERE
		p.project_id = #{projectId} and p.delflag = 0 and p.team_type != '4'

		) t

		where 1 = 1
		<if test="teamPersonName != null and teamPersonName != ''">
			AND t.teamPersonName  LIKE CONCAT( '%',#{teamPersonName}, '%' )

		</if>



	</select>



	<select id="queryProjectTeamPerson" resultType="com.jzy.hio.entity.ProjectTeamPerson"  >



		select
		 teamPersonId,
		 teamPersonName,
		 teamPersonTag,
		 teamPersonImId,
		 teamPersonDeptId,
		 teamPersonCompany,
		 createDate,
		 projectId,
		 shareType,
		 outType,

		substring_index(group_concat(teamType ORDER BY orderBy desc),",",1) AS teamType
		from
		(

		SELECT

		p.team_person_id AS teamPersonId,
		p.team_person_name AS teamPersonName,
		p.team_person_tag AS teamPersonTag,
		p.team_person_im_id AS teamPersonImId,
		p.team_person_dept_id AS teamPersonDeptId,
		p.team_person_company AS teamPersonCompany,
		p.create_date AS createDate,
		p.project_id AS projectId,
		p.share_type AS shareType,
		p.out_type AS outType,


		CASE p.team_type
		WHEN '1' THEN '创建人'
		WHEN '2' THEN '负责人'
		WHEN '3' THEN '参与人'
		END AS teamType ,
		3 AS orderBy
		FROM
		oa_project_team_person p
		WHERE
		p.project_id = #{projectId} and p.delflag = 0 and p.team_type = '2'
		union all
		SELECT

		p.team_person_id AS teamPersonId,
		p.team_person_name AS teamPersonName,
		p.team_person_tag AS teamPersonTag,
		p.team_person_im_id AS teamPersonImId,
		p.team_person_dept_id AS teamPersonDeptId,
		p.team_person_company AS teamPersonCompany,
		p.create_date AS createDate,
		p.project_id AS projectId,
		p.share_type AS shareType,
		p.out_type AS outType,


		CASE p.team_type
		WHEN '1' THEN '创建人'
		WHEN '2' THEN '负责人'
		WHEN '3' THEN '参与人'
		END AS teamType ,
		2 AS orderBy
		FROM
		oa_project_team_person p
		WHERE
		p.project_id = #{projectId} and p.delflag = 0 and p.team_type = '1'

		union all SELECT

		p.team_person_id AS teamPersonId,
		p.team_person_name AS teamPersonName,
		p.team_person_tag AS teamPersonTag,
		p.team_person_im_id AS teamPersonImId,
		p.team_person_dept_id AS teamPersonDeptId,
		p.team_person_company AS teamPersonCompany,
		p.create_date AS createDate,
		p.project_id AS projectId,
		p.share_type AS shareType,
		p.out_type AS outType,


		CASE p.team_type
		WHEN '1' THEN '创建人'
		WHEN '2' THEN '负责人'
		WHEN '3' THEN '参与人'
		END AS teamType ,
		1 AS orderBy
		FROM
		oa_project_team_person p
		WHERE
		p.project_id = #{projectId} and p.delflag = 0 and p.team_type = '3'

		) t

		where 1 = 1
		<if test="teamPersonName != null and teamPersonName != ''">
			AND t.teamPersonName  LIKE CONCAT( '%',#{teamPersonName}, '%' )

		</if>

		GROUP BY t.teamPersonId ORDER BY orderBy desc

		<if test="start != null and pageCount != null">
			limit #{start}, #{pageCount}
		</if>

	</select>


	<select id="queryProjectPermission" resultType="java.lang.String"  >



		select

		 p.team_type AS teamType
		FROM
		oa_project_team_person p
		WHERE
		p.project_id = #{projectId} and p.delflag = 0 and p.team_type != '4'


		<if test="userId != null">
		AND p.team_person_id  = #{userId}

	    </if>

		<if test="userImId != null">
			AND p.team_person_im_id  = #{userImId}

		</if>

		order by teamType ASC

	</select>



	<select id="queryProjectSharePermission" resultType="java.lang.String"  >



		select

		p.team_type AS teamType
		FROM
		oa_project_team_person p
		WHERE
		p.project_id = #{projectId} and p.delflag = 0 and p.team_type = '4' and p.share_type = '1'

		<if test="userId != null">
			and p.team_person_id = #{userId}

		</if>

		<if test="userImId != null">
			AND p.team_person_im_id  = #{userImId}

		</if>


		<if test="roleIds != null and roleIds.size > 0 ">
		union all
		select

		p.team_type AS teamType
		FROM
		oa_project_team_person p
		WHERE
		p.project_id = #{projectId} and p.delflag = 0 and p.team_type = '4' and p.share_type = '2'


			and p.team_person_id in
			<foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>

		<if test="orgIds != null  and orgIds.size > 0 ">
		union all
		select

		p.team_type AS teamType
		FROM
		oa_project_team_person p
		WHERE
		p.project_id = #{projectId} and p.delflag = 0 and p.team_type = '4' and p.share_type = '3'


			and p.team_person_id in
			<foreach collection="orgIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>

		group by p.team_type


	</select>


	<delete id="deleteProjectTeamPerson" parameterType="com.jzy.hio.entity.ProjectTeamPerson">
		delete from oa_project_team_person
		where 1=1


		<if test="shareType != null and shareType != '' ">
			and share_type = #{shareType}
		</if>
		<if test="teamType != null and teamType != '' ">
			and team_type = #{teamType}
		</if>
		<if test="teamPersonId != null and teamPersonId != '' ">
			and team_person_id = #{teamPersonId}
		</if>
		<if test="projectId != null and projectId != '' ">
			and project_id = #{projectId}
		</if>
	</delete>

	<select id="queryProjectTeamPersonIds"  resultType="java.lang.String"  >


	SELECT

	p.team_person_id AS teamPersonId



	FROM
	oa_project_team_person p
	WHERE
	p.project_id = #{projectId} and p.delflag = 0 and p.team_type != '4'
	and p.out_type = #{outType}



	</select>
	<select id="queryAllProjectTeamPerson"  resultType="com.jzy.hio.entity.ProjectTeamPerson"   >




	SELECT
			p.team_person_id AS teamPersonId,
			p.team_person_name AS teamPersonName,
			p.team_person_tag AS teamPersonTag,
		p.team_person_im_id AS teamPersonImId,
		p.team_person_dept_id AS teamPersonDeptId,
		p.team_person_company AS teamPersonCompany,
	  		p.create_date AS createDate,
  			p.project_id AS projectId,
  			p.team_type AS teamType,
			p.share_type AS shareType,
			p.out_type AS outType



	FROM
	oa_project_team_person p
	WHERE
	p.project_id = #{projectId} and p.delflag = 0
	and p.share_type != 2 and p.share_type !=3



	</select>


</mapper>