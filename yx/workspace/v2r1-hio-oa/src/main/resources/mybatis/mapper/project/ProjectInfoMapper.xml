<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.oa.project.mapper.ProjectInfoMapper">

	<update id="deleteProjectInfoById">
      UPDATE oa_project_info p SET  p.delflag = 1 where p.id = #{projectInfoId}
    </update>

	<select id="queryProjectInfoById" resultType="com.jzy.hio.oa.project.dto.ProjectInfoDto" >
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_im_id AS projectCreatePersonImId,
		p.project_create_person_dept_id AS projectCreatePersonDeptId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_im_id AS projectResponsiblePersonImId,
		p.project_responsible_person_dept_id AS projectResponsiblePersonDeptId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,

		p.project_net_disk AS projectNetDisk,

		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		CASE WHEN c.concern_person_id IS NOT NULL THEN '1'
		ELSE '0'
		END  AS concern
		FROM
		oa_project_info p
		LEFT JOIN  oa_project_concern c on p.id = c.project_id and c.concern_person_id = #{userId}
		WHERE
		p.delflag = 0



			AND p.id  = #{projectId}



	</select>

	<select id="queryProjectInfoByProjectName" resultType="com.jzy.hio.oa.project.dto.ProjectInfoDto" >

		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_im_id AS projectCreatePersonImId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_im_id AS projectResponsiblePersonImId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate


		FROM
		oa_project_info p

		WHERE
		p.delflag = 0
			and p.project_name = #{projectName}









	</select>


	<select id="queryProjectInfoPage"  resultType="com.jzy.hio.oa.project.dto.ProjectInfoDto" >
		SELECT
		distinct
		id,
		projectName,
		projectDesc,
		projectStart,
		projectEnd,
		createDate,
		projectCreatePersonId,
		projectCreatePersonName,
		projectResponsiblePersonId,
		projectResponsiblePersonName,
		projectProgressBar,
		projectLevel,
		projectAccessory,
		projectCommunication,
		projectStatus,
		updateDate,



		CASE WHEN concernPersonId IS NOT NULL THEN '1'
		ELSE '0'
		END AS concern

		FROM
		(
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		c.concern_person_id AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		LEFT JOIN  oa_project_concern c on p.id = c.project_id and t.team_person_id = c.concern_person_id
		WHERE
		p.delflag = 0 and t.team_type != '4'
		<if test="userId != null">
			and t.team_person_id = #{userId}

		</if>




		union ALL
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		c.concern_person_id AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		LEFT JOIN  oa_project_concern c on p.id = c.project_id and t.team_person_id = c.concern_person_id
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '1'
		<if test="userId != null">
			and t.team_person_id = #{userId}

		</if>

		<if test="roleIds != null  and roleIds.size > 0 ">
		union ALL


		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		NULL AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id

		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '2'


			and t.team_person_id in
			<foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>


		<if test="orgIds != null  and orgIds.size > 0 ">
		union ALL
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		NULL AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id

		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '3'


			and t.team_person_id in
			<foreach collection="orgIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>

		) x


		where 1=1

		<if test="teamType != null">
			and x.teamType  = #{teamType}
		</if>






		<if test="projectName != null">
			AND x.projectName  LIKE CONCAT( '%',#{projectName}, '%' )

		</if>



		<if test="projectStatus != null">
			AND x.projectStatus = #{projectStatus}

		</if>

		group by x.id

		<if test="dynamicSql != null">
			${dynamicSql}
		</if>

		<!--TODO 用系统时间-->
		<if test="dynamicSql == null">
			ORDER BY

			x.projectStatus asc, ABS( #{now}- x.projectEnd) asc , x.createDate desc
		</if>


		<if test="start != null and pageCount != null">
			limit #{start}, #{pageCount}
		</if>
	</select>

	<select id="queryMyProjectInfoPage"  resultType="com.jzy.hio.oa.project.dto.ProjectInfoDto" >
		SELECT
		distinct
		id,
		projectName,
		projectDesc,
		projectStart,
		projectEnd,
		createDate,
		projectCreatePersonId,
		projectCreatePersonName,
		projectResponsiblePersonId,
		projectResponsiblePersonName,
		projectProgressBar,
		projectLevel,
		projectAccessory,
		projectCommunication,
		projectStatus,
		updateDate,


		CASE WHEN concernPersonId IS NOT NULL THEN '1'
		ELSE '0'
		END AS concern

		FROM
		(
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		c.concern_person_id AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		LEFT JOIN  oa_project_concern c on p.id = c.project_id and t.team_person_id = c.concern_person_id
		WHERE
		p.delflag = 0 and t.team_type != '4'

		<if test="userId != null">
			and t.team_person_id = #{userId}

		</if>



		) x

		where 1=1

		<if test="teamType != null">
			and x.teamType  = #{teamType}
		</if>
		<if test="projectName != null">
			AND x.projectName  LIKE CONCAT( '%',#{projectName}, '%' )

		</if>
		<if test="projectStatus != null">
			AND x.projectStatus = #{projectStatus}

		</if>
		<if test="dynamicSql != null">
			${dynamicSql}
		</if>
		<if test="dynamicSql == null">
			ORDER BY
			x.projectStatus asc, ABS( #{now}- x.projectEnd) asc , x.createDate desc
		</if>


		<if test="start != null and pageCount != null">
			limit #{start}, #{pageCount}
		</if>
	</select>

	<select id="queryMyShareProjectInfoPage"  resultType="com.jzy.hio.oa.project.dto.ProjectInfoDto" >
		SELECT
		distinct
		id,
		projectName,
		projectDesc,
		projectStart,
		projectEnd,
		createDate,
		projectCreatePersonId,
		projectCreatePersonName,
		projectResponsiblePersonId,
		projectResponsiblePersonName,
		projectProgressBar,
		projectLevel,
		projectAccessory,
		projectCommunication,
		projectStatus,
		updateDate,


		CASE WHEN concernPersonId IS NOT NULL THEN '1'
		ELSE
		'0'
		END  AS concern

		FROM
		(
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		c.concern_person_id AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		LEFT JOIN  oa_project_concern c on p.id = c.project_id and t.team_person_id = c.concern_person_id
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '1'
		<if test="userId != null">
			and t.team_person_id = #{userId}

		</if>

		<if test="roleIds != null  and roleIds.size > 0 ">
		union ALL
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		c.concern_person_id AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		LEFT JOIN oa_project_concern c on c.project_id = p.id and c.concern_person_id = #{userId}
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '2'


			and t.team_person_id in
			<foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>


		<if test="orgIds != null  and orgIds.size > 0 ">
		union ALL
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		c.concern_person_id AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		LEFT JOIN oa_project_concern c on c.project_id = p.id and c.concern_person_id = #{userId}

		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '3'


			and t.team_person_id in
			<foreach collection="orgIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>

		) x


		where 1=1

		<if test="teamType != null">
			and x.teamType  = #{teamType}
		</if>
		<if test="projectName != null">
			AND x.projectName  LIKE CONCAT( '%',#{projectName}, '%' )

		</if>
		<if test="projectStatus != null">
			AND x.projectStatus = #{projectStatus}

		</if>
		<if test="dynamicSql != null">
			${dynamicSql}
		</if>
		<if test="dynamicSql == null">
			ORDER BY
			x.projectStatus asc, ABS(#{now}- x.projectEnd) asc , x.createDate desc
		</if>


		<if test="start != null and pageCount != null">
			limit #{start}, #{pageCount}
		</if>
	</select>

	<select id="queryMyConcernProjectInfoPage"  resultType="com.jzy.hio.oa.project.dto.ProjectInfoDto" >

        SELECT

        id,
        projectName,
        projectDesc,
        projectStart,
        projectEnd,
        createDate,
        projectCreatePersonId,
        projectCreatePersonName,
        projectResponsiblePersonId,
        projectResponsiblePersonName,
        projectProgressBar,
        projectLevel,
        projectAccessory,
        projectCommunication,
        projectStatus,
        updateDate,


         concern FROM
        (
		SELECT
		distinct
		id,
		projectName,
		projectDesc,
		projectStart,
		projectEnd,
		createDate,
		projectCreatePersonId,
		projectCreatePersonName,
		projectResponsiblePersonId,
		projectResponsiblePersonName,
		projectProgressBar,
		projectLevel,
		projectAccessory,
		projectCommunication,
		projectStatus,
		updateDate,


		CASE WHEN concernPersonId IS NOT NULL THEN '1'
		ELSE
		'0'
		END  AS concern


		FROM(
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		c.concern_person_id AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		LEFT JOIN  oa_project_concern c on p.id = c.project_id and t.team_person_id = c.concern_person_id
		WHERE
		p.delflag = 0

		<if test="userId != null">
			AND c.concern_person_id  = #{userId}

		</if>

		union ALL

		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		c.concern_person_id AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		LEFT JOIN  oa_project_concern c on p.id = c.project_id and t.team_person_id = c.concern_person_id
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '1'
		<if test="userId != null">
			and t.team_person_id = #{userId}

		</if>


        <if test="roleIds != null  and roleIds.size > 0 ">
		union ALL
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		c.concern_person_id AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		LEFT JOIN oa_project_concern c on c.project_id = p.id and c.concern_person_id = #{userId}
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '2'


			and t.team_person_id in
			<foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>


        <if test="orgIds != null  and orgIds.size > 0 ">
		union ALL
		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate,
		t.team_type AS teamType,

		c.concern_person_id AS concernPersonId
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		LEFT JOIN oa_project_concern c on c.project_id = p.id and c.concern_person_id = #{userId}

		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '3'


			and t.team_person_id in
			<foreach collection="orgIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>





		) XX )x where x.concern = 1



		<if test="projectName != null">
			AND x.projectName  LIKE CONCAT( '%',#{projectName}, '%' )

		</if>
		<if test="projectStatus != null">
			AND x.projectStatus = #{projectStatus}

		</if>
		<if test="dynamicSql != null">
			${dynamicSql}
		</if>
		<if test="dynamicSql == null">
			ORDER BY
			x.projectStatus asc, ABS(#{now}- x.projectEnd) asc , x.createDate desc
		</if>


		<if test="start != null and pageCount != null">
			limit #{start}, #{pageCount}
		</if>
	</select>

	<select id="queryProjectInfoByTeamPerson" resultType="com.jzy.hio.entity.ProjectInfo" >
        SELECT

        distinct
        p.id AS id,
        p.project_name AS projectName,
        t.team_person_id AS teamPersonId

		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id

        WHERE
        p.delflag = 0 and t.team_type != '4' and t.team_person_id = #{userId}





	</select>


	<select id="queryProjectInfoCount"  resultType="java.lang.Integer" >

		select count(y.id) from

		(
		SELECT
		id, projectName,projectStatus,teamType


		FROM
		(
		SELECT
		p.id AS id,p.project_name AS projectName,p.project_status AS projectStatus,t.team_type AS teamType
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		WHERE
		p.delflag = 0 and t.team_type != '4'
		<if test="userId != null">
			and t.team_person_id = #{userId}

		</if>


		union ALL
		SELECT
		p.id AS id,p.project_name AS projectName,p.project_status AS projectStatus,t.team_type AS teamType
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '1'
		<if test="userId != null">
			and t.team_person_id = #{userId}

		</if>

		<if test="roleIds != null  and roleIds.size > 0 ">
		union ALL


		SELECT
		p.id AS id,p.project_name AS projectName,p.project_status AS projectStatus,t.team_type AS teamType
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '2'


			and t.team_person_id in
			<foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>


		<if test="orgIds != null  and orgIds.size > 0 ">
		union ALL
		SELECT
		p.id AS id,p.project_name AS projectName,p.project_status AS projectStatus,t.team_type AS teamType
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '3'


			and t.team_person_id in
			<foreach collection="orgIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>

		) x


		where 1=1

		<if test="teamType != null">
			and x.teamType  = #{teamType}
		</if>






		<if test="projectName != null">
			AND x.projectName  LIKE CONCAT( '%',#{projectName}, '%' )

		</if>



		<if test="projectStatus != null">
			AND x.projectStatus = #{projectStatus}

		</if>

		group by x.id
		) y


	</select>

	<select id="queryMyProjectInfoCount"  resultType="java.lang.Integer" >



		SELECT
		COUNT(DISTINCT id)

		FROM
		(
		SELECT
		p.id AS id,p.project_name AS projectName,p.project_status AS projectStatus,t.team_type AS teamType
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		WHERE
		p.delflag = 0 and t.team_type != '4'

		<if test="userId != null">
			and t.team_person_id = #{userId}

		</if>
		) x
		where 1=1

		<if test="teamType != null">
			and x.teamType  = #{teamType}
		</if>
		<if test="projectName != null">
			AND x.projectName  LIKE CONCAT( '%',#{projectName}, '%' )

		</if>
		<if test="projectStatus != null">
			AND x.projectStatus = #{projectStatus}

		</if>



	</select>

	<select id="queryMyShareProjectInfoCount"  resultType="java.lang.Integer" >



		SELECT
		COUNT(DISTINCT id)


		FROM
		(
		SELECT
		p.id AS id,p.project_name AS projectName,p.project_status AS projectStatus,t.team_type AS teamType
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '1'
		<if test="userId != null">
			and t.team_person_id = #{userId}

		</if>

		<if test="roleIds != null and roleIds.size > 0 ">
		union ALL
		SELECT
		p.id AS id,p.project_name AS projectName,p.project_status AS projectStatus,t.team_type AS teamType
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '2'


			and t.team_person_id in
			<foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>


		<if test="orgIds != null  and orgIds.size > 0 ">
		union ALL
		SELECT
		p.id AS id,p.project_name AS projectName,p.project_status AS projectStatus,t.team_type AS teamType

		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		WHERE
		p.delflag = 0 and t.team_type = '4' and t.share_type = '3'


			and t.team_person_id in
			<foreach collection="orgIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>

		) x


		where 1=1

		<if test="teamType != null">
			and x.teamType  = #{teamType}
		</if>
		<if test="projectName != null">
			AND x.projectName  LIKE CONCAT( '%',#{projectName}, '%' )

		</if>
		<if test="projectStatus != null">
			AND x.projectStatus = #{projectStatus}

		</if>



	</select>




	<select id="queryMyConcernProjectInfoCount"  resultType="java.lang.Integer" >



		SELECT
		COUNT(id)


		FROM
		(
		SELECT
		DISTINCT
		p.id AS id,p.project_name AS projectName,p.project_status AS projectStatus
		FROM
		oa_project_info p
		INNER JOIN oa_project_team_person t ON p.id = t.project_id
		INNER JOIN  oa_project_concern c on p.id = c.project_id and t.team_person_id = c.concern_person_id
		WHERE
		p.delflag = 0

		<if test="userId != null">
			AND c.concern_person_id  = #{userId}

		</if>



		) x


		where 1=1


		<if test="projectName != null">
			AND x.projectName  LIKE CONCAT( '%',#{projectName}, '%' )

		</if>
		<if test="projectStatus != null">
			AND x.projectStatus = #{projectStatus}

		</if>



	</select>

	<select id="queryProjectInfoListByQuartz" resultType="com.jzy.hio.entity.ProjectInfo" >



		SELECT
		p.id AS id,
		p.project_name AS projectName,
		p.project_desc AS projectDesc,
		p.project_start AS projectStart,
		p.project_end AS projectEnd,
		p.create_date AS createDate,
		p.project_create_person_id AS projectCreatePersonId,
		p.project_create_person_name AS projectCreatePersonName,
		p.project_responsible_person_id AS projectResponsiblePersonId,
		p.project_responsible_person_name AS projectResponsiblePersonName,
		p.project_progress_bar AS projectProgressBar,
		p.project_level AS projectLevel,
		p.project_accessory AS projectAccessory,
		p.project_communication AS projectCommunication,
		p.project_status AS projectStatus,
		p.update_date AS updateDate
		FROM
		oa_project_info p

		WHERE

		p.delflag = 0

		AND p.project_status != '3' AND p.project_status != '4'



	</select>

</mapper>