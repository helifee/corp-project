package com.jzy.fileserver.docfile;

import org.apache.thrift.TException;
import org.apache.thrift.protocol.TBinaryProtocol;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.transport.TSocket;
import org.apache.thrift.transport.TTransport;
import org.apache.thrift.transport.TTransportException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Component;

import com.jzy.fileserver.printer.msg.external.PrinterMsgExternal;
import com.jzy.fileserver.utils.JacksonUtils;;

@Component
public class PrintEventSender {
	private static final Logger logger = LoggerFactory.getLogger(PrintEventSender.class);
	
	@Autowired
	private Environment env;

	public void broadcast(PrinterMsgExternal msg) {

		String content = JacksonUtils.toJson(msg);

		send(msg.getConfId(), content);
	}

	public void send(int confId, String content) {

		TTransport transport = new TSocket(env.getProperty("broadcast.host"), Integer.valueOf(env.getProperty("broadcast.port")));
		TProtocol protocol = new TBinaryProtocol(transport);
		FileEventService.Client client = new FileEventService.Client(protocol);

		try {
			transport.open();
		} catch (TTransportException e) {
			e.printStackTrace();
		}
		try {
			client.send_message(1, confId, 776, 0, content);
			logger.info("打印任务【{}】发送成功:{}", confId, content);
		} catch (TException e) {

			e.printStackTrace();
			logger.info("打印失敗【{}】发送成功:{} errmsg:{}", confId, content, e.getMessage());
		}
		transport.close();

	}

}
