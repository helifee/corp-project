package com.jzy.fileserver.socket;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.jzy.fileserver.printer.handler.TaskUpdatePriorMsgHandler;
import com.jzy.fileserver.utils.BeanLocator;
import com.jzy.fileserver.utils.CommonUtils;

public class CreateServerThread extends Thread {
	private Socket			client;
	DataOutputStream out = null;
	private static final Logger logger = LoggerFactory.getLogger(TaskUpdatePriorMsgHandler.class);
	
	public CreateServerThread(Socket s) throws IOException {
		client = s;
		out = new DataOutputStream(client.getOutputStream());
		start();
	}
 
	public void run() {
		try {
			// 往连接的线程集合里添加线程
			ClientQueue bean = (ClientQueue) BeanLocator.getBean(ClientQueue.class);
			bean.getThreadQueue().add(this);
//			ServerBorad.threadCounter++;
//			ServerBorad.threadQueue.add(this);
//			String line = "";
//			while (!line.equals("stop")) {
//				// 将Client发送的消息添加到消息列队中
//				line = in.readLine();
//				ServerBorad.messageList.add(line);
//				ServerBorad.isClear = ServerBorad.messageList.size() > 0 ? false
//						: true;
//			}
//			client.close();
		} finally {

			ServerBorad.threadCounter--;
			ServerBorad.threadQueue.remove(this);
		}
	}
 
	public void sendMessage(String msg) {
		byte[] content = msg.getBytes();
		byte[] header = CommonUtils.shortToByte2((short)content.length);
	//	byte[] newContent = ArrayUtils.addAll(header, content);
		
		try {
			//logger.info("=============dyc_len1【{}】dyc_len2【{}】", content.length, msg);
//			client.getOutputStream().write(header);
//			client.getOutputStream().write(content);
//			client.getOutputStream().flush();
			
			out.write(header);
			out.write(content);
			out.flush();
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public boolean checkAlive() {
		try {
			client.sendUrgentData(0xFF);
			return true;
		} catch (Exception e) {
			return false;
		}
	}
}
