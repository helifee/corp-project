package com.jzy.fileserver.service.impl;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Date;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jzy.fileserver.controller.params.FileSendParam;
import com.jzy.fileserver.dao.FileDao;
import com.jzy.fileserver.dao.TaskDetailDao;
import com.jzy.fileserver.dao.UserFileDao;
import com.jzy.fileserver.domain.FileVo;
import com.jzy.fileserver.domain.Result;
import com.jzy.fileserver.domain.UserFile;
import com.jzy.fileserver.service.FileService;
import com.jzy.fileserver.utils.UUIDGenerator;

/**
 * 文件服务实现 
 *
 * Created by daoqi on 2018年8月9日
 */
@Service
public class FileServiceImpl implements FileService {
	
	@Autowired
	private FileDao fileDao;

	@Autowired
	private UserFileDao userFileDao;
	
	@Autowired
	private TaskDetailDao taskDetailDao;
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public long saveUserFile(String applicationCode, String fileMd5, 
			String fileName, String fileLocation) {
		FileVo fileVo = new FileVo();
		fileVo.setMd5(fileMd5);
		fileVo.setFileLocation(fileLocation);
		fileVo.setFileName(fileName);
		fileVo.setFileType(null);
		fileVo.setUploadTime(new Date());
		fileDao.save(fileVo);
		
		UserFile userFile = new UserFile();
		userFile.setId(UUIDGenerator.getUUID());
		userFile.setApplicationCode(applicationCode);
		userFile.setFileId(fileVo.getId());
		userFile.setFileName(fileName);
		userFile.setUploadTime(new Date());
		userFile.setDeleted(false);
		userFileDao.save(userFile);
		
		return fileVo.getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Result secondSend(FileSendParam fileSendParam) {
		FileVo file = fileDao.findByMd5(fileSendParam.getFileMd5());
		if(file != null) {
			UserFile userFile = new UserFile();
			userFile.setId(UUIDGenerator.getUUID());
			userFile.setApplicationCode(fileSendParam.getApplicationCode());
			userFile.setFileId(file.getId());
			userFile.setFileName(fileSendParam.getFileName());
			userFile.setUploadTime(new Date());
			userFile.setDeleted(false);
			userFileDao.save(userFile);
			
			return Result.success(file.getId(), "文件秒传成功！");
			
		} else {
			return Result.fail("文件不存在，请调用文件上传接口！");
		}
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void download(File file, HttpServletResponse response) {
		response.setHeader("content-type", "application/octet-stream");
		response.setContentType("application/octet-stream");
		response.setHeader("Content-Disposition", "attachment;filename=" + file.getName());

		InputStream in = null;
		OutputStream out = null;

		try {
			in = new FileInputStream(file.getPath());
			int len = 0;
			byte[] buffer = new byte[1024];
			out = response.getOutputStream();
			while ((len = in.read(buffer)) > 0) {
				out.write(buffer, 0, len);
			}

		} catch (Exception e) {
			throw new RuntimeException(e);
		} finally {
			if (in != null) {
				try {
					in.close();
				} catch (Exception e) {
					throw new RuntimeException(e);
				}
			}
		}
	}

	@Override
	public String queryImagePath(long detailId) {
		return taskDetailDao.findById(detailId);
	}
}
