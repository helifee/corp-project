package com.jzy.fileserver.printer.handler;

import java.util.Date;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.jzy.fileserver.dao.PrintTaskDao;
import com.jzy.fileserver.dao.TaskDetailDao;
import com.jzy.fileserver.domain.PrintTaskVo;
import com.jzy.fileserver.domain.TaskDetail;
import com.jzy.fileserver.printer.PrintEventMonitor;
import com.jzy.fileserver.printer.msg.GenImageMsg;
import com.jzy.fileserver.printer.msg.PrinterMsg;
import com.jzy.fileserver.printer.msg.external.GenImageMsgExternal;
import com.jzy.fileserver.utils.FilePathUtils;

/**
 * 生成图片事件
 *
 * Created by daoqi on 2018年8月14日
 */
@Component
public class GenPageMsgHandler extends BaseMsgHandler implements MsgHandler {
	private static final Logger logger = LoggerFactory.getLogger(GenPageMsgHandler.class);
	
	@Autowired
	private PrintTaskDao printTaskDao;
	
	@Autowired
	private TaskDetailDao taskDetailDao;
	
	@Override
	public String handle(PrinterMsg msg, PrintEventMonitor printEventMonitor) {
		super.handle(msg, printEventMonitor);
		GenImageMsg genPageMsg = (GenImageMsg)msg;
		
		int taskId = genPageMsg.getTask_id();
		int pageId = genPageMsg.getPage_index();
		PrintTaskVo printTaskVo = printTaskDao.findById(taskId);
		TaskDetail taskDetail = new TaskDetail();
		taskDetail.setTaskId(taskId);
		taskDetail.setFileId(printTaskVo.getFileId());
		taskDetail.setImageType(0);
		taskDetail.setPath(genPageMsg.getDoc_name());
		taskDetail.setPageId(pageId);
		taskDetail.setCreateTime(new Date());
		taskDetailDao.save(taskDetail);
		
//		rabbitSender.sendMsgOfGenImage(genPageMsg);
		
		genPageMsg.setFile_id(printTaskVo.getFileId());
		
		GenImageMsgExternal genImageMsgExternal = convertToExternalVo(genPageMsg, taskDetail.getId());
		
		printEventSender.broadcast(genImageMsgExternal);
		//ServerBorad.broadcast(JacksonUtils.toJson(genImageMsgExternal));
		
		logger.info("任务【{}】生成图片事件处理完成！pageId={}", taskId, pageId);
		
		return null;
	}

	private GenImageMsgExternal convertToExternalVo(GenImageMsg genPageMsg, long detailId) {
		GenImageMsgExternal externalVo = new GenImageMsgExternal();
		externalVo.setMsgType(genPageMsg.getMsg_type());
		externalVo.setFileId(genPageMsg.getFile_id());
		externalVo.setConfId(genPageMsg.getConf_id());
		externalVo.setGroupId(genPageMsg.getGroup_id());
		externalVo.setUrl(FilePathUtils.genOuterPath(detailId));
		externalVo.setPageIndex(genPageMsg.getPage_index());
		externalVo.setTaskStatus(genPageMsg.getTask_status());
		return externalVo;
	}
}
