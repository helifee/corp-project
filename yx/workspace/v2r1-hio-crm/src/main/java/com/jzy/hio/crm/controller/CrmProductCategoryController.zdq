package com.jzy.hio.crm.controller;

import java.util.Date;
import java.util.List;

import com.jzy.hio.crm.param.CrmValNameParam;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.constant.CrmConstant;
import com.jzy.hio.crm.dto.CrmProductCategoryDto;
import com.jzy.hio.crm.service.CrmProductCategoryService;
import com.jzy.hio.crm.service.CrmProductService;
import com.jzy.hio.entity.CrmProduct;
import com.jzy.hio.entity.CrmProductCategory;
import com.jzy.hio.springmvc.ApiResponse;

/**
 * 产品类别
 * @author 
 *
 */
@RestController
@RequestMapping("/productCategory")
public class CrmProductCategoryController extends BaseController {

	@Autowired
	private CrmProductCategoryService crmProductCategoryService;
	@Autowired
	private CrmProductService crmProductService;
	
	/**
	 * 新增和修改产品类别
	 * @param productCategory
	 * @return
	 */
	@PostMapping("/save")
	public ApiResponse<Void> save(@RequestBody CrmProductCategory productCategory) {
		return crmProductCategoryService.doProductCateGorySave(productCategory);
	}
	
	/**
	 * 查询产品类别
	 * @param id
	 * @return
	 */
	@PostMapping("/get/{id}")
	public ApiResponse<CrmProductCategory> get(@PathVariable("id") String id) {
		ApiResponse<CrmProductCategory> res = new ApiResponse<>(200, "查询成功");
		// 查询产品
		CrmProductCategory productCategory = crmProductCategoryService.getObjectById(id);
		if (productCategory == null) {
			res.setMessage("产品类别不存在或已删除");
			res.setStatus(101);
			return res;
		}
		
		res.setResult(productCategory);
		
		return res;
	}
	
	/**
	 * 删除产品类别
	 * @param id
	 * @return
	 */
	@PostMapping("/delete/{id}")
	public ApiResponse<Void> delete(@PathVariable("id") String id) {
		ApiResponse<Void> res = new ApiResponse<>(200, "删除成功");
		
		String uid = getUserIdOA();
		CrmProductCategory productCategory = crmProductCategoryService.getObjectById(id);
		
		// 不存在或已删除不再操作
		if (productCategory == null || productCategory.getDelflag().equals(CrmConstant.DEL_TRUE)) {
			res.setMessage("产品类别不存在或已删除");
			res.setStatus(101);
			return res;
		}
		
		CrmProduct product = new CrmProduct();
		if (CrmConstant.CATEGORY_BASEID.equals(productCategory.getParentId())) {
			product.setCategoryBaseId(id);
		} else {
			product.setCategoryId(id);
		}
		product.setDelflag(CrmConstant.DEL_FALSE);
		int count = crmProductService.selectCountNum(product);
		int flag = 0;
		if (count > flag) {
			res.setMessage("该类别下有产品,不允许删除");
			res.setStatus(102);
			return res;
		}
		
		productCategory = new CrmProductCategory();
		productCategory.setId(id);
		productCategory.setDelflag(CrmConstant.DEL_TRUE);
		productCategory.setUpdateDate(new Date());
		productCategory.setUpdatePersonId(uid);
		// 删除产品
		crmProductCategoryService.update(productCategory);
		
		return res;
	}
	
	/**
	 * 产品类别查询-产品设置页树，创建商品页面级联
	 * @param pid 非必传： 不传时查一级类别，传入时查二级类别
	 * @param status 非必传： 不传查所有状态，传入按状态查询，启用1，禁用0 
	 * @return
	 */
	@PostMapping("/queryCategory")
	public ApiResponse<List<CrmProductCategory>> queryCategory(@RequestParam(required = false) String pid, @RequestParam(required = false) Integer status) {
		ApiResponse<List<CrmProductCategory>> res = new ApiResponse<>(200, "查询成功");
		
		CrmProductCategory productCategory = new CrmProductCategory();
		productCategory.setDelflag(CrmConstant.DEL_FALSE);
		if (StringUtils.isBlank(pid)) {
			productCategory.setParentId(CrmConstant.CATEGORY_BASEID);
		} else {
			productCategory.setParentId(pid);
		}
		productCategory.setCategoryStatus(status);
		
		List<CrmProductCategory> productCategoryList = crmProductCategoryService.queryList(productCategory);
		res.setResult(productCategoryList);
		
		return res;
	}
	
	/**
	 * 查询所有类别，包括子级类别
	 * @return
	 */
	@PostMapping("/queryCategoryTree")
	public ApiResponse<List<CrmProductCategoryDto>> queryCategory(@RequestParam(required = false) Integer status){
		ApiResponse<List<CrmProductCategoryDto>> res = new ApiResponse<>(200, "查询成功");
		
		// 查询类别树
		List<CrmProductCategoryDto> retultList = crmProductCategoryService.selectCateTree(status);
		res.setResult(retultList);
		return res;
	}

	/**
	 *  验证列表名称
	 * @param param
	 * @return
	 */
	@PostMapping("/valName")
	public ApiResponse<Boolean> valName(@RequestBody CrmValNameParam param) {
		ApiResponse<Boolean> res = new ApiResponse<>(200, "可以使用");
		String pid = param.getPid();
		String id = param.getSid();
		String name = param.getName();

		if(StringUtils.isBlank(pid)) {
			pid = CrmConstant.CATEGORY_BASEID;
		}

		if(name == null) {
			res.setStatus(101);
			res.setMessage("请传入类别名称");
			return  res;
		} else {
			name = name.trim();
		}

		boolean canUse = crmProductCategoryService.selectCateNameCanUse(pid, name, id);
		if (!canUse) {
			res.setStatus(101);
			res.setMessage("已被使用");
		}

		res.setResult(canUse);
		return res;
	}
	
	
}
