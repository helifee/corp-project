package com.jzy.hio.crm.service;

import java.util.List;
import java.util.Map;

import com.jzy.hio.base.service.BaseService;
import com.jzy.hio.crm.dto.CrmCustomerImportDto;
import com.jzy.hio.crm.dto.CrmStatisticalCountDto;
import com.jzy.hio.crm.dto.CrmStatusCountDto;
import com.jzy.hio.crm.dto.CustomerNamesDto;
import com.jzy.hio.crm.param.CrmAssignedCustParam;
import com.jzy.hio.crm.param.CrmAssignedMsgParam;
import com.jzy.hio.crm.param.CrmCommonParam;
import com.jzy.hio.crm.param.CrmCustomerSearchParam;
import com.jzy.hio.crm.param.CrmCustomerparam;
import com.jzy.hio.crm.param.CustomerParam;
import com.jzy.hio.crm.utils.PageResult;
import com.jzy.hio.entity.CrmCustomer;
import com.jzy.hio.sys.organization.dto.FlowUserDto;

/**
 * 客户
 * @author 
 *
 */
public interface CrmCustomerService extends BaseService<CrmCustomer> {

	/**
	 * 保存客户，及相关销售和联系人
	 * @param customersParam
	 * @return
	 */
	boolean saveCustomer(CustomerParam customersParam);
	
	/**
	 * 查询客户，及相关销售和联系人
	 * @param id
	 * @return
	 */
	CustomerParam selectCustomer(String id);
	
	/**
	 * 查询客户，及相关销售和联系人(移动端)
	 * @param id
	 * @return
	 */
	CustomerParam queryCustomerForMobile(String id);
	
	/**
	 * 根据客户名称模糊查询
	 * @param uid
	 * @param name
	 * @return
	 */
	List<CustomerNamesDto> selectCustNames(String uid, String name);
	
	/**
	 * 查询客户各个状态数量
	 * @param uid
	 * @return
	 */
	List<CrmStatusCountDto> selectCustStatusCount(String uid);

	/**
	 * 客户作废
	 * @param id
	 * @param uid
	 */
	void saveRepealed(String id, String uid);

	/**
	 * 客户分页
	 * @param customerSearchParam
	 * @return
	 */
	PageResult queryPageCustomers(CrmCustomerSearchParam customerSearchParam);

	/**
	 * 保存导入数据
	 * @param customerImportDto
	 * @param uidMap
	 * @return
	 */
	boolean saveImportCust(CrmCustomerImportDto customerImportDto, Map<String,FlowUserDto> uidMap, String uid, String uName, List<CrmAssignedMsgParam> assignedMsgList);
	
	/**
	 * 客户名称是否可用
	 * @param id 新增数据不传，修改数据必传
	 * @param name 
	 * @return
	 */
	boolean queryCustNameCanUse(String id, String name);
	
	/**
	 * 客户分配
	 * @param assignedCustParam
	 * @return
	 */
	boolean saveAssignedCust(CrmAssignedCustParam assignedCustParam);
	
	/**
	 * 标记重点切换
	 * @param param
	 * @return
	 */
	boolean saveSignImport(CrmCommonParam param);
	
	/**
	 * 标记失败切换
	 * @param param
	 * @return
	 */
	boolean saveSignFail(CrmCommonParam param);
	
	PageResult getAll(CrmCustomerparam crmCustomerparam);
	
	/**
	 * 客户详情统计数量
	 * @param customerId
	 * @return
	 */
	CrmStatisticalCountDto queryStatistical(String customerId);
	
}
 