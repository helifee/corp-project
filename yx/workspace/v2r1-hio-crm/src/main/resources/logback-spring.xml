<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<include resource="org/springframework/boot/logging/logback/base.xml"/>
	<jmxConfigurator/>
	<appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
          <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] [hio-crm] %logger{36} - %msg%n</pattern>
		</layout>
	</appender>
	<appender name="fileLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--滚动策略-->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--输出路径-->
			<fileNamePattern>${user.dir}/logs/log/hio-crm.%d.log</fileNamePattern>
		</rollingPolicy>
		<encoder>
			<!-- <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] [hio-portal] [userId:%X{USER_ID},loginName:%X{LOGIN_NAME},tendId:%X{TEND_ID},tendCode:%X{TEND_CODE}] %logger{36} - %msg%n</pattern>
			 -->
          <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] [hio-crm] %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>
	<appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<!--滚动策略-->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--输出路径-->
			<fileNamePattern>${user.dir}/logs/error/hio-crm.%d.error</fileNamePattern>
		</rollingPolicy>
		<encoder>
          <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] [hio-crm] %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>
	<!--
	logger
	   属性：
		  1)name:用来指定受此logger约束的某一个包或者具体的某一个类
		  2)level:用来设置打印级别，大小写无关（最常用的几种）：DEBUG, INFO, WARN, ERROR
	-->
	
	<!-- 用于打印 Spring 在启动的时候初始化各个 Bean 的信息 -->
	<!--<logger name="org.springframework.web" level="INFO"/>-->
	<!-- mybatis 日志打印如果在 ssm 中，可能就需要下边的7行了。-->
	<!--<logger name="com.ibatis" level="DEBUG" />-->
	<!--<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />-->
	<!--<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />-->
	<!--<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />    -->
	<!--<logger name="java.sql.Connection" level="DEBUG" />-->
	<!--<logger name="java.sql.Statement" level="DEBUG" />-->
	<!--<logger name="java.sql.PreparedStatement" level="DEBUG" />-->
	
	<!-- 以下这一句至关重要如果没有，就无法输出 sql 语句 -->
	<!--注意：在 spring boot 中，想在控制台打印 mybatis 的 sql 语句，只需要配置下边这一句就好了。-->
	<!--如果想要记录更详细的 SQL 日志，只需要把下面的日志级别改成 TRACE 就可以了-->
	<!--即将 mapper 接口打入 logger 就行。-->
	<!--<logger name="com.jzy.hio.crm.mapper" level="DEBUG"></logger>-->

	<root level="ERROR">
		<appender-ref ref="consoleLog"/>
		<appender-ref ref="fileLog"/>
		<appender-ref ref="fileErrorLog"/>
	</root>
</configuration>