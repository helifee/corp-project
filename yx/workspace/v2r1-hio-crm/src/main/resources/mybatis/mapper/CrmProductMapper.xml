<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.crm.mapper.CrmProductMapper">
	 
	 <!-- 查询产品名称是否有重复 -->
	<select id="selectProNameCount" resultType="int">
	 	SELECT
			count(id)
		FROM
			crm_product
		WHERE
			`name` = #{name}
		AND delflag = 0
		<if test="id != null and id != ''">
			AND id != #{id}
		</if>
	</select>
	 
	 <!-- 商机和订单选择产品分页 -->
	<select id="getPageToSelect" parameterType="com.jzy.hio.crm.param.CrmProductSearchParam" resultType="com.jzy.hio.crm.dto.CrmProductPageDto">
		SELECT
			pro.id AS sid,
			pro.`name`,
			pro.unit,
			pro.price,
			pro.`comment`,
			pro.category_id AS categoryId,
			pro.category_base_id AS categoryBaseId,
			catetwo.`name` AS categoryName,
			cateone.`name` AS categoryBaseName,
			CONCAT_WS(
				'-',
				cateone.`name`,
				catetwo.`name`
			) cateNames
			<include refid="proSelectFromWhere"></include>
		ORDER BY pro.id DESC
		LIMIT #{startLimit},#{pageCount}
	</select>
	<select id="getPageToSelectCount" parameterType="com.jzy.hio.crm.param.CrmProductSearchParam" resultType="int">
	 	SELECT
			count(1)
		<include refid="proSelectFromWhere"></include>
	</select>
	<sql id="proSelectFromWhere">
		FROM
			crm_product pro
		INNER JOIN crm_product_category cateone ON pro.category_base_id = cateone.id
		LEFT JOIN crm_product_category catetwo ON pro.category_id = catetwo.id
		WHERE pro.delflag = 0
		AND pro.product_status = 1
		AND cateone.delflag = 0
		AND cateone.category_status = 1
		AND ((pro.category_id = '' OR pro.category_id is null) OR (catetwo.delflag = 0 AND catetwo.category_status = 1))
		<if test="cateLeveTwoId != null &amp;&amp; cateLeveTwoId != ''">
			AND catetwo.id = #{cateLeveTwoId}
		</if>
		<if test="cateleveOneId != null and cateleveOneId != ''">
			AND cateone.id = #{cateleveOneId}
		</if>
		<if test="productName != null and productName != ''">
			AND instr(pro.`name`, #{productName}) > 0
		</if>
	</sql>
	 
	<!-- 产品分类 列表分页-->
	<select id="getPage" parameterType="com.jzy.hio.crm.param.CrmProductSearchParam" resultType="com.jzy.hio.crm.dto.CrmProductPageDto">
	 	SELECT
			pro.id AS sid,
			pro.category_id AS categoryId,
			pro.category_base_id AS categoryBaseId,
			pro.`name`,
			pro.unit,
			pro.price,
			pro.product_status AS productStatus,
			pro.`comment`
			<include refid="proFromWhere"></include>
		ORDER BY pro.id DESC
		LIMIT #{startLimit},#{pageCount}
	</select>
	<select id="getPageCount" parameterType="com.jzy.hio.crm.param.CrmProductSearchParam" resultType="int">
		SELECT
			count(1)
		<include refid="proFromWhere"></include>
	</select>
	<sql id="proFromWhere">
	 	FROM
			crm_product pro
		<where>
			pro.delflag = 0 
			<if test="cateLeveTwoId != null &amp;&amp; cateLeveTwoId != ''">
				AND pro.category_id = #{cateLeveTwoId}
			</if>
			<if test="cateleveOneId != null and cateleveOneId != ''">
				AND pro.category_base_id = #{cateleveOneId}
			</if>
			<if test="productName != null and productName != ''">
				AND instr(pro.`name`, #{productName}) > 0
			</if>
		</where>
	</sql>
	
	<!-- 根据产品的二级分类修改一级分类 -->
	<update id="updateCateBaseIdByCateId">
		UPDATE crm_product
		SET category_base_id = #{cateBaseId}
		WHERE
			category_id = #{cateId}
		AND delflag = 0
	</update>

	<select id="selectCurrentInfo" resultType="com.jzy.hio.crm.dto.CrmProductCurrentInfoDto">
		SELECT
			pro.id productId,
			pro.`name`,
			pro.unit,
			pro.price,
			pro.category_base_id categoryBaseId,
			pro.category_id categoryId,
			catebase.`name` categoryBaseName,
			cate.`name` categoryName,
			pro.delflag,
			pro.product_status productStatus,
			catebase.delflag categoryBaseDelflag,
			catebase.category_status categoryBaseStatus,
			cate.delflag categoryDelflag,
			cate.category_status categoryStatus
		FROM
			crm_product pro
		INNER JOIN crm_product_category catebase ON pro.category_base_id = catebase.id
		LEFT JOIN crm_product_category cate ON pro.category_id = cate.id
		WHERE
			pro.id IN 
		<foreach item="item" collection="list" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
	</select>
	
	
</mapper>