package com.jzy.hio.utils;

import org.apache.commons.lang3.StringUtils;

import java.io.UnsupportedEncodingException;
import java.security.*;

/**
 * MD5工具类
 * @author macx
 * @date 2017年4月18日
 */
public class MD5Util {
	
	public static void main(String[] args) throws Exception{
        String outStr = null;
        outStr = MD5("12345678z");
        System.out.println(outStr);

        //EncryptionUtils.getEncryptInfo(t.getInitAccount (), t.getInitPassword ())
//        outStr = MD5("test","123456");
//        System.out.println(outStr);
	}
	
    public static String MD5(String inStr) {
        if(StringUtils.isEmpty(inStr)){
            return "";
        }
        MessageDigest md = null;
        String outStr = null;
        try {
        	//选择SHA-1，也可以选择MD5
            md = MessageDigest.getInstance("MD5");
            //返回的是byet[]，要转化为String存储比较方便
            byte[] digest = md.digest(inStr.getBytes());
            outStr = bytetoString(digest);
        }
        catch (NoSuchAlgorithmException nsae) {
            nsae.printStackTrace();
        }
        return outStr;
    }
    
    public static String MD5(String inStr,String seed) {
        MessageDigest md = null;
        String outStr = null;
        try {
            md = MessageDigest.getInstance("MD5");     //选择SHA-1，也可以选择MD5
            md.update(seed.getBytes("utf-8"));
            byte[] digest = md.digest(inStr.getBytes());       //返回的是byet[]，要转化为String存储比较方便
            outStr = bytetoString(digest);
        }
        catch (NoSuchAlgorithmException nsae) {
            nsae.printStackTrace();
        } catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
        return outStr;
    }
    
    public static String bytetoString(byte[] digest) {
        String str = "";
        String tempStr = "";
        
        for (int i = 0; i < digest.length; i++) {
            tempStr = (Integer.toHexString(digest[i] & 0xff));
            if (tempStr.length() == 1) {
                str = str + "0" + tempStr;
            }
            else {
                str = str + tempStr;
            }
        }
        return str.toLowerCase();
    }


}

