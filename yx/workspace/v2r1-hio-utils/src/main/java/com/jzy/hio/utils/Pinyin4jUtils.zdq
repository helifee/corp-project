package com.jzy.hio.utils;

import org.apache.commons.lang3.StringUtils;

import com.google.common.collect.ArrayListMultimap;

import net.sourceforge.pinyin4j.PinyinHelper;
import net.sourceforge.pinyin4j.format.HanyuPinyinCaseType;
import net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat;
import net.sourceforge.pinyin4j.format.HanyuPinyinToneType;
import net.sourceforge.pinyin4j.format.HanyuPinyinVCharType;
import net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination;

/**
 *汉字转换拼音的工具类
 *@author wdy
 *@输入 测试
 *@输出 CESHI
 */
public class Pinyin4jUtils {
	
	private static ArrayListMultimap<String,String> duoYinZiMap;
    
    static{
    	Pinyin4jDictionary.getDefault().init();  
        duoYinZiMap = Pinyin4jDictionary.getDefault().getDuoYinZiMap();
    }
    
    public static String[] getPinyin(char ch) {  
        try{  
            HanyuPinyinOutputFormat outputFormat = new HanyuPinyinOutputFormat();  
            outputFormat.setToneType(HanyuPinyinToneType.WITHOUT_TONE);  
            outputFormat.setCaseType(HanyuPinyinCaseType.LOWERCASE);  
            outputFormat.setVCharType(HanyuPinyinVCharType.WITH_V);  
  
            if(ch>=32 && ch<=125){
            	//ASCII >=33 ASCII<=125的直接返回 ,ASCII码表：http://www.asciitable.com/  
                return new String[]{String.valueOf(ch)};  
            }  
            return PinyinHelper.toHanyuPinyinStringArray(ch, outputFormat);  
        } catch (BadHanyuPinyinOutputFormatCombination e) {
        	return null;
        }  
  
    }
    
    public static String getPinYin(String chinese) {  
        if(StringUtils.isEmpty(chinese)){  
            return null;
        }
        chinese = chinese.replaceAll("[\\.，\\,！·\\!？\\?；\\;\\(\\)（）、【】\\@\\#\\-\\[\\]\\:： ]+", "").trim();  
        StringBuilder py_sb = new StringBuilder(32);  
        char[] chs = chinese.toCharArray();  
        for(int i=0; i<chs.length; i++){  
            String[] py_arr = getPinyin(chs[i]);  
            if(py_arr==null || py_arr.length<1){  
                py_sb.append(chs[i]);
                continue;
            }  
            if(py_arr.length==1){  
                py_sb.append(py_arr[0]);  
            }else if(py_arr.length==2 && py_arr[0].equals(py_arr[1])){  
                py_sb.append(py_arr[0]);  
            }else{  
                String resultPy = null;
                String defaultPy = null;;  
                for (String py : py_arr) {  
                    String left = null; //向左多取一个字,例如 银[行]  
                    if(i>=1 && i+1<=chinese.length()){  
                        left = chinese.substring(i-1,i+1);  
                        if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(left)){  
                            resultPy = py;  
                            break;  
                        }  
                    }  
                    //向右多取一个字,例如 [长]沙  
                    String right = null;    
                    if(i <= chinese.length()-2){  
                        right = chinese.substring(i,i+2);  
                        if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(right)){  
                            resultPy = py;  
                            break;  
                        }  
                    }  
                      
                    String middle = null;   //左右各多取一个字,例如 龙[爪]槐  
                    if(i>=1 && i+2<=chinese.length()){  
                        middle = chinese.substring(i-1,i+2);  
                        if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(middle)){  
                            resultPy = py;  
                            break;  
                        }  
                    }  
                    String left3 = null;    //向左多取2个字,如 芈月[传],列车长  
                    if(i>=2 && i+1<=chinese.length()){  
                        left3 = chinese.substring(i-2,i+1);  
                        if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(left3)){  
                            resultPy = py;  
                            break;  
                        }  
                    }  
                    String right3 = null;   //向右多取2个字,如 [长]孙无忌  
                    if(i<=chinese.length()-3){  
                        right3 = chinese.substring(i,i+3);  
                        if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(right3)){  
                            resultPy = py;  
                            break;  
                        }  
                    }  
                    if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(String.valueOf(chs[i]))){
                    	//默认拼音  
                        defaultPy = py;  
                    }  
                }  
                if(StringUtils.isEmpty(resultPy)){  
                    if(StringUtils.isNotEmpty(defaultPy)){  
                        resultPy = defaultPy;  
                    }else{  
                        resultPy = py_arr[0];  
                    }  
                }  
                py_sb.append(resultPy);  
            }  
        }
        return py_sb.toString();  
    }
    
    public static String getShortPinyin(String chinese) {  
        if(StringUtils.isEmpty(chinese)){  
            return null;
        }
        chinese = chinese.replaceAll("[\\.，\\,！·\\!？\\?；\\;\\(\\)（）\\[\\]\\:： ]+", " ").trim();  
        StringBuilder py_sb = new StringBuilder(32);  
        char[] chs = chinese.toCharArray();  
        for(int i=0; i<chs.length; i++){  
            String[] py_arr = getPinyin(chs[i]);  
            if(py_arr==null || py_arr.length<1){  
                //throw new busException("pinyin array is empty, char:"+chs[i]+",chinese:"+chinese);
                py_sb.append(chs[i]);
                continue;
            }  
            if(py_arr.length==1){  
                py_sb.append(getFirstLetter(py_arr[0]));  
            }else if(py_arr.length==2 && py_arr[0].equals(py_arr[1])){  
                py_sb.append(getFirstLetter(py_arr[0]));  
            }else{  
                String resultPy = null;
                String defaultPy = null;;  
                for (String py : py_arr) {  
                    String left = null; //向左多取一个字,例如 银[行]  
                    if(i>=1 && i+1<=chinese.length()){  
                        left = chinese.substring(i-1,i+1);  
                        if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(left)){  
                            resultPy = py;  
                            break;  
                        }  
                    }  
                    //向右多取一个字,例如 [长]沙  
                    String right = null;    
                    if(i <= chinese.length()-2){  
                        right = chinese.substring(i,i+2);  
                        if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(right)){  
                            resultPy = py;  
                            break;  
                        }  
                    }  
                      
                    String middle = null;   //左右各多取一个字,例如 龙[爪]槐  
                    if(i>=1 && i+2<=chinese.length()){  
                        middle = chinese.substring(i-1,i+2);  
                        if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(middle)){  
                            resultPy = py;  
                            break;  
                        }  
                    }  
                    String left3 = null;    //向左多取2个字,如 芈月[传],列车长  
                    if(i>=2 && i+1<=chinese.length()){  
                        left3 = chinese.substring(i-2,i+1);  
                        if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(left3)){  
                            resultPy = py;  
                            break;  
                        }  
                    }  
                    String right3 = null;   //向右多取2个字,如 [长]孙无忌  
                    if(i<=chinese.length()-3){  
                        right3 = chinese.substring(i,i+3);  
                        if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(right3)){  
                            resultPy = py;  
                            break;  
                        }  
                    }  
                    if(duoYinZiMap.containsKey(py) && duoYinZiMap.get(py).contains(String.valueOf(chs[i]))){
                    	//默认拼音  
                        defaultPy = py;  
                    }  
                }  
                if(StringUtils.isEmpty(resultPy)){  
                    if(StringUtils.isNotEmpty(defaultPy)){  
                        resultPy = defaultPy;  
                    }else{  
                        resultPy = py_arr[0];  
                    }  
                }  
                py_sb.append(getFirstLetter(resultPy));  
            }  
        }
        return py_sb.toString();  
    }
    
    private static String getFirstLetter(String str){
    	return str.substring(0, 1);
    }
    
    public static void main(String[] args) {
    	System.out.println(Pinyin4jUtils.getShortPinyin("单雄信"));
    	System.out.println(getPinYin("单雄信"));
	}
}
