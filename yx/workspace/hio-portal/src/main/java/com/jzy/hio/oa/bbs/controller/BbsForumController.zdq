package com.jzy.hio.oa.bbs.controller;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.jzy.hio.base.utils.ErrorInfoCode;
import com.jzy.hio.base.utils.MessageInfo;
import com.jzy.hio.base.utils.MessageResult;
import com.jzy.hio.base.utils.Page;
import com.jzy.hio.base.utils.ResponseModel;
import com.jzy.hio.base.utils.SecurityUserBeanInfo;
import com.jzy.hio.oa.bbs.entity.BbsForum;
import com.jzy.hio.oa.bbs.service.BbsForumService;
import com.jzy.tools.data.JacksonUtils;
import com.jzy.tools.login.LoginUtils;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

//import com.jzy.hio.sys.base.dto.CustomFormDto;


/**
 * 论坛版块表控制层
 * @author admin
 *
 */
@RestController
@RequestMapping("/bbs/forum")
@Api(tags = {"论坛版块表相关接口"})
public class BbsForumController extends ResponseModel {

	private Logger log = LoggerFactory.getLogger(BbsForumController.class);
	
	@Autowired
	private BbsForumService bbsForumService;
	/**
	 * 根据Id获取业务对象
	 * 
	 * @param id  业务对象主键
	 * 
	 * @return     业务对象
	 */
	@ApiOperation(value = "根据Id获取论坛版块",notes = "根据Id获取论坛版块")
	@ApiImplicitParams(@ApiImplicitParam(name = "id",value = "论坛版块id",required = true,dataType = "String",paramType = "path"))
	@RequestMapping(value="/get/{id}",method= RequestMethod.GET)
	public MessageResult get(@PathVariable("id")  String id){
		try {
			BbsForum bbsForum = bbsForumService.getObjectById(id);
			return getSuccessResultModel(bbsForum);
		} catch (Exception e) {
			log.error("-----------"+e.getMessage()+"------------");   			
			e.printStackTrace();
			return getErrorResultModel();
		}
		
		/*MessageResult result=new MessageResult();
		try {
			String dubboResultInfo=bbsForumDtoServiceCustomer.getObjectById(getUserJson(), "{\"id\":\""+id+"\"}");
			DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
			if(dubboServiceResultInfo.isSucess()){
				String resultInfo= dubboServiceResultInfo.getResult();
				BbsForumDto bbsForumDto=JacksonUtils.fromJson(resultInfo, BbsForumDto.class);
				result.setResult(bbsForumDto);
				result.setSuccess(MessageInfo.GETSUCCESS.isResult());
				result.setMsg(MessageInfo.GETSUCCESS.getMsg());
			}else{
				result.setSuccess(MessageInfo.GETERROR.isResult());
				result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】");
			}
		} catch (Exception e) {
		    log.error("调用get方法:  【参数"+id+"】======"+"【"+e.getMessage()+"】");
			result.setSuccess(MessageInfo.GETERROR.isResult());
			result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
			result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return result;*/
	}
	
	
	/**
	 * 论坛管理--论坛设置
	 * @param map
	 * @return
	 */
	@ApiOperation(value = "获取分页对象",notes = "获取分页对象")
	@ApiImplicitParams({@ApiImplicitParam(paramType="body",name = "map",value = "limit query",required = true,dataType = "Map")})
	@RequestMapping(value="/page",method={RequestMethod.POST}, consumes="application/json")
	public MessageResult page(@RequestBody Map<String,Object> map){
		try {
			Page page = bbsForumService.getPageSort(map);
			return getSuccessResultModel(page);
		} catch (Exception e) {
			log.error("-----------"+e.getMessage()+"------------");   			
			e.printStackTrace();
			return getErrorResultModel();
		}
		
		
		/*MessageResult result=new MessageResult();
		String paramaterJson = JacksonUtils.toJson(map);
		try {
		    String dubboResultInfo=bbsForumDtoServiceCustomer.getPage(getUserJson(), paramaterJson);
		    DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
			if(dubboServiceResultInfo.isSucess()){
				String resultInfo= dubboServiceResultInfo.getResult();
				PageBeanInfo pageInfo=JacksonUtils.fromJson(resultInfo, PageBeanInfo.class);
				result.setResult(pageInfo);
				result.setSuccess(MessageInfo.GETSUCCESS.isResult());
				result.setMsg(MessageInfo.GETSUCCESS.getMsg());
			}else{
				result.setSuccess(MessageInfo.GETERROR.isResult());
				result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】");
			}
		} catch (Exception e) {
		    log.error("调用page方法:  【参数"+paramaterJson+"】======"+"【"+e.getMessage()+"】");
			result.setSuccess(MessageInfo.GETERROR.isResult());
			result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
			result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return result;*/
	}
	/**
	 * 返回符合条件的列表
	 * @param map
	 * @return
	 */
	@ApiOperation(value = "返回符合条件的列表",notes = "返回符合条件的列表")
	@ApiImplicitParams({@ApiImplicitParam(paramType="body",name = "bbsForum",dataType = "String",value = "condition query",required = true)})
	@RequestMapping(value="/queryList",method={RequestMethod.POST}, consumes="application/json")
	public MessageResult queryList(@RequestBody BbsForum bbsForum){
		try {
			List<BbsForum> list = bbsForumService.queryList(bbsForum);
			return  getSuccessResultModel(list); 
		} catch (Exception e) {
			log.error("-----------"+e.getMessage()+"------------");   			
			e.printStackTrace();
			return getErrorResultModel();
		}
		
		/*MessageResult result=new MessageResult();
		String paramaterJson = JacksonUtils.toJson(map);
		try {
			String dubboResultInfo=bbsForumDtoServiceCustomer.queryList(getUserJson(), paramaterJson);
		    DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
		    if(dubboServiceResultInfo.isSucess()){
				String resultInfo= dubboServiceResultInfo.getResult();
				List<BbsForumDto> list=JacksonUtils.fromJson(resultInfo, ArrayList.class, BbsForumDto.class);
				result.setResult(list);
				result.setSuccess(MessageInfo.GETSUCCESS.isResult());
				result.setMsg(MessageInfo.GETSUCCESS.getMsg());
		    }else{
		    	result.setSuccess(MessageInfo.GETERROR.isResult());
				result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】");
		    }
			
		} catch (Exception e) {
			
			log.error("调用queryList方法:  【参数"+paramaterJson+"】======"+"【"+e.getMessage()+"】");
			result.setSuccess(MessageInfo.GETERROR.isResult());
			result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
			result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return result;*/
	}
	
	/**
	  * @Description:论坛首页查询
	  * @author:zhangfangzhi
	  * @date 2017年6月13日 下午5:47:19
	  * @version V1.0
	 */
	@ApiOperation(value = "论坛首页查询",notes = "论坛首页查询")
	@ApiImplicitParams({@ApiImplicitParam(paramType="body",name = "map",value = "limit query",required = true,dataType = "Map")})
	@RequestMapping(value="/queryHomepage",method={RequestMethod.POST}, consumes="application/json")
	public MessageResult queryHomepage(@RequestBody Map<String,Object> map){
		try {
			List list = bbsForumService.queryHomepage(map);
			return  getSuccessResultModel(list); 
		} catch (Exception e) {
			log.error("-----------"+e.getMessage()+"------------");   			
			e.printStackTrace();
			return getErrorResultModel();
		}
		
		/*MessageResult result=new MessageResult();
		String paramaterJson = JacksonUtils.toJson(map);
		try {
			String dubboResultInfo=bbsForumDtoServiceCustomer.queryHomepage(getUserJson(), paramaterJson);
		    DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
		    if(dubboServiceResultInfo.isSucess()){
				String resultInfo= dubboServiceResultInfo.getResult();
				List<BbsForumHomePageDto> list=JacksonUtils.fromJson(resultInfo, ArrayList.class, BbsForumHomePageDto.class);
				result.setResult(list);
				result.setSuccess(MessageInfo.GETSUCCESS.isResult());
				result.setMsg(MessageInfo.GETSUCCESS.getMsg());
		    }else{
		    	result.setSuccess(MessageInfo.GETERROR.isResult());
				result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】");
		    }
			
		} catch (Exception e) {
			
			log.error("调用queryList方法:  【参数"+paramaterJson+"】======"+"【"+e.getMessage()+"】");
			result.setSuccess(MessageInfo.GETERROR.isResult());
			result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
			result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return result;*/
	}
	
	/**
	  * @Description:查询当前登录用户
	  * @author:zhangfangzhi
	  * @date 2017年6月8日 下午7:36:37
	  * @version V1.0
	 */
	@ApiOperation(value = "查询当前登录用户",notes = "查询当前登录用户")
	@ApiImplicitParams({@ApiImplicitParam(paramType="body",name = "map",value = "limit query",required = true,dataType = "Map")})
	@RequestMapping(value="/queryLoginUser",method={RequestMethod.POST}, consumes="application/json")
	public MessageResult queryLoginUser(@RequestBody Map<String,Object> map){
		MessageResult result=new MessageResult();
		try {
			SecurityUserBeanInfo userBeanInfo = LoginUtils.getSecurityUserBeanInfo();
			BbsForum bbsForum = new BbsForum();
			bbsForum.setCreatePersonId(userBeanInfo.getSecurityUserDto().getId());
			bbsForum.setCreatePersonName(userBeanInfo.getSecurityUserDto().getRealName());
			Timestamp d = new Timestamp(System.currentTimeMillis()); 
			bbsForum.setCreateDate(d);
			result.setResult(bbsForum);
			result.setSuccess(MessageInfo.GETSUCCESS.isResult());
			result.setMsg(MessageInfo.GETSUCCESS.getMsg());
		} catch (Exception e) {
			result.setSuccess(MessageInfo.GETERROR.isResult());
			result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
			result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return result;
		
		/*MessageResult result=new MessageResult();
		try {
			SecurityUserBeanInfo userBeanInfo = LoginUtils.getSecurityUserBeanInfo();
			BbsForumDto bbsForumDto = new BbsForumDto();
			bbsForumDto.setCreatePersonId(userBeanInfo.getSecurityUserDto().getId());
			bbsForumDto.setCreatePersonName(userBeanInfo.getSecurityUserDto().getRealName());
			Timestamp d = new Timestamp(System.currentTimeMillis()); 
			bbsForumDto.setCreateDate(d);
			result.setResult(bbsForumDto);
			result.setSuccess(MessageInfo.GETSUCCESS.isResult());
			result.setMsg(MessageInfo.GETSUCCESS.getMsg());
		} catch (Exception e) {
			result.setSuccess(MessageInfo.GETERROR.isResult());
			result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
			result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return result;*/
	}


	/**
	 * 保存实体对象
	 * @param t
	 * @return
	 */
	@ApiOperation(value = "保存论坛",notes = "保存论坛")
	@ApiImplicitParams({@ApiImplicitParam(paramType="body",name = "bbsForum",value = "save",required = true,dataType = "String")})
	@RequestMapping(value="/save",method= RequestMethod.POST, consumes="application/json")
	public MessageResult save(@RequestBody BbsForum bbsForum){
		try {
			bbsForum.setStatus("1");
			bbsForum.setDelflag(false);
			bbsForum.setAnonymityPermission("0");
			int save = bbsForumService.save(bbsForum);
			MessageResult successResultModel = getSuccessResultModel(MessageInfo.SAVESUCCESS.getMsg());
			successResultModel.setResult(save);
			return successResultModel;
		} catch (Exception e) {
			log.error("-----------"+e.getMessage()+"------------");   			
			e.printStackTrace();
			return getErrorResultModel(MessageInfo.SAVEERROR.getMsg());
		}
		
		/*MessageResult result=new MessageResult();
		try {
			t.setStatus("1");
			t.setDelflag(false);
			t.setAnonymityPermission("0");
			String saveJson= JacksonUtils.toJson(t);
			String dubboResultInfo=bbsForumDtoServiceCustomer.save(getUserJson(), saveJson);
		    DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
		    if(dubboServiceResultInfo.isSucess()){
				String resultInfo= dubboServiceResultInfo.getResult();
				BbsForumDto bbsForumDto=JacksonUtils.fromJson(resultInfo, BbsForumDto.class);
				result.setResult(bbsForumDto);
				result.setSuccess(MessageInfo.SAVESUCCESS.isResult());
				result.setMsg(MessageInfo.SAVESUCCESS.getMsg());
		    }else{
		    	result.setSuccess(MessageInfo.SAVEERROR.isResult());
				result.setMsg(MessageInfo.SAVEERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】");
		    }
		} catch (Exception e) {
			try {
				e.printStackTrace();
			    ObjectMapper mapper = new ObjectMapper();
				String  paramJson = mapper.writeValueAsString(t);
				log.error("调用save方法:  【参数"+paramJson+"】======"+"【"+e.getMessage()+"】");
				result.setSuccess(MessageInfo.SAVEERROR.isResult());
				result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
				result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
			} catch (JsonProcessingException e1) {
			}
			
		}
		return result;*/
	}
	
	/**
	 * 删除实体对象
	 * @param id
	 * @return
	 */
	@ApiOperation(value = "删除实体对象",notes = "删除实体对象")
	@ApiImplicitParams(@ApiImplicitParam(name = "id",value = "论坛版块id",required = true,dataType = "String",paramType = "path"))
	@RequestMapping(value="/delete/{id}",method= RequestMethod.DELETE)
	public MessageResult delete(@PathVariable("id")  String id){
		try {
			int deleteObjectById = bbsForumService.deleteObjectById(id);
			MessageResult successResultModel = getSuccessResultModel(MessageInfo.DELETESUCCESS.getMsg());
			successResultModel.setResult(deleteObjectById);
			return successResultModel;
		} catch (Exception e) {
			log.error("-----------"+e.getMessage()+"------------");   			
			e.printStackTrace();
			return getErrorResultModel(MessageInfo.DELETEERROR.getMsg());
		}
		
		
		/*MessageResult result=new MessageResult();
		try {
			String dubboResultInfo=bbsForumDtoServiceCustomer.deleteObjectById(getUserJson(), "{\"id\":\""+id+"\"}");
			DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
			if(dubboServiceResultInfo.isSucess()){
				String resultInfo= dubboServiceResultInfo.getResult();
				BbsForumDto bbsForumDto=JacksonUtils.fromJson(resultInfo, BbsForumDto.class);
				result.setResult(bbsForumDto);
				result.setSuccess(MessageInfo.DELETESUCCESS.isResult());
				result.setMsg(MessageInfo.DELETESUCCESS.getMsg());
			}else{
				result.setSuccess(MessageInfo.DELETEERROR.isResult());
				result.setMsg(MessageInfo.DELETEERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】");
			}
		} catch (Exception e) {

		    log.error("调用delete方法:  【参数"+id+"】======"+"【"+e.getMessage()+"】");
			result.setSuccess(MessageInfo.DELETEERROR.isResult());
			result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
			result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		
		return result;*/
	}
	
	
	/**
	 * 删除实体对象
	 * @param ids
	 * @return
	 */
	@ApiOperation(value = "删除实体对象",notes = "删除实体对象")
	@ApiImplicitParams(@ApiImplicitParam(name = "ids",value = "论坛版块ids",required = true,dataType = "String",paramType = "path"))
	@RequestMapping(value="/deleteBatch/{ids}",method= RequestMethod.DELETE)
	public MessageResult deleteBatch(@PathVariable("ids")  String ids){
		try {
			List<String> deleteMethod =  Arrays.asList(ids.split(","));
			int count = bbsForumService.deleteAllObjectByIds(deleteMethod);
			MessageResult successResultModel = getSuccessResultModel(MessageInfo.DELETESUCCESS.getMsg());
			successResultModel.setResult(count);
			return successResultModel;
		} catch (Exception e) {
			log.error("-----------"+e.getMessage()+"------------");   			
			e.printStackTrace();
			return getErrorResultModel(MessageInfo.DELETEERROR.getMsg());
		}
		/*MessageResult result=new MessageResult();
		try {
			String dubboResultInfo=bbsForumDtoServiceCustomer.deleteAllObjectByIds(getUserJson(), "{\"id\":\""+ids+"\"}");
			DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
			if(dubboServiceResultInfo.isSucess()){
				String resultInfo= dubboServiceResultInfo.getResult();
				BbsForumDto bbsForumDto=JacksonUtils.fromJson(resultInfo, BbsForumDto.class);
				result.setResult(bbsForumDto);
				result.setSuccess(MessageInfo.DELETESUCCESS.isResult());
				result.setMsg(MessageInfo.DELETESUCCESS.getMsg());
			}else{
				result.setSuccess(MessageInfo.DELETEERROR.isResult());
				result.setMsg(MessageInfo.DELETEERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】");
			}
		} catch (Exception e) {

		    log.error("调用delete方法:  【参数"+ids+"】======"+"【"+e.getMessage()+"】");
			result.setSuccess(MessageInfo.DELETEERROR.isResult());
			result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
			result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		
		return result;*/
	}
	
	/**
	 * 修改修改实体对象
	 * @param map
	 * @return
	 */
	@ApiOperation(value = "修改实体对象",notes = "修改实体对象")
	@ApiImplicitParams(@ApiImplicitParam(name = "id",value = "论坛版块id",required = true,dataType = "String",paramType = "path"))
	@RequestMapping(value="/update/{id}",method= RequestMethod.PUT,consumes="application/json")
	public MessageResult update(@PathVariable("id")  String id, @RequestBody Map<String,Object> map){
		try {
			BbsForum bbsForum = bbsForumService.getObjectById(id);
			String json = JacksonUtils.toJson(bbsForum);
			Map<String,Object> oldMap= JacksonUtils.fromJson(json, HashMap.class);
			oldMap.putAll(map);
			String updateJson= JacksonUtils.toJson(oldMap);
			BbsForum fromJson = JacksonUtils.fromJson(updateJson, BbsForum.class);
			int updateCount = bbsForumService.update(fromJson);
			MessageResult successResultModel = getSuccessResultModel(MessageInfo.UPDATESUCCESS.getMsg());
			successResultModel.setResult(updateCount);
			return successResultModel;
		} catch (Exception e) {
			log.error("-----------"+e.getMessage()+"------------");
			e.printStackTrace();
			return getErrorResultModel(MessageInfo.UPDATEERROR.getMsg());
		}
		
		/*MessageResult result=new MessageResult();
		BbsForumDto bbsForumDto=null;
		try {
			String dubboResultInfo=bbsForumDtoServiceCustomer.getObjectById(getUserJson(), "{\"id\":\""+id+"\"}");
			DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
			if(dubboServiceResultInfo.isSucess()){
				 String resultInfo= dubboServiceResultInfo.getResult();
				 Map<String,Object> oldMap=JacksonUtils.fromJson(resultInfo, HashMap.class);
				 oldMap.putAll(map);
				 String updateJson= JacksonUtils.toJson(oldMap);
				 String updateDubboResultInfo=bbsForumDtoServiceCustomer.update(getUserJson(), updateJson);
				 DubboServiceResultInfo updateDubboServiceResultInfo= JacksonUtils.fromJson(updateDubboResultInfo, DubboServiceResultInfo.class);
				 if(updateDubboServiceResultInfo.isSucess()){
					 Integer i=JacksonUtils.fromJson(updateDubboServiceResultInfo.getResult(), Integer.class);
					 result.setResult(i);
					 result.setSuccess(MessageInfo.UPDATESUCCESS.isResult());
					 result.setMsg(MessageInfo.UPDATESUCCESS.getMsg());
				 }else{
					 result.setSuccess(MessageInfo.UPDATEERROR.isResult());
					 result.setMsg(updateDubboServiceResultInfo.getMsg()+"【"+updateDubboServiceResultInfo.getExceptionMsg()+"】");
				 }
			}else{
				 result.setSuccess(MessageInfo.UPDATEERROR.isResult());
				 result.setMsg("不存在更新的对象");
			}
		} catch (Exception e) {
			try{

			 ObjectMapper mapper = new ObjectMapper();
			 String  paramJson = mapper.writeValueAsString(bbsForumDto);
			 log.error("调用update方法:  【参数"+id+","+paramJson+"】======"+"【"+e.getMessage()+"】");
			 result.setSuccess(MessageInfo.UPDATEERROR.isResult());
				result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
				result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
			}catch (JsonProcessingException e1) {

			}
			
		}
		return result;*/
	}

	/**
	 * 伪删除实体对象
	 * @param id
	 * @return
	 */
	@ApiOperation(value = "伪删除实体对象",notes = "伪删除实体对象")
	@ApiImplicitParams(@ApiImplicitParam(name = "id",value = "论坛版块id",required = true,dataType = "String",paramType = "path"))
	@RequestMapping(value="/deletePseudo/{id}",method= RequestMethod.DELETE)
	public MessageResult deletePseudo(@PathVariable("id")  String id){
		try {
			int deletePseudoObjectById = bbsForumService.deletePseudoObjectById(id);
			MessageResult successResultModel = getSuccessResultModel(MessageInfo.DELETESUCCESS.getMsg());
			successResultModel.setResult(deletePseudoObjectById);
			return successResultModel;
		} catch (Exception e) {
			log.error("-----------"+e.getMessage()+"------------");   			
			e.printStackTrace();
			return  getSuccessResultModel(MessageInfo.DELETEERROR.getMsg());
		}
		
		/*MessageResult result=new MessageResult();
		try {
			String dubboResultInfo=bbsForumDtoServiceCustomer.deletePseudoObjectById(getUserJson(), "{\"id\":\""+id+"\"}");
			DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
			if(dubboServiceResultInfo.isSucess()){
				String resultInfo= dubboServiceResultInfo.getResult();
				BbsForumDto bbsForumDto=JacksonUtils.fromJson(resultInfo, BbsForumDto.class);
				result.setResult(bbsForumDto);
				result.setSuccess(MessageInfo.DELETESUCCESS.isResult());
				result.setMsg(MessageInfo.DELETESUCCESS.getMsg());
			}else{
				result.setSuccess(MessageInfo.DELETEERROR.isResult());
				result.setMsg(MessageInfo.DELETEERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】");
			}
		} catch (Exception e) {

		    log.error("调用deletePseudo方法:  【参数"+id+"】======"+"【"+e.getMessage()+"】");
			result.setSuccess(MessageInfo.DELETEERROR.isResult());
			result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
			result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		
		return result;*/
	}
	
	
	/**
	 * 伪删除实体对象
	 * @param ids
	 * @return
	 */
	@ApiOperation(value = "伪删除实体对象",notes = "伪删除实体对象")
	@ApiImplicitParams(@ApiImplicitParam(name = "ids",value = "论坛版块ids",required = true,dataType = "String",paramType = "path"))
	@RequestMapping(value="/deletePseudoBatch/{ids}",method= RequestMethod.DELETE)
	public MessageResult deletePseudoBatch(@PathVariable("ids")  String ids){
		try {
			String[] split = ids.split(",");
			List<String> asList = Arrays.asList(split);
			int deletePseudoObjectById = bbsForumService.deletePseudoAllObjectByIds(asList);
			MessageResult successResultModel = getSuccessResultModel(MessageInfo.DELETESUCCESS.getMsg());
			successResultModel.setResult(deletePseudoObjectById);
			return successResultModel;
		} catch (Exception e) {
			log.error("-----------"+e.getMessage()+"------------");   			
			e.printStackTrace();
			return  getSuccessResultModel(MessageInfo.DELETEERROR.getMsg());
		}
		
		/*MessageResult result=new MessageResult();
		try {
			String dubboResultInfo=bbsForumDtoServiceCustomer.deletePseudoAllObjectByIds(getUserJson(), "{\"id\":\""+ids+"\"}");
			DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
			if(dubboServiceResultInfo.isSucess()){
				String resultInfo= dubboServiceResultInfo.getResult();
				BbsForumDto bbsForumDto=JacksonUtils.fromJson(resultInfo, BbsForumDto.class);
				result.setResult(bbsForumDto);
				result.setSuccess(MessageInfo.DELETESUCCESS.isResult());
				result.setMsg(MessageInfo.DELETESUCCESS.getMsg());
			}else{
				result.setSuccess(MessageInfo.DELETEERROR.isResult());
				result.setMsg(MessageInfo.DELETEERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】");
			}
		} catch (Exception e) {

		    log.error("调用deletePseudoBatch方法:  【参数"+ids+"】======"+"【"+e.getMessage()+"】");
			result.setSuccess(MessageInfo.DELETEERROR.isResult());
			result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName());
			result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		
		return result;*/
	}

	/**
	  * @Description:查询该版块下是否有帖子
	  * @author:zhangfangzhi
	  * @date 2017年6月13日 上午10:23:17
	  * @version V1.0
	 */
	@ApiOperation(value = "查询该版块下是否有帖子",notes = "查询该版块下是否有帖子")
	@ApiImplicitParams(@ApiImplicitParam(name = "ids",value = "论坛版块ids",required = true,dataType = "String",paramType = "path"))
	@RequestMapping(value="/isExistTopic/{ids}",method= RequestMethod.GET)
	public MessageResult isExistTopic(@PathVariable("ids")  String ids){
		MessageResult result = new MessageResult(); 
		try {
			result = bbsForumService.isExistTopic(ids);
		} catch (Exception e) {
			log.error("-----------" + e.getMessage() + "------------");
			e.printStackTrace();
			result.setError(e.getMessage());
		}
		return result;
		
	/*	MessageResult result=new MessageResult();
		SecurityUserBeanInfo securityUserBeanInfo = LoginUtils.getSecurityUserBeanInfo();
		try {
			String dubboResultInfo=bbsForumDtoServiceCustomer.isExistTopic(JacksonUtils.toJson(securityUserBeanInfo),"{\"id\":\""+ids+"\"}");
			DubboServiceResultInfo dubboServiceResultInfo= JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
			if(dubboServiceResultInfo.isSucess()){
				String resultInfo= dubboServiceResultInfo.getResult();
//				CustomFormDto customFormDto=JacksonUtils.fromJson(resultInfo, CustomFormDto.class);
//				result.setResult(customFormDto);
				result.setSuccess(MessageInfo.GETSUCCESS.isResult());
				result.setMsg(MessageInfo.GETSUCCESS.getMsg());
			}else{
				result.setSuccess(MessageInfo.GETERROR.isResult());
				result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】");
			}
		} catch (Exception e) {
			////e.printStackTrace();
		    log.error("调用get方法:  【参数"+ids+"】======"+"【"+e.getMessage()+"】");
			result.setSuccess(MessageInfo.GETERROR.isResult());
			result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+e.getMessage()+"】");
		}
		return result;*/
	}
}
