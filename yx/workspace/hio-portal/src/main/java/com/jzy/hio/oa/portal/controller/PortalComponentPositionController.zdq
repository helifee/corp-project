package com.jzy.hio.oa.portal.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.base.utils.MessageInfo;
import com.jzy.hio.base.utils.MessageResult;
import com.jzy.hio.base.utils.OpeLogInfo;
import com.jzy.hio.base.utils.SecurityUserBeanInfo;
import com.jzy.hio.oa.portal.entity.PortalPage;
import com.jzy.hio.oa.portal.service.PortalComponentPositionService;
import com.jzy.hio.oa.portal.service.PortalPageService;
import com.jzy.tools.data.JacksonUtils;
import com.jzy.tools.login.LoginUtils;

/**
 * 站点组件位置表控制层
 *
 * @author admin
 */
@Controller
@RequestMapping("/portal/portalComponentPosition")
public class PortalComponentPositionController extends BaseController<PortalComponentPositionService> {

	@Autowired
	private PortalPageService portalPageService;
	@Autowired
	private PortalComponentPositionService portalComponentPositionService;

	@ResponseBody
	public MessageResult queryAllList(@RequestBody Map<String, Object> map) {
		return this.queryList(map);
	}

	/**
	 * 返回符合条件的列表
	 *
	 * @param map
	 *            查询条件参数map集合
	 * @return
	 */
	@ResponseBody
	public MessageResult queryList(@RequestBody Map<String, Object> map) {
		MessageResult result = new MessageResult();
		try {
			String portalPageId = getStr(map, "portalPageId");
//			portalPageId = "0edd85526a354417b8d3457ce3fa25e6";
			List<Map<String, Object>> list = portalComponentPositionService.findComponentsByPortalId(portalPageId);
			result.setResult(list, "查询成功！");
		} catch (Exception e) {
			log.error("调用queryList方法:  【参数" + map + "】======" + "【" + e.getMessage() + "】");
			result.setSuccess(MessageInfo.GETERROR.isResult());
			result.setMsg(MessageInfo.GETERROR.getMsg() + "【" + e.getMessage() + "】");
		}
		return result;
	}

	/**
	 * 批量保存门户组件位置
	 * 
	 * @param positionMaps
	 *            门户组件位置map集合数组
	 * @return
	 */
	@RequestMapping(value = "/saveBatch", method = RequestMethod.POST, consumes = "application/json")
	@ResponseBody
	@OpeLogInfo(node = "门户设计", sysCode = "OA")
	public MessageResult saveBatch(@RequestBody List<Map<String, Object>> positionMaps) {
		MessageResult result = new MessageResult();
		String portalName = "";
		if (positionMaps != null && positionMaps.size() > 0) {
			String portalPageId = (String) positionMaps.get(0).get("portalPageId");
			if (StringUtils.isNotBlank(portalPageId)) {
				PortalPage portalPage = portalPageService.getObjectById(portalPageId);
				portalName = portalPage.getPortalPageName();
			}
		}
		try {
			String saveJson = JacksonUtils.toJson(positionMaps);
			List<Map<String, Object>> list = JacksonUtils.fromJson(saveJson, ArrayList.class, Map.class);
			int saveResult = portalComponentPositionService.savePositionBatch(list);
			result.setResult(saveResult, "门户【" + portalName + "】布局修改成功:");
		} catch (Exception e) {
			try {
				// e.printStackTrace();
				ObjectMapper mapper = new ObjectMapper();
				String paramJson = mapper.writeValueAsString(positionMaps);
				log.error("调用saveBatch方法:  【参数" + paramJson + "】======" + "【" + e.getMessage() + "】");
				result.setSuccess(MessageInfo.SAVEERROR.isResult());
				result.setMsg(MessageInfo.SAVEERROR.getMsg() + "【" + e.getMessage() + "】");
			} catch (JsonProcessingException e1) {
				// TODO Auto-generated catch block
				// e1.printStackTrace();
			}
		}
		return result;
	}

	/**
	 * 批量保存门户组件位置
	 * 
	 * @param positionMaps
	 *            门户组件位置map集合数组
	 * @return
	 */
	@RequestMapping(value = "/saveBatchForPersonal", method = RequestMethod.POST, consumes = "application/json")
	@ResponseBody
	public MessageResult saveBatchForPersonal(@RequestBody List<Map<String, Object>> positionMaps) {
		MessageResult result = new MessageResult();
		SecurityUserBeanInfo securityUserBeanInfo = LoginUtils.getSecurityUserBeanInfo();
		String saveJson = JacksonUtils.toJson(positionMaps);
		try {
			// 获取用户id
			String userId = securityUserBeanInfo.getSecurityUserDto().getId();
			List<Map<String, Object>> list = JacksonUtils.fromJson(saveJson, ArrayList.class, Map.class);
			portalComponentPositionService.saveBatchForPersonal(userId, list);
			result.setResult(JacksonUtils.toJson(list), "保存对象成功!");
		} catch (Exception e) {
			log.error("保存对象失败!" + e.getMessage());
			result.setError("保存对象失败!");
		}

		return result;
	}

}
