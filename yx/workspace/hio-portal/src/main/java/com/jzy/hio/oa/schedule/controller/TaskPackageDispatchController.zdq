package com.jzy.hio.oa.schedule.controller;

import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.base.utils.MessageResult;
import com.jzy.hio.base.utils.SecurityUserBeanInfo;
import com.jzy.hio.oa.schedule.dto.service.TaskPackageDispatchDtoServiceCustomer;
import com.jzy.hio.oa.schedule.service.TaskPackageDispatchService;
import com.jzy.tools.data.JacksonUtils;
import com.jzy.tools.login.LoginUtils;

/**
 * 任务包分发控制层
 * 
 * @author admin
 *
 */
@Controller
@RequestMapping("/taskPackageDispatch")
public class TaskPackageDispatchController extends BaseController<TaskPackageDispatchService> {

	private static Logger log = LoggerFactory.getLogger(TaskPackageDispatchController.class);

	@Autowired
	private TaskPackageDispatchDtoServiceCustomer taskPackageDispatchDtoServiceCustomer;

	@Autowired
	private TaskPackageDispatchService taskPackageDispatchService;

	@RequestMapping(value = "/report", method = RequestMethod.POST, consumes = "application/json")
	public @ResponseBody MessageResult report(@RequestBody Map<String, Object> map) {
		MessageResult result = new MessageResult();
		try {
			int saveResult = taskPackageDispatchService.report(map);
			result.setResult(saveResult, "更新对象成功!");
		} catch (Exception e) {
			log.error("更新对象失败!" + e.getMessage());
			result.setError("更新对象失败!");
		}
		return result;
	}

	@RequestMapping(value = "/updateTaskDispathStatus", method = RequestMethod.POST, consumes = "application/json")
	public @ResponseBody MessageResult updateTaskDispathStatus(@RequestBody Map<String, Object> map) {
		MessageResult result = new MessageResult();
		try {
			int updateResult = taskPackageDispatchService.updateTaskDispathStatus(map);
			result.setResult(updateResult, "更新对象成功!");
		} catch (Exception e) {
			log.error("更新对象失败!" + e.getMessage());
			result.setError("更新对象失败!");
		}
		return result;
	}

	@RequestMapping(value = "/recordSuccess", method = RequestMethod.POST, consumes = "application/json")
	public @ResponseBody MessageResult recordSuccess(@RequestBody Map<String, Object> map) {
		MessageResult result = new MessageResult();
		try {
			SecurityUserBeanInfo userBeanInfo = LoginUtils.getSecurityUserBeanInfo();
			String userJson = JacksonUtils.toJson(userBeanInfo);
			int result1 = taskPackageDispatchService.recordSuccess(userJson, map);
			result.setResult(result1, "更新对象成功!");
		} catch (Exception e) {
			log.error("更新对象失败!" + e.getMessage());
			result.setError("更新对象失败!");
		}
		return result;
	}

}
