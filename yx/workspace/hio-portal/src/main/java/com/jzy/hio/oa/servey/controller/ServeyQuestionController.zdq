package com.jzy.hio.oa.servey.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.base.utils.DubboServiceResultInfo;
import com.jzy.hio.base.utils.MessageInfo;
import com.jzy.hio.base.utils.MessageResult;
import com.jzy.hio.base.utils.SecurityUserBeanInfo;
import com.jzy.hio.oa.servey.dto.ServeyQuestionDto;
import com.jzy.hio.oa.servey.dto.ServeyResponseDto;
import com.jzy.hio.oa.servey.dto.service.ServeyQuestionDtoServiceCustomer;
import com.jzy.hio.oa.servey.service.ServeyQuestionService;
import com.jzy.tools.data.JacksonUtils;
import com.jzy.tools.login.LoginUtils;


/**
 * 调查问卷题目表控制层
 *
 * @author admin
 */
@Controller
@RequestMapping("/servey/serveyQuestion")
public class ServeyQuestionController extends BaseController<ServeyQuestionService>{

	private static Logger log = LoggerFactory.getLogger(ServeyQuestionController.class);

    @Autowired
    private ServeyQuestionDtoServiceCustomer serveyQuestionDtoServiceCustomer;

 
    @Autowired
    private ServeyQuestionService serveyQuestionService;
    /**
     * 返回符合条件的列表
     *
     * @param map
     * @return
     */
    @RequestMapping(value = "/queryList", method = {RequestMethod.POST}, consumes = "application/json")
    public
    @ResponseBody
    MessageResult queryList(@RequestBody Map<String, Object> map) {
        SecurityUserBeanInfo userBeanInfo = LoginUtils.getSecurityUserBeanInfo();
        map.put("tendCode",userBeanInfo.getTendCode());
        return super.queryList(map);
    }
    
    /**
     * 返回符合条件的列表
     *
     * @param map
     * @return
     */
    @RequestMapping(value = "/queryListByParameter", method = {RequestMethod.POST}, consumes = "application/json")
    public
    @ResponseBody
    MessageResult queryListByParameter(@RequestBody Map<String, Object> map) {
        MessageResult result = new MessageResult();
        SecurityUserBeanInfo userBeanInfo = LoginUtils.getSecurityUserBeanInfo();
		map.put("userId", userBeanInfo.getSecurityUserDto().getId());
        String paramaterJson = JacksonUtils.toJson(map);
        try {
            String dubboResultInfo = serveyQuestionDtoServiceCustomer.queryQuestionListByParameter(getUserInfoJson(), paramaterJson);
            DubboServiceResultInfo dubboServiceResultInfo = JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
            if (dubboServiceResultInfo.isSucess()) {
                String resultInfo = dubboServiceResultInfo.getResult();
                List<ServeyResponseDto> list = JacksonUtils.fromJson(resultInfo, ArrayList.class, ServeyResponseDto.class);
                result.setResult(list);
                result.setSuccess(MessageInfo.GETSUCCESS.isResult());
                result.setMsg(MessageInfo.GETSUCCESS.getMsg());
            } else {
                result.setSuccess(MessageInfo.GETERROR.isResult());
                result.setMsg(MessageInfo.GETERROR.getMsg() + "【" + dubboServiceResultInfo.getExceptionMsg() + "】");
            }

        } catch (Exception e) {
            e.printStackTrace();
            log.error("调用queryList方法:  【参数" + paramaterJson + "】======" + "【" + e.getMessage() + "】");
            result.setSuccess(MessageInfo.GETERROR.isResult());
            result.setMsg(MessageInfo.GETERROR.getMsg() + "【" + e.getMessage() + "】");
        }
        return result;
    }
    
    
    /**
     * 返回符合条件的列表
     *
     * @param map
     * @return
     */
    @RequestMapping(value = "/getResponseAnswerByQuestionId", method = {RequestMethod.POST}, consumes = "application/json")
    public
    @ResponseBody
    MessageResult getResponseAnswerByQuestionId(@RequestBody Map<String, Object> map) {
        MessageResult result = new MessageResult();
        SecurityUserBeanInfo userBeanInfo = LoginUtils.getSecurityUserBeanInfo();
		map.put("userId", userBeanInfo.getSecurityUserDto().getId());
        String paramaterJson = JacksonUtils.toJson(map);
        try {
            String dubboResultInfo = serveyQuestionDtoServiceCustomer.getCountResponseAnswerByQuestionId(getUserInfoJson(), paramaterJson);
            DubboServiceResultInfo dubboServiceResultInfo = JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
            if (dubboServiceResultInfo.isSucess()) {
                String resultInfo = dubboServiceResultInfo.getResult();
                List<ServeyResponseDto> list = JacksonUtils.fromJson(resultInfo, ArrayList.class, ServeyResponseDto.class);
                result.setResult(list);
                result.setSuccess(MessageInfo.GETSUCCESS.isResult());
                result.setMsg(MessageInfo.GETSUCCESS.getMsg());
            } else {
                result.setSuccess(MessageInfo.GETERROR.isResult());
                result.setMsg(MessageInfo.GETERROR.getMsg() + "【" + dubboServiceResultInfo.getExceptionMsg() + "】");
            }

        } catch (Exception e) {
            e.printStackTrace();
            log.error("调用queryList方法:  【参数" + paramaterJson + "】======" + "【" + e.getMessage() + "】");
            result.setSuccess(MessageInfo.GETERROR.isResult());
            result.setMsg(MessageInfo.GETERROR.getMsg() + "【" + e.getMessage() + "】");
        }
        return result;
    }
    
    
    /**
     * 返回该问卷下面的各个问题的回复情况
     *
     * @param map
     * @return
     */
    @RequestMapping(value = "/getCountResponseAnswerByQuestionId", method = {RequestMethod.POST}, consumes = "application/json")
    public
    @ResponseBody
    MessageResult getCountResponseAnswerByQuestionId(@RequestBody Map<String, Object> map) {
        MessageResult result = new MessageResult();
        SecurityUserBeanInfo userBeanInfo = LoginUtils.getSecurityUserBeanInfo();
		map.put("userId", userBeanInfo.getSecurityUserDto().getId());
        String paramaterJson = JacksonUtils.toJson(map);
        try {
            String dubboResultInfo = serveyQuestionDtoServiceCustomer.getCountResponseAnswerByQuestionId(getUserInfoJson(), paramaterJson);
            DubboServiceResultInfo dubboServiceResultInfo = JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
            if (dubboServiceResultInfo.isSucess()) {
                String resultInfo = dubboServiceResultInfo.getResult();
                List<ServeyQuestionDto> list = JacksonUtils.fromJson(resultInfo, ArrayList.class, ServeyQuestionDto.class);
                result.setResult(list);
                result.setSuccess(MessageInfo.GETSUCCESS.isResult());
                result.setMsg(MessageInfo.GETSUCCESS.getMsg());
            } else {
                result.setSuccess(MessageInfo.GETERROR.isResult());
                result.setMsg(MessageInfo.GETERROR.getMsg() + "【" + dubboServiceResultInfo.getExceptionMsg() + "】");
            }

        } catch (Exception e) {
            e.printStackTrace();
            log.error("调用queryList方法:  【参数" + paramaterJson + "】======" + "【" + e.getMessage() + "】");
            result.setSuccess(MessageInfo.GETERROR.isResult());
            result.setMsg(MessageInfo.GETERROR.getMsg() + "【" + e.getMessage() + "】");
        }
        return result;
    }
    
    
}
