package com.jzy.hio.oa.bbs.dto.service.impl;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.jzy.hio.base.utils.DubboServiceResultInfo;
import com.jzy.hio.base.utils.ErrorInfoCode;
import com.jzy.hio.oa.bbs.dto.service.BbsForumTypeDtoServiceCustomer;
import com.jzy.hio.oa.bbs.entity.BbsForumType;
import com.jzy.hio.oa.bbs.service.BbsForumTypeService;
import com.jzy.tools.data.JacksonUtils;

/**
 * @author admin
 * 
 *
 */
@Component
public class BbsForumTypeDtoServiceProducer implements BbsForumTypeDtoServiceCustomer {
	private static Logger log = Logger.getLogger(BbsForumTypeDtoServiceProducer.class);
	@Autowired
	private BbsForumTypeService bbsForumTypeService;

	public String save(String userInfo, String saveJson) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			BbsForumType bbsForumType = JacksonUtils.fromJson(saveJson, BbsForumType.class);
			info = bbsForumTypeService.saveBean(bbsForumType);
		} catch (Exception e) {
			log.error("新增版块类型失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("新增版块类型失败!");
			info.setExceptionMsg(e.getMessage());
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String saveBatch(String userInfo, String saveJsonList) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String updateBatch(String userInfo, String updateJsonList) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String update(String userInfo, String updateJson) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			BbsForumType bbsForumType = JacksonUtils.fromJson(updateJson, BbsForumType.class);
			info = bbsForumTypeService.updateBean(bbsForumType);
		} catch (Exception e) {
			log.error("更新版块类型失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("更新版块类型失败!");
			info.setExceptionMsg(e.getMessage());
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String deleteObjectById(String userInfo, String deleteJson) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			BbsForumType bbsForumType = JacksonUtils.fromJson(deleteJson, BbsForumType.class);
			final Integer result = bbsForumTypeService.deleteObjectById(bbsForumType.getId());
			if (result == 1) {
				info.setResult(JacksonUtils.toJson(result));
				info.setSucess(true);
				info.setMsg("删除版块分类成功!");
			} else {
				info.setResult(JacksonUtils.toJson(result));
				info.setSucess(false);
				info.setMsg("删除版块分类失败!");
				info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
			}

		} catch (Exception e) {
			log.error("更新对象失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("删除更新对象失败!");
			info.setExceptionMsg(e.getMessage());
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String deleteAllObjectByIds(String userInfo, String deleteJsonList) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			if (StringUtils.isNotBlank(deleteJsonList)) {
				Map map = JacksonUtils.fromJson(deleteJsonList, HashMap.class);
				List<String> list = Arrays.asList(map.get("id").toString().split(","));
				// final Integer result= bbsForumTypeService.deleteAllObjectByIds(list);
				final Integer result = 0;
				if (result >= 1) {
					info.setResult(JacksonUtils.toJson(result));
					info.setSucess(true);
					info.setMsg("删除板块分类成功!");
				} else {
					info.setResult(JacksonUtils.toJson(result));
					info.setSucess(false);
					info.setMsg("删除板块分类失败!");
				}
			} else {
				info.setSucess(false);
				info.setMsg(ErrorInfoCode.PARAMETER_ERROR.getName());
				info.setCode(ErrorInfoCode.PARAMETER_ERROR.getValue());
			}
		} catch (Exception e) {
			log.error("删除板块分类失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("删除板块分类失败!");
			info.setExceptionMsg(e.getMessage());
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String getObjectById(String userInfo, String getJson) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			BbsForumType bbsForumType = JacksonUtils.fromJson(getJson, BbsForumType.class);
			BbsForumType result = bbsForumTypeService.getObjectById(bbsForumType.getId());
			if (result != null) {
				info.setResult(JacksonUtils.toJson(result));
				info.setSucess(true);
				info.setMsg("获取版块分类成功!");
			} else {
				info.setResult(JacksonUtils.toJson(result));
				info.setSucess(false);
				info.setMsg("版块分类不存在!");
				info.setCode(ErrorInfoCode.NULL_ERROR.getValue());
			}
		} catch (Exception e) {
			log.error("获取对象失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("获取对象失败!");
			info.setExceptionMsg(e.getMessage());
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String getPage(String userInfo, String paramater) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			if (StringUtils.isNotBlank(paramater)) {
				Map map = JacksonUtils.fromJson(paramater, HashMap.class);
				// Page page=bbsForumTypeService.getPage(map, (Integer)map.get("start"), (Integer)map.get("limit"));
				// info.setResult(JacksonUtils.toJson(page));
				info.setSucess(true);
				info.setMsg("获取分页对象成功!");
			} else {
				// Page page=bbsForumTypeService.getPage(new HashMap(), null, null);
				// info.setResult(JacksonUtils.toJson(page));
				info.setSucess(true);
				info.setMsg("获取分页对象成功!");
			}
		} catch (Exception e) {
			log.error("获取分页对象失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("获取分页对象失败!");
			info.setExceptionMsg(e.getMessage());
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String queryList(String userInfo, String paramater) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			Map map = JacksonUtils.fromJson(paramater, HashMap.class);
			List<BbsForumType> list = bbsForumTypeService.queryBeanList(map);
			if (list != null && !list.isEmpty()) {
				info.setResult(JacksonUtils.toJson(list));
				info.setSucess(true);
				info.setMsg("获取列表对象成功!");
			} else {
				info.setSucess(false);
				info.setMsg("论坛版块分类列表为空!");
				info.setCode(ErrorInfoCode.NULL_ERROR.getValue());
			}
		} catch (Exception e) {
			log.error("获取列表对象失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("获取列表对象失败!");
			info.setExceptionMsg(e.getMessage());
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String getCount(String userInfo, String paramater) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String deletePseudoObjectById(String userInfo, String deleteJson) {
		// TODO Auto-generated method stub
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			BbsForumType bbsForumType = JacksonUtils.fromJson(deleteJson, BbsForumType.class);
			// int result= bbsForumTypeService.deletePseudoObjectById(bbsForumType.getId());
			// info.setResult(JacksonUtils.toJson(result));
			info.setSucess(true);
			info.setMsg("删除对象成功!");
		} catch (Exception e) {
			log.error("更新对象失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("删除更新对象失败!");
			info.setExceptionMsg(e.getMessage());
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String deletePseudoAllObjectByIds(String userInfo, String deleteJsonList) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			if (StringUtils.isNotBlank(deleteJsonList)) {
				Map map = JacksonUtils.fromJson(deleteJsonList, HashMap.class);
				List<String> list = Arrays.asList(map.get("id").toString().split(","));
				// int result= bbsForumTypeService.deletePseudoAllObjectByIds(list);
				// info.setResult(JacksonUtils.toJson(result));
				info.setSucess(true);
				info.setMsg("删除对象成功!");
			}
		} catch (Exception e) {
			log.error("删除对象失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("删除更新对象失败!");
			info.setExceptionMsg(e.getMessage());
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return JacksonUtils.toJson(info);
	}

	/**
	 * 获取模块分类树列表
	 * 
	 * @param userJson
	 * @param paramaterJson
	 * @return
	 */
	@Override
	public String queryTree(String userJson, String paramaterJson) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			List rootList = new ArrayList();
			rootList = bbsForumTypeService.queryTree();
			if (rootList != null && !rootList.isEmpty()) {
				info.setResult(JacksonUtils.toJson(rootList));
				info.setSucess(true);
				info.setMsg("获取列表数据成功!");
			} else {
				info.setCode(ErrorInfoCode.NULL_ERROR.getValue());
				info.setSucess(false);
				info.setMsg("列表数据为空!");
			}

		} catch (Exception e) {
			log.error("获取列表数据失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("获取列表数据失败!");
			info.setExceptionMsg(e.getMessage());
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String getForumCountByTypeId(String userJson, String id) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			Integer count = bbsForumTypeService.getForumCountByTypeId(id);
			info.setResult(count.toString());
			info.setSucess(true);
			info.setMsg("获取对象成功!");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			log.error("获取对象失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("获取对象失败!");
			info.setExceptionMsg(e.getMessage());
		}
		return JacksonUtils.toJson(info);
	}

	@Override
	public String isExistForum(String userJson, String id) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		try {
			Integer count = bbsForumTypeService.isExistForum(id);
			info.setResult(count.toString());
			info.setSucess(true);
			info.setMsg("获取对象成功!");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			log.error("获取对象失败!" + e.getMessage());
			info.setSucess(false);
			info.setMsg("获取对象失败!");
			info.setExceptionMsg(e.getMessage());
		}
		return JacksonUtils.toJson(info);
	}

}
