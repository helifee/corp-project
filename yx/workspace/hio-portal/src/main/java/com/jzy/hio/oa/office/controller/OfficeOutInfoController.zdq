package com.jzy.hio.oa.office.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.base.utils.MessageInfo;
import com.jzy.hio.base.utils.MessageResult;
import com.jzy.hio.oa.office.entity.OfficeOutInfo;
import com.jzy.hio.oa.office.service.OfficeOutInfoService;

/**
 * 出库表控制层
 * 
 * @author admin
 *
 */
@Controller
@RequestMapping("/officeInfoOut")
public class OfficeOutInfoController extends BaseController<OfficeOutInfoService>{

	private static Logger log = LoggerFactory.getLogger(OfficeOutInfoController.class);

	@Autowired
	private OfficeOutInfoService officeOutInfoService;


	/**
	 * 保存实体对象
	 * 
	 * @param t
	 * @return
	 */
	@RequestMapping(value = "/saveBatch", method = RequestMethod.POST, consumes = "application/json")
	public @ResponseBody MessageResult saveBatch(@RequestBody List<OfficeOutInfo> list) {
		MessageResult result=new MessageResult();
		try {
			int count = officeOutInfoService.saveBatch(list);
			result.setResult(count, MessageInfo.SAVESUCCESS.getMsg());
		} catch (Exception e) {
			////e.printStackTrace();
			log.error("-----------"+e.getMessage()+"------------");   			
			result.setSuccess(MessageInfo.GETERROR.isResult());
			result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+e.getMessage()+"】");
		}
		return result;
		
		/*try {
			String saveJson = JacksonUtils.toJson(t);
			String dubboResultInfo = officeOutInfoDtoServiceCustomer.saveBatch(getUserJson(), saveJson);
			DubboServiceResultInfo dubboServiceResultInfo = JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class);
			if (dubboServiceResultInfo.isSucess()) {
				String resultInfo = dubboServiceResultInfo.getResult();
				OfficeOutInfoDto officeInfoOutDto = JacksonUtils.fromJson(resultInfo, OfficeOutInfoDto.class);
				result.setResult(officeInfoOutDto);
				result.setSuccess(MessageInfo.SAVESUCCESS.isResult());
				result.setMsg(MessageInfo.SAVESUCCESS.getMsg());
			} else {
				result.setSuccess(MessageInfo.SAVEERROR.isResult());
				result.setMsg(MessageInfo.SAVEERROR.getMsg() + "【" + dubboServiceResultInfo.getExceptionMsg() + "】");
			}
		} catch (Exception e) {
			try {

				ObjectMapper mapper = new ObjectMapper();
				String paramJson = mapper.writeValueAsString(t);
				log.error("调用save方法:  【参数" + paramJson + "】======" + "【" + e.getMessage() + "】");
				result.setSuccess(MessageInfo.SAVEERROR.isResult());
				result.setMsg(MessageInfo.SAVEERROR.getMsg() + "【" + e.getMessage() + "】");
			} catch (JsonProcessingException e1) {
				// TODO Auto-generated catch block
				// e1.printStackTrace();
			}

		}
		return result;*/
	}



}
