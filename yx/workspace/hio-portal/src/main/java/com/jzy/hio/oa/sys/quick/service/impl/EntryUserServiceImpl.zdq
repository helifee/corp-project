package com.jzy.hio.oa.sys.quick.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jzy.hio.base.service.impl.BaseServiceImpl;
import com.jzy.hio.base.utils.IDGenerator;
import com.jzy.tools.data.JacksonUtils;
import com.jzy.hio.oa.sys.quick.dto.EntryDto;
import com.jzy.hio.oa.sys.quick.dto.EntryUserDto;
import com.jzy.hio.oa.sys.quick.entity.Entry;
import com.jzy.hio.oa.sys.quick.entity.EntryUser;
import com.jzy.hio.oa.sys.quick.mapper.EntryDao;
import com.jzy.hio.oa.sys.quick.mapper.EntryUserDao;
import com.jzy.hio.oa.sys.quick.service.EntryUserService;

/**
 * 
 * @author coffee<br/>
 * 		2018年1月5日下午5:56:25
 */
@Service
public class EntryUserServiceImpl extends BaseServiceImpl<String, EntryUser> implements EntryUserService {

	@Autowired
	private EntryUserDao entryUserDao;
	@Autowired
	private EntryDao entryDao;

	@Override
	public List<Map<String, Object>> queryListByUserId(Map<String, Object> map) throws Exception {
		return entryUserDao.queryListByUserId(map);
	}

	@Transactional
	@Override
	public void saveAndCheck(EntryUserDto entryDto) throws Exception {
		// 判断快速入口对应的用户是否已添加该入口
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("entryId", entryDto.getEntryId());
		map.put("userId", entryDto.getUserId());
		map.put("tendId", entryDto.getTendId());
		List<EntryUser> list = entryUserDao.selectByExample(map);
		if (list.size() == 0) {
			// 查询所属父级
			Entry entry = entryDao.selectByPrimaryKey(entryDto.getParentId());
			if (null != entry) {
				map.clear();
				map.put("entryId", entry.getId());
				map.put("userId", entryDto.getUserId());
				map.put("tendId", entryDto.getTendId());
				List<EntryUser> plist = entryUserDao.selectByExample(map);
				if (plist.size() == 0) {
					EntryUser pentryuser = new EntryUser();
					pentryuser.setId(IDGenerator.getUUID());
					pentryuser.setCode(entry.getCode());
					pentryuser.setName(entry.getName());
					pentryuser.setEntryId(entry.getId());
					pentryuser.setUserId(entryDto.getUserId());
					pentryuser.setTendId(entryDto.getTendId());
					pentryuser.setCreateDate(entryDto.getCreateDate());
					pentryuser.setCreatePersonId(entryDto.getCreatePersonId());
					pentryuser.setCreatePersonName(entryDto.getCreatePersonName());
					pentryuser.setCreateCompanyId(entryDto.getCreateCompanyId());
					pentryuser.setCreateCompanyName(entryDto.getCreateCompanyName());
					pentryuser.setCreateOrgId(entryDto.getCreateOrgId());
					pentryuser.setCreateOrgName(entryDto.getCreateOrgName());
					pentryuser.setDelflag(false);
					entryUserDao.insertSelective(pentryuser);// 保存收藏的父级快速入口
				}
			}

			EntryUser entryUser = JacksonUtils.fromJson(JacksonUtils.toJson(entryDto), EntryUser.class);
			entryUserDao.insertSelective(entryUser);// 保存收藏的快速入口
		}
	}

	/**
	 * 真实删除数据
	 */
	@Transactional
	@Override
	public int deleteReally(EntryDto bean) throws Exception {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("entryId", bean.getParentId());
		map.put("userId", bean.getUserId());
		map.put("tendId", bean.getUserTendId());
		List<Map<String, Object>> childList = entryUserDao.queryChildList(map);
		if (childList.size() == 2) {
			entryUserDao.deleteReally(childList.get(0).get("entryUserId").toString());// 删除父级
			entryUserDao.deleteReally(childList.get(1).get("entryUserId").toString());// 删除
		} else {
			entryUserDao.deleteReally(bean.getEntryUserId());// 删除
		}
		return 1;
	}

}
