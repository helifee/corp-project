package com.jzy.hio.oa.servey.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.base.utils.MessageResult;
import com.jzy.hio.base.utils.Page;
import com.jzy.hio.base.utils.SecurityUserBeanInfo;
import com.jzy.hio.oa.servey.dto.ServeyResponseDto;
import com.jzy.hio.oa.servey.service.ServeyResponseService;
import com.jzy.tools.data.JacksonUtils;
import com.jzy.tools.login.LoginUtils;

/**
 * 调查反馈控制层
 *
 * @author admin
 */
@Controller
@RequestMapping("/servey/serveyResponse")
public class ServeyResponseController extends BaseController<ServeyResponseService> {

	@Autowired
	private ServeyResponseService serveyResponseService;
	/**
	 * 返回分页对象
	 *
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/page", method = { RequestMethod.POST }, consumes = "application/json")
	public @ResponseBody MessageResult page(@RequestBody Map<String, Object> map) {
		SecurityUserBeanInfo securityUserBeanInfo = LoginUtils.getSecurityUserBeanInfo();
		map.put("createPersonId", securityUserBeanInfo.getSecurityUserDto().getId());
		MessageResult result = new MessageResult();
		try {
			if (map != null && map.size() > 0) {
				Page page = serveyResponseService.getServeyResponseByPage(map);
				result.setResult(page, "获取分页对象成功!");
			} else {
				Page page = service.getPage(new HashMap(), null, null);
				result.setResult(page, "获取分页对象成功!");
			}
		} catch (Exception e) {
			log.error("获取分页对象失败!" + e.getMessage());
			result.setError("获取分页对象失败!");
		}
		return result;
	}

	/**
	 * 保存实体对象
	 *
	 * @param t
	 * @return
	 */
	@RequestMapping(value = "/save", method = RequestMethod.POST, consumes = "application/json")
	public @ResponseBody MessageResult save(@RequestBody String json) {
		ServeyResponseDto t = JacksonUtils.fromJson(json, ServeyResponseDto.class);
		SecurityUserBeanInfo securityUserBeanInfo = LoginUtils.getSecurityUserBeanInfo();
		t.setUserId(securityUserBeanInfo.getSecurityUserDto().getId());
		t.setUserName(securityUserBeanInfo.getSecurityUserDto().getRealName());
		String saveJson = JacksonUtils.toJson(t);
		return super.save(saveJson);
	}

	/**
	 * 暂存数据
	 *
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/temporary/save", method = RequestMethod.POST, consumes = "application/json")
	public @ResponseBody MessageResult saveTemporary(@RequestBody ServeyResponseDto t) {
		SecurityUserBeanInfo userBeanInfo = LoginUtils.getSecurityUserBeanInfo();
		t.setUserId(userBeanInfo.getSecurityUserDto().getId());
		String saveJson = JacksonUtils.toJson(t);
		return super.save(saveJson);
	}

	/**
	 * 返回符合条件的列表
	 *
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/queryListByParameter", method = { RequestMethod.POST }, consumes = "application/json")
	public @ResponseBody MessageResult queryListByParameter(@RequestBody Map<String, Object> map) {
		MessageResult result = new MessageResult();
		SecurityUserBeanInfo userBeanInfo = LoginUtils.getSecurityUserBeanInfo();
		map.put("userId", userBeanInfo.getSecurityUserDto().getId());
		map.put("tendCode", userBeanInfo.getTendCode());
		return super.queryList(map);
	}

}
