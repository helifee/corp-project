package com.jzy.hio.oa.bbs.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jzy.hio.base.service.impl.BaseServiceImpl;
import com.jzy.hio.base.utils.DubboServiceResultInfo;
import com.jzy.hio.base.utils.ErrorInfoCode;
import com.jzy.hio.base.utils.SecurityStandardRoleDto;
import com.jzy.hio.oa.bbs.dto.BbsForumTypeDto;
import com.jzy.hio.oa.bbs.entity.BbsForumType;
import com.jzy.hio.oa.bbs.mapper.BbsForumTypeDao;
import com.jzy.hio.oa.bbs.service.BbsForumTypeService;
import com.jzy.tools.data.JacksonUtils;
import com.jzy.tools.login.LoginUtils;

/**
 * @author admin
 * 
 * 
 */

@Service
public class BbsForumTypeServiceImpl extends BaseServiceImpl<String, BbsForumType> implements BbsForumTypeService {

	@Autowired
	private BbsForumTypeDao bbsForumTypeDao;

	@Override
	public List<BbsForumType> queryBeanList(Map map) {
		return bbsForumTypeDao.queryBeanList(map);
	}

	@Override
	public List<BbsForumTypeDto> queryTree() {
		List<BbsForumType> bbsForumTypeList = bbsForumTypeDao.queryBeanList(null);
		List<BbsForumTypeDto> rootList = new ArrayList<BbsForumTypeDto>();
		Long num = 0L;
		Long level = 0L;
		if (bbsForumTypeList != null && !bbsForumTypeList.isEmpty()) {
			for (BbsForumType bbsForumType : bbsForumTypeList) {
				BbsForumTypeDto bbsForumTypeDto = new BbsForumTypeDto();
				BeanUtils.copyProperties(bbsForumType, bbsForumTypeDto);
				bbsForumTypeDto.setLevel(level);
				bbsForumTypeDto.setLeaf(false);
				bbsForumTypeDto.setLft(num);
				bbsForumTypeDto.setExpanded(true);
				bbsForumTypeDto.setLoaded(true);
				if (isExist(rootList, bbsForumTypeDto.getId())) {
					continue;
				}
				rootList.add(bbsForumTypeDto);
				Map<String, Object> typeList = getBeanList(null, bbsForumType.getId(), rootList, level, num);
				num = (Long) typeList.get("num");
				bbsForumTypeDto.setRgt(num);
				String isleaf = (String) typeList.get("isleaf");
				if ("1".equals(isleaf)) {
					bbsForumTypeDto.setLeaf(true);
				} else {
					bbsForumTypeDto.setLeaf(false);
				}

			}
		}
		return rootList;
	}

	private boolean isExist(List<BbsForumTypeDto> rootList, String id) {
		boolean flag = false;
		for (int i = 0; i < rootList.size(); i++) {
			BbsForumTypeDto bbsForumTypeDtoOld = rootList.get(i);
			if (id.equals(bbsForumTypeDtoOld.getId())) {
				flag = true;
				break;
			}
		}
		return flag;
	}

	public Map<String, Object> getBeanList(String status, String id, List<BbsForumTypeDto> list, Long level, Long num) {
		Map<String, Object> map = new HashMap<String, Object>();
		Map<String, Object> resultmap = new HashMap<String, Object>();
		map.put("parentId", id);
		List<BbsForumType> bbsForumTypeList = bbsForumTypeDao.queryBeanList(map);
		if (bbsForumTypeList != null && !bbsForumTypeList.isEmpty()) {
			level++;
			for (BbsForumType bbsForumType : bbsForumTypeList) {
				num++;
				Long rgt = 0L;
				BbsForumTypeDto bbsForumTypeDto = new BbsForumTypeDto();
				BeanUtils.copyProperties(bbsForumType, bbsForumTypeDto);
				bbsForumTypeDto.setLft(num);
				bbsForumTypeDto.setLevel(level);
				bbsForumTypeDto.setLoaded(true);
				bbsForumTypeDto.setExpanded(true);
				list.add(bbsForumTypeDto);
				Map<String, Object> projectTypeList = getBeanList(status, bbsForumTypeDto.getId(), list, level, num);
				num = (Long) projectTypeList.get("num");
				bbsForumTypeDto.setRgt(num);
				String isleaf = (String) projectTypeList.get("isleaf");
				if ("1".equals(isleaf)) {
					bbsForumTypeDto.setLeaf(true);
				} else {
					bbsForumTypeDto.setLeaf(false);
				}
			}
			num++;
		} else {
			resultmap.put("isleaf", "1");
			num++;
		}
		resultmap.put("num", num);
		resultmap.put("list", list);
		return resultmap;
	}

	@Override
	public DubboServiceResultInfo saveBean(BbsForumType bbsForumType) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		BbsForumType sameCode = bbsForumTypeDao.checkCode(bbsForumType);
		if (sameCode != null) {
			info.setCode(ErrorInfoCode.UNIQUE_ERROR.getValue());
			info.setMsg("编码已被使用！");
			info.setSucess(false);
			return info;
		}
		if (bbsForumType.getSortNum() == null) {
			final Integer maxSortNum = bbsForumTypeDao.queryMaxSortNum();
			bbsForumType.setSortNum(maxSortNum + 1);
		}
		Integer result = 0;
		// Integer result = bbsForumTypeDao.save(bbsForumType);
		if (result == 1) {
			info.setResult(JacksonUtils.toJson(result));
			info.setSucess(true);
			info.setMsg("新增版块类型成功!");
		} else {
			info.setResult(JacksonUtils.toJson(result));
			info.setSucess(false);
			info.setMsg("新增版块类型失败!");
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return info;
	}

	@Override
	public DubboServiceResultInfo updateBean(BbsForumType bbsForumType) {
		DubboServiceResultInfo info = new DubboServiceResultInfo();
		BbsForumType sameCode = bbsForumTypeDao.checkCode(bbsForumType);
		if (sameCode != null) {
			info.setCode(ErrorInfoCode.UNIQUE_ERROR.getValue());
			info.setMsg("编码已被使用！");
			info.setSucess(false);
		}

		// final Integer result = bbsForumTypeDao.update(bbsForumType);
		final Integer result = 0;
		if (result == 1) {
			info.setResult(JacksonUtils.toJson(result));
			info.setSucess(true);
			info.setMsg("更新版块类型成功!");
		} else {
			info.setResult(JacksonUtils.toJson(result));
			info.setSucess(false);
			info.setMsg("更新版块类型失败!");
			info.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue());
		}
		return info;
	}

	@Override
	public List<BbsForumType> getShowTree(Map<String, Object> map) {
		List<BbsForumType> list = bbsForumTypeDao.getShowTree(map);
		return list;
	}

	@Override
	public Integer getForumCountByTypeId(String id) {
		return bbsForumTypeDao.getForumCountByTypeId(id);
	}

	@Override
	public Integer isExistForum(String id) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("parentId", id);
		List<BbsForumType> bbsForumTypeList = bbsForumTypeDao.queryBeanList(map);
		List<String> idsList = new ArrayList<String>();
		idsList.add(id);
		String name = "";
		Map<String, Object> typeMap = new HashMap<String, Object>();
		if (bbsForumTypeList != null && !bbsForumTypeList.isEmpty()) {
			for (BbsForumType bbsForumType : bbsForumTypeList) {
				idsList.add(bbsForumType.getId());
				name = "";
				name += bbsForumType.getName();
				name += ">";
				getChildList(idsList, bbsForumType.getId(), typeMap, name);
			}
		}
		System.out.println(typeMap);

		map.put("excludeIds", idsList);
		Integer count = bbsForumTypeDao.isExistForum(map);
		return count;
	}

	private List<String> getChildList(List<String> idList, String id, Map<String, Object> typeMap, String name) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("parentId", id);
		List<BbsForumType> bbsForumTypeList = bbsForumTypeDao.queryBeanList(map);
		if (bbsForumTypeList != null && !bbsForumTypeList.isEmpty()) {
			String pName = "";
			for (BbsForumType bbsForumType : bbsForumTypeList) {
				idList.add(bbsForumType.getId());
				pName = name;
				pName += bbsForumType.getName();
				pName += ">";
				List<String> idsChildList = getChildList(idList, bbsForumType.getId(), typeMap, pName);
				if (idsChildList == null || idsChildList.isEmpty()) {
					typeMap.put(id, pName);
				}
			}
		} else {
			typeMap.put(id, name);
		}
		return idList;
	}

	@Override
	public List<BbsForumType> getHomePageTree(String paramater) {
		List<BbsForumType> list = new ArrayList<BbsForumType>();
		Map map = JacksonUtils.fromJson(paramater, HashMap.class);
		if (map != null && map.get("filterByRole") != null) {
			List<SecurityStandardRoleDto> roleList = LoginUtils.getSecurityUserBeanInfo().getSecurityCurrencyRoleDtoList();
			roleList.addAll(LoginUtils.getSecurityUserBeanInfo().getSecurityStandardRoleDtoList());
			List<String> roleIdsList = new ArrayList<String>();
			if (roleList != null && roleList.size() > 0) {
				for (int i = 0; i < roleList.size(); i++) {
					SecurityStandardRoleDto securityStandardRoleDto = roleList.get(i);
					roleIdsList.add(securityStandardRoleDto.getId());
				}
			}
			map.put("roleIdsList", roleIdsList);
			if (roleIdsList != null && roleIdsList.size() > 0) {
				list = bbsForumTypeDao.getHomePageTreeByRole(map);
			} else {
				map.put("roleIdsList", null);
				list = bbsForumTypeDao.getHomePageTreeByRole(map);
			}

		} else {
			list = bbsForumTypeDao.getHomePageTree(map);
		}
		return list;
	}
}
