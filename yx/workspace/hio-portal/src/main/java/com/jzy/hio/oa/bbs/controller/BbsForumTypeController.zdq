package com.jzy.hio.oa.bbs.controller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.base.utils.MessageInfo;
import com.jzy.hio.base.utils.MessageResult;
import com.jzy.hio.oa.bbs.dto.BbsForumTypeDto;
import com.jzy.hio.oa.bbs.entity.BbsForumType;
import com.jzy.hio.oa.bbs.service.BbsForumTypeService;
import com.jzy.tools.data.JacksonUtils;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

/**
 * 论坛版块类型表控制层
 * 
 * @author admin
 *
 */
@RestController
@RequestMapping("/bbs/forumType")
@Api(tags = { "论坛版块类型相关接口" })
public class BbsForumTypeController extends BaseController<BbsForumTypeService> {

	@Autowired
	private BbsForumTypeService bbsForumTypeService;

	/**
	 * 返回符合条件的树列表
	 * 
	 * @return
	 */
	@ApiOperation(value = "返回符合条件的树列表", notes = "返回符合条件的树列表")
	@RequestMapping(value = "/getTree", method = { RequestMethod.POST }, consumes = "application/json")
	public @ResponseBody MessageResult getTree() {
		MessageResult result = new MessageResult();
		try {
			List<BbsForumTypeDto> list = bbsForumTypeService.queryTree();
			result.setResult(list, MessageInfo.QUERYSUCCESS.getMsg());
		} catch (Exception e) {
			log.error("-----------" + e.getMessage() + "------------");
			result.setError(e.getMessage());
		}
		return result;

		/*
		 * MessageResult result=new MessageResult(); String paramaterJson = JacksonUtils.toJson(map); try { String
		 * dubboResultInfo=bbsForumTypeDtoServiceCustomer.queryTree(getUserJson(), paramaterJson); DubboServiceResultInfo dubboServiceResultInfo=
		 * JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class); if(dubboServiceResultInfo.isSucess()){ String resultInfo= dubboServiceResultInfo.getResult();
		 * List<BbsForumTypeDto> list=JacksonUtils.fromJson(resultInfo, ArrayList.class, BbsForumTypeDto.class); result.setResult(list);
		 * result.setSuccess(MessageInfo.GETSUCCESS.isResult()); result.setMsg(MessageInfo.GETSUCCESS.getMsg()); }else{ result.setSuccess(MessageInfo.GETERROR.isResult());
		 * result.setMsg(dubboServiceResultInfo.getMsg()); result.setCode(dubboServiceResultInfo.getCode()); }
		 * 
		 * } catch (Exception e) { log.error("调用getTree方法:  【参数"+paramaterJson+"】======"+"【"+e.getMessage()+"】"); result.setSuccess(MessageInfo.GETERROR.isResult());
		 * result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName()); result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue()); } return result;
		 */
	}

	/**
	 * 新建论坛板块、上级板块列表 <br/>
	 * 
	 * @author coffee 2018年2月2日上午10:04:27<br/>
	 * 
	 * @param map
	 * @return
	 */
	@ApiOperation(value = "上级树型展示", notes = "上级树型展示")
	@ApiImplicitParams({ @ApiImplicitParam(paramType = "body", name = "map", value = "limit query", required = true, dataType = "Map") })
	@RequestMapping(value = "/getShowTree", method = { RequestMethod.POST }, consumes = "application/json")
	public MessageResult getShowTree(@RequestBody Map<String, Object> map) {
		MessageResult result = new MessageResult();
		try {
			List<BbsForumType> list = bbsForumTypeService.getShowTree(map);
			result.setResult(list, MessageInfo.QUERYSUCCESS.getMsg());
		} catch (Exception e) {
			log.error("-----------" + e.getMessage() + "------------");
			result.setError(e.getMessage());
		}
		return result;

		/*
		 * MessageResult result=new MessageResult(); String paramaterJson = JacksonUtils.toJson(map); try { String
		 * dubboResultInfo=bbsForumTypeDtoServiceCustomer.getShowTree(getUserJson(), paramaterJson); DubboServiceResultInfo dubboServiceResultInfo=
		 * JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class); if(dubboServiceResultInfo.isSucess()){ String resultInfo= dubboServiceResultInfo.getResult();
		 * List<BbsForumTypeDto> list=JacksonUtils.fromJson(resultInfo, ArrayList.class, BbsForumTypeDto.class); result.setResult(list);
		 * result.setSuccess(MessageInfo.GETSUCCESS.isResult()); result.setMsg(MessageInfo.GETSUCCESS.getMsg()); }else{ result.setSuccess(MessageInfo.GETERROR.isResult());
		 * result.setMsg(dubboServiceResultInfo.getMsg()); result.setCode(dubboServiceResultInfo.getCode()); }
		 * 
		 * } catch (Exception e) { log.error("调用getTree方法:  【参数"+paramaterJson+"】======"+"【"+e.getMessage()+"】"); result.setSuccess(MessageInfo.GETERROR.isResult());
		 * result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName()); result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue()); } return result;
		 */
	}

	/**
	 * 论坛首页树\ 查询板块 <br/>
	 * <br/>
	 * 
	 * @author coffee 2018年2月2日上午9:10:10<br>
	 * @param map
	 *            <br/>
	 * @return
	 */
	@ApiOperation(value = "查询板块 ", notes = "查询板块")
	@ApiImplicitParams({ @ApiImplicitParam(paramType = "body", name = "map", value = "limit query", required = true, dataType = "Map") })
	@RequestMapping(value = "/getHomePageTree", method = { RequestMethod.POST }, consumes = "application/json")
	public MessageResult getHomePageTree(@RequestBody Map<String, Object> map) {
		MessageResult result = new MessageResult();
		String paramaterJson = JacksonUtils.toJson(map);
		try {
			List<BbsForumType> list = bbsForumTypeService.getHomePageTree(paramaterJson);
			result.setResult(list, "查询成功");
		} catch (Exception e) {
			log.error("-----------" + e.getMessage() + "------------");
			e.printStackTrace();
			result.setError(e.getMessage());
		}
		return result;
		/*
		 * MessageResult result=new MessageResult(); String paramaterJson = JacksonUtils.toJson(map); try { String
		 * dubboResultInfo=bbsForumTypeDtoServiceCustomer.getHomePageTree(getUserJson(), paramaterJson); DubboServiceResultInfo dubboServiceResultInfo=
		 * JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class); if(dubboServiceResultInfo.isSucess()){ String resultInfo= dubboServiceResultInfo.getResult();
		 * List<BbsForumTypeDto> list=JacksonUtils.fromJson(resultInfo, ArrayList.class, BbsForumTypeDto.class); result.setResult(list);
		 * result.setSuccess(MessageInfo.GETSUCCESS.isResult()); result.setMsg(MessageInfo.GETSUCCESS.getMsg()); }else{ result.setSuccess(MessageInfo.GETERROR.isResult());
		 * result.setMsg(dubboServiceResultInfo.getMsg()); result.setCode(dubboServiceResultInfo.getCode()); }
		 * 
		 * } catch (Exception e) { log.error("调用getTree方法:  【参数"+paramaterJson+"】======"+"【"+e.getMessage()+"】"); result.setSuccess(MessageInfo.GETERROR.isResult());
		 * result.setMsg(ErrorInfoCode.SYSTEM_ERROR.getName()); result.setCode(ErrorInfoCode.SYSTEM_ERROR.getValue()); } return result;
		 */
	}

	/**
	 * @Description:查询该分类有无版块
	 * @author:zhangfangzhi
	 * @date 2017年6月9日 下午2:09:48
	 * @version V1.0
	 */
	@ApiOperation(value = "查询该分类有无版块", notes = "查询该分类有无版块")
	@ApiImplicitParam(name = "id", value = "论坛板块 id", required = true, dataType = "String", paramType = "path")
	@RequestMapping(value = "/getCount/{id}", method = RequestMethod.GET)
	public MessageResult getCount(@PathVariable("id") String id) {
		MessageResult result = new MessageResult();
		try {
			Integer count = bbsForumTypeService.getForumCountByTypeId(id);
			result.setResult(count, MessageInfo.QUERYSUCCESS.getMsg());
		} catch (Exception e) {
			log.error("-----------" + e.getMessage() + "------------");
			e.printStackTrace();
			result.setError(e.getMessage());
		}
		return result;

		/*
		 * MessageResult result=new MessageResult(); SecurityUserBeanInfo securityUserBeanInfo = LoginUtils.getSecurityUserBeanInfo(); try { String
		 * dubboResultInfo=bbsForumTypeDtoServiceCustomer.getForumCountByTypeId(JacksonUtils.toJson(securityUserBeanInfo),id); DubboServiceResultInfo dubboServiceResultInfo=
		 * JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class); if(dubboServiceResultInfo.isSucess()){ String resultInfo= dubboServiceResultInfo.getResult();
		 * result.setResult(resultInfo); result.setSuccess(MessageInfo.GETSUCCESS.isResult()); result.setMsg(MessageInfo.GETSUCCESS.getMsg()); }else{
		 * result.setSuccess(MessageInfo.GETERROR.isResult()); result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】"); } } catch (Exception
		 * e) { ////e.printStackTrace(); log.error("调用get方法:  【参数"+id+"】======"+"【"+e.getMessage()+"】"); result.setSuccess(MessageInfo.GETERROR.isResult());
		 * result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+e.getMessage()+"】"); } return result;
		 */
	}

	/**
	 * @Description:查询选中节点及子节点下是否有版块
	 * @author:zhangfangzhi
	 * @date 2017年6月9日 下午3:14:40
	 * @version V1.0
	 */
	@ApiOperation(value = "查询选中节点及子节点下是否有版块", notes = "查询选中节点及子节点下是否有版块")
	@ApiImplicitParam(name = "id", value = "论坛板块 id", required = true, dataType = "String", paramType = "path")
	@RequestMapping(value = "/isExistForum/{id}", method = RequestMethod.GET)
	public MessageResult isExistForum(@PathVariable("id") String id) {
		MessageResult result = new MessageResult();
		try {
			Integer count = bbsForumTypeService.isExistForum(id);
			result.setResult(count, MessageInfo.QUERYSUCCESS.getMsg());
		} catch (Exception e) {
			log.error("-----------" + e.getMessage() + "------------");
			e.printStackTrace();
			result.setError(e.getMessage());
		}
		return result;

		/*
		 * MessageResult result=new MessageResult(); SecurityUserBeanInfo securityUserBeanInfo = LoginUtils.getSecurityUserBeanInfo(); try { String
		 * dubboResultInfo=bbsForumTypeDtoServiceCustomer.isExistForum(JacksonUtils.toJson(securityUserBeanInfo),id); DubboServiceResultInfo dubboServiceResultInfo=
		 * JacksonUtils.fromJson(dubboResultInfo, DubboServiceResultInfo.class); if(dubboServiceResultInfo.isSucess()){ String resultInfo= dubboServiceResultInfo.getResult();
		 * result.setResult(resultInfo); result.setSuccess(MessageInfo.GETSUCCESS.isResult()); result.setMsg(MessageInfo.GETSUCCESS.getMsg()); }else{
		 * result.setSuccess(MessageInfo.GETERROR.isResult()); result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+dubboServiceResultInfo.getExceptionMsg()+"】"); } } catch (Exception
		 * e) { ////e.printStackTrace(); log.error("调用get方法:  【参数"+id+"】======"+"【"+e.getMessage()+"】"); result.setSuccess(MessageInfo.GETERROR.isResult());
		 * result.setMsg(MessageInfo.GETERROR.getMsg()+"【"+e.getMessage()+"】"); } return result;
		 */
	}


}
