package com.jzy.hio.oa.servey.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.jzy.hio.base.controller.BaseController;
import com.jzy.hio.base.utils.MessageResult;
import com.jzy.hio.base.utils.Page;
import com.jzy.hio.oa.servey.dto.ServeyCategoryDto;
import com.jzy.hio.oa.servey.entity.ServeyCategory;
import com.jzy.hio.oa.servey.service.ServeyCategoryService;
import com.jzy.tools.data.JacksonUtils;

/**
 * 调查分类表控制层
 * 
 * @author admin
 *
 */
@Controller
@RequestMapping("/servey/serveyCategory")
public class ServeyCategoryController extends BaseController<ServeyCategoryService> {

	private static Logger log = LoggerFactory.getLogger(ServeyCategoryController.class);

	@Autowired
	private ServeyCategoryService serveyCategoryService;

	/**
	 * 根据Id获取业务对象
	 * 
	 * @param id
	 *            业务对象主键
	 * 
	 * @return 业务对象
	 */
	@RequestMapping(value = "/get/{id}", method = RequestMethod.GET)
	public @ResponseBody MessageResult get(@PathVariable("id") String id) {
		MessageResult messageResult = new MessageResult();
		try {
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("idVal", id);
			List<Map<String, Object>> result = serveyCategoryService.getServeyCategoryById(map);
			ServeyCategoryDto serveyCategoryDto = new ServeyCategoryDto();
			if (result != null && result.size() > 0) {
				serveyCategoryDto.setId(getStr(result.get(0).get("id")));
				serveyCategoryDto.setName(getStr(result.get(0).get("name")));
				serveyCategoryDto.setParentId(getStr(result.get(0).get("parentId")));
				serveyCategoryDto.setParentName(getStr(result.get(0).get("parentName")));
				serveyCategoryDto.setDescription(getStr(result.get(0).get("description")));
				int concurrencyVersion = 0;
				if (getStr(result.get(0).get("concurrencyVersion")) != null) {
					concurrencyVersion = Integer.valueOf(getStr(result.get(0).get("concurrencyVersion")));
				}
				serveyCategoryDto.setConcurrencyVersion(concurrencyVersion);
			}
			messageResult.setResult(serveyCategoryDto);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			log.error("获取对象失败!" + e.getMessage());
			messageResult.setError(e);
		}
		return messageResult;
	}

	/**
	 * 返回分页对象
	 * 
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/page", method = { RequestMethod.POST }, consumes = "application/json")
	public @ResponseBody MessageResult page(@RequestBody Map<String, Object> map) {
		MessageResult result = new MessageResult();
		try {
			if (map != null) {
				Page page = serveyCategoryService.getServeyCategoryByPage(map);
				result.setResult(page);
			} else {
				Page page = serveyCategoryService.getPage(new HashMap(), null, null);
				result.setResult(page);
			}
		} catch (Exception e) {
			log.error("获取分页对象失败!" + e.getMessage());
			result.setError(e);
		}

		return result;
	}

	/**
	 * 保存实体对象
	 * 
	 * @param t
	 * @return
	 */
	@Override
	@RequestMapping(value = "/save", method = RequestMethod.POST, consumes = "application/json")
	public @ResponseBody MessageResult save(@RequestBody String json) {
		MessageResult result = new MessageResult();
		try {
			ServeyCategory serveyCategory = JSONObject.parseObject(json, ServeyCategory.class);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("name", serveyCategory.getName());
			map.put("parentId", serveyCategory.getParentId());
			List list = serveyCategoryService.queryListByExample(map);
			if (list != null && list.size() > 0) {
				result.setResult(serveyCategory);
				result.setError("名称重复，请修改!");
			} else {
				serveyCategoryService.save(serveyCategory);
				result.setSuccess("保存对象成功!");
			}
		} catch (Exception e) {
			log.error("保存对象失败!" + e.getMessage());
			result.setError("保存对象失败!");
		}
		return result;
	}

	/**
	 * 删除实体对象
	 * 
	 * @param ids
	 * @return
	 */
	@RequestMapping(value = "/deleteBatch/{ids}", method = RequestMethod.DELETE)
	public @ResponseBody MessageResult deleteBatch(@PathVariable("ids") String ids) {
		MessageResult result = new MessageResult();
		try {
			String deleteJsonList = "{\"id\":\"" + ids + "\"}";
			Map map = JacksonUtils.fromJson(deleteJsonList, HashMap.class);
			int delResult = serveyCategoryService.deleteServeyCategoryByParentId(map);
			if (delResult == 1) {
				result.setResult(delResult);
				result.setSuccess("删除对象成功!");
			} else {
				result.setResult(JacksonUtils.toJson(deleteJsonList));
				result.setError("问卷已被引用!");
			}
		} catch (Exception e) {
			log.error("删除对象失败!" + e.getMessage());
			result.setError("删除更新对象失败!");
		}
		return result;
	}

	/**
	 * 修改修改实体对象
	 * 
	 * @param id
	 * @param map
	 * @return
	 */
	@Override
	@RequestMapping(value = "/update/{id}", method = RequestMethod.PUT, consumes = "application/json")
	public @ResponseBody MessageResult update(@PathVariable("id") String id, @RequestBody Map<String, Object> paramMap) {
		MessageResult result = new MessageResult();
		// try {
		//
		// // ServeyCategory serveyCategory = serveyCategoryService.getObjectById(id);
		//
		// // Map<String, String> map = new HashMap<>();
		// // map.put("name", serveyCategory.getName());
		// // map.put("parentId", serveyCategory.getParentId());
		// // List<String> ids = new ArrayList<>();
		// // ids.addAll(map.values());
		// // List<ServeyCategory> list =
		// // serveyCategoryService.deletePseudoAllObjectByIds(ids);
		// // int result = serveyCategoryService.deletePseudoAllObjectByIds(ids);
		// // if (result > 0 && !(list.get(0).getId().equals(serveyCategory.getId()))) {
		// // info.setResult(JacksonUtils.toJson(serveyCategory));
		// // info.setSucess(false);
		// // info.setMsg("名称重复，请修改!");
		// // info.setExceptionMsg("名称重复，请修改!");
		// // } else {
		// int result = serveyCategoryService.update(serveyCategory);
		// info.setResult(JacksonUtils.toJson(result));
		// info.setSucess(true);
		// info.setMsg("更新对象成功!");
		// // }
		// } catch (Exception e) {
		// log.error("更新对象失败!" + e.getMessage());
		// info.setSucess(false);
		// info.setMsg("更新对象失败!");
		// info.setExceptionMsg(e.getMessage());
		// }
		return result;
	}

}
