package com.jzy.hio.oa.sys.service.impl;

import java.sql.Timestamp;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jzy.hio.base.service.impl.BaseServiceImpl;
import com.jzy.hio.base.utils.Page;
import com.jzy.hio.oa.sys.entity.SysCommonTools;
import com.jzy.hio.oa.sys.mapper.SysCommonToolsDao;
import com.jzy.hio.oa.sys.service.SysCommonToolsService;
import com.jzy.hio.oa.sys.utils.SortType;

/**
 * @author admin
 * 
 * 
 */

@Service
public class SysCommonToolsServiceImpl extends BaseServiceImpl<String, SysCommonTools> implements SysCommonToolsService {

	@Autowired
	private SysCommonToolsDao sysCommonToolsDao;

	@Override
	public void saveCommonTools(SysCommonTools sysCommonTools) throws Exception {
		Integer sort = sysCommonToolsDao.getMaxSort();
		if (sort == null) {
			sort = 0;
		}
		sysCommonTools.setSort(sort + 1);
		sysCommonTools.setCreateDate(new Timestamp(new Date().getTime()));
		sysCommonTools.setUpdateDate(new Timestamp(new Date().getTime()));
//		sysCommonToolsDao.save(sysCommonTools);
		sysCommonToolsDao.insertSelective(sysCommonTools);
	}

	@Override
	public int updateSort(SysCommonTools sysCommonTools, Map<String, Object> map) throws Exception {
		Map param = new HashMap<>();
		List<SysCommonTools> sysCommonToolsList = (List<SysCommonTools>) sysCommonToolsDao.selectByExample(param);
		String sortType = String.valueOf(map.get("sortType"));
		Integer sort1 = sysCommonTools.getSort();
		if (SortType.SHIFTUP.getCode().equals(sortType)) {
			for (int i = 0; i < sysCommonToolsList.size(); i++) {
				Integer sort2 = sysCommonToolsList.get(i).getSort();
				if (sort2 == sort1 && i != 0) {
					Integer sort3 = sysCommonToolsList.get(i - 1).getSort();
					sysCommonToolsList.get(i - 1).setSort(sort2);
					sysCommonToolsList.get(i).setSort(sort3);
					sysCommonToolsDao.updateByPrimaryKeySelective(sysCommonToolsList.get(i - 1));
					sysCommonToolsDao.updateByPrimaryKeySelective(sysCommonToolsList.get(i));
					break;
				}
			}
		} else if (SortType.SHIFTDOWN.getCode().equals(sortType)) {
			for (int i = 0; i < sysCommonToolsList.size(); i++) {
				Integer sort2 = sysCommonToolsList.get(i).getSort();
				if (sort2 == sort1) {
					if (i != sysCommonToolsList.size() - 1) {
						Integer sort3 = sysCommonToolsList.get(i + 1).getSort();
						sysCommonToolsList.get(i + 1).setSort(sort2);
						sysCommonToolsList.get(i).setSort(sort3);
						sysCommonToolsDao.updateByPrimaryKeySelective(sysCommonToolsList.get(i + 1));
						sysCommonToolsDao.updateByPrimaryKeySelective(sysCommonToolsList.get(i));
						break;
					}

				}
			}
		}

		return 0;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.jzy.hio.oa.sys.service.SysCommonToolsService#getCommonToolsPage(java.util.Map)
	 */
	@Override
	public Page getCommonToolsPage(Map map) throws Exception {
		Page page = new Page();
		Integer total = sysCommonToolsDao.getCommonToolsCount();
		List<SysCommonTools> list = sysCommonToolsDao.getCommonToolsList(map);
		page.setLimit((Integer) map.get("limit"));
		page.setStart((Integer) map.get("start"));
		page.setList(list);
		page.setTotal(total);
		return page;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.jzy.hio.oa.sys.service.SysCommonToolsService#getCommonToolsList(java.util.Map)
	 */
	@Override
	public List<SysCommonTools> getCommonToolsList(Map map) throws Exception {
		return sysCommonToolsDao.getCommonToolsList(map);
	}

}
