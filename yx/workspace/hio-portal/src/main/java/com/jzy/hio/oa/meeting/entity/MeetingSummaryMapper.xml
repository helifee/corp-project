<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzy.hio.oa.meeting.mapper.MeetingSummaryDao">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 伪删除根据Id -->
	<update id="deletePseudoObjectById">
		${value}
	</update>
	<!-- 批量伪删除根据Id -->
	<update id="deletePseudoAllObjectByIds">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.jzy.hio.oa.meeting.entity.MeetingSummary">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.jzy.hio.oa.meeting.entity.MeetingSummary">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.jzy.hio.oa.meeting.entity.MeetingSummary">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	
	
	    <!--条件查询获取分页数据-->
    <select id="queryObjectsByPage" resultType="com.jzy.hio.oa.meeting.entity.MeetingSummary">
		${value}
	</select>

    <!--条件查询获取分页数据总记录数-->
    <select id="queryObjectsCountByPage" resultType="java.lang.Integer">
		${value}
	</select>
	
	<!-- 过滤分页查询 -->
	<select id="getMeetingSummaryPage" resultType="java.util.Map" parameterType="com.jzy.hio.oa.meeting.entity.MeetingSummary">
		select w.id,
				w.createPersonId,
				w.createPersonName,
				w.createOrgId,
				w.createOrgName,
				w.createCompanyId,
				w.createCompanyName,
				w.createDate,
				w.updatePersonId,
				w.updatePersonName,
				w.updateDate,
				w.delflag,
				w.concurrencyVersion,
				w.mtTitle,
				w.meetingTypeId,
				w.meetingType,
				w.entryDate,
				w.planBeginDate,
				w.plan_beginTime,
				w.actualBeginDate,
				w.actualBeginTime,
				w.planAddress,
				w.meetingId,
				w.actualAddress,
				w.meetingOrganizationId,
				w.meetingOrganizationName,
				w.emceeId,
				w.emceeName,
				w.recorderId,
				w.recorderName,
				w.requirAttendeesId,
				w.requirAttendeesName,
				w.actualAttendeesId,
				w.actualAttendeesName,
				w.copySendId,
				w.copySendName,
				w.otherReadersId,
				w.otherReaders,
				w.meetingContent,
				w.meetingRecord,
				w.meetingResult,
				w.remarks,
				w.documentAttachments,
				w.status,
				w.notifiyWay,
				w.instanceId,
				w.code,
				w.flowInstanceCode,
				w.hyjyFlowInstanceCode,
				w.flowStatus,
				w.tendId 
		from ((SELECT
			t.id,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.concurrency_version as concurrencyVersion,
			t.mt_title as mtTitle,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.entry_date as entryDate,
			t.plan_begin_date as planBeginDate,
			t.plan_begin_time as plan_beginTime,
			t.actual_begin_date as actualBeginDate,
			t.actual_begin_time as actualBeginTime,
			t.plan_address as planAddress,
			t.meeting_id as meetingId,
			t.actual_address as actualAddress,
			t.meeting_organization_id as meetingOrganizationId,
			t.meeting_organization_name as meetingOrganizationName,
			t.emcee_id as emceeId,
			t.emcee_name as emceeName,
			t.recorder_id as recorderId,
			t.recorder_name as recorderName,
			t.requir_attendees_id as requirAttendeesId,
			t.requir_attendees_name as requirAttendeesName,
			t.actual_attendees_id as actualAttendeesId,
			t.actual_attendees_name as actualAttendeesName,
			t.copy_send_id as copySendId,
			t.copy_send_name as copySendName,
			t.other_readers_id as otherReadersId,
			t.other_readers as otherReaders,
			t.meeting_content as meetingContent,
			t.meeting_record as meetingRecord,
			t.meeting_result as meetingResult,
			t.remarks as remarks,
			t.document_attachments as documentAttachments,
			t.status as status,
			t.notifiy_way as notifiyWay,
			t.instance_id as instanceId,
			t.code as code,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
		FROM
			oa_meeting_summary t left join oa_meeting_partner p on t.id = p.business_id where 1=1   
		
		<choose>
		<when test="userId != null and userId !=''">
          	and  p.user_id = #{userId,jdbcType=VARCHAR}
        </when>
        </choose>
        and p.user_identifiy != '6'
		<choose>
		<when test="mtTitle != null and mtTitle !=''">
          	and  (t.meeting_type like CONCAT(CONCAT('%',#{meetingType}),'%')
          		or  t.mt_title like CONCAT(CONCAT('%',#{mtTitle}),'%')
          	)
        </when>
        </choose>
        GROUP BY p.business_id)

       
		UNION
		
		(SELECT
			t.id,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.concurrency_version as concurrencyVersion,
			t.mt_title as mtTitle,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.entry_date as entryDate,
			t.plan_begin_date as planBeginDate,
			t.plan_begin_time as plan_beginTime,
			t.actual_begin_date as actualBeginDate,
			t.actual_begin_time as actualBeginTime,
			t.plan_address as planAddress,
			t.meeting_id as meetingId,
			t.actual_address as actualAddress,
			t.meeting_organization_id as meetingOrganizationId,
			t.meeting_organization_name as meetingOrganizationName,
			t.emcee_id as emceeId,
			t.emcee_name as emceeName,
			t.recorder_id as recorderId,
			t.recorder_name as recorderName,
			t.requir_attendees_id as requirAttendeesId,
			t.requir_attendees_name as requirAttendeesName,
			t.actual_attendees_id as actualAttendeesId,
			t.actual_attendees_name as actualAttendeesName,
			t.copy_send_id as copySendId,
			t.copy_send_name as copySendName,
			t.other_readers_id as otherReadersId,
			t.other_readers as otherReaders,
			t.meeting_content as meetingContent,
			t.meeting_record as meetingRecord,
			t.meeting_result as meetingResult,
			t.remarks as remarks,
			t.document_attachments as documentAttachments,
			t.status as status,
			t.notifiy_way as notifiyWay,
			t.instance_id as instanceId,
			t.code as code,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
		FROM
			oa_meeting_summary t where 1=1   
		
		<choose>
		<when test="userId != null and userId !=''">
          	and  t.create_person_id = #{userId,jdbcType=VARCHAR}
        </when>
        </choose>
       
		<choose>
		<when test="mtTitle != null and mtTitle !=''">
          	and  (t.meeting_type like CONCAT(CONCAT('%',#{meetingType}),'%')
          		or  t.mt_title like CONCAT(CONCAT('%',#{mtTitle}),'%')
          	)
        </when>
        </choose>)) as w
		ORDER BY w.createDate DESC
        <choose>
		<when test="start!=null and start!='' and limit!=null and limit!=''">
         limit #{start},#{limit}
        </when>
        </choose>
	</select>

	<!-- 过滤查询条数 -->
	<select id="getMeetingSummaryCount" resultType="java.lang.Integer" parameterType="java.util.Map">
	
		select count(w.id) from ((SELECT
			t.id,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.concurrency_version as concurrencyVersion,
			t.mt_title as mtTitle,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.entry_date as entryDate,
			t.plan_begin_date as planBeginDate,
			t.plan_begin_time as plan_beginTime,
			t.actual_begin_date as actualBeginDate,
			t.actual_begin_time as actualBeginTime,
			t.plan_address as planAddress,
			t.meeting_id as meetingId,
			t.actual_address as actualAddress,
			t.meeting_organization_id as meetingOrganizationId,
			t.meeting_organization_name as meetingOrganizationName,
			t.emcee_id as emceeId,
			t.emcee_name as emceeName,
			t.recorder_id as recorderId,
			t.recorder_name as recorderName,
			t.requir_attendees_id as requirAttendeesId,
			t.requir_attendees_name as requirAttendeesName,
			t.actual_attendees_id as actualAttendeesId,
			t.actual_attendees_name as actualAttendeesName,
			t.copy_send_id as copySendId,
			t.copy_send_name as copySendName,
			t.other_readers_id as otherReadersId,
			t.other_readers as otherReaders,
			t.meeting_content as meetingContent,
			t.meeting_record as meetingRecord,
			t.meeting_result as meetingResult,
			t.remarks as remarks,
			t.document_attachments as documentAttachments,
			t.status as status,
			t.notifiy_way as notifiyWay,
			t.instance_id as instanceId,
			t.code as code,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
		FROM
			oa_meeting_summary t left join oa_meeting_partner p on t.id = p.business_id where 1=1   
		
		<choose>
		<when test="userId != null and userId !=''">
          	and  p.user_id = #{userId,jdbcType=VARCHAR}
        </when>
        </choose>
        and p.user_identifiy != '6'
		<choose>
		<when test="mtTitle != null and mtTitle !=''">
          	and  (t.meeting_type like CONCAT(CONCAT('%',#{meetingType}),'%')
          		or  t.mt_title like CONCAT(CONCAT('%',#{mtTitle}),'%')
          	)
        </when>
        </choose>
        GROUP BY p.business_id)

       
		UNION
		
		(SELECT
			t.id,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.concurrency_version as concurrencyVersion,
			t.mt_title as mtTitle,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.entry_date as entryDate,
			t.plan_begin_date as planBeginDate,
			t.plan_begin_time as plan_beginTime,
			t.actual_begin_date as actualBeginDate,
			t.actual_begin_time as actualBeginTime,
			t.plan_address as planAddress,
			t.meeting_id as meetingId,
			t.actual_address as actualAddress,
			t.meeting_organization_id as meetingOrganizationId,
			t.meeting_organization_name as meetingOrganizationName,
			t.emcee_id as emceeId,
			t.emcee_name as emceeName,
			t.recorder_id as recorderId,
			t.recorder_name as recorderName,
			t.requir_attendees_id as requirAttendeesId,
			t.requir_attendees_name as requirAttendeesName,
			t.actual_attendees_id as actualAttendeesId,
			t.actual_attendees_name as actualAttendeesName,
			t.copy_send_id as copySendId,
			t.copy_send_name as copySendName,
			t.other_readers_id as otherReadersId,
			t.other_readers as otherReaders,
			t.meeting_content as meetingContent,
			t.meeting_record as meetingRecord,
			t.meeting_result as meetingResult,
			t.remarks as remarks,
			t.document_attachments as documentAttachments,
			t.status as status,
			t.notifiy_way as notifiyWay,
			t.instance_id as instanceId,
			t.code as code,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
		FROM
			oa_meeting_summary t where 1=1   
		
		<choose>
		<when test="userId != null and userId !=''">
          	and  t.create_person_id = #{userId,jdbcType=VARCHAR}
        </when>
        </choose>
       
		<choose>
		<when test="mtTitle != null and mtTitle !=''">
          	and  (t.meeting_type like CONCAT(CONCAT('%',#{meetingType}),'%')
          		or  t.mt_title like CONCAT(CONCAT('%',#{mtTitle}),'%')
          	)
        </when>
        </choose>)) as w
	</select>
	
	
</mapper>