<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinleju.cloud.oa.meeting.entity.Meeting">
	<!-- 新增 -->
	<insert id="save">
		${value}
	</insert>
	<!-- 修改根据Id -->
	<update id="update">
		${value}
	</update>
	<!-- 删除根据Id -->
	<delete id="deleteById">
		${value}
	</delete>
	<!-- 批量删除根据Id -->
	<delete id="deleteBatchByIds">
		${value}
	</delete>
	<!-- 获取单个对象，根据Id-->
	<select id="get" resultType="com.xinleju.cloud.oa.meeting.entity.Meeting">
		${value}
	</select>
	<!-- 获取列表根据Map查询 -->
	<select id="queryList" resultType="com.xinleju.cloud.oa.meeting.entity.Meeting">
		${value}
	</select>
	<!-- 获取分页根据Map查询 -->
	<select id="queryPageList" resultType="com.xinleju.cloud.oa.meeting.entity.Meeting">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		${value}
	</select>
	<!-- 获取总记录数 -->
	<select id="getWaitSendPage" resultType="com.xinleju.cloud.oa.meeting.entity.Meeting">
		select id,title,begin_date beginDate,end_date endDate,emcee_id emceeId,recorder_id recorderId,address,remind_flag remindFlag,mt_appliance mtAppliance,meeting_type meetingType,mt_plan mtPlan from oa_meeting where status=1
	</select>
	<!-- 获取总记录数 -->
	<select id="getWaitBeginPage" resultType="com.xinleju.cloud.oa.meeting.entity.Meeting">
		select id,title,begin_date beginDate,end_date endDate,emcee_id emceeId,recorder_id recorderId,address,remind_flag remindFlag,mt_appliance mtAppliance,meeting_type meetingType,mt_plan mtPlan  from oa_meeting where status=2
	</select>
	<!-- 获取总记录数 -->
	<select id="getOpenPage" resultType="com.xinleju.cloud.oa.meeting.entity.Meeting">
		select id,title,begin_date beginDate,end_date endDate,emcee_id emceeId,recorder_id recorderId,address,remind_flag remindFlag,mt_appliance mtAppliance,meeting_type meetingType,mt_plan mtPlan  from oa_meeting where status=3
	</select>
	<!-- 获取总记录数 -->
	<select id="getAllMeetingPage" resultType="com.xinleju.cloud.oa.meeting.entity.Meeting">
		select id,title,begin_date beginDate,end_date endDate,emcee_id emceeId,recorder_id recorderId,address,remind_flag remindFlag,mt_appliance mtAppliance,meeting_type meetingType,mt_plan mtPlan  from oa_meeting
	</select>


	
	
	<select id="getMeetingPage" resultType="java.util.Map" parameterType="java.util.Map">
	
			select w.id,
				w.createPersonId,
				w.createPersonName,
				w.createOrgId,
				w.createOrgName,
				w.createCompanyId,
				w.createCompanyName,
				w.createDate,
				w.updatePersonId,
				w.updatePersonName,
				w.updateDate,
				w.delflag,
				w.code,
				w.concurrencyVersion,
				w.accountId,
				w.mtTitle,
				w.title,
				w.meetingTypeId,
				w.meetingType,
				w.emceeId,
				w.recorderId,
				w.beginDate,
				w.endDate,
				w.beginTime,
				w.endTime,
				w.meetingDuration,
				w.remindFlag,
				w.address,
				w.leader,
				w.instanceId,
				w.mtPlan,
				w.mtAppliance,
				w.tel,
				w.pigeonholeUserId,
				w.pigeonholeDate,
				w.pigeonholePath,
				w.status,
				w.mtFormat,
				w.flowInstanceCode,
				w.hyjyFlowInstanceCode,
				w.flowStatus,
				w.tendId 
			from ((SELECT
			t.id,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.code,
			t.concurrency_version as concurrencyVersion,
			t.account_id as accountId,
			t.mt_title as mtTitle,
			t.title as title,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.emcee_id as emceeId,
			t.recorder_id as recorderId,
			t.begin_date as beginDate,
			t.end_date as endDate,
			t.begin_time as beginTime,
			t.end_time as endTime,
			t.meeting_duration as meetingDuration,
			t.remind_flag as remindFlag,
			t.address as address,
			t.leader as leader,
			t.instance_id as instanceId,
			t.mt_plan as mtPlan,
			t.mt_appliance as mtAppliance,
			t.tel as tel,
			t.pigeonhole_user_id as pigeonholeUserId,
			t.pigeonhole_date as pigeonholeDate,
			t.pigeonhole_path as pigeonholePath,
			t.status as status,
			t.mt_format as mtFormat,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
			FROM
				oa_meeting t LEFT JOIN oa_meeting_partner p on t.id = p.meeting_id
			WHERE 1=1 and t.delflag = 0 AND t.status not in(0,1)  and p.user_identifiy != '6'
				<choose>
					<when test="userId != null and userId !=''">
						and p.user_id = #{userId,jdbcType=VARCHAR}
					</when>
				</choose>
				
				<choose>
					<when test="title != null and title !=''">
			          	and  t.title like CONCAT(CONCAT('%',#{title}),'%')
			        </when>
		        </choose>
		        <choose>
					<when test="status != null and status !=''">
			          	and  t.flow_status = '2' and t.status = #{status,jdbcType=VARCHAR}
			        </when>
		        </choose>
			GROUP BY p.meeting_id)
			
			UNION
			
			(SELECT
				t.id,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.code,
			t.concurrency_version as concurrencyVersion,
			t.account_id as accountId,
			t.mt_title as mtTitle,
			t.title as title,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.emcee_id as emceeId,
			t.recorder_id as recorderId,
			t.begin_date as beginDate,
			t.end_date as endDate,
			t.begin_time as beginTime,
			t.end_time as endTime,
			t.meeting_duration as meetingDuration,
			t.remind_flag as remindFlag,
			t.address as address,
			t.leader as leader,
			t.instance_id as instanceId,
			t.mt_plan as mtPlan,
			t.mt_appliance as mtAppliance,
			t.tel as tel,
			t.pigeonhole_user_id as pigeonholeUserId,
			t.pigeonhole_date as pigeonholeDate,
			t.pigeonhole_path as pigeonholePath,
			t.status as status,
			t.mt_format as mtFormat,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
			FROM
				oa_meeting t 
			WHERE 1=1 and t.delflag = 0 
				<choose>
					<when test="userId != null and userId !=''">
						and t.create_person_id = #{userId,jdbcType=VARCHAR}
					</when>
				</choose>
				<choose>
					<when test="title != null and title !=''">
			          	and  t.title like CONCAT(CONCAT('%',#{title}),'%')
			        </when>
		        </choose>
		        <choose>
					<when test="status != null and status !=''">
			          	and  t.flow_status = '2' and t.status = #{status,jdbcType=VARCHAR}
			        </when>
		        </choose>
				)) as w 
				ORDER BY w.createDate DESC
			<choose>
				<when test="start!=null  and limit!=null ">
		         limit #{start},#{limit}
		        </when>
	        </choose>
	</select>

	<!-- 过滤查询条数 -->
	<select id="getMeetingCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(w.id) from ((SELECT
			t.id,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.code,
			t.concurrency_version as concurrencyVersion,
			t.account_id as accountId,
			t.mt_title as mtTitle,
			t.title as title,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.emcee_id as emceeId,
			t.recorder_id as recorderId,
			t.begin_date as beginDate,
			t.end_date as endDate,
			t.begin_time as beginTime,
			t.end_time as endTime,
			t.meeting_duration as meetingDuration,
			t.remind_flag as remindFlag,
			t.address as address,
			t.leader as leader,
			t.instance_id as instanceId,
			t.mt_plan as mtPlan,
			t.mt_appliance as mtAppliance,
			t.tel as tel,
			t.pigeonhole_user_id as pigeonholeUserId,
			t.pigeonhole_date as pigeonholeDate,
			t.pigeonhole_path as pigeonholePath,
			t.status as status,
			t.mt_format as mtFormat,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
			FROM
				oa_meeting t LEFT JOIN oa_meeting_partner p on t.id = p.meeting_id
			WHERE 1=1 and t.delflag = 0 AND t.status not in(0,1)  and p.user_identifiy != '6'
				<choose>
					<when test="userId != null and userId !=''">
						and p.user_id = #{userId,jdbcType=VARCHAR}
					</when>
				</choose>
				
				<choose>
					<when test="title != null and title !=''">
			          	and  t.title like CONCAT(CONCAT('%',#{title}),'%')
			        </when>
		        </choose>
		        <choose>
					<when test="status != null and status !=''">
			          	and  t.flow_status = '2' and t.status = #{status,jdbcType=VARCHAR}
			        </when>
		        </choose>
			GROUP BY p.meeting_id)
			
			UNION
			
			(SELECT
			t.id,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.code,
			t.concurrency_version as concurrencyVersion,
			t.account_id as accountId,
			t.mt_title as mtTitle,
			t.title as title,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.emcee_id as emceeId,
			t.recorder_id as recorderId,
			t.begin_date as beginDate,
			t.end_date as endDate,
			t.begin_time as beginTime,
			t.end_time as endTime,
			t.meeting_duration as meetingDuration,
			t.remind_flag as remindFlag,
			t.address as address,
			t.leader as leader,
			t.instance_id as instanceId,
			t.mt_plan as mtPlan,
			t.mt_appliance as mtAppliance,
			t.tel as tel,
			t.pigeonhole_user_id as pigeonholeUserId,
			t.pigeonhole_date as pigeonholeDate,
			t.pigeonhole_path as pigeonholePath,
			t.status as status,
			t.mt_format as mtFormat,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
			FROM
				oa_meeting t 
			WHERE 1=1 and t.delflag = 0 
				<choose>
					<when test="userId != null and userId !=''">
						and t.create_person_id = #{userId,jdbcType=VARCHAR}
					</when>
				</choose>
				<choose>
					<when test="title != null and title !=''">
			          	and  t.title like CONCAT(CONCAT('%',#{title}),'%')
			        </when>
		        </choose>
		        <choose>
					<when test="status != null and status !=''">
			          	and  t.flow_status = '2' and t.status = #{status,jdbcType=VARCHAR}
			        </when>
		        </choose>)) as w
       
	</select>
	
	<!-- 根据各种状态查询会议信息 -->
	<select id="getAllMeetingByParameter" resultType="com.xinleju.cloud.oa.meeting.entity.Meeting" parameterType="java.util.Map">
		SELECT
			t.id,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.code,
			t.concurrency_version as concurrencyVersion,
			t.account_id as accountId,
			t.mt_title as mtTitle,
			t.title as title,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.emcee_id as emceeId,
			t.recorder_id as recorderId,
			t.begin_date as beginDate,
			t.end_date as endDate,
			t.meeting_duration as meetingDuration,
			t.remind_flag as remindFlag,
			t.address as address,
			t.leader as leader,
			t.instance_id as instanceId,
			t.mt_plan as mtPlan,
			t.mt_appliance as mtAppliance,
			t.tel as tel,
			t.pigeonhole_user_id as pigeonholeUserId,
			t.pigeonhole_date as pigeonholeDate,
			t.pigeonhole_path as pigeonholePath,
			t.status as status,
			t.mt_format as mtFormat,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
		
        FROM
			oa_meeting t
		LEFT JOIN oa_meeting_reploy r ON t.id = r.meeting_id
		WHERE 1=1
		
		 <choose>
			<when test="userId != null and userId !=''">
				and r.user_id = #{userId,jdbcType=VARCHAR}
			</when>
		</choose>
		ORDER BY t.create_date desc
		 <choose>
		<when test="start!=null and start!='' and limit!=null and limit!=''">
         limit #{start},#{limit}
        </when>
        </choose>
	</select>
	
	
	<!-- 根据各种状态查询会议信息 -->
	<select id="getAllMeetingByRecordUser" resultType="com.xinleju.cloud.oa.meeting.entity.Meeting" parameterType="java.util.Map">
		SELECT
			t.id,
			t.id as pId,
			t.title as name,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.code,
			t.concurrency_version as concurrencyVersion,
			t.account_id as accountId,
			t.mt_title as mtTitle,
			t.title as title,
			t.organ_depart_id as organDepartId,
			t.organ_depart as organDepart,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.emcee_id as emceeId,
			t.emcee_name AS emceeName,
			t.recorder_id as recorderId,
			t.instance_id as instanceId,
			t.recorder_name as recorderName,
			t.begin_date as beginDate,
			t.begin_time as beginTime,
			t.end_time as endTime,
			t.end_date as endDate,
			t.meeting_duration as meetingDuration,
			t.remind_flag as remindFlag,
			t.address as address,
			t.leader as leader,
			t.mt_plan as mtPlan,
			t.mt_appliance as mtAppliance,
			t.meeting_organization_id as meetingOrganizationId,
			t.meeting_organization_name as meetingOrganizationName,
			t.create_user_id as createUserId,
			t.create_user_name as createUserName,
			t.meeting_duration as meetingDuration,
			t.attendees as attendees,
			t.attendees_name as attendeesName,
			t.copy_send_id as copySendId,
			t.copy_send_name as copySendName,
			t.meeting_target as meetingTarget,
				t.meeting_output_doc as meetingOutputDoc,
			t.meeting_follow_activity as meetingFollowActivity,
			t.tel as tel,
			t.remarks as remarks,
			t.document_attachments as documentAttachments,
			t.other_readers_id as otherReadersId,
			t.other_readers as otherReaders,
			t.notifiy_way as notifiyWay,
			t.disappear_way as disappearWay,
			t.pigeonhole_user_id as pigeonholeUserId,
			t.pigeonhole_date as pigeonholeDate,
			t.pigeonhole_path as pigeonholePath,
			t.status as status,
			t.mt_format as mtFormat,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
		
        FROM
			oa_meeting t
		LEFT JOIN oa_meeting_partner r ON t.id = r.meeting_id
		WHERE 1=1 and t.status not in('11','12') 
		
		 <choose>
			<when test="userId != null and userId !=''">
				and r.user_id = #{userId,jdbcType=VARCHAR}
			</when>
		</choose>
		<choose>
			<when test="userIdentifiy != null and userIdentifiy !=''">
				and r.user_identifiy = #{userIdentifiy,jdbcType=VARCHAR}
			</when>
		</choose>
		 <choose>
			<when test="flowStatus != null and flowStatus !=''">
				and t.flow_status = #{flowStatus,jdbcType=VARCHAR}
			</when>
		</choose>
		group by t.id
		ORDER BY t.create_date desc
		 <choose>
		<when test="start!=null and start!='' and limit!=null and limit!=''">
         limit #{start},#{limit}
        </when>
        </choose>
	</select>
	
	<select id="getPoatlPage" resultType="java.util.Map" parameterType="java.util.Map">
	
			SELECT
			t.id,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.code,
			t.concurrency_version as concurrencyVersion,
			t.account_id as accountId,
			t.mt_title as mtTitle,
			t.title as title,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.emcee_id as emceeId,
			t.recorder_id as recorderId,
			t.begin_date as beginDate,
			t.end_date as endDate,
			t.begin_time as beginTime,
			t.end_time as endTime,
			t.meeting_duration as meetingDuration,
			t.remind_flag as remindFlag,
			t.address as address,
			t.leader as leader,
			t.instance_id as instanceId,
			t.mt_plan as mtPlan,
			t.mt_appliance as mtAppliance,
			t.tel as tel,
			t.pigeonhole_user_id as pigeonholeUserId,
			t.pigeonhole_date as pigeonholeDate,
			t.pigeonhole_path as pigeonholePath,
			t.status as status,
			t.mt_format as mtFormat,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
			FROM
				oa_meeting t LEFT JOIN oa_meeting_partner p on t.id = p.meeting_id
			WHERE 1=1 and t.delflag = 0 AND t.status not in(0,1) 
				<choose>
					<when test="userId != null and userId !=''">
						and p.user_id = #{userId,jdbcType=VARCHAR}
					</when>
				</choose>
				
				<choose>
					<when test="title != null and title !=''">
			          	and  t.title like CONCAT(CONCAT('%',#{title}),'%')
			        </when>
		        </choose>
		        <choose>
					<when test="status != null and status !=''">
			          	and  t.flow_status = '2' and t.status = #{status,jdbcType=VARCHAR}
			        </when>
		        </choose>
			GROUP BY p.meeting_id
			ORDER BY
				t.create_date DESC
		<if test="start !=null and limit!=null ">
			limit #{start},#{limit}
		</if>
	</select>



	<select id="getPoatlMeetingCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(t.id) 
			FROM
				oa_meeting t LEFT JOIN oa_meeting_partner p on t.id = p.meeting_id
			WHERE 1=1 and t.delflag = 0 AND t.status not in(0,1) 
				<choose>
					<when test="userId != null and userId !=''">
						and p.user_id = #{userId,jdbcType=VARCHAR}
					</when>
				</choose>
				
				<choose>
					<when test="title != null and title !=''">
			          	and  t.title like CONCAT(CONCAT('%',#{title}),'%')
			        </when>
		        </choose>
		        <choose>
					<when test="status != null and status !=''">
			          	and  t.flow_status = '2' and t.status = #{status,jdbcType=VARCHAR}
			        </when>
		        </choose>
       
	</select>
	
	
	
	
	
	
	<!-- 查询该会议纪要人没有做过会议纪要的会议记录-->
	<select id="getAllMeetingByNoSummary" resultType="com.xinleju.cloud.oa.meeting.entity.Meeting" parameterType="java.util.Map">
		SELECT
			t.id,
			t.id as pId,
			t.title as name,
			t.create_person_id as createPersonId,
			t.create_person_name as createPersonName,
			t.create_org_id as createOrgId,
			t.create_org_name as createOrgName,
			t.create_company_id as createCompanyId,
			t.create_company_name as createCompanyName,
			t.create_date as createDate,
			t.update_person_id as updatePersonId,
			t.update_person_name as updatePersonName,
			t.update_date as updateDate,
			t.delflag as delflag,
			t.code,
			t.concurrency_version as concurrencyVersion,
			t.account_id as accountId,
			t.mt_title as mtTitle,
			t.title as title,
			t.organ_depart_id as organDepartId,
			t.organ_depart as organDepart,
			t.meeting_type_id as meetingTypeId,
			t.meeting_type as meetingType,
			t.emcee_id as emceeId,
			t.emcee_name AS emceeName,
			t.recorder_id as recorderId,
			t.instance_id as instanceId,
			t.recorder_name as recorderName,
			t.begin_date as beginDate,
			t.begin_time as beginTime,
			t.end_time as endTime,
			t.end_date as endDate,
			t.meeting_duration as meetingDuration,
			t.remind_flag as remindFlag,
			t.address as address,
			t.leader as leader,
			t.mt_plan as mtPlan,
			t.mt_appliance as mtAppliance,
			t.meeting_organization_id as meetingOrganizationId,
			t.meeting_organization_name as meetingOrganizationName,
			t.create_user_id as createUserId,
			t.create_user_name as createUserName,
			t.meeting_duration as meetingDuration,
			t.attendees as attendees,
			t.attendees_name as attendeesName,
			t.copy_send_id as copySendId,
			t.copy_send_name as copySendName,
			t.meeting_target as meetingTarget,
				t.meeting_output_doc as meetingOutputDoc,
			t.meeting_follow_activity as meetingFollowActivity,
			t.tel as tel,
			t.remarks as remarks,
			t.document_attachments as documentAttachments,
			t.other_readers_id as otherReadersId,
			t.other_readers as otherReaders,
			t.notifiy_way as notifiyWay,
			t.disappear_way as disappearWay,
			t.pigeonhole_user_id as pigeonholeUserId,
			t.pigeonhole_date as pigeonholeDate,
			t.pigeonhole_path as pigeonholePath,
			t.status as status,
			t.mt_format as mtFormat,
			t.flow_instance_code as flowInstanceCode,
			t.hyjy_flow_instance_code as hyjyFlowInstanceCode,
			t.flow_status as flowStatus,
			t.tend_id as tendId
		
        FROM
			oa_meeting t
		LEFT JOIN oa_meeting_partner r ON t.id = r.meeting_id
		WHERE 1=1 and t.status not in('11','12') 
		
		 <choose>
			<when test="userId != null and userId !=''">
				and r.user_id = #{userId,jdbcType=VARCHAR}
			</when>
		</choose>
		<choose>
			<when test="userIdentifiy != null and userIdentifiy !=''">
				and r.user_identifiy = #{userIdentifiy,jdbcType=VARCHAR}
			</when>
		</choose>
		 <choose>
			<when test="flowStatus != null and flowStatus !=''">
				and t.flow_status = #{flowStatus,jdbcType=VARCHAR}
			</when>
		</choose>
		<choose>
			<when test="userId != null and userId !=''">
				AND t.id NOT IN (
					SELECT
						meeting_id
					FROM
						oa_meeting_summary
					WHERE
						create_person_id = #{userId,jdbcType=VARCHAR}
				)
			</when>
		</choose>
		group by t.id
		ORDER BY t.create_date desc
		 <choose>
		<when test="start!=null and start!='' and limit!=null and limit!=''">
         limit #{start},#{limit}
        </when>
        </choose>
	</select>
	
	
	
	
	<!-- 查询该会议纪要人没有做过会议纪要的会议记录-->
	<select id="getAllMeetingByNoSummaryTem" resultType="java.util.Set" parameterType="java.util.Map">
		SELECT
			t.id
        FROM
			oa_meeting t
		LEFT JOIN oa_meeting_partner r ON t.id = r.meeting_id
		WHERE 1=1 and t.status in
		 <foreach collection="set" item="item" index="index" open="(" close=")" separator=",">
					#{item}
				</foreach>
		
	</select>
	
</mapper>